N Rogers.AFF_DIM_LE_2_IMP_COPLANAR
C |- (!s. (((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (coplanar s)))
T c==> cint_le caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D int_sub_th
A |- (!x. (!y. ((real_of_int ((int_sub x) y)) = ((real_sub (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_sub f0 f1 creal_sub creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D SUBSET_TRANS
A |- (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))))
T c==> c/\ cSUBSET f0 f1 cSUBSET f1 f2 cSUBSET f0 f2
D SUBSET_REFL
A |- (!s. (s SUBSET s))
T cSUBSET f0 f0
D EMPTY_SUBSET
A |- (!s. (EMPTY SUBSET s))
T cSUBSET part cEMPTY f0
D HULL_SUBSET
A |- (!P. (!s. (s SUBSET ((hull P) s))))
T cSUBSET f0 * * part chull f1 f0
D AFFINE_HULL_EMPTY
A |- (((hull affine) EMPTY) = EMPTY)
T c= * * part chull part caffine part cEMPTY part cEMPTY
D Trigonometry.JLWZFBH4
A |- (!s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= ccoplanar f0 c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
D AFFINE_INDEPENDENT_IMP_FINITE
A |- (!s. ((~ (affine_dependent s)) ==> (FINITE s)))
T c==> c~ caffine_dependent f0 cFINITE f0
D AFF_DIM
A |- (!s. (?b. ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0)))))))))
T c? / c/\ c= * * part chull part caffine b0 * * part chull part caffine f0 c/\ c~ caffine_dependent b0 c= caff_dim f0 cint_sub cint_of_num cCARD b0 cint_of_num cNUMERAL cBIT1 c_0
D Rogers.CARD_LE_3
A |- (!s. (((~ (s = EMPTY)) /\ ((FINITE s) /\ ((CARD s) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (s = (x INSERT (y INSERT (z INSERT EMPTY)))))))))
T c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))), (((hull affine) b) = ((hull affine) s)) |- (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> c? / c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f3 c? / c? / c? / cSUBSET f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (b = EMPTY), (((hull affine) b) = ((hull affine) s)) |- (?t. ((s SUBSET t) /\ (t SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT EMPTY)))))))
T c==> c= f0 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c? / c/\ cSUBSET f1 b0 cSUBSET b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY
- |- ((((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c= c==> c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((hull affine) b) = ((hull affine) s)) |- (((!x'. (((\y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))) x') ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) ==> ((?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = ((?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c= c==> ! c==> * / c? / c= f0 * * part cINSERT f2 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> c? / c? / c= f0 * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c? / c= f0 * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- ((s SUBSET ((hull P) s)) = T)
T c= cSUBSET f0 * * part chull f1 f0 cT
- (~ (affine_dependent b)) |- (T = (~ (affine_dependent b)))
T c==> c~ caffine_dependent f0 c= cT c~ caffine_dependent f0
+ ((s SUBSET t) /\ (t SUBSET u)) |- (((s SUBSET t) /\ (t SUBSET u)) /\ ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u)))
T c==> c/\ cSUBSET f0 f1 cSUBSET f1 f2 c/\ c/\ cSUBSET f0 f1 cSUBSET f1 f2 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f2
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!x. (((\t. ((s SUBSET t) /\ (t SUBSET u))) x) ==> ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u)))) ==> ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u)))) = ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u))))
T c= c==> ! c==> * / c/\ cSUBSET f0 b1 cSUBSET b1 f1 b0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 cSUBSET b2 b3 cSUBSET b1 b3 cSUBSET f0 f1 c==> c? / c/\ cSUBSET f0 b0 cSUBSET b0 f1 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f1 c==> c? / c/\ cSUBSET f0 b0 cSUBSET b0 f1 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f1
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u)))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 ! c==> c? / c/\ cSUBSET f0 b1 cSUBSET b1 b0 cSUBSET f0 b0
+ |- (~ ((((real_le (real_of_int a)) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub (real_of_int a)) (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a)) /\ ((real_le ((real_sub (real_of_int a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c~ c\/ c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_sub creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((~ (~ ((((real_le (real_of_int a)) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub (real_of_int a)) (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a)) /\ ((real_le ((real_sub (real_of_int a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> F)
T c==> c~ c~ c\/ c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_sub creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (b = EMPTY))) = ((\t. (t \/ (~ t))) (b = EMPTY)))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= f0 part cEMPTY * / c\/ b0 c~ b0 c= f0 part cEMPTY
+ |- (((!s. (s SUBSET ((hull P) s))) ==> ((\s. (s SUBSET ((hull P) s))) s)) = ((\s. (s SUBSET ((hull P) s))) s))
T c= c==> ! cSUBSET b0 * * part chull f0 b0 * / cSUBSET b0 * * part chull f0 b0 f1 * / cSUBSET b0 * * part chull f0 b0 f1
- (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) |- ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = T)
T c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
+ ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) |- (((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar s))
T c==> cint_le caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ cint_le caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar f0
- (EMPTY = b) |- (b = EMPTY)
T c==> c= part cEMPTY f0 c= f0 part cEMPTY
+ (((hull affine) b) = ((hull affine) s)) |- (((\z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))) z) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c==> * / c= f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f4 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- ((((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) ==> (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c= c==> c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (b = (x INSERT (y INSERT (z INSERT EMPTY)))), (((hull affine) b) = ((hull affine) s)) |- ((\t. ((s SUBSET t) /\ (t SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ((hull affine) b))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f4 * / c/\ cSUBSET f4 b0 cSUBSET b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0))))), ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) |- ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0))))
T c==> c= caff_dim f0 cint_sub cint_of_num cCARD f1 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c<= cCARD f1 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\p'. (!q'. (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b0 c==> c==> b0 c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 f2
+ |- ((\n. ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))) n)
T * / c= c<= f0 b0 cint_le cint_of_num f0 cint_of_num b0 f1
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q'))))
T c==> c= c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 c==> c==> f1 c= c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 c= c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> f1 f3
+ |- ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = (coplanar s))
T c= c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar f0
+ |- (((!s. (?b. ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0))))))))) ==> ((\s. (?b. ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0))))))))) s)) = ((\s. (?b. ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0))))))))) s))
T c= c==> ! c? / c/\ c= * * part chull part caffine b1 * * part chull part caffine b0 c/\ c~ caffine_dependent b1 c= caff_dim b0 cint_sub cint_of_num cCARD b1 cint_of_num cNUMERAL cBIT1 c_0 * / c? / c/\ c= * * part chull part caffine b1 * * part chull part caffine b0 c/\ c~ caffine_dependent b1 c= caff_dim b0 cint_sub cint_of_num cCARD b1 cint_of_num cNUMERAL cBIT1 c_0 f0 * / c? / c/\ c= * * part chull part caffine b1 * * part chull part caffine b0 c/\ c~ caffine_dependent b1 c= caff_dim b0 cint_sub cint_of_num cCARD b1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))), ((\b. ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0)))))))) b) |- (((\b. ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0)))))))) b) /\ (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> cint_le caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> * / c/\ c= * * part chull part caffine b0 * * part chull part caffine f0 c/\ c~ caffine_dependent b0 c= caff_dim f0 cint_sub cint_of_num cCARD b0 cint_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c/\ c= * * part chull part caffine b0 * * part chull part caffine f0 c/\ c~ caffine_dependent b0 c= caff_dim f0 cint_sub cint_of_num cCARD b0 cint_of_num cNUMERAL cBIT1 c_0 f1 c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (((hull affine) b) = ((hull affine) s)) |- ((((\z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))) z) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = T)
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c= c==> * / c= f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f4 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((hull affine) b) = ((hull affine) s)) |- (!z. (((\z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))) z) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 ! c==> * / c= f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b1 part cEMPTY b0 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ |- (((int_le (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 (BIT1 _0))))) = ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))
T c= cint_le cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> q')))
T c==> c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c= c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2
+ |- (((!s. (((~ (s = EMPTY)) /\ ((FINITE s) /\ ((CARD s) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (s = (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> ((\s. (((~ (s = EMPTY)) /\ ((FINITE s) /\ ((CARD s) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (s = (x INSERT (y INSERT (z INSERT EMPTY))))))))) b)) = ((\s. (((~ (s = EMPTY)) /\ ((FINITE s) /\ ((CARD s) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (s = (x INSERT (y INSERT (z INSERT EMPTY))))))))) b))
T c= c==> ! c==> c/\ c~ c= b0 part cEMPTY c/\ cFINITE b0 c<= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / c==> c/\ c~ c= b0 part cEMPTY c/\ cFINITE b0 c<= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / c==> c/\ c~ c= b0 part cEMPTY c/\ cFINITE b0 c<= cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ |- (((int_le a) (int_of_num (NUMERAL (BIT1 (BIT1 _0))))) = ((int_le ((int_sub a) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c= cint_le f0 cint_of_num cNUMERAL cBIT1 cBIT1 c_0 cint_le cint_sub f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (b = (x INSERT (y INSERT (z INSERT EMPTY)))), (((hull affine) b) = ((hull affine) s)) |- ((b = (x INSERT (y INSERT (z INSERT EMPTY)))) /\ (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f4 c/\ c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / cSUBSET f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- (((!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))) ==> ((\t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))) t)) = ((\t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))) t))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c= c==> ! ! c==> c/\ cSUBSET f0 b0 cSUBSET b0 b1 cSUBSET f0 b1 * / ! c==> c/\ cSUBSET f0 b0 cSUBSET b0 b1 cSUBSET f0 b1 f1 * / ! c==> c/\ cSUBSET f0 b0 cSUBSET b0 b1 cSUBSET f0 b1 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (?b. ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0)))))))), ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) |- ((?b. ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0)))))))) /\ (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c? / c/\ c= * * part chull part caffine b0 * * part chull part caffine f0 c/\ c~ caffine_dependent b0 c= caff_dim f0 cint_sub cint_of_num cCARD b0 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c? / c/\ c= * * part chull part caffine b0 * * part chull part caffine f0 c/\ c~ caffine_dependent b0 c= caff_dim f0 cint_sub cint_of_num cCARD b0 cint_of_num cNUMERAL cBIT1 c_0 c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (T ==> ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))))
T c==> cT c= c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- (((!q'. (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q'))))) ==> ((\q'. (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q'))))) q')) = ((\q'. (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f1 c==> c==> f1 c= c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c= c==> c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> f1 b0 * / c==> c= c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f1 c==> c==> f1 c= c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c= c==> c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> f1 b0 f3 * / c==> c= c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f1 c==> c==> f1 c= c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c= c==> c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> f1 b0 f3
+ ((((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> F), ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) \/ (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((?v. (?w. (s SUBSET ((hull affine) (x INSERT (v INSERT (w INSERT EMPTY))))))) = ((\u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) x))
T c= c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!p'. (!q'. (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b0 c==> c==> b0 c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 * / ! c==> c= c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b0 c==> c==> b0 c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 f2 * / ! c==> c= c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b0 c==> c==> b0 c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 f2
+ (b = (x INSERT (y INSERT (z INSERT EMPTY)))), (((hull affine) b) = ((hull affine) s)) |- (?w. (s SUBSET ((hull affine) (x INSERT (y INSERT (w INSERT EMPTY))))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f4 c? / cSUBSET f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ (((hull affine) b) = ((hull affine) s)), ((\x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) x) |- (((\x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) x) /\ (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c==> * / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ * / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (~ (affine_dependent b)) |- ((FINITE b) = T)
T c==> c~ caffine_dependent f0 c= cFINITE f0 cT
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))
T c==> c? / c/\ cSUBSET f0 b0 cSUBSET b0 f1 cSUBSET f0 f1
+ (((hull affine) b) = ((hull affine) s)) |- (!x. (((\x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) x) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 ! c==> * / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ |- (((!s. (s SUBSET s)) ==> ((\s. (s SUBSET s)) s)) = ((\s. (s SUBSET s)) s))
T c= c==> ! cSUBSET b0 b0 * / cSUBSET b0 b0 f0 * / cSUBSET b0 b0 f0
- |- ((?z. t) = t)
T c= c? / f0 f0
+ |- ((?v. (?w. (s SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))) = ((\u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) (vec (NUMERAL _0))))
T c= c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cvec cNUMERAL c_0
+ (b = (x INSERT (y INSERT (z INSERT EMPTY)))) |- (((hull affine) b) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part chull part caffine f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (?t. ((s SUBSET t) /\ (t SUBSET u))) |- ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u))
T c==> c? / c/\ cSUBSET f0 b0 cSUBSET b0 f1 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f1
+ ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) |- (((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> cint_le caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c= * * part chull part caffine f1 * * part chull part caffine f0 c/\ c~ caffine_dependent f1 c= caff_dim f0 cint_sub cint_of_num cCARD f1 cint_of_num cNUMERAL cBIT1 c_0 c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\t. (t \/ (~ t))) (b = EMPTY))
T * / c\/ b0 c~ b0 c= f0 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((hull affine) b) = ((hull affine) s)), ((~ (b = EMPTY)) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) |- (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c==> c==> c~ c= f0 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))), (((hull affine) b) = ((hull affine) s)) |- (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (((hull affine) b) = ((hull affine) s)) |- (s SUBSET ((hull affine) b))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 cSUBSET f1 * * part chull part caffine f0
+ ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0))))))), ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) |- (((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0))))))) /\ (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c/\ c= * * part chull part caffine f0 * * part chull part caffine f1 c/\ c~ caffine_dependent f0 c= caff_dim f1 cint_sub cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le caff_dim f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c= * * part chull part caffine f0 * * part chull part caffine f1 c/\ c~ caffine_dependent f0 c= caff_dim f1 cint_sub cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (b = EMPTY), (((hull affine) b) = ((hull affine) s)) |- ((s SUBSET ((hull affine) b)) /\ (((hull affine) b) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT EMPTY))))))
T c==> c= f0 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c/\ cSUBSET f1 * * part chull part caffine f0 cSUBSET * * part chull part caffine f0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\t. ((s SUBSET t) /\ (t SUBSET u))) t) |- ((((s SUBSET t) /\ (t SUBSET u)) ==> ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u))) = ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u)))
T c==> * / c/\ cSUBSET f0 b0 cSUBSET b0 f1 f2 c= c==> c/\ cSUBSET f0 f2 cSUBSET f2 f1 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f1 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f1
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 ! ! c==> c/\ cSUBSET f0 b0 cSUBSET b0 b1 cSUBSET f0 b1
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- ((!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))) = T)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c= ! c==> c? / c/\ cSUBSET f0 b1 cSUBSET b1 b0 cSUBSET f0 b0 cT
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c==> c? / c/\ cSUBSET f0 b0 cSUBSET b0 f1 cSUBSET f0 f1
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- T |- (T = T)
T c==> cT c= cT cT
+ ((\x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) x) |- (((?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> * / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 c= c==> c? / c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- ((((~ (~ ((((real_le (real_of_int a)) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub (real_of_int a)) (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a)) /\ ((real_le ((real_sub (real_of_int a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> F) ==> (~ ((((real_le (real_of_int a)) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub (real_of_int a)) (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a)) /\ ((real_le ((real_sub (real_of_int a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = (~ ((((real_le (real_of_int a)) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) /\ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub (real_of_int a)) (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a)) /\ ((real_le ((real_sub (real_of_int a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= c==> c==> c~ c~ c\/ c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_sub creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF c~ c\/ c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_sub creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ c\/ c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_sub creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!s. (EMPTY SUBSET s)) ==> ((\s. (EMPTY SUBSET s)) s)) = ((\s. (EMPTY SUBSET s)) s))
T c= c==> ! cSUBSET part cEMPTY b0 * / cSUBSET part cEMPTY b0 f0 * / cSUBSET part cEMPTY b0 f0
+ ((\y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))) y) |- (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))
T c==> * / c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c? / c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
+ |- (((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (!s. (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))))) = (!s. (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u)))))
T c= c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 ! ! c==> c? / c/\ cSUBSET b0 b2 cSUBSET b2 b1 cSUBSET b0 b1 ! ! c==> c? / c/\ cSUBSET b0 b2 cSUBSET b2 b1 cSUBSET b0 b1
+ |- (((!p'. (!q'. ((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = q')) ==> ((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = q')) ==> ((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = q')) ==> ((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 * / ! c==> c= c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 f1 * / ! c==> c= c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 f1
+ (((hull affine) b) = ((hull affine) s)) |- ((b = (x INSERT (y INSERT (z INSERT EMPTY)))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c==> c= f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((\s. ((~ (affine_dependent s)) ==> (FINITE s))) s)
T * / c==> c~ caffine_dependent b0 cFINITE b0 f0
+ (b = (x INSERT (y INSERT (z INSERT EMPTY)))), (((hull affine) b) = ((hull affine) s)) |- ((\u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) x)
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f4 * / c? / c? / cSUBSET f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
+ (((hull affine) b) = ((hull affine) s)) |- ((b = EMPTY) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c==> c= f0 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- ((\p'. (!q'. ((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = q')) ==> ((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 f1
+ (b = EMPTY), (((hull affine) b) = ((hull affine) s)) |- ((\u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) (vec (NUMERAL _0)))
T c==> c= f0 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f1 * / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cvec cNUMERAL c_0
+ (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (b = EMPTY), (((hull affine) b) = ((hull affine) s)) |- (((?t. ((s SUBSET t) /\ (t SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT EMPTY))))))) ==> (s SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT EMPTY)))))) = (s SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT EMPTY))))))
T c==> c= f0 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c= c==> c? / c/\ cSUBSET f1 b0 cSUBSET b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cSUBSET f1 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cSUBSET f1 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY
+ (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (b = EMPTY), (((hull affine) b) = ((hull affine) s)) |- (?w. (s SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT (w INSERT EMPTY))))))
T c==> c= f0 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c? / cSUBSET f1 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 part cEMPTY
+ (((hull affine) b) = ((hull affine) s)) |- (((\y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))) y) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c==> * / c? / c= f0 * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f3 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (~ (b = EMPTY)) |- ((b = EMPTY) = F)
T c==> c~ c= f0 part cEMPTY c= c= f0 part cEMPTY cF
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))), ((s SUBSET t) /\ (t SUBSET u)) |- (s SUBSET u)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c==> c/\ cSUBSET f0 f1 cSUBSET f1 f2 cSUBSET f0 f2
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) /\ (!s. (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u)))))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c/\ ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 ! ! c==> c? / c/\ cSUBSET b0 b2 cSUBSET b2 b1 cSUBSET b0 b1
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- ((\s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) s)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 * / ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 f0
+ |- ((\s. (EMPTY SUBSET s)) s)
T * / cSUBSET part cEMPTY b0 f0
+ (b = (x INSERT (y INSERT (z INSERT EMPTY)))), (((hull affine) b) = ((hull affine) s)) |- (s SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f4 cSUBSET f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- ((\u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))) u)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 * / c==> c/\ cSUBSET f0 f1 cSUBSET f1 b0 cSUBSET f0 b0 f2
- (~ (affine_dependent b)) |- ((affine_dependent b) = F)
T c==> c~ caffine_dependent f0 c= caffine_dependent f0 cF
+ (((hull affine) b) = ((hull affine) s)) |- ((((hull affine) b) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) = ((s SUBSET ((hull affine) b)) /\ (((hull affine) b) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c= cSUBSET * * part chull part caffine f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET f1 * * part chull part caffine f0 cSUBSET * * part chull part caffine f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
+ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) \/ (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (((hull affine) b) = ((hull affine) s)), ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0))))))), ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) |- (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c==> c/\ c= * * part chull part caffine f0 * * part chull part caffine f1 c/\ c~ caffine_dependent f0 c= caff_dim f1 cint_sub cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le caff_dim f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (b = EMPTY) |- (T = (((hull affine) b) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT EMPTY))))))
T c==> c= f0 part cEMPTY c= cT cSUBSET * * part chull part caffine f0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))
T c= c<= f0 f1 cint_le cint_of_num f0 cint_of_num f1
+ |- ((\s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) s)
T * / c= ccoplanar b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 ! c==> c/\ cSUBSET f0 f1 cSUBSET f1 b0 cSUBSET f0 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- ((\t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))) t)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 * / ! c==> c/\ cSUBSET f0 b0 cSUBSET b0 b1 cSUBSET f0 b1 f1
+ (((hull affine) b) = ((hull affine) s)) |- ((((\y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))) y) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = T)
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c= c==> * / c? / c= f0 * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f3 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
+ ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) |- ((((\b. ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0)))))))) b) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = T)
T c==> cint_le caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> * / c/\ c= * * part chull part caffine b0 * * part chull part caffine f0 c/\ c~ caffine_dependent b0 c= caff_dim f0 cint_sub cint_of_num cCARD b0 cint_of_num cNUMERAL cBIT1 c_0 f1 c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
+ (b = EMPTY), (((hull affine) b) = ((hull affine) s)) |- (s SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT EMPTY)))))
T c==> c= f0 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f1 cSUBSET f1 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))) ==> ((\u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))) u)) = ((\u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))) u))
T c= c==> ! c==> c? / c/\ cSUBSET f0 b1 cSUBSET b1 b0 cSUBSET f0 b0 * / c==> c? / c/\ cSUBSET f0 b1 cSUBSET b1 b0 cSUBSET f0 b0 f1 * / c==> c? / c/\ cSUBSET f0 b1 cSUBSET b1 b0 cSUBSET f0 b0 f1
+ (~ (affine_dependent b)), (~ (b = EMPTY)), (((hull affine) b) = ((hull affine) s)), ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c==> c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- (((s SUBSET ((hull affine) b)) /\ (((hull affine) b) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) = ((\t. ((s SUBSET t) /\ (t SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ((hull affine) b)))
T c= c/\ cSUBSET f0 * * part chull part caffine f1 cSUBSET * * part chull part caffine f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * / c/\ cSUBSET f0 b0 cSUBSET b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine f1
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0))))) |- (((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0)))) = (aff_dim s))
T c==> c= caff_dim f0 cint_sub cint_of_num cCARD f1 cint_of_num cNUMERAL cBIT1 c_0 c= cint_sub cint_of_num cCARD f1 cint_of_num cNUMERAL cBIT1 c_0 caff_dim f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ (~ (affine_dependent b)), (~ (b = EMPTY)), ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((((~ (b = EMPTY)) /\ ((FINITE b) /\ ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))))) ==> (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c==> c~ caffine_dependent f0 c==> c~ c= f0 part cEMPTY c==> c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c= c==> c==> c/\ c~ c= f0 part cEMPTY c/\ cFINITE f0 c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (((hull affine) b) = ((hull affine) s)) |- (T = (s SUBSET ((hull affine) b)))
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c= cT cSUBSET f1 * * part chull part caffine f0
+ (b = EMPTY) |- (((hull affine) b) SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT ((vec (NUMERAL _0)) INSERT EMPTY)))))
T c==> c= f0 part cEMPTY cSUBSET * * part chull part caffine f0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY
- (?b. ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0)))))))), ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) |- (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> c? / c/\ c= * * part chull part caffine b0 * * part chull part caffine f0 c/\ c~ caffine_dependent b0 c= caff_dim f0 cint_sub cint_of_num cCARD b0 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (((hull affine) b) = ((hull affine) s)) |- ((((\x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) x) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = T)
T c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c= c==> * / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
+ |- ((\s. (s SUBSET s)) s)
T * / cSUBSET b0 b0 f0
+ (b = (x INSERT (y INSERT (z INSERT EMPTY)))), (((hull affine) b) = ((hull affine) s)) |- ((s SUBSET ((hull affine) b)) /\ (((hull affine) b) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f4 c/\ cSUBSET f4 * * part chull part caffine f0 cSUBSET * * part chull part caffine f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((s SUBSET t) /\ (t SUBSET u)) ==> ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u)))
T c==> c/\ cSUBSET f0 f1 cSUBSET f1 f2 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f2
+ (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) |- ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (b = EMPTY), (((hull affine) b) = ((hull affine) s)) |- (?v. (?w. (s SUBSET ((hull affine) ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY)))))))
T c==> c= f0 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))) z) |- (b = (x INSERT (y INSERT (z INSERT EMPTY))))
T c==> * / c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3 c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((\b. ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0)))))))) b) |- ((((hull affine) b) = ((hull affine) s)) /\ ((~ (affine_dependent b)) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD b))) (int_of_num (NUMERAL (BIT1 _0)))))))
T c==> * / c/\ c= * * part chull part caffine b0 * * part chull part caffine f0 c/\ c~ caffine_dependent b0 c= caff_dim f0 cint_sub cint_of_num cCARD b0 cint_of_num cNUMERAL cBIT1 c_0 f1 c/\ c= * * part chull part caffine f1 * * part chull part caffine f0 c/\ c~ caffine_dependent f1 c= caff_dim f0 cint_sub cint_of_num cCARD f1 cint_of_num cNUMERAL cBIT1 c_0
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))), ((s SUBSET t) /\ (t SUBSET u)) |- ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) /\ (s SUBSET u))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c==> c/\ cSUBSET f0 f1 cSUBSET f1 f2 c/\ ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f2
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (~ (affine_dependent b)), (((hull affine) b) = ((hull affine) s)), ((CARD b) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> c~ caffine_dependent f0 c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c==> c<= cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- ((((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> q')))) = (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> q'))))
T c= c==> c= c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c= c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c==> c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c= c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2
+ |- ((s SUBSET s) = T)
T c= cSUBSET f0 f0 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))), (((hull affine) b) = ((hull affine) s)) |- ((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f1 c/\ c? / c? / c? / c= f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- (~ (b = EMPTY)) |- (((~ (EMPTY = b)) ==> ((EMPTY = b) = F)) = ((EMPTY = b) = F))
T c==> c~ c= f0 part cEMPTY c= c==> c~ c= part cEMPTY f0 c= c= part cEMPTY f0 cF c= c= part cEMPTY f0 cF
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ (b = EMPTY)) |- (~ (EMPTY = b))
T c==> c~ c= f0 part cEMPTY c~ c= part cEMPTY f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!q'. (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q'))))) ==> ((\q'. (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q'))))) q')) = ((\q'. (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f1 c==> c==> f1 c= c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c= c==> c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> f1 b0 * / c==> c= c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f1 c==> c==> f1 c= c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c= c==> c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> f1 b0 f3 * / c==> c= c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f1 c==> c==> f1 c= c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c= c==> c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> f1 b0 f3
- |- ((\p'. (!q'. (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b0 c==> c==> b0 c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 f2
- (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))), (((hull affine) b) = ((hull affine) s)) |- ((?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c? / c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f3 c/\ c? / c= f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c? / c? / c? / cSUBSET f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\q'. (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q'))))) q')
T * / c==> c= c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f1 c==> c==> f1 c= c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c= c==> c? / c? / c? / c= f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> f1 b0 f3
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= c* cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p'. (!q'. (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) = p') ==> ((p' ==> ((?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = q')) ==> (((?x. (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b0 c==> c==> b0 c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 * / ! c==> c= c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b0 c==> c==> b0 c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 f2 * / ! c==> c= c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b0 c==> c==> b0 c= c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c? / c? / c? / c= f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c? / c? / c? / cSUBSET f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 f2
- |- ((real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (b = EMPTY) |- (EMPTY = b)
T c==> c= f0 part cEMPTY c= part cEMPTY f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (b = EMPTY)) |- ((EMPTY = b) = F)
T c==> c~ c= f0 part cEMPTY c= c= part cEMPTY f0 cF
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- (((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int a))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int a)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))), (((hull affine) b) = ((hull affine) s)) |- ((?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))) /\ (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c? / c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f2 c/\ c? / c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (?y. (?z. (b = (x INSERT (y INSERT (z INSERT EMPTY)))))), (((hull affine) b) = ((hull affine) s)) |- (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> c? / c? / c= f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c= * * part chull part caffine f0 * * part chull part caffine f2 c? / c? / c? / cSUBSET f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
