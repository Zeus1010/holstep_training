N CONVEX_EQ_CONVEX_LINE_INTERSECTION
C |- (!s. ((convex s) = (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))
T c= cconvex f0 ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D HULL_INC
A |- (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s))))))
T c==> cIN f0 f1 cIN f0 * * part chull f2 f1
D AFFINE_AFFINE_HULL
A |- (!s. (affine ((hull affine) s)))
T caffine * * part chull part caffine f0
D CONVEX_CONTAINS_SEGMENT
A |- (!s. ((convex s) = (!a. (!b. (((a IN s) /\ (b IN s)) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s))))))
T c= cconvex f0 ! ! c==> c/\ cIN b0 f0 cIN b1 f0 cSUBSET * part cclosed_segment cCONS c, b0 b1 cNIL f0
D CONVEX_INTER
A |- (!s. (!t. (((convex s) /\ (convex t)) ==> (convex (s INTER t)))))
T c==> c/\ cconvex f0 cconvex f1 cconvex * * part cINTER f0 f1
D AFFINE_IMP_CONVEX
A |- (!s. ((affine s) ==> (convex s)))
T c==> caffine f0 cconvex f0
+ (affine s) |- ((affine s) /\ ((convex s) = T))
T c==> caffine f0 c/\ caffine f0 c= cconvex f0 cT
+ |- ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = p') ==> ((p' ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = q')) ==> ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f4 c= c==> c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> f3 f4
+ |- (((convex s) /\ (convex t)) ==> ((convex (s INTER t)) = T))
T c==> c/\ cconvex f0 cconvex f1 c= cconvex * * part cINTER f0 f1 cT
- |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((\x. ((x IN s) ==> (x IN ((hull P) s)))) x)
T * / c==> cIN b0 f0 cIN b0 * * part chull f1 f0 f2
+ |- ((((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)) = (((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)))
T c= c==> cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2 c==> cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2
+ |- ((convex ((hull affine) (a INSERT (b INSERT EMPTY)))) = T)
T c= cconvex * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
+ |- (((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s))
T c==> cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2
- (~ ((closed_segment ((CONS (a , b)) NIL)) x)), ((closed_segment ((CONS (a , b)) NIL)) x) |- ((~ ((closed_segment ((CONS (a , b)) NIL)) x)) /\ ((closed_segment ((CONS (a , b)) NIL)) x))
T c==> c~ cclosed_segment cCONS c, f0 f1 cNIL f2 c==> cclosed_segment cCONS c, f0 f1 cNIL f2 c/\ c~ cclosed_segment cCONS c, f0 f1 cNIL f2 cclosed_segment cCONS c, f0 f1 cNIL f2
+ |- ((\p'. (!q'. (((convex s) = p') ==> ((p' ==> ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) = q')) ==> (((convex s) ==> (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= cconvex f0 b0 c==> c==> b0 c= ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c= c==> cconvex f0 ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> b0 b1 f1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- (((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = p') ==> ((p' ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET s) = q')) ==> (((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)) = (p' ==> q'))))
T c==> c= c==> c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL f1 f4 c= c==> c==> c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL f1 c==> f3 f4
+ |- (((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> ((\P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) P)) = ((\P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) P))
T c= c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 * / ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 f0 * / ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 f0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- ((!s. (!b. (!a. ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))))) = (!s. (!b. (!a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)))))
T c= ! ! ! c==> ! c==> cclosed_segment cCONS c, b2 b1 cNIL b3 c/\ * b0 b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c==> cclosed_segment cCONS c, b2 b1 cNIL b3 * b0 b3 ! ! ! c==> c~ c==> ! c==> cclosed_segment cCONS c, b2 b1 cNIL b3 c/\ * b0 b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c==> cclosed_segment cCONS c, b2 b1 cNIL b3 * b0 b3 cF
- |- (T = (((~ ((closed_segment ((CONS (a , b)) NIL)) _505570)) \/ (s _505570)) = ((s _505570) \/ (~ ((closed_segment ((CONS (a , b)) NIL)) _505570)))))
T c= cT c= c\/ c~ cclosed_segment cCONS c, f0 f1 cNIL f2 * f3 f2 c\/ * f3 f2 c~ cclosed_segment cCONS c, f0 f1 cNIL f2
+ (!a. (!b. (!a'. (!b'. (((a' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a' , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))) |- (((a IN s) /\ (b IN s)) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s))
T c==> ! ! ! ! c==> c/\ cIN b2 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, b2 b3 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c/\ cIN f1 f0 cIN f2 f0 cSUBSET * part cclosed_segment cCONS c, f1 f2 cNIL f0
+ |- ((a IN ((hull affine) (a INSERT (b INSERT EMPTY)))) = T)
T c= cIN f0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
+ |- ((\s. ((affine s) ==> (convex s))) s)
T * / c==> caffine b0 cconvex b0 f0
- |- ((\b. (!a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F))) b)
T * / ! c==> c~ c==> ! c==> cclosed_segment cCONS c, b1 b0 cNIL b2 c/\ * f0 b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> cclosed_segment cCONS c, b1 b0 cNIL b2 * f0 b2 cF f1
+ |- (((!x. ((x IN (closed_segment ((CONS (a , b)) NIL))) ==> (x IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) ==> (!x. ((x IN (closed_segment ((CONS (a , b)) NIL))) ==> (x IN s)))) = (((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)))
T c= c==> ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL cIN b0 * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL cIN b0 f2 c==> cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2
+ |- ((((convex s) ==> ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) = T)) ==> (((convex s) ==> (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))) = ((convex s) ==> T))) = (((convex s) ==> (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))) = ((convex s) ==> T)))
T c= c==> c==> cconvex f0 c= ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cT c= c==> cconvex f0 ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> cconvex f0 cT c= c==> cconvex f0 ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> cconvex f0 cT
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
+ (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) |- (((~ ((closed_segment ((CONS (a , b)) NIL)) _505570)) \/ (s _505570)) /\ ((~ ((closed_segment ((CONS (a , b)) NIL)) _505570)) \/ (((hull affine) (a INSERT (b INSERT EMPTY))) _505570)))
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c/\ c\/ c~ cclosed_segment cCONS c, f0 f1 cNIL f3 * f2 f3 c\/ c~ cclosed_segment cCONS c, f0 f1 cNIL f3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F), (((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) |- ((((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) /\ ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F))
T c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c/\ c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF
+ |- ((\s. (affine ((hull affine) s))) s)
T * / caffine * * part chull part caffine b0 f0
+ |- ((b IN ((hull affine) (a INSERT (b INSERT EMPTY)))) = T)
T c= cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cT
+ (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) |- ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) /\ ((convex s) = (convex s)))
T c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cconvex f0 cconvex f0
- (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) |- ((convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = T)
T c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- (((!s. (affine ((hull affine) s))) ==> ((\s. (affine ((hull affine) s))) s)) = ((\s. (affine ((hull affine) s))) s))
T c= c==> ! caffine * * part chull part caffine b0 * / caffine * * part chull part caffine b0 f0 * / caffine * * part chull part caffine b0 f0
+ |- (T = (b IN (a INSERT (b INSERT EMPTY))))
T c= cT cIN f0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) |- (!x. ((~ ((closed_segment ((CONS (a , b)) NIL)) x)) \/ ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x))))
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c\/ c~ cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- (T = (affine ((hull affine) (a INSERT (b INSERT EMPTY)))))
T c= cT caffine * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (a IN s), (b IN s) |- ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = (T ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))
T c==> cIN f0 f1 c==> cIN f2 f1 c= c==> c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cT cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((!x'. ((~ ((closed_segment ((CONS (a , b)) NIL)) x)) \/ ((s x') /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x')))) = ((~ ((closed_segment ((CONS (a , b)) NIL)) x)) \/ (!x. ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))))
T c= ! c\/ c~ cclosed_segment cCONS c, f0 f1 cNIL f2 c/\ * f3 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c\/ c~ cclosed_segment cCONS c, f0 f1 cNIL f2 ! c/\ * f3 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- ((\s. (!b. (!a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)))) s)
T * / ! ! c==> c~ c==> ! c==> cclosed_segment cCONS c, b2 b1 cNIL b3 c/\ * b0 b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c==> cclosed_segment cCONS c, b2 b1 cNIL b3 * b0 b3 cF f0
- (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) |- ((\b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) b)
T c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ |- (((!q'. (((convex s) = p') ==> ((p' ==> ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) = q')) ==> (((convex s) ==> (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))) = (p' ==> q'))))) ==> ((\q'. (((convex s) = p') ==> ((p' ==> ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) = q')) ==> (((convex s) ==> (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))) = (p' ==> q'))))) q')) = ((\q'. (((convex s) = p') ==> ((p' ==> ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) = q')) ==> (((convex s) ==> (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cconvex f0 f1 c==> c==> f1 c= ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c= c==> cconvex f0 ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> f1 b0 * / c==> c= cconvex f0 f1 c==> c==> f1 c= ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c= c==> cconvex f0 ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> f1 b0 f2 * / c==> c= cconvex f0 f1 c==> c==> f1 c= ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c= c==> cconvex f0 ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> f1 b0 f2
+ |- (((!q'. ((((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = p') ==> ((p' ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET s) = q')) ==> ((((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)) = (p' ==> q'))))) ==> ((\q'. ((((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = p') ==> ((p' ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET s) = q')) ==> ((((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)) = (p' ==> q'))))) q')) = ((\q'. ((((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = p') ==> ((p' ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET s) = q')) ==> ((((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> c==> f3 c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2 b0 c= c==> cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2 c==> f3 b0 * / c==> c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> c==> f3 c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2 b0 c= c==> cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2 c==> f3 b0 f4 * / c==> c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> c==> f3 c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2 b0 c= c==> cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2 c==> f3 b0 f4
+ |- ((\q'. ((((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = p') ==> ((p' ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET s) = q')) ==> ((((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)) = (p' ==> q'))))) q')
T * / c==> c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> c==> f3 c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2 b0 c= c==> cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2 c==> f3 b0 f4
- (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))), ((closed_segment ((CONS (a , b)) NIL)) x) |- ((~ (s x)) ==> (s x))
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> cclosed_segment cCONS c, f0 f1 cNIL f3 c==> c~ * f2 f3 * f2 f3
+ |- (((!p'. (!q'. (((convex s) = p') ==> ((p' ==> ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) = q')) ==> (((convex s) ==> (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((convex s) = p') ==> ((p' ==> ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) = q')) ==> (((convex s) ==> (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((convex s) = p') ==> ((p' ==> ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) = q')) ==> (((convex s) ==> (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cconvex f0 b0 c==> c==> b0 c= ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c= c==> cconvex f0 ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> b0 b1 * / ! c==> c= cconvex f0 b0 c==> c==> b0 c= ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c= c==> cconvex f0 ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> b0 b1 f1 * / ! c==> c= cconvex f0 b0 c==> c==> b0 c= ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c= c==> cconvex f0 ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> b0 b1 f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((\P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) P)
T * / ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 f0
+ (!a. (!b. (!a'. (!b'. (((a' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a' , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))) |- (((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))
T c==> ! ! ! ! c==> c/\ cIN b2 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, b2 b3 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c/\ cIN f1 * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f1 f2 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!a. (!b. (!a'. (!b'. (((a' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a' , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))), ((a IN s) /\ (b IN s)) |- (((a IN s) /\ (b IN s)) /\ ((closed_segment ((CONS (a , b)) NIL)) SUBSET s))
T c==> ! ! ! ! c==> c/\ cIN b2 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, b2 b3 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c/\ cIN f1 f0 cIN f2 f0 c/\ c/\ cIN f1 f0 cIN f2 f0 cSUBSET * part cclosed_segment cCONS c, f1 f2 cNIL f0
- |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (b IN s) |- ((b IN s) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ |- (((!a. (!b. (!a'. (!b'. (((a' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a' , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))) ==> (!a. (!b. (((a IN s) /\ (b IN s)) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s))))) = ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) ==> (convex s)))
T c= c==> ! ! ! ! c==> c/\ cIN b2 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, b2 b3 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f0 cSUBSET * part cclosed_segment cCONS c, b0 b1 cNIL f0 c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cconvex f0
+ (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) |- ((((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x)) = T)
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c= c==> cclosed_segment cCONS c, f0 f1 cNIL f3 * f2 f3 cT
- |- ((!a. ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) = T)
T c= ! c==> ! c==> cclosed_segment cCONS c, b0 f0 cNIL b1 c/\ * f1 b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> cclosed_segment cCONS c, b0 f0 cNIL b1 * f1 b1 cT
+ (!a. (!b. (!a'. (!b'. (((a' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a' , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))) |- (!b. (((a IN s) /\ (b IN s)) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)))
T c==> ! ! ! ! c==> c/\ cIN b2 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, b2 b3 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c==> c/\ cIN f1 f0 cIN b0 f0 cSUBSET * part cclosed_segment cCONS c, f1 b0 cNIL f0
- (((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) |- ((((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) /\ (((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c/\ c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF
+ |- ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)
T * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
+ (a IN s), (b IN s) |- (((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = T) ==> ((T ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = q')) ==> ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = (T ==> q')))) = ((T ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = q')) ==> ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = (T ==> q'))))
T c==> cIN f0 f1 c==> cIN f2 f1 c= c==> c= c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cT c==> c==> cT c= cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c= c==> c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cT f3 c==> c==> cT c= cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c= c==> c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cT f3
- (~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) |- F
T c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF
+ (a IN s), (b IN s) |- ((((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET s) = q')) ==> (((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)) = (((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) ==> q')))
T c==> cIN f0 f1 c==> cIN f2 f1 c==> c==> cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL f1 f3 c= c==> c==> c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL f1 c==> cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3
+ |- ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) ==> ((convex s) = (convex s)))
T c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cconvex f0 cconvex f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((\p'. (!q'. ((((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = p') ==> ((p' ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET s) = q')) ==> ((((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)) = (p' ==> q')))))) p')
T * / ! c==> c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2 b1 c= c==> cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL f2 c==> b0 b1 f3
- T |- (T = T)
T c==> cT c= cT cT
+ |- ((!x. ((x IN (closed_segment ((CONS (a , b)) NIL))) ==> (x IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) ==> (!x. ((x IN (closed_segment ((CONS (a , b)) NIL))) ==> (x IN s))))
T c==> ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL cIN b0 * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL cIN b0 f2
- (~ (s x)) |- ((s x) ==> F)
T c==> c~ * f0 f1 c==> * f0 f1 cF
- ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) |- (((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) /\ ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F))
T c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c/\ c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF
+ (convex s) |- ((((convex s) /\ (convex ((hull affine) (a INSERT (b INSERT EMPTY))))) ==> ((convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = T)) = ((convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = T))
T c==> cconvex f0 c= c==> c/\ cconvex f0 cconvex * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT c= cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (!a. (!b. (!a'. (!b'. (((a' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a' , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))), (a IN s), (b IN s) |- ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)
T c==> ! ! ! ! c==> c/\ cIN b2 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, b2 b3 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> cIN f1 f0 c==> cIN f2 f0 cSUBSET * part cclosed_segment cCONS c, f1 f2 cNIL f0
+ |- ((\t. (((convex s) /\ (convex t)) ==> (convex (s INTER t)))) t)
T * / c==> c/\ cconvex f0 cconvex b0 cconvex * * part cINTER f0 b0 f1
+ |- (((convex s) ==> (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))) /\ ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) ==> (convex s)))
T c/\ c==> cconvex f0 ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cconvex f0
- |- ((!b. (!a. ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x)))))) = T)
T c= ! ! c==> ! c==> cclosed_segment cCONS c, b1 b0 cNIL b2 c/\ * f0 b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> cclosed_segment cCONS c, b1 b0 cNIL b2 * f0 b2 cT
+ (!a. (!b. (!a'. (!b'. (((a' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a' , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))) |- ((((a IN s) /\ (b IN s)) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)) = T)
T c==> ! ! ! ! c==> c/\ cIN b2 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, b2 b3 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= c==> c/\ cIN f1 f0 cIN f2 f0 cSUBSET * part cclosed_segment cCONS c, f1 f2 cNIL f0 cT
+ (!a. (!b. (!a'. (!b'. (((a' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a' , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))) |- (((!b'. (((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) ==> ((\b'. (((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) b)) = ((\b'. (((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) b))
T c==> ! ! ! ! c==> c/\ cIN b2 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, b2 b3 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= c==> ! c==> c/\ cIN f1 * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f1 b0 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c==> c/\ cIN f1 * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f1 b0 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * / c==> c/\ cIN f1 * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f1 b0 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2
+ |- (((!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) ==> ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)) = ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x))
T c= c==> ! c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
- (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))), (~ (s x)), ((closed_segment ((CONS (a , b)) NIL)) x) |- ((~ (s x)) /\ F)
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> c~ * f2 f3 c==> cclosed_segment cCONS c, f0 f1 cNIL f3 c/\ c~ * f2 f3 cF
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- |- (((~ (s x)) ==> F) = (s x))
T c= c==> c~ * f0 f1 cF * f0 f1
- (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))), (~ F), (~ (s x)), ((closed_segment ((CONS (a , b)) NIL)) x) |- ((~ F) /\ F)
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> c~ cF c==> c~ * f2 f3 c==> cclosed_segment cCONS c, f0 f1 cNIL f3 c/\ c~ cF cF
+ (!a. (!b. (!a'. (!b'. (((a' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a' , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))) |- ((!b. (((a IN s) /\ (b IN s)) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET s))) = T)
T c==> ! ! ! ! c==> c/\ cIN b2 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, b2 b3 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= ! c==> c/\ cIN f1 f0 cIN b0 f0 cSUBSET * part cclosed_segment cCONS c, f1 b0 cNIL f0 cT
+ |- (((!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) ==> ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t)) = ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t))
T c= c==> ! ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1
+ (!a. (!b. (!a'. (!b'. (((a' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a' , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))) |- (!b. (!a'. (!b'. (((a' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a' , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))
T c==> ! ! ! ! c==> c/\ cIN b2 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, b2 b3 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! ! c==> c/\ cIN b1 * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cIN b2 * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * part cclosed_segment cCONS c, b1 b2 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
+ |- (((affine ((hull affine) (a INSERT (b INSERT EMPTY)))) ==> ((convex ((hull affine) (a INSERT (b INSERT EMPTY)))) = T)) = ((convex ((hull affine) (a INSERT (b INSERT EMPTY)))) = T))
T c= c==> caffine * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cconvex * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT c= cconvex * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
+ |- (((a IN (a INSERT (b INSERT EMPTY))) ==> ((a IN ((hull affine) (a INSERT (b INSERT EMPTY)))) = T)) = ((a IN ((hull affine) (a INSERT (b INSERT EMPTY)))) = T))
T c= c==> cIN f0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cIN f0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT c= cIN f0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
+ (convex s) |- (T = ((convex s) /\ (convex ((hull affine) (a INSERT (b INSERT EMPTY))))))
T c==> cconvex f0 c= cT c/\ cconvex f0 cconvex * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\s. (!t. (((convex s) /\ (convex t)) ==> (convex (s INTER t))))) s)
T * / ! c==> c/\ cconvex b0 cconvex b1 cconvex * * part cINTER b0 b1 f0
+ |- ((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) ==> (convex s))
T c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cconvex f0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
+ |- (((T ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) ==> ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = (T ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))) = ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = (T ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))))
T c= c==> c==> cT c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> c/\ cIN f0 * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cT cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> c/\ cIN f0 * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cT cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (!a. (!b. (!a'. (!b'. (((a' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b' IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a' , b')) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))))))), ((a IN s) /\ (b IN s)), (a IN s) |- ((closed_segment ((CONS (a , b)) NIL)) SUBSET s)
T c==> ! ! ! ! c==> c/\ cIN b2 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * part cclosed_segment cCONS c, b2 b3 cNIL * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c/\ cIN f1 f0 cIN f2 f0 c==> cIN f1 f0 cSUBSET * part cclosed_segment cCONS c, f1 f2 cNIL f0
+ (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) |- (!x. (((~ ((closed_segment ((CONS (a , b)) NIL)) x)) \/ (s x)) /\ ((~ ((closed_segment ((CONS (a , b)) NIL)) x)) \/ (((hull affine) (a INSERT (b INSERT EMPTY))) x))))
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c/\ c\/ c~ cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 c\/ c~ cclosed_segment cCONS c, f0 f1 cNIL b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
+ |- (((!p'. (!q'. ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = p') ==> ((p' ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = q')) ==> ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = p') ==> ((p' ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = q')) ==> ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = p') ==> ((p' ==> (((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = q')) ==> ((((a IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) /\ (b IN (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b1 c= c==> c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> b0 b1 * / ! c==> c= c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b1 c= c==> c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> b0 b1 f3 * / ! c==> c= c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b1 c= c==> c/\ cIN f0 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part cclosed_segment cCONS c, f0 f2 cNIL * * part cINTER f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> b0 b1 f3
+ |- (((!p'. (!q'. (((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) = p') ==> ((p' ==> ((convex s) = q')) ==> (((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) ==> (convex s)) = (p' ==> q')))))) ==> ((\p'. (!q'. (((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) = p') ==> ((p' ==> ((convex s) = q')) ==> (((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) ==> (convex s)) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) = p') ==> ((p' ==> ((convex s) = q')) ==> (((!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) ==> (convex s)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c==> c==> b0 c= cconvex f0 b1 c= c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cconvex f0 c==> b0 b1 * / ! c==> c= ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c==> c==> b0 c= cconvex f0 b1 c= c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cconvex f0 c==> b0 b1 f1 * / ! c==> c= ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c==> c==> b0 c= cconvex f0 b1 c= c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cconvex f0 c==> b0 b1 f1
- (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) |- (((!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) ==> ((\b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) b)) = ((\b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))) b))
T c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= c==> ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 * / cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
- ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F), (((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) |- (((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) /\ ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F))
T c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c/\ c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))), (~ (s x)), ((closed_segment ((CONS (a , b)) NIL)) x) |- ((~ (s x)) /\ (s x))
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> c~ * f2 f3 c==> cclosed_segment cCONS c, f0 f1 cNIL f3 c/\ c~ * f2 f3 * f2 f3
- ((closed_segment ((CONS (a , b)) NIL)) x) |- ((~ ((closed_segment ((CONS (a , b)) NIL)) x)) ==> ((closed_segment ((CONS (a , b)) NIL)) x))
T c==> cclosed_segment cCONS c, f0 f1 cNIL f2 c==> c~ cclosed_segment cCONS c, f0 f1 cNIL f2 cclosed_segment cCONS c, f0 f1 cNIL f2
- (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))), ((closed_segment ((CONS (a , b)) NIL)) x) |- ((~ (s x)) ==> F)
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> cclosed_segment cCONS c, f0 f1 cNIL f3 c==> c~ * f2 f3 cF
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((!b. (!a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F))) ==> ((\b. (!a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F))) b)) = ((\b. (!a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F))) b))
T c= c==> ! ! c==> c~ c==> ! c==> cclosed_segment cCONS c, b1 b0 cNIL b2 c/\ * f0 b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> cclosed_segment cCONS c, b1 b0 cNIL b2 * f0 b2 cF * / ! c==> c~ c==> ! c==> cclosed_segment cCONS c, b1 b0 cNIL b2 c/\ * f0 b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> cclosed_segment cCONS c, b1 b0 cNIL b2 * f0 b2 cF f1 * / ! c==> c~ c==> ! c==> cclosed_segment cCONS c, b1 b0 cNIL b2 c/\ * f0 b2 chull part caffine * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> cclosed_segment cCONS c, b1 b0 cNIL b2 * f0 b2 cF f1
- |- (((!s. (!b. (!a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)))) ==> ((\s. (!b. (!a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)))) s)) = ((\s. (!b. (!a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)))) s))
T c= c==> ! ! ! c==> c~ c==> ! c==> cclosed_segment cCONS c, b2 b1 cNIL b3 c/\ * b0 b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c==> cclosed_segment cCONS c, b2 b1 cNIL b3 * b0 b3 cF * / ! ! c==> c~ c==> ! c==> cclosed_segment cCONS c, b2 b1 cNIL b3 c/\ * b0 b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c==> cclosed_segment cCONS c, b2 b1 cNIL b3 * b0 b3 cF f0 * / ! ! c==> c~ c==> ! c==> cclosed_segment cCONS c, b2 b1 cNIL b3 c/\ * b0 b3 chull part caffine * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c==> cclosed_segment cCONS c, b2 b1 cNIL b3 * b0 b3 cF f0
- (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))), ((closed_segment ((CONS (a , b)) NIL)) x) |- (((closed_segment ((CONS (a , b)) NIL)) x) /\ (s x))
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> cclosed_segment cCONS c, f0 f1 cNIL f3 c/\ cclosed_segment cCONS c, f0 f1 cNIL f3 * f2 f3
- |- ((((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) = ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F))
T c= c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) |- (((closed_segment ((CONS (a , b)) NIL)) SUBSET (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))) = T)
T c==> cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * * part cINTER f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
- (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) |- (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY)))))
T c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) |- ((((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F))
T c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF
- |- ((convex s) = ((convex s) /\ (convex ((hull affine) (a INSERT (b INSERT EMPTY))))))
T c= cconvex f0 c/\ cconvex f0 cconvex * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) |- ((~ ((closed_segment ((CONS (a , b)) NIL)) _505570)) \/ (((hull affine) (a INSERT (b INSERT EMPTY))) _505570))
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c\/ c~ cclosed_segment cCONS c, f0 f1 cNIL f3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))), ((closed_segment ((CONS (a , b)) NIL)) x) |- (((s x) ==> F) = F)
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> cclosed_segment cCONS c, f0 f1 cNIL f3 c= c==> * f2 f3 cF cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))), (~ (s x)), ((closed_segment ((CONS (a , b)) NIL)) x) |- ((~ F) ==> F)
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> c~ * f2 f3 c==> cclosed_segment cCONS c, f0 f1 cNIL f3 c==> c~ cF cF
- |- ((!x'. ((~ ((closed_segment ((CONS (a , b)) NIL)) x')) \/ ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) = ((!x. (~ ((closed_segment ((CONS (a , b)) NIL)) x))) \/ ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x))))
T c= ! c\/ c~ cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 f3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c\/ ! c~ cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 f3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- (((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F))
T c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF
- (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))), (~ (s x)), ((closed_segment ((CONS (a , b)) NIL)) x) |- F
T c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> c~ * f2 f3 c==> cclosed_segment cCONS c, f0 f1 cNIL f3 cF
- |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
- |- ((\a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) a)
T * / c==> c~ c==> ! c==> cclosed_segment cCONS c, b0 f0 cNIL b1 c/\ * f1 b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> cclosed_segment cCONS c, b0 f0 cNIL b1 * f1 b1 cF f2
- |- (((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) = ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x)))))
T c= c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0
- |- (((((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) ==> (((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F))) = (((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)))
T c= c==> c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF
- (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) |- (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))
T c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
- |- ((((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) ==> (((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F) ==> ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF
- (~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) |- ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) /\ F)
T c==> c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 c/\ c~ c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cF
- |- (((!a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) ==> ((\a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) a)) = ((\a. ((~ ((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x))))) ==> F)) a))
T c= c==> ! c==> c~ c==> ! c==> cclosed_segment cCONS c, b0 f0 cNIL b1 c/\ * f1 b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> cclosed_segment cCONS c, b0 f0 cNIL b1 * f1 b1 cF * / c==> c~ c==> ! c==> cclosed_segment cCONS c, b0 f0 cNIL b1 c/\ * f1 b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> cclosed_segment cCONS c, b0 f0 cNIL b1 * f1 b1 cF f2 * / c==> c~ c==> ! c==> cclosed_segment cCONS c, b0 f0 cNIL b1 c/\ * f1 b1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> cclosed_segment cCONS c, b0 f0 cNIL b1 * f1 b1 cF f2
- |- (((!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> ((s x) /\ (((hull affine) (a INSERT (b INSERT EMPTY))) x)))) ==> (!x. (((closed_segment ((CONS (a , b)) NIL)) x) ==> (s x)))) = T)
T c= c==> ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 c/\ * f2 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> cclosed_segment cCONS c, f0 f1 cNIL b0 * f2 b0 cT
- (!a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) |- ((\a. (!b. (convex (s INTER ((hull affine) (a INSERT (b INSERT EMPTY))))))) a)
T c==> ! ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! cconvex * * part cINTER f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
