N Hypermap.lemma_hyp_m_Exists
C |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> (?m. ((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x))))))))))
T c==> cis_split_condition f0 f1 f2 f3 c? / c/\ ! c==> c<= b1 cSUC b0 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_IMP
A |- (!t1. (!t2. ((~ (t1 ==> t2)) = (t1 /\ (~ t2)))))
T c= c~ c==> f0 f1 c/\ f0 c~ f1
D CONTRAPOS_THM
A |- (!t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1))))
T c= c==> c~ f0 c~ f1 c==> f1 f0
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LT_SUC_LE
A |- (!m. (!n. ((m < (SUC n)) = (m <= n))))
T c= c< f0 cSUC f1 c<= f0 f1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_NZ
A |- (!n. (((NUMERAL _0) < n) = (~ (n = (NUMERAL _0)))))
T c= c< cNUMERAL c_0 f0 c~ c= f0 cNUMERAL c_0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D num_WF
A |- (!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n))))
T c==> ! c==> ! c==> c< b1 b0 * f0 b1 * f0 b0 ! * f0 b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Fan.POWER_1
A |- (!f. (((POWER f) (NUMERAL (BIT1 _0))) = f))
T c= * * part cPOWER f0 cNUMERAL cBIT1 c_0 f0
D Hypermap.lemma_true_loop1
A |- (!H. (!NF. (!L. (((is_restricted H) /\ (((is_normal H) NF) /\ (L IN NF))) ==> ((L IN ((final_loops H) NF)) = (?x. (((in_dart_of_loop x) L) /\ (!n. ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))))))))))
T c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 cIN f2 f1 c= cIN f2 * * part cfinal_loops f0 f1 c? / c/\ cin_dart_of_loop b0 f2 ! c= cPOWER * part cface_map f0 b1 b0 cPOWER * part cloop_map f2 b1 b0
D Hypermap.lemma_head_of_atom_via_restricted
A |- (!H. (!NF. (!L. (!x. (((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((in_dart_of_loop x) L)))) ==> (((((head_of_atom H) NF) x) = x) = (((loop_map L) x) = ((face_map H) x))))))))
T c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 cin_dart_of_loop f3 f2 c= c= chead_of_atom f0 f1 f3 f3 c= cloop_map f2 f3 cface_map f0 f3
D Hypermap.is_split_condition
A |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))))))
T c= cis_split_condition f0 f1 f2 f3 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3
+ |- (((!x. ((I x) = x)) ==> ((\x. ((I x) = x)) x)) = ((\x. ((I x) = x)) x))
T c= c==> ! c= cI b0 b0 * / c= cI b0 b0 f0 * / c= cI b0 b0 f0
+ |- (((!L. (((is_restricted H) /\ (((is_normal H) NF) /\ (L IN NF))) ==> ((L IN ((final_loops H) NF)) = (?x. (((in_dart_of_loop x) L) /\ (!n. ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x)))))))) ==> ((\L. (((is_restricted H) /\ (((is_normal H) NF) /\ (L IN NF))) ==> ((L IN ((final_loops H) NF)) = (?x. (((in_dart_of_loop x) L) /\ (!n. ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x)))))))) L)) = ((\L. (((is_restricted H) /\ (((is_normal H) NF) /\ (L IN NF))) ==> ((L IN ((final_loops H) NF)) = (?x. (((in_dart_of_loop x) L) /\ (!n. ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x)))))))) L))
T c= c==> ! c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 cIN b0 f1 c= cIN b0 * * part cfinal_loops f0 f1 c? / c/\ cin_dart_of_loop b1 b0 ! c= cPOWER * part cface_map f0 b2 b1 cPOWER * part cloop_map b0 b2 b1 * / c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 cIN b0 f1 c= cIN b0 * * part cfinal_loops f0 f1 c? / c/\ cin_dart_of_loop b1 b0 ! c= cPOWER * part cface_map f0 b2 b1 cPOWER * part cloop_map b0 b2 b1 f2 * / c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 cIN b0 f1 c= cIN b0 * * part cfinal_loops f0 f1 c? / c/\ cin_dart_of_loop b1 b0 ! c= cPOWER * part cface_map f0 b2 b1 cPOWER * part cloop_map b0 b2 b1 f2
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ |- ((n = (NUMERAL _0)) \/ (~ (n = (NUMERAL _0))))
T c\/ c= f0 cNUMERAL c_0 c~ c= f0 cNUMERAL c_0
+ (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) |- (!d. (((\d. (n = (SUC d))) d) ==> ((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x))))
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f3 b1 f2 cPOWER * part cface_map f1 b1 f2 c= cPOWER * part cloop_map f3 cSUC cSUC b0 f2 cPOWER * part cface_map f1 cSUC cSUC b0 f2 ! c==> * / c= f0 cSUC b1 b0 c= cPOWER * part cface_map f1 cSUC f0 f2 cPOWER * part cloop_map f3 cSUC f0 f2
+ |- (~ ((int_lt (int_of_num m)) (int_of_num (NUMERAL _0))))
T c~ cint_lt cint_of_num f0 cint_of_num cNUMERAL c_0
- (!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))) |- ((!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))) /\ (!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))))
T c==> ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 c/\ ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1
- (n = (SUC d)) |- (((!m. ((m < n) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))) = ((!m. ((m < (SUC d)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) (SUC d)) x) = (((POWER (loop_map L)) (SUC d)) x))))
T c==> c= f0 cSUC f1 c= c==> ! c==> c< b0 f0 c= cPOWER * part cface_map f2 b0 f3 cPOWER * part cloop_map f4 b0 f3 c= cPOWER * part cface_map f2 f0 f3 cPOWER * part cloop_map f4 f0 f3 c==> ! c==> c< b0 cSUC f1 c= cPOWER * part cface_map f2 b0 f3 cPOWER * part cloop_map f4 b0 f3 c= cPOWER * part cface_map f2 cSUC f1 f3 cPOWER * part cloop_map f4 cSUC f1 f3
+ |- (T = ((((POWER (face_map H)) (SUC (SUC d))) x) = (((POWER (face_map H)) (SUC (SUC d))) x)))
T c= cT c= cPOWER * part cface_map f0 cSUC cSUC f1 f2 cPOWER * part cface_map f0 cSUC cSUC f1 f2
+ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))), (i <= (SUC d)) |- (((i <= (SUC d)) ==> ((((POWER (face_map H)) i) x) = (((POWER (loop_map L)) i) x))) ==> ((((POWER (face_map H)) (SUC (SUC d))) x) = (((POWER (loop_map L)) (SUC (SUC d))) x)))
T c==> c~ c= cPOWER * part cloop_map f0 f1 f2 cPOWER * part cface_map f3 f1 f2 c==> c<= f1 cSUC f4 c==> c==> c<= f1 cSUC f4 c= cPOWER * part cface_map f3 f1 f2 cPOWER * part cloop_map f0 f1 f2 c= cPOWER * part cface_map f3 cSUC cSUC f4 f2 cPOWER * part cloop_map f0 cSUC cSUC f4 f2
+ (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))), (is_restricted H), ((((head_of_atom H) NF) x) = x), (L IN NF), ((in_dart_of_loop x) L), ((is_normal H) NF) |- ((!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) /\ ((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x)))
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f3 b1 f2 cPOWER * part cface_map f1 b1 f2 c= cPOWER * part cloop_map f3 cSUC cSUC b0 f2 cPOWER * part cface_map f1 cSUC cSUC b0 f2 c==> cis_restricted f1 c==> c= chead_of_atom f1 f4 f2 f2 c==> cIN f3 f4 c==> cin_dart_of_loop f2 f3 c==> cis_normal f1 f4 c/\ ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c= cPOWER * part cface_map f1 cSUC f0 f2 cPOWER * part cloop_map f3 cSUC f0 f2
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (((face_map H) x) = ((loop_map L) x)) |- (((loop_map L) x) = ((face_map H) x))
T c==> c= cface_map f0 f1 cloop_map f2 f1 c= cloop_map f2 f1 cface_map f0 f1
+ (n = (SUC d)) |- (((((POWER (face_map H)) (SUC (SUC d))) x) = (((POWER (loop_map L)) (SUC (SUC d))) x)) = ((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x)))
T c==> c= f0 cSUC f1 c= c= cPOWER * part cface_map f2 cSUC cSUC f1 f3 cPOWER * part cloop_map f4 cSUC cSUC f1 f3 c= cPOWER * part cface_map f2 cSUC f0 f3 cPOWER * part cloop_map f4 cSUC f0 f3
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- ((\P. ((~ (?x. (P x))) = (!x. (~ (P x))))) P)
T * / c= c~ c? / * b0 b1 ! c~ * b0 b1 f0
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
- (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (?i. ((i <= (SUC d)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))), (n = (SUC d)) |- ((((POWER (face_map H)) (SUC (SUC d))) x) = (((POWER (loop_map L)) (SUC (SUC d))) x))
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> c? / c/\ c<= b0 cSUC f4 c~ c= cPOWER * part cloop_map f3 b0 f2 cPOWER * part cface_map f1 b0 f2 c==> c= f0 cSUC f4 c= cPOWER * part cface_map f1 cSUC cSUC f4 f2 cPOWER * part cloop_map f3 cSUC cSUC f4 f2
- (n = (SUC d)) |- (((is_normal H) NF) = ((is_normal H) NF))
T c==> c= f0 cSUC f1 c= cis_normal f2 f3 cis_normal f2 f3
+ |- ((\t2. ((~ (t1 ==> t2)) = (t1 /\ (~ t2)))) t2)
T * / c= c~ c==> f0 b0 c/\ f0 c~ b0 f1
+ ((((head_of_atom H) NF) x) = x) |- (T = ((((((head_of_atom H) NF) x) = x) = (((loop_map L) x) = ((face_map H) x))) ==> (((loop_map L) x) = ((face_map H) x))))
T c==> c= chead_of_atom f0 f1 f2 f2 c= cT c==> c= c= chead_of_atom f0 f1 f2 f2 c= cloop_map f3 f2 cface_map f0 f2 c= cloop_map f3 f2 cface_map f0 f2
+ ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))) |- (((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))) /\ (?m. ((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x))))))
T c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c/\ c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c? / c/\ ! c==> c<= b1 cSUC b0 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
- (n = (NUMERAL _0)) |- (((((head_of_atom H) NF) x) = x) = ((((head_of_atom H) NF) x) = x))
T c==> c= f0 cNUMERAL c_0 c= c= chead_of_atom f1 f2 f3 f3 c= chead_of_atom f1 f2 f3 f3
- |- ((!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))) ==> (!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))))
T c==> ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1
+ |- ((((face_map H) x) = ((loop_map L) x)) = ((((POWER (face_map H)) (SUC (NUMERAL _0))) x) = (((POWER (loop_map L)) (SUC (NUMERAL _0))) x)))
T c= c= cface_map f0 f1 cloop_map f2 f1 c= cPOWER * part cface_map f0 cSUC cNUMERAL c_0 f1 cPOWER * part cloop_map f2 cSUC cNUMERAL c_0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (is_restricted H), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), (L IN NF), ((is_normal H) NF) |- (?m. ((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))))
T c==> cis_restricted f0 c==> c/\ cIN f1 f2 c/\ c~ cIN f1 * * part cfinal_loops f0 f2 c/\ cin_dart_of_loop f3 f1 c= chead_of_atom f0 f2 f3 f3 c==> cIN f1 f2 c==> cis_normal f0 f2 c? / c/\ ! c==> c<= b1 cSUC b0 c= cPOWER * part cloop_map f1 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f1 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
+ |- (((!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))))))) ==> ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))))))) H)) = ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))))))) H))
T c= c==> ! ! ! ! c= cis_split_condition b0 b1 b2 b3 c/\ cis_restricted b0 c/\ cis_normal b0 b1 c/\ cIN b2 b1 c/\ c~ cIN b2 * * part cfinal_loops b0 b1 c/\ cin_dart_of_loop b3 b2 c= chead_of_atom b0 b1 b3 b3 * / ! ! ! c= cis_split_condition b0 b1 b2 b3 c/\ cis_restricted b0 c/\ cis_normal b0 b1 c/\ cIN b2 b1 c/\ c~ cIN b2 * * part cfinal_loops b0 b1 c/\ cin_dart_of_loop b3 b2 c= chead_of_atom b0 b1 b3 b3 f0 * / ! ! ! c= cis_split_condition b0 b1 b2 b3 c/\ cis_restricted b0 c/\ cis_normal b0 b1 c/\ cIN b2 b1 c/\ c~ cIN b2 * * part cfinal_loops b0 b1 c/\ cin_dart_of_loop b3 b2 c= chead_of_atom b0 b1 b3 b3 f0
+ (n = (NUMERAL _0)) |- (((((POWER (face_map H)) (SUC (NUMERAL _0))) x) = (((POWER (loop_map L)) (SUC (NUMERAL _0))) x)) = ((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x)))
T c==> c= f0 cNUMERAL c_0 c= c= cPOWER * part cface_map f1 cSUC cNUMERAL c_0 f2 cPOWER * part cloop_map f3 cSUC cNUMERAL c_0 f2 c= cPOWER * part cface_map f1 cSUC f0 f2 cPOWER * part cloop_map f3 cSUC f0 f2
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2501490)) /\ ((real_le ((real_add (real_of_int _2501490)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((!n. (((NUMERAL _0) + n) = n)) ==> ((\n. (((NUMERAL _0) + n) = n)) n)) = ((\n. (((NUMERAL _0) + n) = n)) n))
T c= c==> ! c= c+ cNUMERAL c_0 b0 b0 * / c= c+ cNUMERAL c_0 b0 b0 f0 * / c= c+ cNUMERAL c_0 b0 b0 f0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))) ==> ((\x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))) x)) = ((\x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))) x))
T c= c==> ! c= cis_split_condition f0 f1 f2 b0 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop b0 f2 c= chead_of_atom f0 f1 b0 b0 * / c= cis_split_condition f0 f1 f2 b0 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop b0 f2 c= chead_of_atom f0 f1 b0 b0 f3 * / c= cis_split_condition f0 f1 f2 b0 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop b0 f2 c= chead_of_atom f0 f1 b0 b0 f3
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((NUMERAL _0) < n) = (~ (n = (NUMERAL _0)))) |- ((~ (n = (NUMERAL _0))) = ((NUMERAL _0) < n))
T c==> c= c< cNUMERAL c_0 f0 c~ c= f0 cNUMERAL c_0 c= c~ c= f0 cNUMERAL c_0 c< cNUMERAL c_0 f0
+ (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) |- ((((\d. (n = (SUC d))) d) ==> ((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x))) = T)
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f3 b1 f2 cPOWER * part cface_map f1 b1 f2 c= cPOWER * part cloop_map f3 cSUC cSUC b0 f2 cPOWER * part cface_map f1 cSUC cSUC b0 f2 c= c==> * / c= f0 cSUC b0 f4 c= cPOWER * part cface_map f1 cSUC f0 f2 cPOWER * part cloop_map f3 cSUC f0 f2 cT
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (n = (SUC d)) |- (((i <= (SUC d)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) ==> ((((POWER (face_map H)) (SUC (SUC d))) x) = (((POWER (loop_map L)) (SUC (SUC d))) x)))
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> c= f0 cSUC f4 c==> c/\ c<= f5 cSUC f4 c~ c= cPOWER * part cloop_map f3 f5 f2 cPOWER * part cface_map f1 f5 f2 c= cPOWER * part cface_map f1 cSUC cSUC f4 f2 cPOWER * part cloop_map f3 cSUC cSUC f4 f2
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))), (is_restricted H), ((((head_of_atom H) NF) x) = x), (L IN NF), ((in_dart_of_loop x) L), ((is_normal H) NF) |- ((!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) /\ (L IN ((final_loops H) NF)))
T c==> ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f0 b1 f1 cPOWER * part cface_map f2 b1 f1 c= cPOWER * part cloop_map f0 cSUC cSUC b0 f1 cPOWER * part cface_map f2 cSUC cSUC b0 f1 c==> cis_restricted f2 c==> c= chead_of_atom f2 f3 f1 f1 c==> cIN f0 f3 c==> cin_dart_of_loop f1 f0 c==> cis_normal f2 f3 c/\ ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f0 b1 f1 cPOWER * part cface_map f2 b1 f1 c= cPOWER * part cloop_map f0 cSUC cSUC b0 f1 cPOWER * part cface_map f2 cSUC cSUC b0 f1 cIN f0 * * part cfinal_loops f2 f3
+ (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))), (is_restricted H), ((((head_of_atom H) NF) x) = x), (L IN NF), ((in_dart_of_loop x) L), ((is_normal H) NF) |- ((!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x)))
T c==> ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f0 b1 f1 cPOWER * part cface_map f2 b1 f1 c= cPOWER * part cloop_map f0 cSUC cSUC b0 f1 cPOWER * part cface_map f2 cSUC cSUC b0 f1 c==> cis_restricted f2 c==> c= chead_of_atom f2 f3 f1 f1 c==> cIN f0 f3 c==> cin_dart_of_loop f1 f0 c==> cis_normal f2 f3 c==> ! c==> c< b0 cSUC f4 c= cPOWER * part cface_map f2 b0 f1 cPOWER * part cloop_map f0 b0 f1 c= cPOWER * part cface_map f2 cSUC f4 f1 cPOWER * part cloop_map f0 cSUC f4 f1
+ (i <= (SUC d)) |- (T = ((~ (i <= (SUC d))) ==> ((((POWER (face_map H)) (SUC (SUC d))) x) = (((POWER (loop_map L)) (SUC (SUC d))) x))))
T c==> c<= f0 cSUC f1 c= cT c==> c~ c<= f0 cSUC f1 c= cPOWER * part cface_map f2 cSUC cSUC f1 f3 cPOWER * part cloop_map f4 cSUC cSUC f1 f3
- (!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))), (!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) |- ((!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))) /\ (!n. (P n)))
T c==> ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 c==> ! c==> ! c==> c< b1 b0 * f0 b1 * f0 b0 c/\ ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 ! * f0 b0
+ (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (n = (SUC d)), ((i <= (SUC d)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))), (i <= (SUC d)) |- ((((POWER (face_map H)) (SUC (SUC d))) x) = (((POWER (loop_map L)) (SUC (SUC d))) x))
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> c= f0 cSUC f4 c==> c/\ c<= f5 cSUC f4 c~ c= cPOWER * part cloop_map f3 f5 f2 cPOWER * part cface_map f1 f5 f2 c==> c<= f5 cSUC f4 c= cPOWER * part cface_map f1 cSUC cSUC f4 f2 cPOWER * part cloop_map f3 cSUC cSUC f4 f2
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((!L. (!x. (((((is_split_condition H) NF) L) x) ==> (?m. ((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))))))) = T)
T c= ! ! c==> cis_split_condition f0 f1 b0 b1 c? / c/\ ! c==> c<= b3 cSUC b2 c= cPOWER * part cloop_map b0 b3 b1 cPOWER * part cface_map f0 b3 b1 c~ c= cPOWER * part cloop_map b0 cSUC cSUC b2 b1 cPOWER * part cface_map f0 cSUC cSUC b2 b1 cT
+ ((in_dart_of_loop x) L) |- (((in_dart_of_loop x) L) = T)
T c==> cin_dart_of_loop f0 f1 c= cin_dart_of_loop f0 f1 cT
+ (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))), (is_restricted H), ((((head_of_atom H) NF) x) = x), (L IN NF), ((in_dart_of_loop x) L), ((is_normal H) NF) |- (!n. ((!m. ((m < n) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))))
T c==> ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f0 b1 f1 cPOWER * part cface_map f2 b1 f1 c= cPOWER * part cloop_map f0 cSUC cSUC b0 f1 cPOWER * part cface_map f2 cSUC cSUC b0 f1 c==> cis_restricted f2 c==> c= chead_of_atom f2 f3 f1 f1 c==> cIN f0 f3 c==> cin_dart_of_loop f1 f0 c==> cis_normal f2 f3 ! c==> ! c==> c< b1 b0 c= cPOWER * part cface_map f2 b1 f1 cPOWER * part cloop_map f0 b1 f1 c= cPOWER * part cface_map f2 b0 f1 cPOWER * part cloop_map f0 b0 f1
- |- ((?d. t) = t)
T c= c? / f0 f0
+ (is_restricted H), (L IN NF), ((is_normal H) NF) |- ((?x. (((in_dart_of_loop x) L) /\ (!n. ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))))) = (L IN ((final_loops H) NF)))
T c==> cis_restricted f0 c==> cIN f1 f2 c==> cis_normal f0 f2 c= c? / c/\ cin_dart_of_loop b0 f1 ! c= cPOWER * part cface_map f0 b1 b0 cPOWER * part cloop_map f1 b1 b0 cIN f1 * * part cfinal_loops f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), ((((head_of_atom H) NF) x) = x), (L IN NF), ((in_dart_of_loop x) L), ((is_normal H) NF) |- (?m. ((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chead_of_atom f1 f2 f3 f3 c==> cIN f0 f2 c==> cin_dart_of_loop f3 f0 c==> cis_normal f1 f2 c? / c/\ ! c==> c<= b1 cSUC b0 c= cPOWER * part cloop_map f0 b1 f3 cPOWER * part cface_map f1 b1 f3 c~ c= cPOWER * part cloop_map f0 cSUC cSUC b0 f3 cPOWER * part cface_map f1 cSUC cSUC b0 f3
- (((real_ge (real_of_int _2501490)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (n = (NUMERAL _0)) |- (((!m. ((m < n) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))) = ((!m. ((m < (NUMERAL _0)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) (NUMERAL _0)) x) = (((POWER (loop_map L)) (NUMERAL _0)) x))))
T c==> c= f0 cNUMERAL c_0 c= c==> ! c==> c< b0 f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c= cPOWER * part cface_map f1 f0 f2 cPOWER * part cloop_map f3 f0 f2 c==> ! c==> c< b0 cNUMERAL c_0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c= cPOWER * part cface_map f1 cNUMERAL c_0 f2 cPOWER * part cloop_map f3 cNUMERAL c_0 f2
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)), (L IN NF), ((in_dart_of_loop x) L), ((is_normal H) NF) |- (?m. ((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f1 f2 f3 f3 c==> cIN f0 f2 c==> cin_dart_of_loop f3 f0 c==> cis_normal f1 f2 c? / c/\ ! c==> c<= b1 cSUC b0 c= cPOWER * part cloop_map f0 b1 f3 cPOWER * part cface_map f1 b1 f3 c~ c= cPOWER * part cloop_map f0 cSUC cSUC b0 f3 cPOWER * part cface_map f1 cSUC cSUC b0 f3
+ |- ((((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))) ==> (?m. ((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))))) = (((((is_split_condition H) NF) L) x) ==> (?m. ((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))))))
T c= c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c? / c/\ ! c==> c<= b1 cSUC b0 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3 c==> cis_split_condition f0 f1 f2 f3 c? / c/\ ! c==> c<= b1 cSUC b0 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
+ |- (((!t2. ((t2 ==> t1) = ((~ t1) ==> (~ t2)))) ==> ((\t2. ((t2 ==> t1) = ((~ t1) ==> (~ t2)))) t2)) = ((\t2. ((t2 ==> t1) = ((~ t1) ==> (~ t2)))) t2))
T c= c==> ! c= c==> b0 f0 c==> c~ f0 c~ b0 * / c= c==> b0 f0 c==> c~ f0 c~ b0 f1 * / c= c==> b0 f0 c==> c~ f0 c~ b0 f1
+ |- (((!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) ==> ((\t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) t2)) = ((\t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) t2))
T c= c==> ! c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 * / c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 f1 * / c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\n. (((NUMERAL _0) + n) = n)) n)
T * / c= c+ cNUMERAL c_0 b0 b0 f0
+ |- (T = ((!m. ((m < (NUMERAL _0)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) (NUMERAL _0)) x) = (((POWER (loop_map L)) (NUMERAL _0)) x))))
T c= cT c==> ! c==> c< b0 cNUMERAL c_0 c= cPOWER * part cface_map f0 b0 f1 cPOWER * part cloop_map f2 b0 f1 c= cPOWER * part cface_map f0 cNUMERAL c_0 f1 cPOWER * part cloop_map f2 cNUMERAL c_0 f1
+ (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) |- ((~ (n = (NUMERAL _0))) ==> ((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x)))
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f3 b1 f2 cPOWER * part cface_map f1 b1 f2 c= cPOWER * part cloop_map f3 cSUC cSUC b0 f2 cPOWER * part cface_map f1 cSUC cSUC b0 f2 c==> c~ c= f0 cNUMERAL c_0 c= cPOWER * part cface_map f1 cSUC f0 f2 cPOWER * part cloop_map f3 cSUC f0 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (n = (SUC d)), ((\i. ((i <= (SUC d)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) i) |- (((\i. ((i <= (SUC d)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) i) /\ ((((POWER (face_map H)) (SUC (SUC d))) x) = (((POWER (loop_map L)) (SUC (SUC d))) x)))
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> c= f0 cSUC f4 c==> * / c/\ c<= b0 cSUC f4 c~ c= cPOWER * part cloop_map f3 b0 f2 cPOWER * part cface_map f1 b0 f2 f5 c/\ * / c/\ c<= b0 cSUC f4 c~ c= cPOWER * part cloop_map f3 b0 f2 cPOWER * part cface_map f1 b0 f2 f5 c= cPOWER * part cface_map f1 cSUC cSUC f4 f2 cPOWER * part cloop_map f3 cSUC cSUC f4 f2
+ |- ((\x. ((I x) = x)) x)
T * / c= cI b0 b0 f0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2501490)) /\ ((real_le ((real_add (real_of_int _2501490)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))), (~ (n = (NUMERAL _0))) |- ((~ (n = (NUMERAL _0))) /\ ((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x)))
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f3 b1 f2 cPOWER * part cface_map f1 b1 f2 c= cPOWER * part cloop_map f3 cSUC cSUC b0 f2 cPOWER * part cface_map f1 cSUC cSUC b0 f2 c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c= cPOWER * part cface_map f1 cSUC f0 f2 cPOWER * part cloop_map f3 cSUC f0 f2
+ |- ((\x. (((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((in_dart_of_loop x) L)))) ==> (((((head_of_atom H) NF) x) = x) = (((loop_map L) x) = ((face_map H) x))))) x)
T * / c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 cin_dart_of_loop b0 f2 c= c= chead_of_atom f0 f1 b0 b0 c= cloop_map f2 b0 cface_map f0 b0 f3
- (n = (NUMERAL _0)) |- ((!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) = (!m. ((m < (SUC (NUMERAL _0))) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))))
T c==> c= f0 cNUMERAL c_0 c= ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 ! c==> c< b0 cSUC cNUMERAL c_0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2
- (!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))), (!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) |- (!n. (P n))
T c==> ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 c==> ! c==> ! c==> c< b1 b0 * f0 b1 * f0 b0 ! * f0 b0
+ (((real_ge (real_of_int _2501490)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2501490)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _2501490))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _2501490))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (is_restricted H), ((((head_of_atom H) NF) x) = x), (L IN NF), ((in_dart_of_loop x) L), ((is_normal H) NF) |- ((((POWER (face_map H)) (SUC (NUMERAL _0))) x) = (((POWER (loop_map L)) (SUC (NUMERAL _0))) x))
T c==> cis_restricted f0 c==> c= chead_of_atom f0 f1 f2 f2 c==> cIN f3 f1 c==> cin_dart_of_loop f2 f3 c==> cis_normal f0 f1 c= cPOWER * part cface_map f0 cSUC cNUMERAL c_0 f2 cPOWER * part cloop_map f3 cSUC cNUMERAL c_0 f2
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))), (is_restricted H), ((((head_of_atom H) NF) x) = x), (L IN NF), ((in_dart_of_loop x) L), ((is_normal H) NF) |- (!n. (((!m. ((m < n) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))) ==> ((!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x)))))
T c==> ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f0 b1 f1 cPOWER * part cface_map f2 b1 f1 c= cPOWER * part cloop_map f0 cSUC cSUC b0 f1 cPOWER * part cface_map f2 cSUC cSUC b0 f1 c==> cis_restricted f2 c==> c= chead_of_atom f2 f3 f1 f1 c==> cIN f0 f3 c==> cin_dart_of_loop f1 f0 c==> cis_normal f2 f3 ! c==> c==> ! c==> c< b1 b0 c= cPOWER * part cface_map f2 b1 f1 cPOWER * part cloop_map f0 b1 f1 c= cPOWER * part cface_map f2 b0 f1 cPOWER * part cloop_map f0 b0 f1 c==> ! c==> c< b1 cSUC b0 c= cPOWER * part cface_map f2 b1 f1 cPOWER * part cloop_map f0 b1 f1 c= cPOWER * part cface_map f2 cSUC b0 f1 cPOWER * part cloop_map f0 cSUC b0 f1
+ |- (((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))) ==> (?m. ((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x))))))
T c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c? / c/\ ! c==> c<= b1 cSUC b0 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
+ |- ((!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> (?m. ((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x))))))))) = T)
T c= ! ! ! c==> cis_split_condition f0 b0 b1 b2 c? / c/\ ! c==> c<= b4 cSUC b3 c= cPOWER * part cloop_map b1 b4 b2 cPOWER * part cface_map f0 b4 b2 c~ c= cPOWER * part cloop_map b1 cSUC cSUC b3 b2 cPOWER * part cface_map f0 cSUC cSUC b3 b2 cT
+ (is_restricted H), (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))), ((is_normal H) NF) |- (?m. ((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))))
T c==> cis_restricted f0 c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c==> cis_normal f0 f1 c? / c/\ ! c==> c<= b1 cSUC b0 c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f0 b1 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f0 cSUC cSUC b0 f3
+ (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (n = (SUC d)) |- ((i < (SUC (SUC d))) ==> ((((POWER (face_map H)) i) x) = (((POWER (loop_map L)) i) x)))
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> c= f0 cSUC f4 c==> c< f5 cSUC cSUC f4 c= cPOWER * part cface_map f1 f5 f2 cPOWER * part cloop_map f3 f5 f2
+ |- ((\t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2)))))) t1)
T * / ! c/\ c= c~ c/\ b0 b1 c\/ c~ b0 c~ b1 c= c~ c\/ b0 b1 c/\ c~ b0 c~ b1 f0
+ (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (n = (SUC d)) |- ((\m. ((m < (SUC (SUC d))) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) i)
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> c= f0 cSUC f4 * / c==> c< b0 cSUC cSUC f4 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 f5
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ |- ((((POWER (face_map H)) (SUC (SUC d))) x) = (((POWER (face_map H)) (SUC (SUC d))) x))
T c= cPOWER * part cface_map f0 cSUC cSUC f1 f2 cPOWER * part cface_map f0 cSUC cSUC f1 f2
+ |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((((!m. ((m < (NUMERAL _0)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) (NUMERAL _0)) x) = (((POWER (loop_map L)) (NUMERAL _0)) x))) /\ (!n. (((!m. ((m < n) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))) ==> ((!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x)))))) ==> (!n. ((!m. ((m < n) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x)))))
T c==> c/\ c==> ! c==> c< b0 cNUMERAL c_0 c= cPOWER * part cface_map f0 b0 f1 cPOWER * part cloop_map f2 b0 f1 c= cPOWER * part cface_map f0 cNUMERAL c_0 f1 cPOWER * part cloop_map f2 cNUMERAL c_0 f1 ! c==> c==> ! c==> c< b1 b0 c= cPOWER * part cface_map f0 b1 f1 cPOWER * part cloop_map f2 b1 f1 c= cPOWER * part cface_map f0 b0 f1 cPOWER * part cloop_map f2 b0 f1 c==> ! c==> c< b1 cSUC b0 c= cPOWER * part cface_map f0 b1 f1 cPOWER * part cloop_map f2 b1 f1 c= cPOWER * part cface_map f0 cSUC b0 f1 cPOWER * part cloop_map f2 cSUC b0 f1 ! c==> ! c==> c< b1 b0 c= cPOWER * part cface_map f0 b1 f1 cPOWER * part cloop_map f2 b1 f1 c= cPOWER * part cface_map f0 b0 f1 cPOWER * part cloop_map f2 b0 f1
+ |- (((!x. (((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((in_dart_of_loop x) L)))) ==> (((((head_of_atom H) NF) x) = x) = (((loop_map L) x) = ((face_map H) x))))) ==> ((\x. (((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((in_dart_of_loop x) L)))) ==> (((((head_of_atom H) NF) x) = x) = (((loop_map L) x) = ((face_map H) x))))) x)) = ((\x. (((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((in_dart_of_loop x) L)))) ==> (((((head_of_atom H) NF) x) = x) = (((loop_map L) x) = ((face_map H) x))))) x))
T c= c==> ! c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 cin_dart_of_loop b0 f2 c= c= chead_of_atom f0 f1 b0 b0 c= cloop_map f2 b0 cface_map f0 b0 * / c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 cin_dart_of_loop b0 f2 c= c= chead_of_atom f0 f1 b0 b0 c= cloop_map f2 b0 cface_map f0 b0 f3 * / c==> c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 cin_dart_of_loop b0 f2 c= c= chead_of_atom f0 f1 b0 b0 c= cloop_map f2 b0 cface_map f0 b0 f3
+ (n = (NUMERAL _0)) |- (((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x)) = ((((POWER (face_map H)) (SUC (NUMERAL _0))) x) = (((POWER (loop_map L)) (SUC (NUMERAL _0))) x)))
T c==> c= f0 cNUMERAL c_0 c= c= cPOWER * part cface_map f1 cSUC f0 f2 cPOWER * part cloop_map f3 cSUC f0 f2 c= cPOWER * part cface_map f1 cSUC cNUMERAL c_0 f2 cPOWER * part cloop_map f3 cSUC cNUMERAL c_0 f2
+ ((in_dart_of_loop x) L) |- ((!n. ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))) = (((in_dart_of_loop x) L) /\ (!n. ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x)))))
T c==> cin_dart_of_loop f0 f1 c= ! c= cPOWER * part cface_map f2 b0 f0 cPOWER * part cloop_map f1 b0 f0 c/\ cin_dart_of_loop f0 f1 ! c= cPOWER * part cface_map f2 b0 f0 cPOWER * part cloop_map f1 b0 f0
+ |- (((!t1. (!t2. ((t2 ==> t1) = ((~ t1) ==> (~ t2))))) ==> ((\t1. (!t2. ((t2 ==> t1) = ((~ t1) ==> (~ t2))))) t1)) = ((\t1. (!t2. ((t2 ==> t1) = ((~ t1) ==> (~ t2))))) t1))
T c= c==> ! ! c= c==> b1 b0 c==> c~ b0 c~ b1 * / ! c= c==> b1 b0 c==> c~ b0 c~ b1 f0 * / ! c= c==> b1 b0 c==> c~ b0 c~ b1 f0
+ ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0))) |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c==> c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))), (is_restricted H), ((((head_of_atom H) NF) x) = x), (L IN NF), ((in_dart_of_loop x) L), ((is_normal H) NF) |- (((!m. ((m < (NUMERAL _0)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) (NUMERAL _0)) x) = (((POWER (loop_map L)) (NUMERAL _0)) x))) /\ (!n. (((!m. ((m < n) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))) ==> ((!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x))))))
T c==> ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f0 b1 f1 cPOWER * part cface_map f2 b1 f1 c= cPOWER * part cloop_map f0 cSUC cSUC b0 f1 cPOWER * part cface_map f2 cSUC cSUC b0 f1 c==> cis_restricted f2 c==> c= chead_of_atom f2 f3 f1 f1 c==> cIN f0 f3 c==> cin_dart_of_loop f1 f0 c==> cis_normal f2 f3 c/\ c==> ! c==> c< b0 cNUMERAL c_0 c= cPOWER * part cface_map f2 b0 f1 cPOWER * part cloop_map f0 b0 f1 c= cPOWER * part cface_map f2 cNUMERAL c_0 f1 cPOWER * part cloop_map f0 cNUMERAL c_0 f1 ! c==> c==> ! c==> c< b1 b0 c= cPOWER * part cface_map f2 b1 f1 cPOWER * part cloop_map f0 b1 f1 c= cPOWER * part cface_map f2 b0 f1 cPOWER * part cloop_map f0 b0 f1 c==> ! c==> c< b1 cSUC b0 c= cPOWER * part cface_map f2 b1 f1 cPOWER * part cloop_map f0 b1 f1 c= cPOWER * part cface_map f2 cSUC b0 f1 cPOWER * part cloop_map f0 cSUC b0 f1
+ (is_restricted H), ((((head_of_atom H) NF) x) = x), (L IN NF), ((in_dart_of_loop x) L), ((is_normal H) NF) |- ((~ (L IN ((final_loops H) NF))) ==> (?m. ((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x))))))
T c==> cis_restricted f0 c==> c= chead_of_atom f0 f1 f2 f2 c==> cIN f3 f1 c==> cin_dart_of_loop f2 f3 c==> cis_normal f0 f1 c==> c~ cIN f3 * * part cfinal_loops f0 f1 c? / c/\ ! c==> c<= b1 cSUC b0 c= cPOWER * part cloop_map f3 b1 f2 cPOWER * part cface_map f0 b1 f2 c~ c= cPOWER * part cloop_map f3 cSUC cSUC b0 f2 cPOWER * part cface_map f0 cSUC cSUC b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!f. (((POWER f) (NUMERAL (BIT1 _0))) = f)) ==> ((\f. (((POWER f) (NUMERAL (BIT1 _0))) = f)) f)) = ((\f. (((POWER f) (NUMERAL (BIT1 _0))) = f)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL cBIT1 c_0 b0 * / c= * * part cPOWER b0 cNUMERAL cBIT1 c_0 b0 f0 * / c= * * part cPOWER b0 cNUMERAL cBIT1 c_0 b0 f0
- |- (((!n. (((SUC m) + n) = (SUC (m + n)))) ==> ((\n. (((SUC m) + n) = (SUC (m + n)))) n)) = ((\n. (((SUC m) + n) = (SUC (m + n)))) n))
T c= c==> ! c= c+ cSUC f0 b0 cSUC c+ f0 b0 * / c= c+ cSUC f0 b0 cSUC c+ f0 b0 f1 * / c= c+ cSUC f0 b0 cSUC c+ f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (n = (NUMERAL _0)) |- (!m. ((m < (SUC (NUMERAL _0))) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x))))
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> c= f0 cNUMERAL c_0 ! c==> c< b0 cSUC cNUMERAL c_0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2
- (!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) |- ((!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))) ==> (!n. (P n)))
T c==> ! c==> ! c==> c< b1 b0 * f0 b1 * f0 b0 c==> ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 ! * f0 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (n = (SUC d)), ((!m. ((m < n) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))) |- ((!m. ((m < (SUC d)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) (SUC d)) x) = (((POWER (loop_map L)) (SUC d)) x)))
T c==> c= f0 cSUC f1 c==> c==> ! c==> c< b0 f0 c= cPOWER * part cface_map f2 b0 f3 cPOWER * part cloop_map f4 b0 f3 c= cPOWER * part cface_map f2 f0 f3 cPOWER * part cloop_map f4 f0 f3 c==> ! c==> c< b0 cSUC f1 c= cPOWER * part cface_map f2 b0 f3 cPOWER * part cloop_map f4 b0 f3 c= cPOWER * part cface_map f2 cSUC f1 f3 cPOWER * part cloop_map f4 cSUC f1 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge (real_of_int _2501490)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2501490)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) ==> ((\m. (!n. (((SUC m) + n) = (SUC (m + n))))) m)) = ((\m. (!n. (((SUC m) + n) = (SUC (m + n))))) m))
T c= c==> ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 * / ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 f0 * / ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 f0
- (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))) |- (((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)) = F)
T c==> c~ c= cPOWER * part cloop_map f0 f1 f2 cPOWER * part cface_map f3 f1 f2 c= c= cPOWER * part cloop_map f0 f1 f2 cPOWER * part cface_map f3 f1 f2 cF
- (n = (NUMERAL _0)), ((!m. ((m < n) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) n) x) = (((POWER (loop_map L)) n) x))) |- ((!m. ((m < (NUMERAL _0)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))) ==> ((((POWER (face_map H)) (NUMERAL _0)) x) = (((POWER (loop_map L)) (NUMERAL _0)) x)))
T c==> c= f0 cNUMERAL c_0 c==> c==> ! c==> c< b0 f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c= cPOWER * part cface_map f1 f0 f2 cPOWER * part cloop_map f3 f0 f2 c==> ! c==> c< b0 cNUMERAL c_0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c= cPOWER * part cface_map f1 cNUMERAL c_0 f2 cPOWER * part cloop_map f3 cNUMERAL c_0 f2
- |- ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
- (((real_ge (real_of_int _2501490)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2501490)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2501490))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2501490))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (n = (NUMERAL _0)) |- (((is_normal H) NF) = ((is_normal H) NF))
T c==> c= f0 cNUMERAL c_0 c= cis_normal f1 f2 cis_normal f1 f2
- (n = (NUMERAL _0)) |- ((is_restricted H) = (is_restricted H))
T c==> c= f0 cNUMERAL c_0 c= cis_restricted f1 cis_restricted f1
- (n = (SUC d)) |- (((((head_of_atom H) NF) x) = x) = ((((head_of_atom H) NF) x) = x))
T c==> c= f0 cSUC f1 c= c= chead_of_atom f2 f3 f4 f4 c= chead_of_atom f2 f3 f4 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))) |- ((\P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))) P)
T c==> ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 * / c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (((real_ge (real_of_int _2501490)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (n = (NUMERAL _0)) |- ((!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) = (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))))
T c==> c= f0 cNUMERAL c_0 c= ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f1 b1 f2 cPOWER * part cface_map f3 b1 f2 c= cPOWER * part cloop_map f1 cSUC cSUC b0 f2 cPOWER * part cface_map f3 cSUC cSUC b0 f2 ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f1 b1 f2 cPOWER * part cface_map f3 b1 f2 c= cPOWER * part cloop_map f1 cSUC cSUC b0 f2 cPOWER * part cface_map f3 cSUC cSUC b0 f2
- (!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))), (!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) |- ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) /\ (!n. (P n)))
T c==> ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 c==> ! c==> ! c==> c< b1 b0 * f0 b1 * f0 b0 c/\ ! c==> ! c==> c< b1 b0 * f0 b1 * f0 b0 ! * f0 b0
- (((real_ge (real_of_int _2501490)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2501490))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((SUC m) + n) = (SUC (m + n)))) n)
T * / c= c+ cSUC f0 b0 cSUC c+ f0 b0 f1
- (n = (NUMERAL _0)) |- ((L IN NF) = (L IN NF))
T c==> c= f0 cNUMERAL c_0 c= cIN f1 f2 cIN f1 f2
- (((real_ge (real_of_int _2501490)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))) |- (((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n))) = T)
T c==> ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 c= c==> ! c==> ! c==> c< b1 b0 * f0 b1 * f0 b0 ! * f0 b0 cT
- (n = (SUC d)) |- ((L IN NF) = (L IN NF))
T c==> c= f0 cSUC f1 c= cIN f2 f3 cIN f2 f3
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\m. (!n. (((SUC m) + n) = (SUC (m + n))))) m)
T * / ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 f0
- (n = (SUC d)) |- ((!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))) = (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))))
T c==> c= f0 cSUC f1 c= ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f4 b1 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f4 cSUC cSUC b0 f3 ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f2 b1 f3 cPOWER * part cface_map f4 b1 f3 c= cPOWER * part cloop_map f2 cSUC cSUC b0 f3 cPOWER * part cface_map f4 cSUC cSUC b0 f3
- (n = (SUC d)) |- (((in_dart_of_loop x) L) = ((in_dart_of_loop x) L))
T c==> c= f0 cSUC f1 c= cin_dart_of_loop f2 f3 cin_dart_of_loop f2 f3
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _2501490)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501490))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2501490)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (!m. ((?i. ((i <= (SUC m)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) \/ ((((POWER (loop_map L)) (SUC (SUC m))) x) = (((POWER (face_map H)) (SUC (SUC m))) x)))), (?d. (n = (SUC d))) |- ((?d. (n = (SUC d))) /\ ((((POWER (face_map H)) (SUC n)) x) = (((POWER (loop_map L)) (SUC n)) x)))
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> ! c\/ c? / c/\ c<= b1 cSUC b0 c~ c= cPOWER * part cloop_map f3 b1 f2 cPOWER * part cface_map f1 b1 f2 c= cPOWER * part cloop_map f3 cSUC cSUC b0 f2 cPOWER * part cface_map f1 cSUC cSUC b0 f2 c==> c? / c= f0 cSUC b0 c/\ c? / c= f0 cSUC b0 c= cPOWER * part cface_map f1 cSUC f0 f2 cPOWER * part cloop_map f3 cSUC f0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))) ==> (!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n))))) = (!P. ((!n. ((!m. ((m < n) ==> (P m))) ==> (P n))) ==> (!n. (P n)))))
T c= c==> ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1 ! c==> ! c==> ! c==> c< b2 b1 * b0 b2 * b0 b1 ! * b0 b1
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (!m. ((m < (SUC n)) ==> ((((POWER (face_map H)) m) x) = (((POWER (loop_map L)) m) x)))), (?i. ((i <= (SUC d)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))), (n = (SUC d)) |- ((?i. ((i <= (SUC d)) /\ (~ ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x))))) /\ ((((POWER (face_map H)) (SUC (SUC d))) x) = (((POWER (loop_map L)) (SUC (SUC d))) x)))
T c==> ! c==> c< b0 cSUC f0 c= cPOWER * part cface_map f1 b0 f2 cPOWER * part cloop_map f3 b0 f2 c==> c? / c/\ c<= b0 cSUC f4 c~ c= cPOWER * part cloop_map f3 b0 f2 cPOWER * part cface_map f1 b0 f2 c==> c= f0 cSUC f4 c/\ c? / c/\ c<= b0 cSUC f4 c~ c= cPOWER * part cloop_map f3 b0 f2 cPOWER * part cface_map f1 b0 f2 c= cPOWER * part cface_map f1 cSUC cSUC f4 f2 cPOWER * part cloop_map f3 cSUC cSUC f4 f2
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (n = (NUMERAL _0)) |- (((in_dart_of_loop x) L) = ((in_dart_of_loop x) L))
T c==> c= f0 cNUMERAL c_0 c= cin_dart_of_loop f1 f2 cin_dart_of_loop f1 f2
- (n = (SUC d)) |- ((is_restricted H) = (is_restricted H))
T c==> c= f0 cSUC f1 c= cis_restricted f2 cis_restricted f2
