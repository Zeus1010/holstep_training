N Hijqaha.SCS_4M8_prime_BASIC
C |- (scs_basic_v39 scs_4M8_prime)
T cscs_basic_v39 cscs_4M8_prime
D TRUTH
A |- T
T cT
D Appendix.scs_a_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))))
T c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f2
D Appendix.scs_am_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))))))))
T c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f3
D Appendix.scs_bm_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))))))))
T c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f4
D Appendix.scs_b_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))))
T c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f5
D Appendix.scs_J_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))))))
T c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f6
D Appendix.scs_lo_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))))))
T c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f7
D Appendix.scs_hi_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))))))))
T c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f8
D Appendix.scs_str_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))))))))
T c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f9
D Appendix.unadorned_v39
A |- (!s. ((unadorned_v39 s) = (((scs_lo_v39 s) = EMPTY) /\ (((scs_hi_v39 s) = EMPTY) /\ (((scs_str_v39 s) = EMPTY) /\ (((scs_a_v39 s) = (scs_am_v39 s)) /\ ((scs_b_v39 s) = (scs_bm_v39 s))))))))
T c= cunadorned_v39 f0 c/\ c= * part cscs_lo_v39 f0 part cEMPTY c/\ c= * part cscs_hi_v39 f0 part cEMPTY c/\ c= * part cscs_str_v39 f0 part cEMPTY c/\ c= * part cscs_a_v39 f0 * part cscs_am_v39 f0 c= * part cscs_b_v39 f0 * part cscs_bm_v39 f0
D Appendix.mk_unadorned_v39
A |- (!k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))))
T c= cmk_unadorned_v39 f0 f1 f2 f3 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, f3 c, f3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY
D Appendix.scs_basic
A |- (!s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F))))))
T c= cscs_basic_v39 f0 c/\ cunadorned_v39 f0 ! ! c= cscs_J_v39 f0 b0 b1 cF
D Hijqaha.scs_4M8_prime
A |- (scs_4M8_prime = ((((mk_unadorned_v39 (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((funlist_v39 ((CONS (((NUMERAL _0) , (NUMERAL (BIT1 _0))) , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))) ((CONS (((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0)))) , cstab)) ((CONS (((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0)))) , cstab)) ((CONS (((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0)))) , cstab)) NIL))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (((funlist_v39 ((CONS (((NUMERAL _0) , (NUMERAL (BIT1 _0))) , cstab)) ((CONS (((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0)))) , cstab)) ((CONS (((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0)))) , (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ((CONS (((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0)))) , (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ((CONS (((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0)))) , (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) NIL)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))
T c= cscs_4M8_prime cmk_unadorned_v39 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part cfunlist_v39 cCONS c, c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 ccstab cCONS c, c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 ccstab cCONS c, c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 ccstab cNIL creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * * * part cfunlist_v39 cCONS c, c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccstab cCONS c, c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 ccstab cCONS c, c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS c, c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS c, c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNIL creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)
T c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f0
- |- ((\mkj. (!q. (!p. (!s. ((((((scs_half_slice_v39 s) p) q) d') mkj) = ((LET (\p'. (LET_END ((LET (\k'. (LET_END ((LET (\mod2. (LET_END ((LET (\mod2b. (LET_END ((LET (\a1. (LET_END ((LET (\b1. (LET_END ((LET (\J. (LET_END (scs_v39 (k' , (d' , (a1 , (a1 , (b1 , (b1 , (J , (EMPTY , (EMPTY , EMPTY))))))))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) mkj) (((mod2b (scs_J_v39 s)) i'') j'')))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (((scs_bm_v39 s) p) q)) (((mod2 (scs_b_v39 s)) i'') j'')))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (((scs_am_v39 s) p) q)) (((mod2 (scs_a_v39 s)) i'') j'')))))))) (\f. (\j. (\j'. ((f ((j MOD k') + p')) ((j' MOD k') + p'))))))))) (\f. (\j. (\j'. ((f ((j MOD k') + p')) ((j' MOD k') + p'))))))))) ((q + ((NUMERAL (BIT1 _0)) + ((scs_k_v39 s) - p'))) MOD (scs_k_v39 s)))))) (p MOD (scs_k_v39 s)))))))) mkj)
T * / ! ! ! c= cscs_half_slice_v39 b3 b2 b1 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, b5 c, f0 c, b8 c, b8 c, b9 c, b9 c, b10 c, part cEMPTY c, part cEMPTY part cEMPTY / / cCOND c= * * part cINSERT cMOD b10 b5 * * part cINSERT cMOD b11 b5 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b5 cNUMERAL cBIT1 c_0 part cEMPTY b0 * * * b7 * part cscs_J_v39 b3 b10 b11 / / cCOND c= * * part cINSERT cMOD b9 b5 * * part cINSERT cMOD b10 b5 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b5 cNUMERAL cBIT1 c_0 part cEMPTY cscs_bm_v39 b3 b2 b1 * * * b6 * part cscs_b_v39 b3 b9 b10 / / cCOND c= * * part cINSERT cMOD b8 b5 * * part cINSERT cMOD b9 b5 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b5 cNUMERAL cBIT1 c_0 part cEMPTY cscs_am_v39 b3 b2 b1 * * * b6 * part cscs_a_v39 b3 b8 b9 / / / * * b7 c+ cMOD b8 b5 b4 c+ cMOD b9 b5 b4 / / / * * b6 c+ cMOD b7 b5 b4 c+ cMOD b8 b5 b4 cMOD c+ b1 c+ cNUMERAL cBIT1 c_0 c- cscs_k_v39 b3 b4 cscs_k_v39 b3 cMOD b2 cscs_k_v39 b3 f1
- |- (((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))) alpha)
T * / ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b0 f5
- |- (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0)))
T c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cF
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- (((!s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) ==> ((\s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) s)) = ((\s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) s))
T c= c==> ! c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF * / c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF f0 * / c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF f0
- |- ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))))))))))))
T c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha)
T * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 * / ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 f1
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
- |- (~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((!a. (!b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d))))))) /\ ((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) /\ ((!a. (!d. (!h. (!t. ((((ASSOCD_v39 a) ((CONS h) t)) d) = (((COND (a = (FST h))) (SND h)) (((ASSOCD_v39 a) t) d))))))) /\ ((!k. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)) /\ ((!p. (!d. ((((ASSOCD_v39 p) NIL) d) = d))) /\ (!k. (!i. (!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))))))))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ ! ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 c/\ ! ! ! ! c= cASSOCD_v39 b0 cCONS b2 b3 b1 cCOND c= b0 cFST b2 cSND b2 cASSOCD_v39 b0 b3 b1 c/\ ! c= cMAP * part cGABS / ! ! cGEQ * b1 c, b2 b3 c, cpsort b0 b2 b3 cNIL cNIL c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 ! ! ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 cCONS c, c, b1 b2 b3 b4 cCONS c, cpsort b0 c, b1 b2 b3 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 b4
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))))))))))))))))))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- ((NUMERAL _0) = (NUMERAL (BIT1 _0))) |- ((NUMERAL (BIT1 _0)) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- ((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) |- ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0
+ |- (((!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) ==> ((\lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) lo)) = ((\lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) lo))
T c= c==> ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 * / ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 f8 * / ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 f8
- |- (((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))
T c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (~ ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))))
T c~ c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
- |- (~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- ((\beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))) beta)
T * / ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b2 f6
- |- ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0))))))))))))
T c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
- |- (((!x. (x = x)) ==> ((\x. (x = x)) x)) = ((\x. (x = x)) x))
T c= c==> ! c= b0 b0 * / c= b0 b0 f0 * / c= b0 b0 f0
- |- (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((\u'. (!k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u'))))))) u')
T * / ! ! ! c= cfunlistA_v39 f0 f1 b0 b1 b2 b3 cCOND c= cMOD b2 b1 cMOD b3 b1 f1 cASSOCD_v39 cpsort b1 c, b2 b3 cMAP * part cGABS / ! ! cGEQ * b4 c, b5 b6 c, cpsort b1 b5 b6 f0 b0 f2
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))
T c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- (((!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) ==> ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str)) = ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str))
T c= c==> ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9 * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9
- |- (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
- |- ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) ==> ((\lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) lo)) = ((\lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) lo))
T c= c==> ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 * / ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 f8 * / ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 f8
- |- (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
- |- (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0))))))))
T c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b4 f2
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))))))))))))))
T c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) /\ ((!a. (!d. (!h. (!t. ((((ASSOCD_v39 a) ((CONS h) t)) d) = (((COND (a = (FST h))) (SND h)) (((ASSOCD_v39 a) t) d))))))) /\ ((!k. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)) /\ ((!p. (!d. ((((ASSOCD_v39 p) NIL) d) = d))) /\ (!k. (!i. (!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))))))))))
T c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 c/\ ! ! ! ! c= cASSOCD_v39 b0 cCONS b2 b3 b1 cCOND c= b0 cFST b2 cSND b2 cASSOCD_v39 b0 b3 b1 c/\ ! c= cMAP * part cGABS / ! ! cGEQ * b1 c, b2 b3 c, cpsort b0 b2 b3 cNIL cNIL c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 ! ! ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 cCONS c, c, b1 b2 b3 b4 cCONS c, cpsort b0 c, b1 b2 b3 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 b4
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))) alpha)
T * / ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b3 f5
- |- ((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = F)) = (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- (((!i. (!j. ((((((funlist_v39 data) d) k) i) j) = (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) d))))) ==> ((\i. (!j. ((((((funlist_v39 data) d) k) i) j) = (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) d))))) i)) = ((\i. (!j. ((((((funlist_v39 data) d) k) i) j) = (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) d))))) i))
T c= c==> ! ! c= cfunlist_v39 f0 f1 f2 b0 b1 cCOND c= cMOD b0 f2 cMOD b1 f2 creal_of_num cNUMERAL c_0 cASSOCD_v39 cpsort f2 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f2 b3 b4 f0 f1 * / ! c= cfunlist_v39 f0 f1 f2 b0 b1 cCOND c= cMOD b0 f2 cMOD b1 f2 creal_of_num cNUMERAL c_0 cASSOCD_v39 cpsort f2 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f2 b3 b4 f0 f1 f3 * / ! c= cfunlist_v39 f0 f1 f2 b0 b1 cCOND c= cMOD b0 f2 cMOD b1 f2 creal_of_num cNUMERAL c_0 cASSOCD_v39 cpsort f2 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f2 b3 b4 f0 f1 f3
- |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((\k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u')))))) k)
T * / ! ! c= cfunlistA_v39 f0 f1 f2 b0 b1 b2 cCOND c= cMOD b1 b0 cMOD b2 b0 f1 cASSOCD_v39 cpsort b0 c, b1 b2 cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort b0 b4 b5 f0 f2 f3
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = T)
T c= c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ (((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT1 _0)) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((a + (NUMERAL _0)) = a)
T c= c+ f0 cNUMERAL c_0 f0
+ |- ((\J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))) J)
T * / ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f4 f7
- |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) ==> (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) = F)) = (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) = F))
T c= c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2 * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) = F)
T c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cF
- |- ((\str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)) str)
T * / c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f0 f9
- |- ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((!a. (!b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d))))))) /\ ((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) /\ ((!a. (!d. (!h. (!t. ((((ASSOCD_v39 a) ((CONS h) t)) d) = (((COND (a = (FST h))) (SND h)) (((ASSOCD_v39 a) t) d))))))) /\ ((!k. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)) /\ ((!p. (!d. ((((ASSOCD_v39 p) NIL) d) = d))) /\ (!k. (!i. (!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ ! ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 c/\ ! ! ! ! c= cASSOCD_v39 b0 cCONS b2 b3 b1 cCOND c= b0 cFST b2 cSND b2 cASSOCD_v39 b0 b3 b1 c/\ ! c= cMAP * part cGABS / ! ! cGEQ * b1 c, b2 b3 c, cpsort b0 b2 b3 cNIL cNIL c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 ! ! ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 cCONS c, c, b1 b2 b3 b4 cCONS c, cpsort b0 c, b1 b2 b3 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 b4
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))))))))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT1 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ (((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT1 _0)) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((!b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d)))))) ==> ((\b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d)))))) b)) = ((\b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d)))))) b))
T c= c==> ! ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1
- |- ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))))))))
T c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) ==> ((\a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) a)) = ((\a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) a))
T c= c==> ! ! c= cASSOCD_v39 b0 cNIL b1 b1 * / ! c= cASSOCD_v39 b0 cNIL b1 b1 f0 * / ! c= cASSOCD_v39 b0 cNIL b1 b1 f0
- |- (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))))))))))))))))))))))))))))))))))))
T c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c==> c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((!k. (!f. (((periodic2 f) k) = (!i. (!j. ((((f (i + k)) j) = ((f i) j)) /\ (((f i) (j + k)) = ((f i) j)))))))) ==> ((\k. (!f. (((periodic2 f) k) = (!i. (!j. ((((f (i + k)) j) = ((f i) j)) /\ (((f i) (j + k)) = ((f i) j)))))))) k)) = ((\k. (!f. (((periodic2 f) k) = (!i. (!j. ((((f (i + k)) j) = ((f i) j)) /\ (((f i) (j + k)) = ((f i) j)))))))) k))
T c= c==> ! ! c= cperiodic2 b1 b0 ! ! c/\ c= * * b1 c+ b2 b0 b3 * * b1 b2 b3 c= * * b1 b2 c+ b3 b0 * * b1 b2 b3 * / ! c= cperiodic2 b1 b0 ! ! c/\ c= * * b1 c+ b2 b0 b3 * * b1 b2 b3 c= * * b1 b2 c+ b3 b0 * * b1 b2 b3 f0 * / ! c= cperiodic2 b1 b0 ! ! c/\ c= * * b1 c+ b2 b0 b3 * * b1 b2 b3 c= * * b1 b2 c+ b3 b0 * * b1 b2 b3 f0
+ |- ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J)
T * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL _0)))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL c_0
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2
- ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c==> c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = T)
T c= c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
- |- ((\k. (!i. (!j. ((((((funlist_v39 data) d) k) i) j) = (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) d)))))) k)
T * / ! ! c= cfunlist_v39 f0 f1 b0 b1 b2 cCOND c= cMOD b1 b0 cMOD b2 b0 creal_of_num cNUMERAL c_0 cASSOCD_v39 cpsort b0 c, b1 b2 cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort b0 b4 b5 f0 f1 f2
- |- ((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))
T c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((~ ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) ==> (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0)) = F)) = (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0)) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 cF c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 cF
+ |- (((!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))) ==> ((\J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))) J)) = ((\J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))) J))
T c= c==> ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b0 * / ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b0 f7 * / ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b0 f7
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b4 * / ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b4 f3 * / ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b4 f3
- |- (((scs_prop_equ_v39 s) i) = ((LET (\shift1. (LET_END ((LET (\shift2. (LET_END ((LET (\shift2b. (LET_END (scs_v39 ((scs_k_v39 s) , ((scs_d_v39 s) , ((shift2 (scs_a_v39 s)) , ((shift2 (scs_am_v39 s)) , ((shift2 (scs_bm_v39 s)) , ((shift2 (scs_b_v39 s)) , ((shift2b (scs_J_v39 s)) , ((shift1 (scs_lo_v39 s)) , ((shift1 (scs_hi_v39 s)) , (shift1 (scs_str_v39 s))))))))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (f (i + j))))))
T c= cscs_prop_equ_v39 f0 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * b1 * part cscs_a_v39 f0 c, * b1 * part cscs_am_v39 f0 c, * b1 * part cscs_bm_v39 f0 c, * b1 * part cscs_b_v39 f0 c, * b2 * part cscs_J_v39 f0 c, * b0 * part cscs_lo_v39 f0 c, * b0 * part cscs_hi_v39 f0 * b0 * part cscs_str_v39 f0 / / / * * b2 c+ f1 b3 c+ f1 b4 / / / * * b1 c+ f1 b2 c+ f1 b3 / / * b0 c+ f1 b1
+ |- (((!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))) ==> ((\J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))) J)) = ((\J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))) J))
T c= c==> ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f6 * / ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f6 f7 * / ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f6 f7
- |- (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))))
T c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b6 * / ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b6 f2 * / ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b6 f2
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))))) b)
T * / ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f3 f4
- |- (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))))))))
T c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
+ |- ((\J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))) J)
T * / ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b2 f7
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b)
T * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4
- |- (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ ((SUC (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))
T c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c= cSUC cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 c_0
- |- ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((!a. (!b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d))))))) /\ ((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) /\ ((!a. (!d. (!h. (!t. ((((ASSOCD_v39 a) ((CONS h) t)) d) = (((COND (a = (FST h))) (SND h)) (((ASSOCD_v39 a) t) d))))))) /\ ((!k. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)) /\ ((!p. (!d. ((((ASSOCD_v39 p) NIL) d) = d))) /\ (!k. (!i. (!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))))))))))))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ ! ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 c/\ ! ! ! ! c= cASSOCD_v39 b0 cCONS b2 b3 b1 cCOND c= b0 cFST b2 cSND b2 cASSOCD_v39 b0 b3 b1 c/\ ! c= cMAP * part cGABS / ! ! cGEQ * b1 c, b2 b3 c, cpsort b0 b2 b3 cNIL cNIL c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 ! ! ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 cCONS c, c, b1 b2 b3 b4 cCONS c, cpsort b0 c, b1 b2 b3 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 b4
- |- (((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- (((!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))) ==> ((\J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))) J)) = ((\J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))) J))
T c= c==> ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b1 * / ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b1 f7 * / ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b1 f7
+ |- (((!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))) beta))
T c= c==> ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b1 * / ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b1 f6 * / ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b1 f6
+ |- (((!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))) ==> ((\J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))) J)) = ((\J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))) J))
T c= c==> ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b2 * / ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b2 f7 * / ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b2 f7
- |- ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))))))))))))))))))))))))))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))) b)
T * / ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b3 f4
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)))))
T c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))))))))))))))))
T c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- (((!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) ==> ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J)) = ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J))
T c= c==> ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7 * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7
- |- (((!n. ((d_tame n) = (((COND (n = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL _0))) (((COND (n = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((COND (n = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))))) (((COND (n = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) tgt)))))) ==> ((\n. ((d_tame n) = (((COND (n = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL _0))) (((COND (n = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((COND (n = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))))) (((COND (n = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) tgt)))))) n)) = ((\n. ((d_tame n) = (((COND (n = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL _0))) (((COND (n = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((COND (n = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))))) (((COND (n = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) tgt)))))) n))
T c= c==> ! c= cd_tame b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 ctgt * / c= cd_tame b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 ctgt f0 * / c= cd_tame b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 ctgt f0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((\s. ((unadorned_v39 s) = (((scs_lo_v39 s) = EMPTY) /\ (((scs_hi_v39 s) = EMPTY) /\ (((scs_str_v39 s) = EMPTY) /\ (((scs_a_v39 s) = (scs_am_v39 s)) /\ ((scs_b_v39 s) = (scs_bm_v39 s)))))))) s)
T * / c= cunadorned_v39 b0 c/\ c= * part cscs_lo_v39 b0 part cEMPTY c/\ c= * part cscs_hi_v39 b0 part cEMPTY c/\ c= * part cscs_str_v39 b0 part cEMPTY c/\ c= * part cscs_a_v39 b0 * part cscs_am_v39 b0 c= * part cscs_b_v39 b0 * part cscs_bm_v39 b0 f0
- |- (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
- |- (~ ((NUMERAL _0) = (NUMERAL (BIT1 _0))))
T c~ c= cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
+ |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b1 * / ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b1 f5 * / ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b1 f5
- |- (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b6 f2
- |- (((!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) ==> ((\str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) str)) = ((\str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) str))
T c= c==> ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 * / c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 f9 * / c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 f9
- |- (((!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t)))))) ==> ((\j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t)))))) j)) = ((\j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t)))))) j))
T c= c==> ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort f0 b4 b5 cCONS c, c, f1 b0 b1 b2 cCONS c, cpsort f0 c, f1 b0 b1 cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort f0 b4 b5 b2 * / ! ! c= cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort f0 b4 b5 cCONS c, c, f1 b0 b1 b2 cCONS c, cpsort f0 c, f1 b0 b1 cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort f0 b4 b5 b2 f2 * / ! ! c= cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort f0 b4 b5 cCONS c, c, f1 b0 b1 b2 cCONS c, cpsort f0 c, f1 b0 b1 cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort f0 b4 b5 b2 f2
- |- ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))))))))))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- (((!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))) ==> ((\lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))) lo)) = ((\lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))) lo))
T c= c==> ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f7 * / ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f7 f8 * / ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f7 f8
+ |- (((!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta))
T c= c==> ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6 * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6
- |- ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)))))))))))))
T c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
+ |- ((\J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))) J)
T * / ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f6 f7
- |- (((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 _0)))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- (~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))))
T c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ (((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT1 _0)) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))))))))
T c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((~ ((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 _0))))) ==> (((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 _0)))) = F)) = (((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 _0)))) = F))
T c= c==> c~ c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cF c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b1 * / ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b1 f4 * / ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b1 f4
- |- (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)
T c= cMAP * part cGABS / ! ! cGEQ * b0 c, b1 b2 c, cpsort f0 b1 b2 cNIL cNIL
- |- ((\s. ((((((scs_half_slice_v39 s) p) q) d') mkj) = ((LET (\p'. (LET_END ((LET (\k'. (LET_END ((LET (\mod2. (LET_END ((LET (\mod2b. (LET_END ((LET (\a1. (LET_END ((LET (\b1. (LET_END ((LET (\J. (LET_END (scs_v39 (k' , (d' , (a1 , (a1 , (b1 , (b1 , (J , (EMPTY , (EMPTY , EMPTY))))))))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) mkj) (((mod2b (scs_J_v39 s)) i'') j'')))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (((scs_bm_v39 s) p) q)) (((mod2 (scs_b_v39 s)) i'') j'')))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (((scs_am_v39 s) p) q)) (((mod2 (scs_a_v39 s)) i'') j'')))))))) (\f. (\j. (\j'. ((f ((j MOD k') + p')) ((j' MOD k') + p'))))))))) (\f. (\j. (\j'. ((f ((j MOD k') + p')) ((j' MOD k') + p'))))))))) ((q + ((NUMERAL (BIT1 _0)) + ((scs_k_v39 s) - p'))) MOD (scs_k_v39 s)))))) (p MOD (scs_k_v39 s))))) s)
T * / c= cscs_half_slice_v39 b0 f0 f1 f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, b2 c, f2 c, b5 c, b5 c, b6 c, b6 c, b7 c, part cEMPTY c, part cEMPTY part cEMPTY / / cCOND c= * * part cINSERT cMOD b7 b2 * * part cINSERT cMOD b8 b2 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b2 cNUMERAL cBIT1 c_0 part cEMPTY f3 * * * b4 * part cscs_J_v39 b0 b7 b8 / / cCOND c= * * part cINSERT cMOD b6 b2 * * part cINSERT cMOD b7 b2 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b2 cNUMERAL cBIT1 c_0 part cEMPTY cscs_bm_v39 b0 f0 f1 * * * b3 * part cscs_b_v39 b0 b6 b7 / / cCOND c= * * part cINSERT cMOD b5 b2 * * part cINSERT cMOD b6 b2 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b2 cNUMERAL cBIT1 c_0 part cEMPTY cscs_am_v39 b0 f0 f1 * * * b3 * part cscs_a_v39 b0 b5 b6 / / / * * b4 c+ cMOD b5 b2 b1 c+ cMOD b6 b2 b1 / / / * * b3 c+ cMOD b4 b2 b1 c+ cMOD b5 b2 b1 cMOD c+ f1 c+ cNUMERAL cBIT1 c_0 c- cscs_k_v39 b0 b1 cscs_k_v39 b0 cMOD f0 cscs_k_v39 b0 f4
- |- (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))))))))))))))))))))))))
T c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))))
T c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ (((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL (BIT1 _0)) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))))
T c/\ c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))))))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((!u. (!u'. (!k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u')))))))) ==> ((\u. (!u'. (!k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u')))))))) u)) = ((\u. (!u'. (!k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u')))))))) u))
T c= c==> ! ! ! ! ! c= cfunlistA_v39 f0 b0 b1 b2 b3 b4 cCOND c= cMOD b3 b2 cMOD b4 b2 b0 cASSOCD_v39 cpsort b2 c, b3 b4 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b2 b6 b7 f0 b1 * / ! ! ! ! c= cfunlistA_v39 f0 b0 b1 b2 b3 b4 cCOND c= cMOD b3 b2 cMOD b4 b2 b0 cASSOCD_v39 cpsort b2 c, b3 b4 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b2 b6 b7 f0 b1 f1 * / ! ! ! ! c= cfunlistA_v39 f0 b0 b1 b2 b3 b4 cCOND c= cMOD b3 b2 cMOD b4 b2 b0 cASSOCD_v39 cpsort b2 c, b3 b4 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b2 b6 b7 f0 b1 f1
- |- (((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) ==> (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0)) = F)) = (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0)) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c= c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 cF c= c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
- |- (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))
T c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))
T c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (~ ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c~ c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((LET f) x) = (f x))
T c= cLET f0 f1 * f0 f1
- |- (((!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d))))) ==> ((\c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d))))) c)) = ((\c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d))))) c))
T c= c==> ! ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0))
T c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ ((SUC (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))
T c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c= cSUC cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 c_0
- |- (((psort (NUMERAL (BIT1 (BIT1 _0)))) ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0))))
T c= cpsort cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- ((!j. t) = t)
T c= ! f0 f0
- |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
- |- ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0)))
T c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))))) b)
T * / ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b5 f4
- |- (~ ((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 _0)))))
T c~ c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))))
T c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u'))))) ==> ((\i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u'))))) i)) = ((\i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u'))))) i))
T c= c==> ! ! c= cfunlistA_v39 f0 f1 f2 f3 b0 b1 cCOND c= cMOD b0 f3 cMOD b1 f3 f1 cASSOCD_v39 cpsort f3 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f3 b3 b4 f0 f2 * / ! c= cfunlistA_v39 f0 f1 f2 f3 b0 b1 cCOND c= cMOD b0 f3 cMOD b1 f3 f1 cASSOCD_v39 cpsort f3 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f3 b3 b4 f0 f2 f4 * / ! c= cfunlistA_v39 f0 f1 f2 f3 b0 b1 cCOND c= cMOD b0 f3 cMOD b1 f3 f1 cASSOCD_v39 cpsort f3 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f3 b3 b4 f0 f2 f4
- |- (((!i. (((scs_prop_equ_v39 s) i) = ((LET (\shift1. (LET_END ((LET (\shift2. (LET_END ((LET (\shift2b. (LET_END (scs_v39 ((scs_k_v39 s) , ((scs_d_v39 s) , ((shift2 (scs_a_v39 s)) , ((shift2 (scs_am_v39 s)) , ((shift2 (scs_bm_v39 s)) , ((shift2 (scs_b_v39 s)) , ((shift2b (scs_J_v39 s)) , ((shift1 (scs_lo_v39 s)) , ((shift1 (scs_hi_v39 s)) , (shift1 (scs_str_v39 s))))))))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (f (i + j))))))) ==> ((\i. (((scs_prop_equ_v39 s) i) = ((LET (\shift1. (LET_END ((LET (\shift2. (LET_END ((LET (\shift2b. (LET_END (scs_v39 ((scs_k_v39 s) , ((scs_d_v39 s) , ((shift2 (scs_a_v39 s)) , ((shift2 (scs_am_v39 s)) , ((shift2 (scs_bm_v39 s)) , ((shift2 (scs_b_v39 s)) , ((shift2b (scs_J_v39 s)) , ((shift1 (scs_lo_v39 s)) , ((shift1 (scs_hi_v39 s)) , (shift1 (scs_str_v39 s))))))))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (f (i + j))))))) i)) = ((\i. (((scs_prop_equ_v39 s) i) = ((LET (\shift1. (LET_END ((LET (\shift2. (LET_END ((LET (\shift2b. (LET_END (scs_v39 ((scs_k_v39 s) , ((scs_d_v39 s) , ((shift2 (scs_a_v39 s)) , ((shift2 (scs_am_v39 s)) , ((shift2 (scs_bm_v39 s)) , ((shift2 (scs_b_v39 s)) , ((shift2b (scs_J_v39 s)) , ((shift1 (scs_lo_v39 s)) , ((shift1 (scs_hi_v39 s)) , (shift1 (scs_str_v39 s))))))))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (\j'. ((f (i + j)) (i + j'))))))))) (\f. (\j. (f (i + j))))))) i))
T c= c==> ! c= cscs_prop_equ_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * b2 * part cscs_a_v39 f0 c, * b2 * part cscs_am_v39 f0 c, * b2 * part cscs_bm_v39 f0 c, * b2 * part cscs_b_v39 f0 c, * b3 * part cscs_J_v39 f0 c, * b1 * part cscs_lo_v39 f0 c, * b1 * part cscs_hi_v39 f0 * b1 * part cscs_str_v39 f0 / / / * * b3 c+ b0 b4 c+ b0 b5 / / / * * b2 c+ b0 b3 c+ b0 b4 / / * b1 c+ b0 b2 * / c= cscs_prop_equ_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * b2 * part cscs_a_v39 f0 c, * b2 * part cscs_am_v39 f0 c, * b2 * part cscs_bm_v39 f0 c, * b2 * part cscs_b_v39 f0 c, * b3 * part cscs_J_v39 f0 c, * b1 * part cscs_lo_v39 f0 c, * b1 * part cscs_hi_v39 f0 * b1 * part cscs_str_v39 f0 / / / * * b3 c+ b0 b4 c+ b0 b5 / / / * * b2 c+ b0 b3 c+ b0 b4 / / * b1 c+ b0 b2 f1 * / c= cscs_prop_equ_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, cscs_k_v39 f0 c, cscs_d_v39 f0 c, * b2 * part cscs_a_v39 f0 c, * b2 * part cscs_am_v39 f0 c, * b2 * part cscs_bm_v39 f0 c, * b2 * part cscs_b_v39 f0 c, * b3 * part cscs_J_v39 f0 c, * b1 * part cscs_lo_v39 f0 c, * b1 * part cscs_hi_v39 f0 * b1 * part cscs_str_v39 f0 / / / * * b3 c+ b0 b4 c+ b0 b5 / / / * * b2 c+ b0 b3 c+ b0 b4 / / * b1 c+ b0 b2 f1
- |- (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
- |- (((!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) beta))
T c= c==> ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 * / ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 f6 * / ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 f6
- ((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) |- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1
- |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ |- (((!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))) beta))
T c= c==> ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b0 * / ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b0 f6 * / ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b0 f6
- |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
+ |- (((!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)) ==> ((\str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)) str)) = ((\str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)) str))
T c= c==> ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f7 * / c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f7 f9 * / c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f7 f9
- |- ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))
T c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))) b)
T * / ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b4 f4
- ((NUMERAL (BIT1 _0)) = (NUMERAL _0)) |- ((NUMERAL _0) = (NUMERAL (BIT1 _0)))
T c==> c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c= cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((\J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))) J)
T * / ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f1 f7
- |- (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))))))))))))))))))))))))))))))))))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = T)
T c= c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
- |- (((!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))) ==> ((\r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))) r)) = ((\r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))) r))
T c= c==> ! ! c= cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f0 b3 b4 cCONS c, c, f1 f2 b0 b1 cCONS c, cpsort f0 c, f1 f2 b0 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f0 b3 b4 b1 * / ! c= cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f0 b3 b4 cCONS c, c, f1 f2 b0 b1 cCONS c, cpsort f0 c, f1 f2 b0 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f0 b3 b4 b1 f3 * / ! c= cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f0 b3 b4 cCONS c, c, f1 f2 b0 b1 cCONS c, cpsort f0 c, f1 f2 b0 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f0 b3 b4 b1 f3
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))) a)
T * / ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f1 f3
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 f1
- |- (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) , (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b5 f2
- |- (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = T)
T c= c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
- ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))
T c==> c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0)))))
T c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0
- |- ((\n. ((d_tame n) = (((COND (n = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL _0))) (((COND (n = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((COND (n = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))))) (((COND (n = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) tgt)))))) n)
T * / c= cd_tame b0 cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 ctgt f0
- |- ((\d. ((((ASSOCD_v39 a) NIL) d) = d)) d)
T * / c= cASSOCD_v39 f0 cNIL b0 b0 f1
- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) |- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))
T c==> c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))))))))))))))))))))))))
T c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)))))))
T c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))))))))))))))))))))))))))))))
T c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))))))))))))))))))))))))))))))))))))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta)
T * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6
+ |- ((\lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) lo)
T * / ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 f8
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b7 * / ! ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b7 f2 * / ! ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b7 f2
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))))) b)
T * / ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b1 f4
+ |- (((!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) ==> ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J)) = ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J))
T c= c==> ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7 * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7
+ |- ((\beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))) beta)
T * / ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b0 f6
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b2 * / ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b2 f3 * / ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b2 f3
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b4 * / ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b4 f4 * / ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b4 f4
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f3 * / ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f3 f4 * / ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f3 f4
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b6 * / ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b6 f3 * / ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b6 f3
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 f1 * / ! ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 f1 f2 * / ! ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 f1 f2
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b5 * / ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b5 f2 * / ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b5 f2
+ |- (((!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)) ==> ((\str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)) str)) = ((\str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)) str))
T c= c==> ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f4 * / c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f4 f9 * / c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f4 f9
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b3 f3
+ |- ((\beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))) beta)
T * / ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b3 f6
+ |- (((!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)) ==> ((\str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)) str)) = ((\str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)) str))
T c= c==> ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f3 * / c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f3 f9 * / c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f3 f9
+ |- ((\beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))) beta)
T * / ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f3 f6
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b3 f2
+ |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f4 * / ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f4 f5 * / ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f4 f5
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b8 f1
+ |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b3 * / ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b3 f5 * / ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b3 f5
+ |- ((\str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)) str)
T * / c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f8 f9
+ |- ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d)
T * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b4 f3
+ |- ((\beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))) beta)
T * / ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b1 f6
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b)
T * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2 * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2
+ |- ((\str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)) str)
T * / c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 b0 f9
+ |- (((!s. ((unadorned_v39 s) = (((scs_lo_v39 s) = EMPTY) /\ (((scs_hi_v39 s) = EMPTY) /\ (((scs_str_v39 s) = EMPTY) /\ (((scs_a_v39 s) = (scs_am_v39 s)) /\ ((scs_b_v39 s) = (scs_bm_v39 s)))))))) ==> ((\s. ((unadorned_v39 s) = (((scs_lo_v39 s) = EMPTY) /\ (((scs_hi_v39 s) = EMPTY) /\ (((scs_str_v39 s) = EMPTY) /\ (((scs_a_v39 s) = (scs_am_v39 s)) /\ ((scs_b_v39 s) = (scs_bm_v39 s)))))))) s)) = ((\s. ((unadorned_v39 s) = (((scs_lo_v39 s) = EMPTY) /\ (((scs_hi_v39 s) = EMPTY) /\ (((scs_str_v39 s) = EMPTY) /\ (((scs_a_v39 s) = (scs_am_v39 s)) /\ ((scs_b_v39 s) = (scs_bm_v39 s)))))))) s))
T c= c==> ! c= cunadorned_v39 b0 c/\ c= * part cscs_lo_v39 b0 part cEMPTY c/\ c= * part cscs_hi_v39 b0 part cEMPTY c/\ c= * part cscs_str_v39 b0 part cEMPTY c/\ c= * part cscs_a_v39 b0 * part cscs_am_v39 b0 c= * part cscs_b_v39 b0 * part cscs_bm_v39 b0 * / c= cunadorned_v39 b0 c/\ c= * part cscs_lo_v39 b0 part cEMPTY c/\ c= * part cscs_hi_v39 b0 part cEMPTY c/\ c= * part cscs_str_v39 b0 part cEMPTY c/\ c= * part cscs_a_v39 b0 * part cscs_am_v39 b0 c= * part cscs_b_v39 b0 * part cscs_bm_v39 b0 f0 * / c= cunadorned_v39 b0 c/\ c= * part cscs_lo_v39 b0 part cEMPTY c/\ c= * part cscs_hi_v39 b0 part cEMPTY c/\ c= * part cscs_str_v39 b0 part cEMPTY c/\ c= * part cscs_a_v39 b0 * part cscs_am_v39 b0 c= * part cscs_b_v39 b0 * part cscs_bm_v39 b0 f0
+ |- ((\s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) s)
T * / c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF f0
+ |- (((!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) ==> ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d)) = ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d))
T c= c==> ! ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1 * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b5 * / ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b5 f3 * / ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b5 f3
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b5 f1
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1
+ |- (((!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)) ==> ((\str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)) str)) = ((\str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)) str))
T c= c==> ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f6 * / c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f6 f9 * / c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f6 f9
+ |- ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo)
T * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8
+ |- (((!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))) ==> ((\lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))) lo)) = ((\lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))) lo))
T c= c==> ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 b0 * / ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 b0 f8 * / ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 b0 f8
+ |- (((!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) ==> ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo)) = ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo))
T c= c==> ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8 * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))))) b)
T * / ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b2 f4
+ |- (((!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) ==> ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str)) = ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str))
T c= c==> ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9 * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9
+ |- ((\lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))) lo)
T * / ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f3 f8
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b6 f3
+ |- ((\lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))) lo)
T * / ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f7 f8
+ |- ((\beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))) beta)
T * / ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f5 f6
+ |- (((!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))) ==> ((\lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))) lo)) = ((\lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))) lo))
T c= c==> ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 b1 * / ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 b1 f8 * / ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 b1 f8
+ |- ((\str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)) str)
T * / c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f3 f9
+ |- (((!k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) ==> ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k)) = ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k))
T c= c==> ! ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0 * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0
+ |- ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k)
T * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0
+ |- (((!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))) ==> ((\lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))) lo)) = ((\lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))) lo))
T c= c==> ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f4 * / ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f4 f8 * / ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f4 f8
+ |- ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str)
T * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9
+ |- ((\str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)) str)
T * / c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f7 f9
+ |- ((\lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))) lo)
T * / ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f4 f8
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b5 * / ! ! ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b5 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b5 f1
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f2 f3
+ |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5 * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5
+ |- ((\J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))) J)
T * / ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b1 f7
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b6 f1
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b3 * / ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b3 f4 * / ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b3 f4
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b4 * / ! ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b4 f2 * / ! ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b4 f2
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b5 f3
+ |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b2 * / ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b2 f5 * / ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b2 f5
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 f0 * / ! ! ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 f0 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 f0 f1
+ |- (((!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) ==> ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo)) = ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo))
T c= c==> ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8 * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 f0 f1
+ |- (((!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))) beta))
T c= c==> ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b2 * / ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b2 f6 * / ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b2 f6
+ |- ((\J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))) J)
T * / ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f3 f7
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))) alpha)
T * / ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b2 f5
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b4 * / ! ! ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b4 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b4 f1
+ |- (((!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)) ==> ((\str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)) str)) = ((\str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)) str))
T c= c==> ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f8 * / c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f8 f9 * / c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f8 f9
+ |- ((\b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))) b)
T * / c= cmk_unadorned_v39 f0 f1 f2 b0 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, b0 c, b0 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f3
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))) alpha)
T * / ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b1 f5
+ |- ((\lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))) lo)
T * / ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 b0 f8
+ |- ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo)
T * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b6 * / ! ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b6 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_J_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b6 f1
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b5 * / ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b5 f4 * / ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b5 f4
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1
+ |- (((!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))) ==> ((\a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))) a)) = ((\a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))) a))
T c= c==> ! ! c= cmk_unadorned_v39 f0 f1 b0 b1 cscs_v39 c, f0 c, f1 c, b0 c, b0 c, b1 c, b1 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! c= cmk_unadorned_v39 f0 f1 b0 b1 cscs_v39 c, f0 c, f1 c, b0 c, b0 c, b1 c, b1 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f2 * / ! c= cmk_unadorned_v39 f0 f1 b0 b1 cscs_v39 c, f0 c, f1 c, b0 c, b0 c, b1 c, b1 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f2
+ |- ((~ F) = T)
T c= c~ cF cT
+ |- ((\J. (!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)))) J)
T * / ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 b0 f7
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b3 * / ! ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b3 f2 * / ! ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b3 f2
+ |- ((\str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J)) str)
T * / c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f6 f9
+ |- (((!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))) ==> ((\J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))) J)) = ((\J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))) J))
T c= c==> ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f3 * / ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f3 f7 * / ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f3 f7
+ |- ((\a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))) a)
T * / ! c= cmk_unadorned_v39 f0 f1 b0 b1 cscs_v39 c, f0 c, f1 c, b0 c, b0 c, b1 c, b1 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f2
+ |- (((!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))))) beta))
T c= c==> ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f3 * / ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f3 f6 * / ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f3 f6
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b8 * / ! ! ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b8 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b8 f1
+ |- (((!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))) beta))
T c= c==> ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b3 * / ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b3 f6 * / ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b3 f6
+ |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 * / ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 f5 * / ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 f5
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 f1 f2
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3 * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3
+ |- ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J)
T * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7
+ |- (T = (scs_basic_v39 scs_4M8_prime))
T c= cT cscs_basic_v39 cscs_4M8_prime
+ |- (((!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi))))) beta))
T c= c==> ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f5 * / ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f5 f6 * / ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f5 f6
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))))) alpha)
T * / ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f4 f5
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b4 f1
+ |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b0 * / ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b0 f5 * / ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b0 f5
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b2 * / ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b2 f4 * / ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b2 f4
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- (((!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))) ==> ((\lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))) lo)) = ((\lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha))) lo))
T c= c==> ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f3 * / ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f3 f8 * / ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f3 f8
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 * / ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 f3 * / ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 f3
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_hi_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = hi)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f2 * / ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f2 f3 * / ! ! ! ! ! ! c= * part cscs_hi_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f2 f3
+ |- ((\lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))) lo)
T * / ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 b1 f8
+ |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b4 * / ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b4 f5 * / ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b4 f5
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) alpha)
T * / ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 f5
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b3 * / ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b3 f3 * / ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b3 f3
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 f3
+ |- (((!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))) ==> ((\b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))) b)) = ((\b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))) b))
T c= c==> ! c= cmk_unadorned_v39 f0 f1 f2 b0 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, b0 c, b0 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / c= cmk_unadorned_v39 f0 f1 f2 b0 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, b0 c, b0 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f3 * / c= cmk_unadorned_v39 f0 f1 f2 b0 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, b0 c, b0 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f3
+ |- ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta)
T * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4 * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4
+ |- ((\str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)) str)
T * / c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f4 f9
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b7 f2
+ |- ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str)
T * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9
+ |- (((!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))) ==> ((\J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))) J)) = ((\J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))) J))
T c= c==> ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f4 * / ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f4 f7 * / ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f4 f7
+ |- (((!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)) ==> ((\str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)) str)) = ((\str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)) str))
T c= c==> ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 b0 * / c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 b0 f9 * / c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 b0 f9
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b2 f3
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_str_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = str)))))) alpha)
T * / ! ! ! ! c= * part cscs_str_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b4 f5
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4 * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2
+ |- (((!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta))
T c= c==> ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6 * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6
