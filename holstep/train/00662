N CPOW_ADD
C |- (!w. (!z1. (!z2. (((cpow w) ((vector_add z1) z2)) = ((complex_mul ((cpow w) z1)) ((cpow w) z2))))))
T c= ccpow f0 cvector_add f1 f2 ccomplex_mul ccpow f0 f1 ccpow f0 f2
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COMPLEX_ADD_RDISTRIB
A |- (!x. (!y. (!z. (((complex_mul ((vector_add x) y)) z) = ((vector_add ((complex_mul x) z)) ((complex_mul y) z))))))
T c= ccomplex_mul cvector_add f0 f1 f2 cvector_add ccomplex_mul f0 f2 ccomplex_mul f1 f2
D COMPLEX_MUL_RZERO
A |- (!x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0)))))
T c= ccomplex_mul f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D CEXP_ADD
A |- (!w. (!z. ((cexp ((vector_add w) z)) = ((complex_mul (cexp w)) (cexp z)))))
T c= ccexp cvector_add f0 f1 ccomplex_mul ccexp f0 ccexp f1
D cpow
A |- (!z. (!w. (((cpow w) z) = (((COND (w = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul z) (clog w)))))))
T c= ccpow f0 f1 cCOND c= f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul f1 cclog f0
+ ((~ (w = (Cx (real_of_num (NUMERAL _0))))) ==> ((((COND (w = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul ((vector_add z1) z2)) (clog w)))) = ((complex_mul (((COND (w = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul z1) (clog w))))) (((COND (w = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul z2) (clog w))))))) |- ((((COND (w = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul ((vector_add z1) z2)) (clog w)))) = ((complex_mul (((COND (w = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul z1) (clog w))))) (((COND (w = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul z2) (clog w))))))
T c==> c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= cCOND c= f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul cvector_add f1 f2 cclog f0 ccomplex_mul cCOND c= f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul f1 cclog f0 cCOND c= f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul f2 cclog f0 c= cCOND c= f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul cvector_add f1 f2 cclog f0 ccomplex_mul cCOND c= f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul f1 cclog f0 cCOND c= f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul f2 cclog f0
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (w = (Cx (real_of_num (NUMERAL _0)))))) = ((\t. (t \/ (~ t))) (w = (Cx (real_of_num (NUMERAL _0))))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= f0 cCx creal_of_num cNUMERAL c_0 * / c\/ b0 c~ b0 c= f0 cCx creal_of_num cNUMERAL c_0
+ |- ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) x)
T * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 f0
+ |- (((!z. (((complex_mul ((vector_add x) y)) z) = ((vector_add ((complex_mul x) z)) ((complex_mul y) z)))) ==> ((\z. (((complex_mul ((vector_add x) y)) z) = ((vector_add ((complex_mul x) z)) ((complex_mul y) z)))) z)) = ((\z. (((complex_mul ((vector_add x) y)) z) = ((vector_add ((complex_mul x) z)) ((complex_mul y) z)))) z))
T c= c==> ! c= ccomplex_mul cvector_add f0 f1 b0 cvector_add ccomplex_mul f0 b0 ccomplex_mul f1 b0 * / c= ccomplex_mul cvector_add f0 f1 b0 cvector_add ccomplex_mul f0 b0 ccomplex_mul f1 b0 f2 * / c= ccomplex_mul cvector_add f0 f1 b0 cvector_add ccomplex_mul f0 b0 ccomplex_mul f1 b0 f2
+ |- ((\w. (((cpow w) z) = (((COND (w = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul z) (clog w)))))) w)
T * / c= ccpow b0 f0 cCOND c= b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul f0 cclog b0 f1
+ |- ((\z. ((cexp ((vector_add w) z)) = ((complex_mul (cexp w)) (cexp z)))) z)
T * / c= ccexp cvector_add f0 b0 ccomplex_mul ccexp f0 ccexp b0 f1
+ |- ((!z1. (!z2. (((cpow w) ((vector_add z1) z2)) = ((complex_mul ((cpow w) z1)) ((cpow w) z2))))) = T)
T c= ! ! c= ccpow f0 cvector_add b0 b1 ccomplex_mul ccpow f0 b0 ccpow f0 b1 cT
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- ((Cx (real_of_num (NUMERAL _0))) = w) |- (w = (Cx (real_of_num (NUMERAL _0))))
T c==> c= cCx creal_of_num cNUMERAL c_0 f0 c= f0 cCx creal_of_num cNUMERAL c_0
- (~ (w = (Cx (real_of_num (NUMERAL _0))))) |- (~ ((Cx (real_of_num (NUMERAL _0))) = w))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= cCx creal_of_num cNUMERAL c_0 f0
- |- (T = ((cexp ((complex_mul ((vector_add z1) z2)) (clog w))) = ((complex_mul (cexp ((complex_mul z1) (clog w)))) (cexp ((complex_mul z2) (clog w))))))
T c= cT c= ccexp ccomplex_mul cvector_add f0 f1 cclog f2 ccomplex_mul ccexp ccomplex_mul f0 cclog f2 ccexp ccomplex_mul f1 cclog f2
- (~ (w = (Cx (real_of_num (NUMERAL _0))))) |- (((~ ((Cx (real_of_num (NUMERAL _0))) = w)) ==> (((Cx (real_of_num (NUMERAL _0))) = w) = F)) = (((Cx (real_of_num (NUMERAL _0))) = w) = F))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= c==> c~ c= cCx creal_of_num cNUMERAL c_0 f0 c= c= cCx creal_of_num cNUMERAL c_0 f0 cF c= c= cCx creal_of_num cNUMERAL c_0 f0 cF
- (~ (w = (Cx (real_of_num (NUMERAL _0))))) |- (((Cx (real_of_num (NUMERAL _0))) = w) = F)
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= c= cCx creal_of_num cNUMERAL c_0 f0 cF
- (w = (Cx (real_of_num (NUMERAL _0)))) |- ((Cx (real_of_num (NUMERAL _0))) = w)
T c==> c= f0 cCx creal_of_num cNUMERAL c_0 c= cCx creal_of_num cNUMERAL c_0 f0
