N Pwssrat.f_list_power_ytrans_not_mem
C |- (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((((rtrans L) N) r) x) i) = r1) /\ (~ ((final_list L) r1))))))) ==> (!j. ((j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1))))))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5 ! c==> c< b0 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 f4 f5
D TRUTH
A |- T
T cT
D Ssrbool.contraNN
A |- (!c. (!b. ((c ==> b) ==> ((~ b) ==> (~ c)))))
T c==> c==> f0 f1 c==> c~ f1 c~ f0
D Seq2.mem_flatten
A |- (!x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))))
T c= cMEM f0 cflatten f1 c? / c/\ cMEM b0 f1 cMEM f0 b0
D Tame_defs2.l_p
A |- (!L. (!N. (!r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))))))))
T c= cl'p f0 f1 f2 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f2 f3 cflatten f1 b1
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.AQIUNPP3
A |- (!L. (!i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Pwssrat.minnum_not
A |- ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = n) /\ (i < n)) ==> (~ (P i)))
T c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 c< f2 f1 c~ * f0 f2
+ (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) |- ((j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) = T)
T c==> c< f0 cl'p f1 cntrans f1 f2 f3 f4 f5 f6 f4 c= c< f0 cl'p f1 cntrans f1 f2 f3 f4 f5 f6 f4 cT
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((\i'. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r1) x))) (flatten (((((ntrans L) N) r) x) i)))) m)) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) /\ (i' < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x))) ==> (~ ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r1) x))) (flatten (((((ntrans L) N) r) x) i)))) i')))) j)
T * / c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b1 * / cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 f1 f2 cflatten cntrans f0 f3 f4 f2 f5 b2 b2 cl'p f0 cntrans f0 f3 f4 f2 f5 f1 f2 c< b0 cl'p f0 cntrans f0 f3 f4 f2 f5 f1 f2 c~ * / cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten cntrans f0 f3 f4 f2 f5 b0 f6
+ |- (((!i'. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r1) x))) (flatten (((((ntrans L) N) r) x) i)))) m)) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) /\ (i' < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x))) ==> (~ ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r1) x))) (flatten (((((ntrans L) N) r) x) i)))) i')))) ==> ((\i'. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r1) x))) (flatten (((((ntrans L) N) r) x) i)))) m)) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) /\ (i' < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x))) ==> (~ ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r1) x))) (flatten (((((ntrans L) N) r) x) i)))) i')))) j)) = ((\i'. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r1) x))) (flatten (((((ntrans L) N) r) x) i)))) m)) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) /\ (i' < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x))) ==> (~ ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r1) x))) (flatten (((((ntrans L) N) r) x) i)))) i')))) j))
T c= c==> ! c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b1 * / cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 f1 f2 cflatten cntrans f0 f3 f4 f2 f5 b2 b2 cl'p f0 cntrans f0 f3 f4 f2 f5 f1 f2 c< b0 cl'p f0 cntrans f0 f3 f4 f2 f5 f1 f2 c~ * / cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten cntrans f0 f3 f4 f2 f5 b0 * / c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b1 * / cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 f1 f2 cflatten cntrans f0 f3 f4 f2 f5 b2 b2 cl'p f0 cntrans f0 f3 f4 f2 f5 f1 f2 c< b0 cl'p f0 cntrans f0 f3 f4 f2 f5 f1 f2 c~ * / cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten cntrans f0 f3 f4 f2 f5 b0 f6 * / c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b1 * / cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 f1 f2 cflatten cntrans f0 f3 f4 f2 f5 b2 b2 cl'p f0 cntrans f0 f3 f4 f2 f5 f1 f2 c< b0 cl'p f0 cntrans f0 f3 f4 f2 f5 f1 f2 c~ * / cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten cntrans f0 f3 f4 f2 f5 b0 f6
+ |- ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)
T * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((((((rtrans L) N) r) x) i) = r1) /\ (~ ((final_list L) r1))), ((((marked_list L) N) r) x) |- (!j. ((j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5 c==> cmarked_list f0 f1 f2 f3 ! c==> c< b0 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 f4 f5
- |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ |- ((((MEM (((POWER (f_list L)) (SUC j)) y)) r1) ==> (?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ ((MEM (((POWER (f_list L)) (SUC j)) y)) l)))) = (((MEM (((POWER (f_list L)) (SUC j)) y)) r1) ==> ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten (((((ntrans L) N) r) x) i)))))
T c= c==> cMEM cPOWER * part cf_list f0 cSUC f1 f2 f3 c? / c/\ cMEM b0 cntrans f0 f4 f5 f6 f7 cMEM cPOWER * part cf_list f0 cSUC f1 f2 b0 c==> cMEM cPOWER * part cf_list f0 cSUC f1 f2 f3 cMEM cPOWER * part cf_list f0 cSUC f1 f2 cflatten cntrans f0 f4 f5 f6 f7
- |- ((?y. ((((l'y L) r1) x) = y)) ==> (?y. ((((l'y L) r1) x) = y)))
T c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ ((MEM (((POWER (f_list L)) (SUC j)) y)) r1), ((MEM r1) (((((ntrans L) N) r) x) i)) |- ((\l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ ((MEM (((POWER (f_list L)) (SUC j)) y)) l))) r1)
T c==> cMEM cPOWER * part cf_list f0 cSUC f1 f2 f3 c==> cMEM f3 cntrans f0 f4 f5 f6 f7 * / c/\ cMEM b0 cntrans f0 f4 f5 f6 f7 cMEM cPOWER * part cf_list f0 cSUC f1 f2 b0 f3
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ ((MEM r1) (((((ntrans L) N) r) x) i)) |- (((MEM (((POWER (f_list L)) (SUC j)) y)) r1) ==> ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten (((((ntrans L) N) r) x) i))))
T c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c==> cMEM cPOWER * part cf_list f1 cSUC f6 f7 f0 cMEM cPOWER * part cf_list f1 cSUC f6 f7 cflatten cntrans f1 f2 f3 f4 f5
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
- |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((((rtrans L) N) r) x) i) = r1), (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)), ((((marked_list L) N) r) x) |- (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= crtrans f0 f2 f3 f4 f5 f1 c==> c< f6 cl'p f0 cntrans f0 f2 f3 f4 f5 f1 f4 c==> cmarked_list f0 f2 f3 f4 c~ cMEM cPOWER * part cf_list f0 cSUC f6 cytrans f0 f2 f3 f4 f5 f1
+ |- ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r1) x))) (flatten (((((ntrans L) N) r) x) i)))) m)) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) /\ (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x))) ==> (~ ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r1) x))) (flatten (((((ntrans L) N) r) x) i)))) j)))
T c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 * / cMEM cPOWER * part cf_list f0 cSUC b2 cl'y f0 f1 f2 cflatten cntrans f0 f3 f4 f2 f5 b1 b1 cl'p f0 cntrans f0 f3 f4 f2 f5 f1 f2 c< f6 cl'p f0 cntrans f0 f3 f4 f2 f5 f1 f2 c~ * / cMEM cPOWER * part cf_list f0 cSUC b0 cl'y f0 f1 f2 cflatten cntrans f0 f3 f4 f2 f5 f6
+ (~ ((final_list L) r1)) |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM r1) (((((ntrans L) N) r) x) i)) /\ (((MEM x) r1) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el r1) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x)))))))) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1))) = (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM r1) (((((ntrans L) N) r) x) i)) /\ (((MEM x) r1) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el r1) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) i))) /\ ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x)))))))))) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1))))
T c==> c~ cfinal_list f0 f1 c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f2 f3 f4 f5 c/\ cMEM f1 cntrans f0 f2 f3 f4 f5 c/\ cMEM f4 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f2 f3 f4 f5 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f2 f3 f4 f5 ce_list f4 cs_flag_list f0 cntrans f0 f2 f3 f4 f5 f1 f4 c~ cMEM cPOWER * part cf_list f0 cSUC f6 cl'y f0 f1 f4 f1 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f2 f3 f4 f5 c/\ cMEM f1 cntrans f0 f2 f3 f4 f5 c/\ cMEM f4 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f2 f3 f4 f5 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f2 f3 f4 f5 ce_list f4 c/\ c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f2 f3 f4 f5 c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f2 f3 f4 f5 f1 f4 c~ cMEM cPOWER * part cf_list f0 cSUC f6 cl'y f0 f1 f4 f1
+ |- ((\n. (!P. (!i. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = n) /\ (i < n)) ==> (~ (P i)))))) ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x))
T * / ! ! c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b3 * b1 b4 b4 b0 c< b2 b0 c~ * b1 b2 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3
- |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ ((MEM (((POWER (f_list L)) (SUC j)) y)) r1), ((MEM r1) (((((ntrans L) N) r) x) i)) |- (((MEM r1) (((((ntrans L) N) r) x) i)) /\ ((MEM (((POWER (f_list L)) (SUC j)) y)) r1))
T c==> cMEM cPOWER * part cf_list f0 cSUC f1 f2 f3 c==> cMEM f3 cntrans f0 f4 f5 f6 f7 c/\ cMEM f3 cntrans f0 f4 f5 f6 f7 cMEM cPOWER * part cf_list f0 cSUC f1 f2 f3
+ (transform_assumption_v2 L), ((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((((rtrans L) N) r) x) i) = r1) /\ (~ ((final_list L) r1))))))) |- (!j. ((j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1))))
T c==> ctransform_assumption_v2 f0 c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5 ! c==> c< b0 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 f4 f5
+ ((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((((rtrans L) N) r) x) i) = r1) /\ (~ ((final_list L) r1))))))) |- (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((((rtrans L) N) r) x) i) = r1) /\ (~ ((final_list L) r1))))))) /\ (!j. ((j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1)))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5 c/\ c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5 ! c==> c< b0 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 f4 f5
+ (transform_assumption_v2 L) |- ((transform_assumption_v2 L) = T)
T c==> ctransform_assumption_v2 f0 c= ctransform_assumption_v2 f0 cT
- |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ |- ((\b. (!c. ((c ==> b) ==> ((~ b) ==> (~ c))))) b)
T * / ! c==> c==> b1 b0 c==> c~ b0 c~ b1 f0
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) x)
T * / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 cmarked_list f0 cntrans f0 f1 f2 b0 f3 crtrans f0 f1 f2 b0 f3 b0 f4
- |- (((!x'. (((\y. ((((l'y L) r1) x) = y)) x') ==> (?y. ((((l'y L) r1) x) = y)))) ==> ((?y. ((((l'y L) r1) x) = y)) ==> (?y. ((((l'y L) r1) x) = y)))) = ((?y. ((((l'y L) r1) x) = y)) ==> (?y. ((((l'y L) r1) x) = y))))
T c= c==> ! c==> * / c= cl'y f0 f1 f2 b1 b0 c? / c= cl'y f0 f1 f2 b1 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ ((((l'y L) r1) x) = y), (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)), ((MEM r1) (((((ntrans L) N) r) x) i)) |- (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1))
T c==> c= cl'y f0 f1 f2 f3 c==> c< f4 cl'p f0 cntrans f0 f5 f6 f2 f7 f1 f2 c==> cMEM f1 cntrans f0 f5 f6 f2 f7 c~ cMEM cPOWER * part cf_list f0 cSUC f4 cl'y f0 f1 f2 f1
- |- (((LET f) x) = (f x))
T c= cLET f0 f1 * f0 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (?y. ((((l'y L) r1) x) = y))
T c? / c= cl'y f0 f1 f2 b0
- |- ((!j. t) = t)
T c= ! f0 f0
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
- |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ |- ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten (((((ntrans L) N) r) x) i)))) m))))) = (min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten (((((ntrans L) N) r) x) i)))) m)))))) = T) = (((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten (((((ntrans L) N) r) x) i)))) m))))) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) y)) (flatten (((((ntrans L) N) r) x) i)))) p)))))) = T))
T c= c= c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f1 cflatten cntrans f0 f2 f3 f4 f5 b1 cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f1 cflatten cntrans f0 f2 f3 f4 f5 b1 cT c= c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f1 cflatten cntrans f0 f2 f3 f4 f5 b1 cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f1 cflatten cntrans f0 f2 f3 f4 f5 b1 cT
+ |- (!P. (!i'. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) /\ (i' < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x))) ==> (~ (P i')))))
T c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 cl'p f1 cntrans f1 f2 f3 f4 f5 f6 f4 c< f7 cl'p f1 cntrans f1 f2 f3 f4 f5 f6 f4 c~ * f0 f7
+ |- (((?y. ((((l'y L) r1) x) = y)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1))) = (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1)))
T c= c==> c? / c= cl'y f0 f1 f2 b0 c~ cMEM cPOWER * part cf_list f0 cSUC f3 cl'y f0 f1 f2 f1 c~ cMEM cPOWER * part cf_list f0 cSUC f3 cl'y f0 f1 f2 f1
- |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
- (!c. (!b. ((c ==> b) ==> ((~ b) ==> (~ c))))), (c ==> b) |- ((c ==> b) /\ ((~ b) ==> (~ c)))
T c==> ! ! c==> c==> b0 b1 c==> c~ b1 c~ b0 c==> c==> f0 f1 c/\ c==> f0 f1 c==> c~ f1 c~ f0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
+ (transform_assumption_v2 L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((((rtrans L) N) r) x) i) = r1) /\ (~ ((final_list L) r1)))))) |- (!j. ((j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1))))
T c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5 ! c==> c< b0 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 f4 f5
+ (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)), ((MEM r1) (((((ntrans L) N) r) x) i)) |- (((\y. ((((l'y L) r1) x) = y)) y) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1)))
T c==> c< f0 cl'p f1 cntrans f1 f2 f3 f4 f5 f6 f4 c==> cMEM f6 cntrans f1 f2 f3 f4 f5 c==> * / c= cl'y f1 f6 f4 b0 f7 c~ cMEM cPOWER * part cf_list f1 cSUC f0 cl'y f1 f6 f4 f6
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
- |- ((?l. t) = t)
T c= c? / f0 f0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) N) r) x) |- (!j. ((j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= crtrans f0 f2 f3 f4 f5 f1 c==> cmarked_list f0 f2 f3 f4 ! c==> c< b0 cl'p f0 cntrans f0 f2 f3 f4 f5 f1 f4 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f2 f3 f4 f5 f1
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((((rtrans L) N) r) x) i) = r1) /\ (~ ((final_list L) r1))))) |- (!j. ((j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5 ! c==> c< b0 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 f4 f5
+ (!c. (!b. ((c ==> b) ==> ((~ b) ==> (~ c))))) |- (!b. ((c ==> b) ==> ((~ b) ==> (~ c))))
T c==> ! ! c==> c==> b0 b1 c==> c~ b1 c~ b0 ! c==> c==> f0 b0 c==> c~ b0 c~ f0
- ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)) |- (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))))
T c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten f3 b1 cl'p f0 f3 f1 f2 c= cl'p f0 f3 f1 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten f3 b1
- (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))) |- ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))
T c==> c= cl'p f0 f1 f2 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f2 f3 cflatten f1 b1 c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f2 f3 cflatten f1 b1 cl'p f0 f1 f2 f3
+ |- ((!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((((rtrans L) N) r) x) i) = r1) /\ (~ ((final_list L) r1))))))) ==> (!j. ((j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1))))))) = T)
T c= ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= crtrans f0 f1 f2 b0 b1 f3 c~ cfinal_list f0 f3 ! c==> c< b2 cl'p f0 cntrans f0 f1 f2 b0 b1 f3 b0 c~ cMEM cPOWER * part cf_list f0 cSUC b2 cytrans f0 f1 f2 b0 b1 f3 cT
+ |- (((!c. (!b. ((c ==> b) ==> ((~ b) ==> (~ c))))) ==> (!b. (!c. ((c ==> b) ==> ((~ b) ==> (~ c)))))) = (!b. (!c. ((c ==> b) ==> ((~ b) ==> (~ c))))))
T c= c==> ! ! c==> c==> b0 b1 c==> c~ b1 c~ b0 ! ! c==> c==> b1 b0 c==> c~ b0 c~ b1 ! ! c==> c==> b1 b0 c==> c~ b0 c~ b1
+ |- ((\c. ((c ==> b) ==> ((~ b) ==> (~ c)))) c)
T * / c==> c==> b0 f0 c==> c~ f0 c~ b0 f1
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((((marked_list L) N) r) x) /\ (((((((rtrans L) N) r) x) i) = r1) /\ (~ ((final_list L) r1)))), ((((marked_list L) N) r) x) |- (!j. ((j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5 c==> cmarked_list f0 f1 f2 f3 ! c==> c< b0 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 f4 f5
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((((rtrans L) N) r) x) i) = r1), (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)), ((((marked_list L) N) r) x) |- ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) (((((rtrans L) N) r) x) i)) x))) r1)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= crtrans f0 f2 f3 f4 f5 f1 c==> c< f6 cl'p f0 cntrans f0 f2 f3 f4 f5 f1 f4 c==> cmarked_list f0 f2 f3 f4 c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f2 f3 f4 cmarked_list f0 cntrans f0 f2 f3 f4 f5 crtrans f0 f2 f3 f4 f5 f4 c~ cMEM cPOWER * part cf_list f0 cSUC f6 cl'y f0 crtrans f0 f2 f3 f4 f5 f4 f1
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) N) r) x) |- (((j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1))) = T)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= crtrans f0 f2 f3 f4 f5 f1 c==> cmarked_list f0 f2 f3 f4 c= c==> c< f6 cl'p f0 cntrans f0 f2 f3 f4 f5 f1 f4 c~ cMEM cPOWER * part cf_list f0 cSUC f6 cytrans f0 f2 f3 f4 f5 f1 cT
+ |- (((!L. (!N. (!r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))))) ==> ((\L. (!N. (!r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))))) L)) = ((\L. (!N. (!r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))))) L))
T c= c==> ! ! ! ! c= cl'p b0 b1 b2 b3 cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 * / ! ! ! c= cl'p b0 b1 b2 b3 cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 f0 * / ! ! ! c= cl'p b0 b1 b2 b3 cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 f0
- |- (((((l'y L) r1) x) = y) = ((\y. ((((l'y L) r1) x) = y)) y))
T c= c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM r1) (((((ntrans L) N) r) x) i)) /\ (((MEM x) r1) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el r1) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x)))))))) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1)))
T c==> c< f0 cl'p f1 cntrans f1 f2 f3 f4 f5 f6 f4 c==> c/\ cis_restricted chypermap_of_list f1 c/\ cnormal_list f1 cntrans f1 f2 f3 f4 f5 c/\ cMEM f6 cntrans f1 f2 f3 f4 f5 c/\ cMEM f4 f6 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 cntrans f1 f2 f3 f4 f5 c/\ c= cnext_el f6 f4 cf_list f1 f4 c/\ cLET / cLET_END cfinal_list f1 b0 cfind_list cntrans f1 f2 f3 f4 f5 ce_list f4 cs_flag_list f1 cntrans f1 f2 f3 f4 f5 f6 f4 c~ cMEM cPOWER * part cf_list f1 cSUC f0 cl'y f1 f6 f4 f6
+ ((((l'y L) r1) x) = y), ((MEM r1) (((((ntrans L) N) r) x) i)) |- ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten (((((ntrans L) N) r) x) i)))) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten (((((ntrans L) N) r) x) i))))) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) r1)))
T c==> c= cl'y f0 f1 f2 f3 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f3 cflatten cntrans f0 f4 f5 f2 f6 b1 cl'p f0 cntrans f0 f4 f5 f2 f6 f1 f2 c~ cMEM cPOWER * part cf_list f0 cSUC f7 f3 cflatten cntrans f0 f4 f5 f2 f6 c~ cMEM cPOWER * part cf_list f0 cSUC f7 f3 f1
- |- ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j)
T * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4
+ |- (((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = n) /\ (i < n)) ==> (~ (P i))) = T)
T c= c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 c< f2 f1 c~ * f0 f2 cT
- (~ ((final_list L) r1)), (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)), ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) /\ (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1)))
T c==> c~ cfinal_list f0 f1 c==> c< f2 cl'p f0 cntrans f0 f3 f4 f5 f6 f1 f5 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 f1 f5 c/\ cmarked_list f0 cntrans f0 f3 f4 f5 f6 f1 f5 c~ cMEM cPOWER * part cf_list f0 cSUC f2 cl'y f0 f1 f5 f1
- |- (!y. (((\y. ((((l'y L) r1) x) = y)) y) ==> (?y. ((((l'y L) r1) x) = y))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- |- ((LET_END t) = t)
T c= cLET_END f0 f0
+ |- ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x)
T * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0
- |- ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
- ((((l'y L) r1) x) = y) |- ((\y. ((((l'y L) r1) x) = y)) y)
T c==> c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)), ((MEM r1) (((((ntrans L) N) r) x) i)) |- (!y. (((\y. ((((l'y L) r1) x) = y)) y) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1))))
T c==> c< f0 cl'p f1 cntrans f1 f2 f3 f4 f5 f6 f4 c==> cMEM f6 cntrans f1 f2 f3 f4 f5 ! c==> * / c= cl'y f1 f6 f4 b1 b0 c~ cMEM cPOWER * part cf_list f1 cSUC f0 cl'y f1 f6 f4 f6
+ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM r1) (((((ntrans L) N) r) x) i)) /\ (((MEM x) r1) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el r1) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x))))))), (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) |- (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1))
T c==> c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM f5 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 f5 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el f5 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c< f6 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cMEM cPOWER * part cf_list f0 cSUC f6 cl'y f0 f5 f3 f5
+ |- (((!r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))) ==> ((\r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))) r)) = ((\r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))) r))
T c= c==> ! ! c= cl'p f0 f1 b0 b1 cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 * / ! c= cl'p f0 f1 b0 b1 cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 f2 * / ! c= cl'p f0 f1 b0 b1 cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 f2
+ ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM r1) (((((ntrans L) N) r) x) i)) /\ (((MEM x) r1) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el r1) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x)))))))), (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM r1) (((((ntrans L) N) r) x) i)) /\ (((MEM x) r1) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el r1) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x)))))))) /\ (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1)))
T c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM f5 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 f5 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el f5 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c< f6 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3 c/\ c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM f5 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 f5 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el f5 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cMEM cPOWER * part cf_list f0 cSUC f6 cl'y f0 f5 f3 f5
- |- ((\N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))))) N)
T * / ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b3 cMEM cPOWER * part cf_list f0 cSUC b4 cl'y f0 b1 b2 cflatten b0 b4 cl'p f0 b0 b1 b2 f1
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c= cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cT
+ |- (((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten (((((ntrans L) N) r) x) i)))) m))))) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) y)) (flatten (((((ntrans L) N) r) x) i)))) p)))))) = T)
T c= c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f1 cflatten cntrans f0 f2 f3 f4 f5 b1 cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f1 cflatten cntrans f0 f2 f3 f4 f5 b1 cT
+ |- ((\N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cytrans f0 b0 b1 b2 b3 cl'y f0 crtrans f0 b0 b1 b2 b3 b2 f1
- |- (((((l'y L) r1) x) = y) ==> (?y. ((((l'y L) r1) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
+ |- (((((l'y L) r1) x) = (((l'y L) r1) x)) = ((\y. ((((l'y L) r1) x) = y)) (((l'y L) r1) x)))
T c= c= cl'y f0 f1 f2 cl'y f0 f1 f2 * / c= cl'y f0 f1 f2 b0 cl'y f0 f1 f2
- |- (((!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) ==> ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)) = ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x))
T c= c==> ! ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
- |- ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))
T c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten f3 b1 cl'p f0 f3 f1 f2
- |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
+ (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((((rtrans L) N) r) x) i) = r1), (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)), ((((marked_list L) N) r) x) |- (((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= crtrans f0 f2 f3 f4 f5 f1 c==> c< f6 cl'p f0 cntrans f0 f2 f3 f4 f5 f1 f4 c==> cmarked_list f0 f2 f3 f4 c==> cMEM cPOWER * part cf_list f0 cSUC f6 cytrans f0 f2 f3 f4 f5 f1 cF
+ ((MEM (((POWER (f_list L)) (SUC j)) y)) r1) |- (((MEM (((POWER (f_list L)) (SUC j)) y)) r1) = T)
T c==> cMEM cPOWER * part cf_list f0 cSUC f1 f2 f3 c= cMEM cPOWER * part cf_list f0 cSUC f1 f2 f3 cT
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((((marked_list L) N) r) x) /\ (((((((rtrans L) N) r) x) i) = r1) /\ (~ ((final_list L) r1)))) |- (!j. ((j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5 ! c==> c< b0 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 f4 f5
+ |- ((\P. (!i'. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) /\ (i' < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x))) ==> (~ (P i'))))) (\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r1) x))) (flatten (((((ntrans L) N) r) x) i)))))
T * / ! c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3 c< b1 cl'p f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ * b0 b1 / cMEM cPOWER * part cf_list f0 cSUC b0 cl'y f0 f5 f3 cflatten cntrans f0 f1 f2 f3 f4
+ |- ((!c. (!b. ((c ==> b) ==> ((~ b) ==> (~ c))))) ==> (!b. (!c. ((c ==> b) ==> ((~ b) ==> (~ c))))))
T c==> ! ! c==> c==> b0 b1 c==> c~ b1 c~ b0 ! ! c==> c==> b1 b0 c==> c~ b0 c~ b1
+ (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
+ ((\y. ((((l'y L) r1) x) = y)) y) |- ((((((l'y L) r1) x) = y) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1))) = (~ ((MEM (((POWER (f_list L)) (SUC j)) (((l'y L) r1) x))) r1)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 cSUC f4 cl'y f0 f1 f2 f1 c~ cMEM cPOWER * part cf_list f0 cSUC f4 cl'y f0 f1 f2 f1
- (!c. (!b. ((c ==> b) ==> ((~ b) ==> (~ c))))), (c ==> b) |- ((!c. (!b. ((c ==> b) ==> ((~ b) ==> (~ c))))) /\ ((~ b) ==> (~ c)))
T c==> ! ! c==> c==> b0 b1 c==> c~ b1 c~ b0 c==> c==> f0 f1 c/\ ! ! c==> c==> b0 b1 c==> c~ b1 c~ b0 c==> c~ f1 c~ f0
+ |- ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)
T * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((\x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cytrans f0 f1 f2 b0 b1 cl'y f0 crtrans f0 f1 f2 b0 b1 b0 f3
- |- (((!L. (!N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))))) ==> ((\L. (!N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))))) L)) = ((\L. (!N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))))) L))
T c= c==> ! ! ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 cl'p b0 b1 b2 b3 * / ! ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 cl'p b0 b1 b2 b3 f0 * / ! ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 cl'p b0 b1 b2 b3 f0
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((((rtrans L) N) r) x) i) = r1), (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)), ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1), ((((marked_list L) N) r) x) |- (((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1) /\ F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= crtrans f0 f2 f3 f4 f5 f1 c==> c< f6 cl'p f0 cntrans f0 f2 f3 f4 f5 f1 f4 c==> cMEM cPOWER * part cf_list f0 cSUC f6 cytrans f0 f2 f3 f4 f5 f1 c==> cmarked_list f0 f2 f3 f4 c/\ cMEM cPOWER * part cf_list f0 cSUC f6 cytrans f0 f2 f3 f4 f5 f1 cF
- |- (((!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) ==> ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r)) = ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r))
T c= c==> ! ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2 * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2
- |- (((!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))) ==> ((\x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))) x)) = ((\x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))) x))
T c= c==> ! c= cmin_num * part cGSPEC / c? / cSETSPEC b1 cMEM cPOWER * part cf_list f0 cSUC b2 cl'y f0 f1 b0 cflatten f2 b2 cl'p f0 f2 f1 b0 * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 cMEM cPOWER * part cf_list f0 cSUC b2 cl'y f0 f1 b0 cflatten f2 b2 cl'p f0 f2 f1 b0 f3 * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 cMEM cPOWER * part cf_list f0 cSUC b2 cl'y f0 f1 b0 cflatten f2 b2 cl'p f0 f2 f1 b0 f3
- |- (((!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) ==> ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)) = ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N))
T c= c==> ! ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1 * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
- |- ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i)
T * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4
- |- (((!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))) ==> ((\r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))) r)) = ((\r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))) r))
T c= c==> ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 cl'p f0 f1 b0 b1 * / ! c= cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 cl'p f0 f1 b0 b1 f2 * / ! c= cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 cl'p f0 f1 b0 b1 f2
- |- (((!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L))
T c= c==> ! ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0 * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0
- |- ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L)
T * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0
- (((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten (((((ntrans L) N) r) x) i)))) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten (((((ntrans L) N) r) x) i))))) |- ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten (((((ntrans L) N) r) x) i)))) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten (((((ntrans L) N) r) x) i))))) = T)
T c==> c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f1 cflatten cntrans f0 f2 f3 f4 f5 b1 cl'p f0 cntrans f0 f2 f3 f4 f5 f6 f4 c~ cMEM cPOWER * part cf_list f0 cSUC f7 f1 cflatten cntrans f0 f2 f3 f4 f5 c= c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f1 cflatten cntrans f0 f2 f3 f4 f5 b1 cl'p f0 cntrans f0 f2 f3 f4 f5 f6 f4 c~ cMEM cPOWER * part cf_list f0 cSUC f7 f1 cflatten cntrans f0 f2 f3 f4 f5 cT
- (~ ((final_list L) r1)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((((rtrans L) N) r) x) i) = r1), (j < ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)), ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1), ((((marked_list L) N) r) x) |- F
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= crtrans f0 f2 f3 f4 f5 f1 c==> c< f6 cl'p f0 cntrans f0 f2 f3 f4 f5 f1 f4 c==> cMEM cPOWER * part cf_list f0 cSUC f6 cytrans f0 f2 f3 f4 f5 f1 c==> cmarked_list f0 f2 f3 f4 cF
- ((\y. ((((l'y L) r1) x) = y)) y) |- ((((((l'y L) r1) x) = y) ==> (?y. ((((l'y L) r1) x) = y))) = (?y. ((((l'y L) r1) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- |- ((((\y. ((((l'y L) r1) x) = y)) y) ==> (?y. ((((l'y L) r1) x) = y))) = T)
T c= c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) = T)
T c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c= cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 cT
- |- ((\x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))) x)
T * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 cMEM cPOWER * part cf_list f0 cSUC b2 cl'y f0 f1 b0 cflatten f2 b2 cl'p f0 f2 f1 b0 f3
- |- ((\r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))) r)
T * / ! c= cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 cl'p f0 f1 b0 b1 f2
- ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1) |- (((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) i))) r1) = T)
T c==> cMEM cPOWER * part cf_list f0 cSUC f1 cytrans f0 f2 f3 f4 f5 f6 c= cMEM cPOWER * part cf_list f0 cSUC f1 cytrans f0 f2 f3 f4 f5 f6 cT
- ((((l'y L) r1) x) = y), (((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten (((((ntrans L) N) r) x) i)))) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten (((((ntrans L) N) r) x) i))))), ((MEM r1) (((((ntrans L) N) r) x) i)) |- (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) r1))
T c==> c= cl'y f0 f1 f2 f3 c==> c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f3 cflatten cntrans f0 f4 f5 f2 f6 b1 cl'p f0 cntrans f0 f4 f5 f2 f6 f1 f2 c~ cMEM cPOWER * part cf_list f0 cSUC f7 f3 cflatten cntrans f0 f4 f5 f2 f6 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c~ cMEM cPOWER * part cf_list f0 cSUC f7 f3 f1
- ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) = T)
T c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c= cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 cT
- |- ((\L. (!N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))))) L)
T * / ! ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 cl'p b0 b1 b2 b3 f0
- |- (((\p. (f p)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4
- |- ((\t. ((LET_END t) = t)) t)
T * / c= cLET_END b0 b0 f0
- (c ==> b) |- ((!c. (!b. ((c ==> b) ==> ((~ b) ==> (~ c))))) ==> ((~ b) ==> (~ c)))
T c==> c==> f0 f1 c==> ! ! c==> c==> b0 b1 c==> c~ b1 c~ b0 c==> c~ f1 c~ f0
- |- (((!N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))))) ==> ((\N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))))) N)) = ((\N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))))) N))
T c= c==> ! ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b3 cMEM cPOWER * part cf_list f0 cSUC b4 cl'y f0 b1 b2 cflatten b0 b4 cl'p f0 b0 b1 b2 * / ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b3 cMEM cPOWER * part cf_list f0 cSUC b4 cl'y f0 b1 b2 cflatten b0 b4 cl'p f0 b0 b1 b2 f1 * / ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b3 cMEM cPOWER * part cf_list f0 cSUC b4 cl'y f0 b1 b2 cflatten b0 b4 cl'p f0 b0 b1 b2 f1
- |- ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))
T c= cPOWER * * part ctransform_list f0 f1 f2 c, f3 f4 c, cntrans f0 f3 f4 f1 f2 crtrans f0 f3 f4 f1 f2
- |- ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2
- |- (((!j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) ==> ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j)) = ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j))
T c= c==> ! c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4 * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4
- ((\y. ((((l'y L) r1) x) = y)) y) |- (((\y. ((((l'y L) r1) x) = y)) y) /\ (?y. ((((l'y L) r1) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c/\ * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- ((normal_list L) (((((ntrans L) N) r) x) i)) |- (((normal_list L) (((((ntrans L) N) r) x) i)) = T)
T c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c= cnormal_list f0 cntrans f0 f1 f2 f3 f4 cT
- ((((l'y L) r1) x) = y), (((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten (((((ntrans L) N) r) x) i)))) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten (((((ntrans L) N) r) x) i))))), ((MEM r1) (((((ntrans L) N) r) x) i)) |- ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten (((((ntrans L) N) r) x) i)))) m))))) = ((((l'p L) (((((ntrans L) N) r) x) i)) r1) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten (((((ntrans L) N) r) x) i))))) /\ (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) r1)))
T c==> c= cl'y f0 f1 f2 f3 c==> c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f3 cflatten cntrans f0 f4 f5 f2 f6 b1 cl'p f0 cntrans f0 f4 f5 f2 f6 f1 f2 c~ cMEM cPOWER * part cf_list f0 cSUC f7 f3 cflatten cntrans f0 f4 f5 f2 f6 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c/\ c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f3 cflatten cntrans f0 f4 f5 f2 f6 b1 cl'p f0 cntrans f0 f4 f5 f2 f6 f1 f2 c~ cMEM cPOWER * part cf_list f0 cSUC f7 f3 cflatten cntrans f0 f4 f5 f2 f6 c~ cMEM cPOWER * part cf_list f0 cSUC f7 f3 f1
- ((((l'y L) r1) x) = y) |- (((((l'y L) r1) x) = y) /\ (?y. ((((l'y L) r1) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c/\ c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- ((MEM x) r1) |- (((MEM x) r1) = T)
T c==> cMEM f0 f1 c= cMEM f0 f1 cT
