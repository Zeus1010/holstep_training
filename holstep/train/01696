N Fan.vcross_e3_fan
C |- (!x. (!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0)))))))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c= ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 cvec cNUMERAL c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D CROSS_REFL
A |- (!x. (((cross x) x) = (vec (NUMERAL _0))))
T c= ccross f0 f0 cvec cNUMERAL c_0
D CROSS_RMUL
A |- (!c. (!x. (!y. (((cross x) ((% c) y)) = ((% c) ((cross x) y))))))
T c= ccross f0 c% f1 f2 c% f1 ccross f0 f2
D Fan.e3_fan
A |- (!u. (!v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x))))))
T c= ce3_fan f0 f1 f2 c% creal_inv cvector_norm cvector_sub f1 f0 cvector_sub f1 f0
+ |- (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0)))
T c= ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 cvec cNUMERAL c_0
+ |- (((% (real_inv (vector_norm ((vector_sub v) x)))) (vec (NUMERAL _0))) = (vec (NUMERAL _0)))
T c= c% creal_inv cvector_norm cvector_sub f0 f1 cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ |- (((!v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x))))) ==> ((\v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x))))) v)) = ((\v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x))))) v))
T c= c==> ! ! c= ce3_fan b1 b0 f0 c% creal_inv cvector_norm cvector_sub b0 b1 cvector_sub b0 b1 * / ! c= ce3_fan b1 b0 f0 c% creal_inv cvector_norm cvector_sub b0 b1 cvector_sub b0 b1 f1 * / ! c= ce3_fan b1 b0 f0 c% creal_inv cvector_norm cvector_sub b0 b1 cvector_sub b0 b1 f1
+ |- ((\u. (!v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))))) u)
T * / ! ! c= ce3_fan b2 b1 b0 c% creal_inv cvector_norm cvector_sub b1 b2 cvector_sub b1 b2 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) = (((lambdai. ((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) ((lambdai. (real_of_num (NUMERAL _0))) $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_mul creal_inv cvector_norm clambda / creal_sub c$ f1 b0 c$ f2 b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c$ clambda / creal_mul creal_inv cvector_norm clambda / creal_sub c$ f1 b1 c$ f2 b1 c$ clambda / creal_of_num cNUMERAL c_0 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0
+ |- (((!x. (!y. (((cross x) ((% c) y)) = ((% c) ((cross x) y))))) ==> ((\x. (!y. (((cross x) ((% c) y)) = ((% c) ((cross x) y))))) x)) = ((\x. (!y. (((cross x) ((% c) y)) = ((% c) ((cross x) y))))) x))
T c= c==> ! ! c= ccross b0 c% f0 b1 c% f0 ccross b0 b1 * / ! c= ccross b0 c% f0 b1 c% f0 ccross b0 b1 f1 * / ! c= ccross b0 c% f0 b1 c% f0 ccross b0 b1 f1
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_inv (vector_norm ((vector_sub v) x)))) (vec (NUMERAL _0))) $ i) = ((vec (NUMERAL _0)) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_inv cvector_norm cvector_sub f1 f2 cvec cNUMERAL c_0 f0 c$ cvec cNUMERAL c_0 f0 cT
+ |- ((\x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))) x)
T * / c= ce3_fan b0 f0 f1 c% creal_inv cvector_norm cvector_sub f0 b0 cvector_sub f0 b0 f2
+ |- ((\y. (((cross x) ((% c) y)) = ((% c) ((cross x) y)))) y)
T * / c= ccross f0 c% f1 b0 c% f1 ccross f0 b0 f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ |- ((\v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x))))) v)
T * / ! c= ce3_fan b1 b0 f0 c% creal_inv cvector_norm cvector_sub b0 b1 cvector_sub b0 b1 f1
- (~ (((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul creal_inv cvector_norm clambda / creal_sub c$ f0 b0 c$ f1 b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
- |- ((!i. t) = t)
T c= ! f0 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- ((\c. (!x. (!y. (((cross x) ((% c) y)) = ((% c) ((cross x) y)))))) c)
T * / ! ! c= ccross b1 c% b0 b2 c% b0 ccross b1 b2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) |- (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) /\ (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0))))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c= ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 cvec cNUMERAL c_0
- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0))))) = T)
T c= ! c==> c/\ c~ c= f0 f1 c/\ c~ c= b0 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub b0 f1 part cEMPTY c= ccross cvector_sub f0 f1 ce3_fan f1 f0 b0 cvec cNUMERAL c_0 cT
+ |- ((!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0)))))) = T)
T c= ! ! c==> c/\ c~ c= b0 f0 c/\ c~ c= b1 f0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 f0 * * part cINSERT cvector_sub b1 f0 part cEMPTY c= ccross cvector_sub b0 f0 ce3_fan f0 b0 b1 cvec cNUMERAL c_0 cT
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))) ==> ((\x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))) x)) = ((\x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))) x))
T c= c==> ! c= ce3_fan b0 f0 f1 c% creal_inv cvector_norm cvector_sub f0 b0 cvector_sub f0 b0 * / c= ce3_fan b0 f0 f1 c% creal_inv cvector_norm cvector_sub f0 b0 cvector_sub f0 b0 f2 * / c= ce3_fan b0 f0 f1 c% creal_inv cvector_norm cvector_sub f0 b0 cvector_sub f0 b0 f2
+ |- ((\x. (!y. (((cross x) ((% c) y)) = ((% c) ((cross x) y))))) x)
T * / ! c= ccross b0 c% f0 b1 c% f0 ccross b0 b1 f1
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) |- ((~ (((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) /\ F)
T c==> c~ c= creal_mul creal_inv cvector_norm clambda / creal_sub c$ f0 b0 c$ f1 b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_mul creal_inv cvector_norm clambda / creal_sub c$ f0 b0 c$ f1 b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) ((lambdai. (real_of_num (NUMERAL _0))) $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_inv (vector_norm ((vector_sub v) x)))) (vec (NUMERAL _0))) $ i) = ((vec (NUMERAL _0)) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_inv cvector_norm clambda / creal_sub c$ f1 b1 c$ f2 b1 c$ clambda / creal_of_num cNUMERAL c_0 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_inv cvector_norm cvector_sub f1 f2 cvec cNUMERAL c_0 f0 c$ cvec cNUMERAL c_0 f0
+ |- ((((% (real_inv (vector_norm ((vector_sub v) x)))) (vec (NUMERAL _0))) = (vec (NUMERAL _0))) = (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0))))
T c= c= c% creal_inv cvector_norm cvector_sub f0 f1 cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 cvec cNUMERAL c_0
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) ((lambdai. (real_of_num (NUMERAL _0))) $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_inv cvector_norm clambda / creal_sub c$ f1 b1 c$ f2 b1 c$ clambda / creal_of_num cNUMERAL c_0 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0
+ |- (((!c. (!x. (!y. (((cross x) ((% c) y)) = ((% c) ((cross x) y)))))) ==> ((\c. (!x. (!y. (((cross x) ((% c) y)) = ((% c) ((cross x) y)))))) c)) = ((\c. (!x. (!y. (((cross x) ((% c) y)) = ((% c) ((cross x) y)))))) c))
T c= c==> ! ! ! c= ccross b1 c% b0 b2 c% b0 ccross b1 b2 * / ! ! c= ccross b1 c% b0 b2 c% b0 ccross b1 b2 f0 * / ! ! c= ccross b1 c% b0 b2 c% b0 ccross b1 b2 f0
- |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) ((lambdai. (real_of_num (NUMERAL _0))) $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_inv cvector_norm clambda / creal_sub c$ f1 b1 c$ f2 b1 c$ clambda / creal_of_num cNUMERAL c_0 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0
- |- ((~ (((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) ==> F)
T c==> c~ c= creal_mul creal_inv cvector_norm clambda / creal_sub c$ f0 b0 c$ f1 b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_gt x) y) = ((real_lt y) x))
T c= creal_gt f0 f1 creal_lt f1 f0
- |- ((real_neg ((real_sub ((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL _0)))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul creal_inv cvector_norm clambda / creal_sub c$ f0 b0 c$ f1 b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
+ |- (((!u. (!v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))))) ==> ((\u. (!v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))))) u)) = ((\u. (!v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))))) u))
T c= c==> ! ! ! c= ce3_fan b2 b1 b0 c% creal_inv cvector_norm cvector_sub b1 b2 cvector_sub b1 b2 * / ! ! c= ce3_fan b2 b1 b0 c% creal_inv cvector_norm cvector_sub b1 b2 cvector_sub b1 b2 f0 * / ! ! c= ce3_fan b2 b1 b0 c% creal_inv cvector_norm cvector_sub b1 b2 cvector_sub b1 b2 f0
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ |- ((\x. (((cross x) x) = (vec (NUMERAL _0)))) x)
T * / c= ccross b0 b0 cvec cNUMERAL c_0 f0
- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_inv (vector_norm ((vector_sub v) x)))) (vec (NUMERAL _0))) $ i) = ((vec (NUMERAL _0)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_inv cvector_norm cvector_sub f1 f2 cvec cNUMERAL c_0 f0 c$ cvec cNUMERAL c_0 f0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
+ |- ((((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((cross ((vector_sub v) x)) (((e3_fan x) v) u)) = (vec (NUMERAL _0)))) = T)
T c= c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c= ccross cvector_sub f0 f1 ce3_fan f1 f0 f2 cvec cNUMERAL c_0 cT
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_inv (vector_norm ((vector_sub v) x)))) (vec (NUMERAL _0))) $ i) = ((vec (NUMERAL _0)) $ i)))) = (((% (real_inv (vector_norm ((vector_sub v) x)))) (vec (NUMERAL _0))) = (vec (NUMERAL _0))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% creal_inv cvector_norm cvector_sub f0 f1 cvec cNUMERAL c_0 b0 c$ cvec cNUMERAL c_0 b0 c= c% creal_inv cvector_norm cvector_sub f0 f1 cvec cNUMERAL c_0 cvec cNUMERAL c_0
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) ==> F) ==> (((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) = (((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= c==> c==> c~ c= creal_mul creal_inv cvector_norm clambda / creal_sub c$ f0 b0 c$ f1 b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF c= creal_mul creal_inv cvector_norm clambda / creal_sub c$ f0 b0 c$ f1 b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_inv cvector_norm clambda / creal_sub c$ f0 b0 c$ f1 b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!y. (((cross x) ((% c) y)) = ((% c) ((cross x) y)))) ==> ((\y. (((cross x) ((% c) y)) = ((% c) ((cross x) y)))) y)) = ((\y. (((cross x) ((% c) y)) = ((% c) ((cross x) y)))) y))
T c= c==> ! c= ccross f0 c% f1 b0 c% f1 ccross f0 b0 * / c= ccross f0 c% f1 b0 c% f1 ccross f0 b0 f2 * / c= ccross f0 c% f1 b0 c% f1 ccross f0 b0 f2
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
+ |- (((!x. (((cross x) x) = (vec (NUMERAL _0)))) ==> ((\x. (((cross x) x) = (vec (NUMERAL _0)))) x)) = ((\x. (((cross x) x) = (vec (NUMERAL _0)))) x))
T c= c==> ! c= ccross b0 b0 cvec cNUMERAL c_0 * / c= ccross b0 b0 cvec cNUMERAL c_0 f0 * / c= ccross b0 b0 cvec cNUMERAL c_0 f0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
