N VSUM_SING
C |- (!f. (!x. (((vsum (x INSERT EMPTY)) f) = (f x))))
T c= cvsum * * part cINSERT f0 part cEMPTY f1 * f1 f0
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D FINITE_RULES
A |- ((FINITE EMPTY) /\ (!x. (!s. ((FINITE s) ==> (FINITE (x INSERT s))))))
T c/\ cFINITE part cEMPTY ! ! c==> cFINITE b1 cFINITE * * part cINSERT b0 b1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D VECTOR_ADD_RID
A |- (!x. (((vector_add x) (vec (NUMERAL _0))) = x))
T c= cvector_add f0 cvec cNUMERAL c_0 f0
D VSUM_CLAUSES
A |- ((!f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) /\ (!x. (!f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))))))
T c/\ ! c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 ! ! ! c==> cFINITE b2 c= cvsum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 cvsum b2 b1 cvector_add * b1 b0 cvsum b2 b1
+ |- (FINITE EMPTY)
T cFINITE part cEMPTY
- (FINITE s) |- (FINITE (x INSERT s))
T c==> cFINITE f0 cFINITE * * part cINSERT f1 f0
- (FINITE s) |- ((FINITE s) /\ (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))
T c==> cFINITE f0 c/\ cFINITE f0 c= cvsum * * part cINSERT f1 f0 f2 cCOND cIN f1 f0 cvsum f0 f2 cvector_add * f2 f1 cvsum f0 f2
+ |- (((!f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) ==> ((\f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) f)) = ((\f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) f))
T c= c==> ! c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 * / c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 f0 * / c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 f0
+ |- ((\s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))) s)
T * / c==> cFINITE b0 c= cvsum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 cvsum b0 f1 cvector_add * f1 f0 cvsum b0 f1 f2
+ |- ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)
T * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
+ |- ((F ==> (((vsum EMPTY) f) = t')) ==> (((~ F) ==> (((vector_add (f x)) ((vsum EMPTY) f)) = e')) ==> ((((COND (x IN EMPTY)) ((vsum EMPTY) f)) ((vector_add (f x)) ((vsum EMPTY) f))) = (((COND F) t') e'))))
T c==> c==> cF c= cvsum part cEMPTY f0 f1 c==> c==> c~ cF c= cvector_add * f0 f2 cvsum part cEMPTY f0 f3 c= cCOND cIN f2 part cEMPTY cvsum part cEMPTY f0 cvector_add * f0 f2 cvsum part cEMPTY f0 cCOND cF f1 f3
+ |- (((F ==> (((vsum EMPTY) f) = (vec (NUMERAL _0)))) ==> (((~ F) ==> (((vector_add (f x)) ((vsum EMPTY) f)) = e')) ==> ((((COND (x IN EMPTY)) ((vsum EMPTY) f)) ((vector_add (f x)) ((vsum EMPTY) f))) = (((COND F) (vec (NUMERAL _0))) e')))) = (((~ F) ==> (((vector_add (f x)) ((vsum EMPTY) f)) = e')) ==> ((((COND (x IN EMPTY)) ((vsum EMPTY) f)) ((vector_add (f x)) ((vsum EMPTY) f))) = (((COND F) (vec (NUMERAL _0))) e'))))
T c= c==> c==> cF c= cvsum part cEMPTY f0 cvec cNUMERAL c_0 c==> c==> c~ cF c= cvector_add * f0 f1 cvsum part cEMPTY f0 f2 c= cCOND cIN f1 part cEMPTY cvsum part cEMPTY f0 cvector_add * f0 f1 cvsum part cEMPTY f0 cCOND cF cvec cNUMERAL c_0 f2 c==> c==> c~ cF c= cvector_add * f0 f1 cvsum part cEMPTY f0 f2 c= cCOND cIN f1 part cEMPTY cvsum part cEMPTY f0 cvector_add * f0 f1 cvsum part cEMPTY f0 cCOND cF cvec cNUMERAL c_0 f2
+ |- ((~ F) ==> (((vector_add (f x)) ((vsum EMPTY) f)) = (f x)))
T c==> c~ cF c= cvector_add * f0 f1 cvsum part cEMPTY f0 * f0 f1
+ |- (((!t'. (!e'. (((x IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) f) = t')) ==> (((~ g') ==> (((vector_add (f x)) ((vsum EMPTY) f)) = e')) ==> ((((COND (x IN EMPTY)) ((vsum EMPTY) f)) ((vector_add (f x)) ((vsum EMPTY) f))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((x IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) f) = t')) ==> (((~ g') ==> (((vector_add (f x)) ((vsum EMPTY) f)) = e')) ==> ((((COND (x IN EMPTY)) ((vsum EMPTY) f)) ((vector_add (f x)) ((vsum EMPTY) f))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((x IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) f) = t')) ==> (((~ g') ==> (((vector_add (f x)) ((vsum EMPTY) f)) = e')) ==> ((((COND (x IN EMPTY)) ((vsum EMPTY) f)) ((vector_add (f x)) ((vsum EMPTY) f))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvsum part cEMPTY f2 b0 c==> c==> c~ f1 c= cvector_add * f2 f0 cvsum part cEMPTY f2 b1 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY f2 cvector_add * f2 f0 cvsum part cEMPTY f2 cCOND f1 b0 b1 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvsum part cEMPTY f2 b0 c==> c==> c~ f1 c= cvector_add * f2 f0 cvsum part cEMPTY f2 b1 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY f2 cvector_add * f2 f0 cvsum part cEMPTY f2 cCOND f1 b0 b1 f3 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvsum part cEMPTY f2 b0 c==> c==> c~ f1 c= cvector_add * f2 f0 cvsum part cEMPTY f2 b1 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY f2 cvector_add * f2 f0 cvsum part cEMPTY f2 cCOND f1 b0 b1 f3
+ |- ((FINITE EMPTY) = T)
T c= cFINITE part cEMPTY cT
+ |- (((vsum EMPTY) f) = (vec (NUMERAL _0)))
T c= cvsum part cEMPTY f0 cvec cNUMERAL c_0
+ |- (((!f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f))))))) ==> ((\f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f))))))) f)) = ((\f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f))))))) f))
T c= c==> ! ! c==> cFINITE b1 c= cvsum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 cvsum b1 b0 cvector_add * b0 f0 cvsum b1 b0 * / ! c==> cFINITE b1 c= cvsum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 cvsum b1 b0 cvector_add * b0 f0 cvsum b1 b0 f1 * / ! c==> cFINITE b1 c= cvsum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 cvsum b1 b0 cvector_add * b0 f0 cvsum b1 b0 f1
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- F |- (F = T)
T c==> cF c= cF cT
- (FINITE s) |- ((FINITE s) /\ ((FINITE (x INSERT s)) = T))
T c==> cFINITE f0 c/\ cFINITE f0 c= cFINITE * * part cINSERT f1 f0 cT
- |- ((\s. ((FINITE s) ==> (FINITE (x INSERT s)))) s)
T * / c==> cFINITE b0 cFINITE * * part cINSERT f0 b0 f1
- |- (((!x. (!s. ((FINITE s) ==> (FINITE (x INSERT s))))) ==> ((\x. (!s. ((FINITE s) ==> (FINITE (x INSERT s))))) x)) = ((\x. (!s. ((FINITE s) ==> (FINITE (x INSERT s))))) x))
T c= c==> ! ! c==> cFINITE b1 cFINITE * * part cINSERT b0 b1 * / ! c==> cFINITE b1 cFINITE * * part cINSERT b0 b1 f0 * / ! c==> cFINITE b1 cFINITE * * part cINSERT b0 b1 f0
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- |- (((!s. ((FINITE s) ==> (FINITE (x INSERT s)))) ==> ((\s. ((FINITE s) ==> (FINITE (x INSERT s)))) s)) = ((\s. ((FINITE s) ==> (FINITE (x INSERT s)))) s))
T c= c==> ! c==> cFINITE b0 cFINITE * * part cINSERT f0 b0 * / c==> cFINITE b0 cFINITE * * part cINSERT f0 b0 f1 * / c==> cFINITE b0 cFINITE * * part cINSERT f0 b0 f1
- |- ((FINITE s) ==> ((FINITE (x INSERT s)) = T))
T c==> cFINITE f0 c= cFINITE * * part cINSERT f1 f0 cT
- |- ((\x. (!s. ((FINITE s) ==> (FINITE (x INSERT s))))) x)
T * / ! c==> cFINITE b1 cFINITE * * part cINSERT b0 b1 f0
