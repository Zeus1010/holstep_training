N Ckqowsa_4_points.segment_intersects_aff_ge_lemma
C |- (!v1. (!v2. (!v. (!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((w IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) = EMPTY)))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))))
T c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c/\ cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ c= * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D TRUTH
A |- T
T cT
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D MEMBER_NOT_EMPTY
A |- (!s. ((?x. (x IN s)) = (~ (s = EMPTY))))
T c= c? / cIN b0 f0 c~ c= f0 part cEMPTY
D ENDS_IN_SEGMENT
A |- (!a. (!b. ((a IN (closed_segment ((CONS (a , b)) NIL))) /\ (b IN (closed_segment ((CONS (a , b)) NIL))))))
T c/\ cIN f0 * part cclosed_segment cCONS c, f0 f1 cNIL cIN f1 * part cclosed_segment cCONS c, f0 f1 cNIL
D BETWEEN_IN_SEGMENT
A |- (!x. (!a. (!b. (((between x) (a , b)) = (x IN (closed_segment ((CONS (a , b)) NIL)))))))
T c= cbetween f0 c, f1 f2 cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL
D SUBSET_SEGMENT
A |- ((!a. (!b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))))) /\ ((!a. (!b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d))))))))) /\ ((!a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))) /\ (!a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))))))
T c/\ ! ! ! ! c= cSUBSET * part cclosed_segment cCONS c, b0 b1 cNIL * part cclosed_segment cCONS c, b2 b3 cNIL c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL c/\ ! ! ! ! c= cSUBSET * part cclosed_segment cCONS c, b0 b1 cNIL * part copen_segment c, b2 b3 c/\ cIN b0 * part copen_segment c, b2 b3 cIN b1 * part copen_segment c, b2 b3 c/\ ! ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part cclosed_segment cCONS c, b2 b3 cNIL c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL ! ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part copen_segment c, b2 b3 c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL
D Hypermap.lemma_in_subset
A |- (!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t)))))
T c==> c/\ cSUBSET f0 f1 cIN f2 f0 cIN f2 f1
D Ckqowsa_4_points.zero_not_between
A |- (!v. (!w. ((~ ((between (vec (NUMERAL _0))) (v , w))) ==> ((~ (v = (vec (NUMERAL _0)))) /\ ((~ (w = (vec (NUMERAL _0)))) /\ (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))))))))
T c==> c~ cbetween cvec cNUMERAL c_0 c, f0 f1 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 ! ! c==> c/\ creal_lt b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b1 c~ c= c% b0 f1 c% b1 f0
D Ckqowsa_4_points.in_segment_imp_in_aff_ge_0_2
A |- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))
T c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Ckqowsa_4_points.points_in_aff_ge_0_2
A |- (!v1. (!v2. (((vec (NUMERAL _0)) IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))
T c/\ cIN cvec cNUMERAL c_0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D Ckqowsa_4_points.aff_ge_0_2_SUBSET
A |- (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))))
T c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D Ckqowsa_4_points.in_aff_ge_cases_lemma
A |- (!v1. (!v2. (!v. (!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))))
T c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c/\ cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) |- ((!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) /\ (!x. (!t. ((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t)))))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 c/\ ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 ! ! c==> c? / c/\ cSUBSET b2 b1 cIN b0 b2 cIN b0 b1
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))) |- (((~ ((between (vec (NUMERAL _0))) (v , p))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c~ cbetween cvec cNUMERAL c_0 c, f0 f1 c==> cIN f2 * part cclosed_segment cCONS c, f0 f1 cNIL c==> c==> c~ cbetween cvec cNUMERAL c_0 c, f0 f2 c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (((!a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))) ==> ((\a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))) a)) = ((\a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))) a))
T c= c==> ! ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part cclosed_segment cCONS c, b2 b3 cNIL c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL * / ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part cclosed_segment cCONS c, b2 b3 cNIL c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL f0 * / ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part cclosed_segment cCONS c, b2 b3 cNIL c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL f0
- |- (((!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))) ==> ((\d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))) d)) = ((\d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))) d))
T c= c==> ! c= cSUBSET * part copen_segment c, f0 f1 * part cclosed_segment cCONS c, f2 b0 cNIL c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f2 b0 cNIL cIN f1 * part cclosed_segment cCONS c, f2 b0 cNIL * / c= cSUBSET * part copen_segment c, f0 f1 * part cclosed_segment cCONS c, f2 b0 cNIL c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f2 b0 cNIL cIN f1 * part cclosed_segment cCONS c, f2 b0 cNIL f3 * / c= cSUBSET * part copen_segment c, f0 f1 * part cclosed_segment cCONS c, f2 b0 cNIL c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f2 b0 cNIL cIN f1 * part cclosed_segment cCONS c, f2 b0 cNIL f3
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- |- (((!a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))) ==> ((\a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))) a)) = ((\a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))) a))
T c= c==> ! ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part copen_segment c, b2 b3 c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL * / ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part copen_segment c, b2 b3 c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL f0 * / ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part copen_segment c, b2 b3 c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL f0
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- ((\v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) v)
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ |- (((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , w)) NIL))) = ((~ ((between (vec (NUMERAL _0))) (v , w))) ==> F))
T c= cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f0 f1 cNIL c==> c~ cbetween cvec cNUMERAL c_0 c, f0 f1 cF
+ |- ((\b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))) b)
T * / ! ! c= cSUBSET * part cclosed_segment cCONS c, f0 b0 cNIL * part cclosed_segment cCONS c, b1 b2 cNIL c/\ cIN f0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL f1
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), ((\u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) u) |- (((\u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) u) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 c% b0 f3 f5 c/\ * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 c% b0 f3 f5 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) |- ((!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) = T)
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= ! ! c==> cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cT
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) |- ((!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) /\ (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))))
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- ((\v2. (!v. (!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) v2)
T * / ! ! c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, b1 b2 c/\ cIN b1 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) |- (?s. ((s SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (v2 IN s)))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c? / c/\ cSUBSET b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 b0
+ (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL))) |- (((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL))) /\ F)
T c==> c~ cbetween cvec cNUMERAL c_0 c, f0 f1 c==> cIN f2 * part cclosed_segment cCONS c, f0 f1 cNIL c==> cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f0 f2 cNIL c/\ cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f0 f2 cNIL cF
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f2 c% f5 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) ==> ((\v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) v)) = ((\v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) v))
T c= c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ ((\s. ((s SUBSET t) /\ (x IN s))) s) |- ((((s SUBSET t) /\ (x IN s)) ==> ((!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) ==> (x IN t))) = ((!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) ==> (x IN t)))
T c==> * / c/\ cSUBSET b0 f0 cIN f1 b0 f2 c= c==> c/\ cSUBSET f2 f0 cIN f1 f2 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 cIN f1 f0 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 cIN f1 f0
+ (!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) |- (((!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t)))) ==> ((\t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t)))) t)) = ((\t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t)))) t))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 c= c==> ! ! c==> c/\ cSUBSET f0 b0 cIN b1 f0 cIN b1 b0 * / ! c==> c/\ cSUBSET f0 b0 cIN b1 f0 cIN b1 b0 f1 * / ! c==> c/\ cSUBSET f0 b0 cIN b1 f0 cIN b1 b0 f1
+ (p IN (closed_segment ((CONS (v , w)) NIL))), ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL))) |- ((~ ((between (vec (NUMERAL _0))) (v , w))) ==> F)
T c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c==> cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f1 f0 cNIL c==> c~ cbetween cvec cNUMERAL c_0 c, f1 f2 cF
- |- ((\x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0)))) x)
T * / c= c% creal_of_num cNUMERAL c_0 b0 cvec cNUMERAL c_0 f0
+ |- ((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t))
T c==> c? / c/\ cSUBSET b0 f0 cIN f1 b0 cIN f1 f0
- |- (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)
T c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 f0
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= f2 cvec cNUMERAL c_0 c==> c~ c= f3 cvec cNUMERAL c_0 c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\w. (!v1. (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) w)
T * / ! ! c==> c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ c~ c= b2 cvec cNUMERAL c_0 c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- |- ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)
T * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- (((!x. (((\u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) x) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))) ==> ((?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))) = ((?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> ! c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f2 c% b1 f3 b0 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 c% b0 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 c% b0 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) |- (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN f0 * part cclosed_segment cCONS c, f1 b0 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
+ (!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) |- (!t. ((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t)))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 ! c==> c? / c/\ cSUBSET b1 b0 cIN f0 b1 cIN f0 b0
- (~ (u = (real_of_num (NUMERAL _0)))) |- (~ ((real_of_num (NUMERAL _0)) = u))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c~ c= creal_of_num cNUMERAL c_0 f0
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- (!u. (((\u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) u) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f2 c% b1 f3 b0 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((?x. (x IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))) = ((~ (((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) = EMPTY)) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c= c==> c? / cIN b0 * * part cINTER * part cclosed_segment cCONS c, f0 f1 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= * * part cINTER * part cclosed_segment cCONS c, f0 f1 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))
T cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- ((vec (NUMERAL _0)) = w) |- (w = (vec (NUMERAL _0)))
T c==> c= cvec cNUMERAL c_0 f0 c= f0 cvec cNUMERAL c_0
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f4 c/\ creal_le f4 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f2 c% f4 f3 c==> cIN f5 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f5 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 c/\ creal_le f4 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f2 c% f4 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) |- (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t)))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 ! c==> c/\ cSUBSET f0 f1 cIN b0 f0 cIN b0 f1
- (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f1 f2 c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c==> cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) |- ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- (((\u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) u) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 c% b0 f3 f5 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))) d)
T * / c= cSUBSET * part copen_segment c, f0 f1 * part cclosed_segment cCONS c, f2 b0 cNIL c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f2 b0 cNIL cIN f1 * part cclosed_segment cCONS c, f2 b0 cNIL f3
- ((~ (u = (real_of_num (NUMERAL _0)))) ==> ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) |- ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c==> c~ c= f0 creal_of_num cNUMERAL c_0 c==> c= f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 c% f0 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 c% f0 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((\u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) u) |- (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))
T c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 f3 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ creal_le f3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f1 c% f3 f2
+ |- ((\d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))) d)
T * / c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cclosed_segment cCONS c, f2 b0 cNIL c/\ cIN f0 * part cclosed_segment cCONS c, f2 b0 cNIL cIN f1 * part cclosed_segment cCONS c, f2 b0 cNIL f3
- (u = (real_of_num (NUMERAL _0))) |- ((real_of_num (NUMERAL _0)) = u)
T c==> c= f0 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL c_0 f0
- (~ (u = (real_of_num (NUMERAL _0)))) |- ((u = (real_of_num (NUMERAL _0))) = F)
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= c= f0 creal_of_num cNUMERAL c_0 cF
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- ((\w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) w)
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
- (~ ((between (vec (NUMERAL _0))) (v , w))) |- (((between (vec (NUMERAL _0))) (v , w)) = F)
T c==> c~ cbetween cvec cNUMERAL c_0 c, f0 f1 c= cbetween cvec cNUMERAL c_0 c, f0 f1 cF
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), ((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((w IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) = EMPTY)))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c/\ cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ c= * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((\v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) v1)) = ((\v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) v1))
T c= c==> ! ! c==> cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * / ! c==> cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
+ |- (((!a. (!b. (((between x) (a , b)) = (x IN (closed_segment ((CONS (a , b)) NIL)))))) ==> ((\a. (!b. (((between x) (a , b)) = (x IN (closed_segment ((CONS (a , b)) NIL)))))) a)) = ((\a. (!b. (((between x) (a , b)) = (x IN (closed_segment ((CONS (a , b)) NIL)))))) a))
T c= c==> ! ! c= cbetween f0 c, b0 b1 cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL * / ! c= cbetween f0 c, b0 b1 cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL f1 * / ! c= cbetween f0 c, b0 b1 cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL f1
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (~ (w = (vec (NUMERAL _0)))) |- (((~ ((vec (NUMERAL _0)) = w)) ==> (((vec (NUMERAL _0)) = w) = F)) = (((vec (NUMERAL _0)) = w) = F))
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c==> c~ c= cvec cNUMERAL c_0 f0 c= c= cvec cNUMERAL c_0 f0 cF c= c= cvec cNUMERAL c_0 f0 cF
+ |- ((\a. (!b. ((a IN (closed_segment ((CONS (a , b)) NIL))) /\ (b IN (closed_segment ((CONS (a , b)) NIL)))))) a)
T * / ! c/\ cIN b0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN b1 * part cclosed_segment cCONS c, b0 b1 cNIL f0
+ (p IN (closed_segment ((CONS (v , w)) NIL))), ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL))) |- (((?s. ((s SUBSET (closed_segment ((CONS (v , w)) NIL))) /\ ((vec (NUMERAL _0)) IN s))) ==> ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , w)) NIL)))) = ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , w)) NIL))))
T c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c==> cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f1 f0 cNIL c= c==> c? / c/\ cSUBSET b0 * part cclosed_segment cCONS c, f1 f2 cNIL cIN cvec cNUMERAL c_0 b0 cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f1 f2 cNIL cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f1 f2 cNIL
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))), (v IN (closed_segment ((CONS (v1 , v2)) NIL))) |- ((!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) /\ (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c/\ ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))), (?s. ((s SUBSET t) /\ (x IN s))) |- ((?s. ((s SUBSET t) /\ (x IN s))) /\ (x IN t))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 c==> c? / c/\ cSUBSET b0 f0 cIN f1 b0 c/\ c? / c/\ cSUBSET b0 f0 cIN f1 b0 cIN f1 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!v2. (!v. (!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) ==> ((\v2. (!v. (!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) v2)) = ((\v2. (!v. (!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) v2))
T c= c==> ! ! ! c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, b1 b2 c/\ cIN b1 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, b1 b2 c/\ cIN b1 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, b1 b2 c/\ cIN b1 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
+ ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL))) |- (((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL))) = T)
T c==> cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f0 f1 cNIL cT
- |- ((v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) = T)
T c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cT
- |- ((\x. (((real_sub x) (real_of_num (NUMERAL _0))) = x)) x)
T * / c= creal_sub b0 creal_of_num cNUMERAL c_0 b0 f0
+ |- ((!v2. (!v. (!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((w IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) = EMPTY)))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) = T)
T c= ! ! ! c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, b1 b2 c/\ cIN b1 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c~ c= * * part cINTER * part cclosed_segment cCONS c, b1 b2 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY part cEMPTY c\/ cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- ((!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cT
- |- (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0)))
T c= c% creal_of_num cNUMERAL c_0 f0 cvec cNUMERAL c_0
+ |- ((\v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) v2)
T * / c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f3
- |- (((!x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) ==> ((\x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) x)) = ((\x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) x))
T c= c==> ! c= c% creal_of_num cNUMERAL cBIT1 c_0 b0 b0 * / c= c% creal_of_num cNUMERAL cBIT1 c_0 b0 b0 f0 * / c= c% creal_of_num cNUMERAL cBIT1 c_0 b0 b0 f0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), ((p IN (closed_segment ((CONS (v , w)) NIL))) /\ (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> c/\ cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))) |- ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v))))
T c==> ! ! c==> c/\ creal_lt b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b1 c~ c= c% b0 f0 c% b1 f1 c==> c/\ creal_lt f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 f3 c~ c= c% f2 f0 c% f3 f1
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((w IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) = EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> c/\ c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c/\ cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ c= * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((?u. t) = t)
T c= c? / f0 f0
- ((real_le (real_of_num (NUMERAL _0))) u) |- (((real_le (real_of_num (NUMERAL _0))) u) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 f0 cT
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY
+ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) |- ((((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) = ((((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))))))
T c==> cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ (w = (vec (NUMERAL _0)))) |- (((vec (NUMERAL _0)) = w) = F)
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c= cvec cNUMERAL c_0 f0 cF
+ |- (((s SUBSET t) /\ (x IN s)) ==> ((!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) ==> (x IN t)))
T c==> c/\ cSUBSET f0 f1 cIN f2 f0 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 cIN f2 f1
+ (!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) |- ((\x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))) x)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 * / c==> c/\ cSUBSET f0 f1 cIN b0 f0 cIN b0 f1 f2
- (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))) |- ((\a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))) a)
T c==> ! ! c==> c/\ creal_lt b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b1 c~ c= c% b0 f0 c% b1 f1 * / ! c==> c/\ creal_lt b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b1 c~ c= c% b0 f0 c% b1 f1 f2
- (u = (real_of_num (NUMERAL _0))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) |- ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c==> cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f4 c% f0 f5 c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((\b. (!x. (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))))))) b)
T * / ! c/\ c= cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 f0 c% b2 b0 c= cIN b1 * part copen_segment c, f0 b0 c/\ c~ c= f0 b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 f0 c% b2 b0 f1
+ ((\s. ((s SUBSET t) /\ (x IN s))) s) |- (((\s. ((s SUBSET t) /\ (x IN s))) s) /\ ((!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) ==> (x IN t)))
T c==> * / c/\ cSUBSET b0 f0 cIN f1 b0 f2 c/\ * / c/\ cSUBSET b0 f0 cIN f1 b0 f2 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 cIN f1 f0
+ |- (((closed_segment ((CONS (a , b)) NIL)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))
T c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cclosed_segment cCONS c, f2 f3 cNIL c/\ cIN f0 * part cclosed_segment cCONS c, f2 f3 cNIL cIN f1 * part cclosed_segment cCONS c, f2 f3 cNIL
+ |- (((!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) ==> (!x. (!t. ((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t))))) = (!x. (!t. ((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t)))))
T c= c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 ! ! c==> c? / c/\ cSUBSET b2 b1 cIN b0 b2 cIN b0 b1 ! ! c==> c? / c/\ cSUBSET b2 b1 cIN b0 b2 cIN b0 b1
+ |- ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)
T * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
+ (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- (((!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((\v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) v)) = ((\v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) v))
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= c==> ! ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 * / ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
- |- (((!a. (!b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d))))))))) ==> ((\a. (!b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d))))))))) a)) = ((\a. (!b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d))))))))) a))
T c= c==> ! ! ! ! c= cSUBSET * part cclosed_segment cCONS c, b0 b1 cNIL * part copen_segment c, b2 b3 c/\ cIN b0 * part copen_segment c, b2 b3 cIN b1 * part copen_segment c, b2 b3 * / ! ! ! c= cSUBSET * part cclosed_segment cCONS c, b0 b1 cNIL * part copen_segment c, b2 b3 c/\ cIN b0 * part copen_segment c, b2 b3 cIN b1 * part copen_segment c, b2 b3 f0 * / ! ! ! c= cSUBSET * part cclosed_segment cCONS c, b0 b1 cNIL * part copen_segment c, b2 b3 c/\ cIN b0 * part copen_segment c, b2 b3 cIN b1 * part copen_segment c, b2 b3 f0
- |- ((\a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))) a)
T * / ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part cclosed_segment cCONS c, b2 b3 cNIL c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL f0
+ |- (((!w. (!v1. (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) ==> ((\w. (!v1. (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) w)) = ((\w. (!v1. (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) w))
T c= c==> ! ! ! c==> c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ c~ c= b2 cvec cNUMERAL c_0 c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ c~ c= b2 cvec cNUMERAL c_0 c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ c~ c= b2 cvec cNUMERAL c_0 c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- (u = (real_of_num (NUMERAL _0))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) |- ((u = (real_of_num (NUMERAL _0))) /\ ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c==> cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f0 creal_of_num cNUMERAL c_0 c==> c= f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f4 c% f0 f5 c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) |- ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (p = v), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c= f0 f1 c==> cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f4 part cEMPTY
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- (((~ (v = (vec (NUMERAL _0)))) /\ ((~ (w = (vec (NUMERAL _0)))) /\ (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ c~ c= f2 cvec cNUMERAL c_0 c/\ c~ c= f3 cvec cNUMERAL c_0 ! ! c==> c/\ creal_lt b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b1 c~ c= c% b0 f3 c% b1 f2 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((((\x. (x IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) p) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))) = T)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> * / cIN b0 * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) |- (((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))) = T)
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) |- (T = ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cT c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ |- (((!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) ==> ((\v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) v2)) = ((\v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) v2))
T c= c==> ! c==> cIN f0 * part cclosed_segment cCONS c, f1 b0 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / c==> cIN f0 * part cclosed_segment cCONS c, f1 b0 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 * / c==> cIN f0 * part cclosed_segment cCONS c, f1 b0 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ |- (a IN (closed_segment ((CONS (a , b)) NIL)))
T cIN f0 * part cclosed_segment cCONS c, f0 f1 cNIL
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((p IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f4 * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b)))))))))
T c/\ c= cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 c= cIN f0 * part copen_segment c, f1 f2 c/\ c~ c= f1 f2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2
+ |- ((\v. (!w. ((~ ((between (vec (NUMERAL _0))) (v , w))) ==> ((~ (v = (vec (NUMERAL _0)))) /\ ((~ (w = (vec (NUMERAL _0)))) /\ (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v))))))))))) v)
T * / ! c==> c~ cbetween cvec cNUMERAL c_0 c, b0 b1 c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 ! ! c==> c/\ creal_lt b2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b3 c~ c= c% b2 b1 c% b3 b0 f0
- (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))), ((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) |- (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) /\ (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((((~ ((between (vec (NUMERAL _0))) (v , p))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))) = ((((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , p))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> c==> c~ cbetween cvec cNUMERAL c_0 c, f3 f2 c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, f3 f2 c/\ cIN f3 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))) |- ((~ ((between (vec (NUMERAL _0))) (v , p))) /\ (((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c~ cbetween cvec cNUMERAL c_0 c, f0 f1 c==> cIN f2 * part cclosed_segment cCONS c, f0 f1 cNIL c/\ c~ cbetween cvec cNUMERAL c_0 c, f0 f2 c==> c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- ((\v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) v1)
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ |- (((!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) ==> ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)) = ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x))
T c= c==> ! c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
- (p = v), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) |- ((p = v) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c= f0 f1 c==> cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f0 f1 c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f4 part cEMPTY
+ |- ((\t. ((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t))) t)
T * / c==> c? / c/\ cSUBSET b1 b0 cIN f0 b1 cIN f0 b0 f1
- (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))), ((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) |- ((!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) /\ (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ ((\x. (x IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) p) |- (((p IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))) = ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> * / cIN b0 * * part cINTER * part cclosed_segment cCONS c, f0 f1 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> cIN f4 * * part cINTER * part cclosed_segment cCONS c, f0 f1 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((w IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) = EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> c/\ cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ c= * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b)))))))
T c= cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2
+ |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) |- (((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t)) = T)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 c= c==> c? / c/\ cSUBSET b0 f0 cIN f1 b0 cIN f1 f0 cT
+ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) |- ((v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- (((!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) ==> ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t)) = ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t))
T c= c==> ! ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1
- (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))) |- (((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))) = T)
T c==> ! ! c==> c/\ creal_lt b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b1 c~ c= c% b0 f0 c% b1 f1 c= c==> c/\ creal_lt f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 f3 c~ c= c% f2 f0 c% f3 f1 cT
+ |- (((!w. ((~ ((between (vec (NUMERAL _0))) (v , w))) ==> ((~ (v = (vec (NUMERAL _0)))) /\ ((~ (w = (vec (NUMERAL _0)))) /\ (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))))))) ==> ((\w. ((~ ((between (vec (NUMERAL _0))) (v , w))) ==> ((~ (v = (vec (NUMERAL _0)))) /\ ((~ (w = (vec (NUMERAL _0)))) /\ (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))))))) w)) = ((\w. ((~ ((between (vec (NUMERAL _0))) (v , w))) ==> ((~ (v = (vec (NUMERAL _0)))) /\ ((~ (w = (vec (NUMERAL _0)))) /\ (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))))))) w))
T c= c==> ! c==> c~ cbetween cvec cNUMERAL c_0 c, f0 b0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 ! ! c==> c/\ creal_lt b1 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b2 c~ c= c% b1 b0 c% b2 f0 * / c==> c~ cbetween cvec cNUMERAL c_0 c, f0 b0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 ! ! c==> c/\ creal_lt b1 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b2 c~ c= c% b1 b0 c% b2 f0 f1 * / c==> c~ cbetween cvec cNUMERAL c_0 c, f0 b0 c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 ! ! c==> c/\ creal_lt b1 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b2 c~ c= c% b1 b0 c% b2 f0 f1
+ |- ((\v1. (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) v1)
T * / ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ ((\x. (x IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) p) |- (p IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))
T c==> * / cIN b0 * * part cINTER * part cclosed_segment cCONS c, f0 f1 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cIN f4 * * part cINTER * part cclosed_segment cCONS c, f0 f1 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) |- ((\v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) v2)
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / c==> cIN f0 * part cclosed_segment cCONS c, f1 b0 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- (((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 c% b0 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) |- ((!t. ((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t))) = T)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 c= ! c==> c? / c/\ cSUBSET b1 b0 cIN f0 b1 cIN f0 b0 cT
- |- (((!x. (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b)))))))))) ==> ((\x. (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b)))))))))) x)) = ((\x. (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b)))))))))) x))
T c= c==> ! c/\ c= cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f0 c% b1 f1 c= cIN b0 * part copen_segment c, f0 f1 c/\ c~ c= f0 f1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f0 c% b1 f1 * / c/\ c= cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f0 c% b1 f1 c= cIN b0 * part copen_segment c, f0 f1 c/\ c~ c= f0 f1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f0 c% b1 f1 f2 * / c/\ c= cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f0 c% b1 f1 c= cIN b0 * part copen_segment c, f0 f1 c/\ c~ c= f0 f1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f0 c% b1 f1 f2
+ |- ((\v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) v2)
T * / c==> cIN f0 * part cclosed_segment cCONS c, f1 b0 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
- |- ((\c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))) c)
T * / ! c= cSUBSET * part copen_segment c, f0 f1 * part cclosed_segment cCONS c, b0 b1 cNIL c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f1 * part cclosed_segment cCONS c, b0 b1 cNIL f2
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((p IN (closed_segment ((CONS (v , w)) NIL))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((!x. (((vector_add x) (vec (NUMERAL _0))) = x)) ==> ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)) = ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x))
T c= c==> ! c= cvector_add b0 cvec cNUMERAL c_0 b0 * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0 * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
- |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (u = (real_of_num (NUMERAL _0))))) = ((\t. (t \/ (~ t))) (u = (real_of_num (NUMERAL _0)))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= f0 creal_of_num cNUMERAL c_0 * / c\/ b0 c~ b0 c= f0 creal_of_num cNUMERAL c_0
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- (T = ((~ (v = (vec (NUMERAL _0)))) /\ ((~ (w = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cT c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\b. (((between x) (a , b)) = (x IN (closed_segment ((CONS (a , b)) NIL))))) b)
T * / c= cbetween f0 c, f1 b0 cIN f0 * part cclosed_segment cCONS c, f1 b0 cNIL f2
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((~ (u = (real_of_num (NUMERAL _0)))) ==> ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= f5 creal_of_num cNUMERAL c_0 c==> c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f2 c% f5 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((a IN (closed_segment ((CONS (a , b)) NIL))) = T)
T c= cIN f0 * part cclosed_segment cCONS c, f0 f1 cNIL cT
+ |- ((\v1. (!v2. (!v. (!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))))) v1)
T * / ! ! ! c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, b2 b3 c/\ cIN b2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) |- ((v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\v2. (((vec (NUMERAL _0)) IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) v2)
T * / c/\ cIN cvec cNUMERAL c_0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ |- (v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))
T cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\a. (!b. (((between x) (a , b)) = (x IN (closed_segment ((CONS (a , b)) NIL)))))) a)
T * / ! c= cbetween f0 c, b0 b1 cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL f1
+ (p IN (closed_segment ((CONS (v , w)) NIL))), ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL))) |- (((closed_segment ((CONS (v , p)) NIL)) SUBSET (closed_segment ((CONS (v , w)) NIL))) /\ ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL))))
T c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c==> cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f1 f0 cNIL c/\ cSUBSET * part cclosed_segment cCONS c, f1 f0 cNIL * part cclosed_segment cCONS c, f1 f2 cNIL cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f1 f0 cNIL
+ |- ((((closed_segment ((CONS (v , p)) NIL)) SUBSET (closed_segment ((CONS (v , w)) NIL))) /\ ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL)))) = ((\s. ((s SUBSET (closed_segment ((CONS (v , w)) NIL))) /\ ((vec (NUMERAL _0)) IN s))) (closed_segment ((CONS (v , p)) NIL))))
T c= c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cclosed_segment cCONS c, f0 f2 cNIL cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f0 f1 cNIL * / c/\ cSUBSET b0 * part cclosed_segment cCONS c, f0 f2 cNIL cIN cvec cNUMERAL c_0 b0 * part cclosed_segment cCONS c, f0 f1 cNIL
- (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) |- ((u = (real_of_num (NUMERAL _0))) ==> ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c==> cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 creal_of_num cNUMERAL c_0 c==> c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- (((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ ((~ (s = EMPTY)) = (?x. (x IN s))) |- ((?x. (x IN s)) = (~ (s = EMPTY)))
T c==> c= c~ c= f0 part cEMPTY c? / cIN b0 f0 c= c? / cIN b0 f0 c~ c= f0 part cEMPTY
+ (p IN (closed_segment ((CONS (v , w)) NIL))) |- ((p IN (closed_segment ((CONS (v , w)) NIL))) = T)
T c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c= cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL cT
+ |- (((!v2. (((vec (NUMERAL _0)) IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((\v2. (((vec (NUMERAL _0)) IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) v2)) = ((\v2. (((vec (NUMERAL _0)) IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) v2))
T c= c==> ! c/\ cIN cvec cNUMERAL c_0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c/\ cIN cvec cNUMERAL c_0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / c/\ cIN cvec cNUMERAL c_0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) |- ((!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) = T)
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= ! c==> cIN f0 * part cclosed_segment cCONS c, f1 b0 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cT
- |- ((b IN (closed_segment ((CONS (a , b)) NIL))) = T)
T c= cIN f0 * part cclosed_segment cCONS c, f1 f0 cNIL cT
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) ==> ((\v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) v2)) = ((\v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) v2))
T c= c==> ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f3 * / c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f3
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) |- ((\v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) v)
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
- |- (((!a. (!b. (!x. (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b)))))))))))) ==> ((\a. (!b. (!x. (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b)))))))))))) a)) = ((\a. (!b. (!x. (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b)))))))))))) a))
T c= c==> ! ! ! c/\ c= cIN b2 * part cclosed_segment cCONS c, b0 b1 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ creal_le b3 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b0 c% b3 b1 c= cIN b2 * part copen_segment c, b0 b1 c/\ c~ c= b0 b1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt b3 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b0 c% b3 b1 * / ! ! c/\ c= cIN b2 * part cclosed_segment cCONS c, b0 b1 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ creal_le b3 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b0 c% b3 b1 c= cIN b2 * part copen_segment c, b0 b1 c/\ c~ c= b0 b1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt b3 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b0 c% b3 b1 f0 * / ! ! c/\ c= cIN b2 * part cclosed_segment cCONS c, b0 b1 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ creal_le b3 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b0 c% b3 b1 c= cIN b2 * part copen_segment c, b0 b1 c/\ c~ c= b0 b1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt b3 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b0 c% b3 b1 f0
- ((~ (u = (real_of_num (NUMERAL _0)))) ==> ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))), ((u = (real_of_num (NUMERAL _0))) ==> ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))) |- ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c==> c~ c= f0 creal_of_num cNUMERAL c_0 c==> c= f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 c% f0 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c= f0 creal_of_num cNUMERAL c_0 c==> c= f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 c% f0 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 c% f0 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f2 c% f5 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f2 c% f5 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f2 c% f5 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\s. ((~ (s = EMPTY)) = (?x. (x IN s)))) s)
T * / c= c~ c= b0 part cEMPTY c? / cIN b1 b0 f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ (((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) = EMPTY)), (~ ((between (vec (NUMERAL _0))) (v , w))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (u = (real_of_num (NUMERAL _0)))) |- (((~ ((real_of_num (NUMERAL _0)) = u)) ==> (((real_of_num (NUMERAL _0)) = u) = F)) = (((real_of_num (NUMERAL _0)) = u) = F))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= c==> c~ c= creal_of_num cNUMERAL c_0 f0 c= c= creal_of_num cNUMERAL c_0 f0 cF c= c= creal_of_num cNUMERAL c_0 f0 cF
- (p = v) |- (v = p)
T c==> c= f0 f1 c= f1 f0
- |- (((!b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d)))))))) ==> ((\b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d)))))))) b)) = ((\b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d)))))))) b))
T c= c==> ! ! ! c= cSUBSET * part cclosed_segment cCONS c, f0 b0 cNIL * part copen_segment c, b1 b2 c/\ cIN f0 * part copen_segment c, b1 b2 cIN b0 * part copen_segment c, b1 b2 * / ! ! c= cSUBSET * part cclosed_segment cCONS c, f0 b0 cNIL * part copen_segment c, b1 b2 c/\ cIN f0 * part copen_segment c, b1 b2 cIN b0 * part copen_segment c, b1 b2 f1 * / ! ! c= cSUBSET * part cclosed_segment cCONS c, f0 b0 cNIL * part copen_segment c, b1 b2 c/\ cIN f0 * part copen_segment c, b1 b2 cIN b0 * part copen_segment c, b1 b2 f1
+ |- ((!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) ==> (!x. (!t. ((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t)))))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 ! ! c==> c? / c/\ cSUBSET b2 b1 cIN b0 b2 cIN b0 b1
- (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))) |- (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))
T c==> ! ! c==> c/\ creal_lt b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b1 c~ c= c% b0 f0 c% b1 f1 ! c==> c/\ creal_lt f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b0 c~ c= c% f2 f0 c% b0 f1
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((((~ (v = (vec (NUMERAL _0)))) /\ ((~ (w = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))) = (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))
T c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ creal_le creal_of_num cNUMERAL c_0 f5 c/\ creal_le f5 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f2 c% f5 f3 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), ((\x. (x IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) p) |- (((\x. (x IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) p) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * / cIN b0 * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c/\ * / cIN b0 * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))
T c= cSUBSET * part copen_segment c, f0 f1 * part copen_segment c, f2 f3 c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f2 f3 cNIL cIN f1 * part cclosed_segment cCONS c, f2 f3 cNIL
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), ((w IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) = EMPTY))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> c/\ cIN f3 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ c= * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((!c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))) ==> ((\c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))) c)) = ((\c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))) c))
T c= c==> ! ! c= cSUBSET * part copen_segment c, f0 f1 * part copen_segment c, b0 b1 c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f1 * part cclosed_segment cCONS c, b0 b1 cNIL * / ! c= cSUBSET * part copen_segment c, f0 f1 * part copen_segment c, b0 b1 c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f1 * part cclosed_segment cCONS c, b0 b1 cNIL f2 * / ! c= cSUBSET * part copen_segment c, f0 f1 * part copen_segment c, b0 b1 c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f1 * part cclosed_segment cCONS c, b0 b1 cNIL f2
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> c/\ creal_le f4 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f2 c% f4 f3 c==> cIN f5 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f5 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- (((!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) ==> ((\v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) v2)) = ((\v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) v2))
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= c==> ! ! ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / ! ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / ! ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ |- (((!v. (!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))) ==> ((\v. (!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))) v)) = ((\v. (!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))) v))
T c= c==> ! ! c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, b0 b1 c/\ cIN b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, b0 b1 c/\ cIN b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, b0 b1 c/\ cIN b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ |- (((!v. (!w. (!v1. (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) ==> ((\v. (!w. (!v1. (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) v)) = ((\v. (!w. (!v1. (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) v))
T c= c==> ! ! ! ! c==> c/\ c~ c= b2 cvec cNUMERAL c_0 c/\ c~ c= b3 cvec cNUMERAL c_0 c/\ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c/\ c~ c= b2 cvec cNUMERAL c_0 c/\ c~ c= b3 cvec cNUMERAL c_0 c/\ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / ! ! ! c==> c/\ c~ c= b2 cvec cNUMERAL c_0 c/\ c~ c= b3 cvec cNUMERAL c_0 c/\ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- ((\b. (!c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))))) b)
T * / ! ! c= cSUBSET * part copen_segment c, f0 b0 * part cclosed_segment cCONS c, b1 b2 cNIL c\/ c= f0 b0 c/\ cIN f0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL f1
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- ((\v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) v2)
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
- ((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c==> creal_le f0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le f0 creal_of_num cNUMERAL cBIT1 c_0 cT
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- (((p IN (closed_segment ((CONS (v , w)) NIL))) /\ (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))) |- (~ ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL))))
T c==> c~ cbetween cvec cNUMERAL c_0 c, f0 f1 c==> cIN f2 * part cclosed_segment cCONS c, f0 f1 cNIL c~ cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f0 f2 cNIL
- (w = (vec (NUMERAL _0))) |- ((vec (NUMERAL _0)) = w)
T c==> c= f0 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((w IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) = EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c/\ cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ c= * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!a. (!b. ((a IN (closed_segment ((CONS (a , b)) NIL))) /\ (b IN (closed_segment ((CONS (a , b)) NIL)))))) ==> ((\a. (!b. ((a IN (closed_segment ((CONS (a , b)) NIL))) /\ (b IN (closed_segment ((CONS (a , b)) NIL)))))) a)) = ((\a. (!b. ((a IN (closed_segment ((CONS (a , b)) NIL))) /\ (b IN (closed_segment ((CONS (a , b)) NIL)))))) a))
T c= c==> ! ! c/\ cIN b0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN b1 * part cclosed_segment cCONS c, b0 b1 cNIL * / ! c/\ cIN b0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN b1 * part cclosed_segment cCONS c, b0 b1 cNIL f0 * / ! c/\ cIN b0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN b1 * part cclosed_segment cCONS c, b0 b1 cNIL f0
+ (!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))), ((s SUBSET t) /\ (x IN s)) |- ((!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) /\ (x IN t))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 c==> c/\ cSUBSET f0 f1 cIN f2 f0 c/\ ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 cIN f2 f1
+ |- (!s. (((\s. ((s SUBSET t) /\ (x IN s))) s) ==> ((!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) ==> (x IN t))))
T c==> * / c/\ cSUBSET b0 f0 cIN f1 b0 f2 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 cIN f1 f0
- |- (((real_sub x) (real_of_num (NUMERAL _0))) = x)
T c= creal_sub f0 creal_of_num cNUMERAL c_0 f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ (v = (vec (NUMERAL _0)))), (~ ((between (vec (NUMERAL _0))) (v , w))), ((~ (w = (vec (NUMERAL _0)))) /\ (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v))))))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= f2 cvec cNUMERAL c_0 c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> c/\ c~ c= f3 cvec cNUMERAL c_0 ! ! c==> c/\ creal_lt b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b1 c~ c= c% b0 f3 c% b1 f2 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (?x. (x IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((?x. (x IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c? / cIN b0 * * part cINTER * part cclosed_segment cCONS c, f0 f1 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f0 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / cIN b0 * * part cINTER * part cclosed_segment cCONS c, f0 f1 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!x. (((\s. ((s SUBSET t) /\ (x IN s))) x) ==> ((!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) ==> (x IN t)))) ==> ((?s. ((s SUBSET t) /\ (x IN s))) ==> ((!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) ==> (x IN t)))) = ((?s. ((s SUBSET t) /\ (x IN s))) ==> ((!s. (!t. (!x. (((s SUBSET t) /\ (x IN s)) ==> (x IN t))))) ==> (x IN t))))
T c= c==> ! c==> * / c/\ cSUBSET b1 f0 cIN f1 b1 b0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 cIN b3 b1 cIN b3 b2 cIN f1 f0 c==> c? / c/\ cSUBSET b0 f0 cIN f1 b0 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 cIN f1 f0 c==> c? / c/\ cSUBSET b0 f0 cIN f1 b0 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cIN b2 b0 cIN b2 b1 cIN f1 f0
- |- ((\d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))) d)
T * / c= cSUBSET * part copen_segment c, f0 f1 * part copen_segment c, f2 b0 c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f2 b0 cNIL cIN f1 * part cclosed_segment cCONS c, f2 b0 cNIL f3
+ |- (((!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) ==> (!v. (!w. (!v1. (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))))) = (!v. (!w. (!v1. (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))))
T c= c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! ! ! c==> c/\ c~ c= b2 cvec cNUMERAL c_0 c/\ c~ c= b3 cvec cNUMERAL c_0 c/\ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! ! c==> c/\ c~ c= b2 cvec cNUMERAL c_0 c/\ c~ c= b3 cvec cNUMERAL c_0 c/\ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ |- ((\v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) v)
T * / ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((((\u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) u) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))) = T)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 c% b0 f3 f5 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- ((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) |- ((!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))
T c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))) ==> ((\b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))) b)) = ((\b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))) b))
T c= c==> ! ! ! c= cSUBSET * part cclosed_segment cCONS c, f0 b0 cNIL * part cclosed_segment cCONS c, b1 b2 cNIL c/\ cIN f0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL * / ! ! c= cSUBSET * part cclosed_segment cCONS c, f0 b0 cNIL * part cclosed_segment cCONS c, b1 b2 cNIL c/\ cIN f0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL f1 * / ! ! c= cSUBSET * part cclosed_segment cCONS c, f0 b0 cNIL * part cclosed_segment cCONS c, b1 b2 cNIL c/\ cIN f0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL f1
+ (p IN (closed_segment ((CONS (v , w)) NIL))), ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL))) |- ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , w)) NIL)))
T c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c==> cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f1 f0 cNIL cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f1 f2 cNIL
- |- ((!a. (!b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d))))))))) /\ ((!a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))) /\ (!a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))))))))
T c/\ ! ! ! ! c= cSUBSET * part cclosed_segment cCONS c, b0 b1 cNIL * part copen_segment c, b2 b3 c/\ cIN b0 * part copen_segment c, b2 b3 cIN b1 * part copen_segment c, b2 b3 c/\ ! ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part cclosed_segment cCONS c, b2 b3 cNIL c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL ! ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part copen_segment c, b2 b3 c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- ((((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
+ |- ((\x. (!t. ((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t)))) x)
T * / ! c==> c? / c/\ cSUBSET b2 b1 cIN b0 b2 cIN b0 b1 f0
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((~ (v = (vec (NUMERAL _0)))) /\ ((~ (w = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((p /\ (q ==> r)) ==> ((p ==> q) ==> r))
T c==> c/\ f0 c==> f1 f2 c==> c==> f0 f1 f2
- |- ((\c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d))))))) c)
T * / ! c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part copen_segment c, b0 b1 c/\ cIN f0 * part copen_segment c, b0 b1 cIN f1 * part copen_segment c, b0 b1 f2
+ |- (((!x. (!t. ((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t)))) ==> ((\x. (!t. ((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t)))) x)) = ((\x. (!t. ((?s. ((s SUBSET t) /\ (x IN s))) ==> (x IN t)))) x))
T c= c==> ! ! c==> c? / c/\ cSUBSET b2 b1 cIN b0 b2 cIN b0 b1 * / ! c==> c? / c/\ cSUBSET b2 b1 cIN b0 b2 cIN b0 b1 f0 * / ! c==> c? / c/\ cSUBSET b2 b1 cIN b0 b2 cIN b0 b1 f0
+ |- (((!x. (!a. (!b. (((between x) (a , b)) = (x IN (closed_segment ((CONS (a , b)) NIL))))))) ==> ((\x. (!a. (!b. (((between x) (a , b)) = (x IN (closed_segment ((CONS (a , b)) NIL))))))) x)) = ((\x. (!a. (!b. (((between x) (a , b)) = (x IN (closed_segment ((CONS (a , b)) NIL))))))) x))
T c= c==> ! ! ! c= cbetween b0 c, b1 b2 cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL * / ! ! c= cbetween b0 c, b1 b2 cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL f0 * / ! ! c= cbetween b0 c, b1 b2 cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL f0
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))), (v IN (closed_segment ((CONS (v1 , v2)) NIL))) |- ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) /\ (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c/\ cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- (!v1. (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) |- (((?s. ((s SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (v2 IN s))) ==> (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))) = (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= c==> c? / c/\ cSUBSET b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 b0 cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!s. ((~ (s = EMPTY)) = (?x. (x IN s)))) ==> ((\s. ((~ (s = EMPTY)) = (?x. (x IN s)))) s)) = ((\s. ((~ (s = EMPTY)) = (?x. (x IN s)))) s))
T c= c==> ! c= c~ c= b0 part cEMPTY c? / cIN b1 b0 * / c= c~ c= b0 part cEMPTY c? / cIN b1 b0 f0 * / c= c~ c= b0 part cEMPTY c? / cIN b1 b0 f0
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) |- ((((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- (!p. (((\x. (x IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) p) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> * / cIN b1 * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((!b. (!c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))))) ==> ((\b. (!c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))))) b)) = ((\b. (!c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))))) b))
T c= c==> ! ! ! c= cSUBSET * part copen_segment c, f0 b0 * part copen_segment c, b1 b2 c\/ c= f0 b0 c/\ cIN f0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL * / ! ! c= cSUBSET * part copen_segment c, f0 b0 * part copen_segment c, b1 b2 c\/ c= f0 b0 c/\ cIN f0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL f1 * / ! ! c= cSUBSET * part copen_segment c, f0 b0 * part copen_segment c, b1 b2 c\/ c= f0 b0 c/\ cIN f0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL f1
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- ((!w. (!v1. (!v2. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= ! ! ! c==> c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ c~ c= b2 cvec cNUMERAL c_0 c/\ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))), (v IN (closed_segment ((CONS (v1 , v2)) NIL))) |- (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (w = (vec (NUMERAL _0)))) |- ((w = (vec (NUMERAL _0))) = F)
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c= f0 cvec cNUMERAL c_0 cF
- |- (((!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) ==> (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) = (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))))
T c= c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- (((!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d)))))) ==> ((\d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d)))))) d)) = ((\d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d)))))) d))
T c= c==> ! c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part copen_segment c, f2 b0 c/\ cIN f0 * part copen_segment c, f2 b0 cIN f1 * part copen_segment c, f2 b0 * / c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part copen_segment c, f2 b0 c/\ cIN f0 * part copen_segment c, f2 b0 cIN f1 * part copen_segment c, f2 b0 f3 * / c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part copen_segment c, f2 b0 c/\ cIN f0 * part copen_segment c, f2 b0 cIN f1 * part copen_segment c, f2 b0 f3
- |- ((\t. (t \/ (~ t))) (u = (real_of_num (NUMERAL _0))))
T * / c\/ b0 c~ b0 c= f0 creal_of_num cNUMERAL c_0
- |- (((!x. (((real_sub x) (real_of_num (NUMERAL _0))) = x)) ==> ((\x. (((real_sub x) (real_of_num (NUMERAL _0))) = x)) x)) = ((\x. (((real_sub x) (real_of_num (NUMERAL _0))) = x)) x))
T c= c==> ! c= creal_sub b0 creal_of_num cNUMERAL c_0 b0 * / c= creal_sub b0 creal_of_num cNUMERAL c_0 b0 f0 * / c= creal_sub b0 creal_of_num cNUMERAL c_0 b0 f0
+ |- ((!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((w IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) = EMPTY)))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))) = T)
T c= ! c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, f2 b0 c/\ cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ c= * * part cINTER * part cclosed_segment cCONS c, f2 b0 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cT
+ ((\s. ((s SUBSET t) /\ (x IN s))) s) |- ((s SUBSET t) /\ (x IN s))
T c==> * / c/\ cSUBSET b0 f0 cIN f1 b0 f2 c/\ cSUBSET f2 f0 cIN f1 f2
+ |- (((!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))) ==> ((\d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))) d)) = ((\d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))) d))
T c= c==> ! c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cclosed_segment cCONS c, f2 b0 cNIL c/\ cIN f0 * part cclosed_segment cCONS c, f2 b0 cNIL cIN f1 * part cclosed_segment cCONS c, f2 b0 cNIL * / c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cclosed_segment cCONS c, f2 b0 cNIL c/\ cIN f0 * part cclosed_segment cCONS c, f2 b0 cNIL cIN f1 * part cclosed_segment cCONS c, f2 b0 cNIL f3 * / c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cclosed_segment cCONS c, f2 b0 cNIL c/\ cIN f0 * part cclosed_segment cCONS c, f2 b0 cNIL cIN f1 * part cclosed_segment cCONS c, f2 b0 cNIL f3
+ |- ((\v1. (!v2. (((vec (NUMERAL _0)) IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) v1)
T * / ! c/\ cIN cvec cNUMERAL c_0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ |- ((\v. (!w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))) v)
T * / ! c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, b0 b1 c/\ cIN b0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
- |- (((!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d))))))) ==> ((\c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d))))))) c)) = ((\c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d))))))) c))
T c= c==> ! ! c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part copen_segment c, b0 b1 c/\ cIN f0 * part copen_segment c, b0 b1 cIN f1 * part copen_segment c, b0 b1 * / ! c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part copen_segment c, b0 b1 c/\ cIN f0 * part copen_segment c, b0 b1 cIN f1 * part copen_segment c, b0 b1 f2 * / ! c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part copen_segment c, b0 b1 c/\ cIN f0 * part copen_segment c, b0 b1 cIN f1 * part copen_segment c, b0 b1 f2
+ (!v1. (!v2. (!v. (!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))))) |- (((!w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) ==> ((\w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) w)) = ((\w. (((~ (v1 = (vec (NUMERAL _0)))) /\ ((~ (v2 = (vec (NUMERAL _0)))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> (((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) w))
T c==> ! ! ! ! c==> c/\ c~ c= b0 cvec cNUMERAL c_0 c/\ c~ c= b1 cvec cNUMERAL c_0 c/\ cIN b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= c==> ! c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 * / c==> c/\ c~ c= f0 cvec cNUMERAL c_0 c/\ c~ c= f1 cvec cNUMERAL c_0 c/\ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
+ |- ((T \/ t) = T)
T c= c\/ cT f0 cT
- |- (b IN (closed_segment ((CONS (a , b)) NIL)))
T cIN f0 * part cclosed_segment cCONS c, f1 f0 cNIL
- (p = v), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) |- (T = ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c= f0 f1 c==> cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cT c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f4 part cEMPTY
+ |- (((!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))))) ==> ((\s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))))) s)) = ((\s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))))) s))
T c= c==> ! ! ! c= cIN b2 * * part cINTER b0 b1 c/\ cIN b2 b0 cIN b2 b1 * / ! ! c= cIN b2 * * part cINTER b0 b1 c/\ cIN b2 b0 cIN b2 b1 f0 * / ! ! c= cIN b2 * * part cINTER b0 b1 c/\ cIN b2 b0 cIN b2 b1 f0
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) |- ((\s. ((s SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (v2 IN s))) ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * / c/\ cSUBSET b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ (~ (v = (vec (NUMERAL _0)))), (~ (w = (vec (NUMERAL _0)))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (p INSERT EMPTY)))) |- ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\w. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ ((~ ((between (vec (NUMERAL _0))) (v , w))) /\ ((v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (w IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))) p)
T * / c==> c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cbetween cvec cNUMERAL c_0 c, f2 b0 c/\ cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
+ |- ((~ ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL)))) = (~ ((between (vec (NUMERAL _0))) (v , p))))
T c= c~ cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f0 f1 cNIL c~ cbetween cvec cNUMERAL c_0 c, f0 f1
+ (p IN (closed_segment ((CONS (v , w)) NIL))), ((vec (NUMERAL _0)) IN (closed_segment ((CONS (v , p)) NIL))) |- ((\s. ((s SUBSET (closed_segment ((CONS (v , w)) NIL))) /\ ((vec (NUMERAL _0)) IN s))) (closed_segment ((CONS (v , p)) NIL)))
T c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c==> cIN cvec cNUMERAL c_0 * part cclosed_segment cCONS c, f1 f0 cNIL * / c/\ cSUBSET b0 * part cclosed_segment cCONS c, f1 f2 cNIL cIN cvec cNUMERAL c_0 b0 * part cclosed_segment cCONS c, f1 f0 cNIL
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) x)
T * / c= c% creal_of_num cNUMERAL cBIT1 c_0 b0 b0 f0
- |- ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))))
T c= cIN f0 * part copen_segment c, f1 f2 c/\ c~ c= f1 f2 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2
- |- ((\a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))) a)
T * / ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part copen_segment c, b2 b3 c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL f0
- |- ((!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) ==> (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))))
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- (~ (w = (vec (NUMERAL _0)))) |- (~ ((vec (NUMERAL _0)) = w))
T c==> c~ c= f0 cvec cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 f0
- |- (((!b. (!c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))))) ==> ((\b. (!c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))))) b)) = ((\b. (!c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))))) b))
T c= c==> ! ! ! c= cSUBSET * part copen_segment c, f0 b0 * part cclosed_segment cCONS c, b1 b2 cNIL c\/ c= f0 b0 c/\ cIN f0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL * / ! ! c= cSUBSET * part copen_segment c, f0 b0 * part cclosed_segment cCONS c, b1 b2 cNIL c\/ c= f0 b0 c/\ cIN f0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL f1 * / ! ! c= cSUBSET * part copen_segment c, f0 b0 * part cclosed_segment cCONS c, b1 b2 cNIL c\/ c= f0 b0 c/\ cIN f0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL f1
- |- ((!a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))) /\ (!a. (!b. (!c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))))))
T c/\ ! ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part cclosed_segment cCONS c, b2 b3 cNIL c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL ! ! ! ! c= cSUBSET * part copen_segment c, b0 b1 * part copen_segment c, b2 b3 c\/ c= b0 b1 c/\ cIN b0 * part cclosed_segment cCONS c, b2 b3 cNIL cIN b1 * part cclosed_segment cCONS c, b2 b3 cNIL
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))) c)
T * / ! c= cSUBSET * part copen_segment c, f0 f1 * part copen_segment c, b0 b1 c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f1 * part cclosed_segment cCONS c, b0 b1 cNIL f2
- (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))) |- ((\b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v))))) b)
T c==> ! ! c==> c/\ creal_lt b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b1 c~ c= c% b0 f0 c% b1 f1 * / c==> c/\ creal_lt f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b0 c~ c= c% f2 f0 c% b0 f1 f3
- |- ((\b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d)))))))) b)
T * / ! ! c= cSUBSET * part cclosed_segment cCONS c, f0 b0 cNIL * part copen_segment c, b1 b2 c/\ cIN f0 * part copen_segment c, b1 b2 cIN b0 * part copen_segment c, b1 b2 f1
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f4 c/\ creal_le f4 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f2 c% f4 f3 c==> cIN f5 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f5 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) |- (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)) = p)
T c==> c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 f0
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) |- ((\v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) v1)
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! c==> cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
- (~ (u = (real_of_num (NUMERAL _0)))) |- (((real_of_num (NUMERAL _0)) = u) = F)
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= c= creal_of_num cNUMERAL c_0 f0 cF
- |- (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))
T c= cSUBSET * part copen_segment c, f0 f1 * part cclosed_segment cCONS c, f2 f3 cNIL c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f2 f3 cNIL cIN f1 * part cclosed_segment cCONS c, f2 f3 cNIL
- |- ((\x. (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b)))))))))) x)
T * / c/\ c= cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f0 c% b1 f1 c= cIN b0 * part copen_segment c, f0 f1 c/\ c~ c= f0 f1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f0 c% b1 f1 f2
- |- (((vector_add x) (vec (NUMERAL _0))) = x)
T c= cvector_add f0 cvec cNUMERAL c_0 f0
- |- ((u = (real_of_num (NUMERAL _0))) \/ (~ (u = (real_of_num (NUMERAL _0)))))
T c\/ c= f0 creal_of_num cNUMERAL c_0 c~ c= f0 creal_of_num cNUMERAL c_0
- |- ((vec (NUMERAL _0)) IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))
T cIN cvec cNUMERAL c_0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (((!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))) ==> ((\d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))) d)) = ((\d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))) d))
T c= c==> ! c= cSUBSET * part copen_segment c, f0 f1 * part copen_segment c, f2 b0 c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f2 b0 cNIL cIN f1 * part cclosed_segment cCONS c, f2 b0 cNIL * / c= cSUBSET * part copen_segment c, f0 f1 * part copen_segment c, f2 b0 c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f2 b0 cNIL cIN f1 * part cclosed_segment cCONS c, f2 b0 cNIL f3 * / c= cSUBSET * part copen_segment c, f0 f1 * part copen_segment c, f2 b0 c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f2 b0 cNIL cIN f1 * part cclosed_segment cCONS c, f2 b0 cNIL f3
- |- (((!b. (!x. (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))))))) ==> ((\b. (!x. (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))))))) b)) = ((\b. (!x. (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))))))) b))
T c= c==> ! ! c/\ c= cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 f0 c% b2 b0 c= cIN b1 * part copen_segment c, f0 b0 c/\ c~ c= f0 b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 f0 c% b2 b0 * / ! c/\ c= cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 f0 c% b2 b0 c= cIN b1 * part copen_segment c, f0 b0 c/\ c~ c= f0 b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 f0 c% b2 b0 f1 * / ! c/\ c= cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 f0 c% b2 b0 c= cIN b1 * part copen_segment c, f0 b0 c/\ c~ c= f0 b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 f0 c% b2 b0 f1
- |- (((!x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0)))) ==> ((\x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0)))) x)) = ((\x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0)))) x))
T c= c==> ! c= c% creal_of_num cNUMERAL c_0 b0 cvec cNUMERAL c_0 * / c= c% creal_of_num cNUMERAL c_0 b0 cvec cNUMERAL c_0 f0 * / c= c% creal_of_num cNUMERAL c_0 b0 cvec cNUMERAL c_0 f0
- |- ((\a. (!b. (!c. (!d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d))))))))) a)
T * / ! ! ! c= cSUBSET * part cclosed_segment cCONS c, b0 b1 cNIL * part copen_segment c, b2 b3 c/\ cIN b0 * part copen_segment c, b2 b3 cIN b1 * part copen_segment c, b2 b3 f0
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((p IN (closed_segment ((CONS (v , w)) NIL))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((real_of_num (NUMERAL _0)) = u) |- (u = (real_of_num (NUMERAL _0)))
T c==> c= creal_of_num cNUMERAL c_0 f0 c= f0 creal_of_num cNUMERAL c_0
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) |- (((!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) ==> ((\v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) v2)) = ((\v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))) v2))
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! c==> cIN f0 * part cclosed_segment cCONS c, f1 b0 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / c==> cIN f0 * part cclosed_segment cCONS c, f1 b0 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 * / c==> cIN f0 * part cclosed_segment cCONS c, f1 b0 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
- |- (((?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))) = ((p IN (closed_segment ((CONS (v , w)) NIL))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c= c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (?x. (x IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))
T c==> c? / cIN b0 * * part cINTER * part cclosed_segment cCONS c, f0 f1 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f0 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (u = (real_of_num (NUMERAL _0))) |- (((p = v) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))) = ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c= c==> c= f1 f2 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c= f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 c% f0 f5 c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) |- (((!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) ==> ((\v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) v1)) = ((\v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))))) v1))
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! ! c==> cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * / ! c==> cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
- |- ((\d. (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d)))))) d)
T * / c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part copen_segment c, f2 b0 c/\ cIN f0 * part copen_segment c, f2 b0 cIN f1 * part copen_segment c, f2 b0 f3
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ (u = (real_of_num (NUMERAL _0)))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((~ (u = (real_of_num (NUMERAL _0)))) /\ ((p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= f2 creal_of_num cNUMERAL c_0 c==> c~ cbetween cvec cNUMERAL c_0 c, f3 f4 c==> cIN f5 * part cclosed_segment cCONS c, f3 f4 cNIL c==> cIN f5 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ c= f2 creal_of_num cNUMERAL c_0 c==> c= f5 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c% f2 f4 c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (p IN (closed_segment ((CONS (v , w)) NIL))) |- (T = (p IN (closed_segment ((CONS (v , w)) NIL))))
T c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c= cT cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((p IN (closed_segment ((CONS (v , w)) NIL))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c==> cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f4 * part cclosed_segment cCONS c, f2 f3 cNIL c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))), (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN (closed_segment ((CONS (v , w)) NIL))), (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f1 f2 c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c==> cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f1 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((vec (NUMERAL _0)) IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) = T)
T c= cIN cvec cNUMERAL c_0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
- |- ((\b. (!c. (!d. (((open_segment (a , b)) SUBSET (open_segment (c , d))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL))))))))) b)
T * / ! ! c= cSUBSET * part copen_segment c, f0 b0 * part copen_segment c, b1 b2 c\/ c= f0 b0 c/\ cIN f0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL f1
- (!a. (!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v)))))) |- (((!b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v))))) ==> ((\b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v))))) b)) = ((\b. ((((real_lt a) (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) b)) ==> (~ (((% a) w) = ((% b) v))))) b))
T c==> ! ! c==> c/\ creal_lt b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b1 c~ c= c% b0 f0 c% b1 f1 c= c==> ! c==> c/\ creal_lt f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b0 c~ c= c% f2 f0 c% b0 f1 * / c==> c/\ creal_lt f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b0 c~ c= c% f2 f0 c% b0 f1 f3 * / c==> c/\ creal_lt f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 b0 c~ c= c% f2 f0 c% b0 f1 f3
- (!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) |- (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))
T c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! ! c==> cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
- |- (((closed_segment ((CONS (a , b)) NIL)) SUBSET (open_segment (c , d))) = ((a IN (open_segment (c , d))) /\ (b IN (open_segment (c , d)))))
T c= cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part copen_segment c, f2 f3 c/\ cIN f0 * part copen_segment c, f2 f3 cIN f1 * part copen_segment c, f2 f3
- (v IN (closed_segment ((CONS (v1 , v2)) NIL))) |- ((!v. (!v1. (!v2. ((v IN (closed_segment ((CONS (v1 , v2)) NIL))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))))) ==> (v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))))
T c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c==> ! ! ! c==> cIN b0 * part cclosed_segment cCONS c, b1 b2 cNIL cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((\u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w)))))) u) |- (((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (p = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) v)) ((% u) w))))) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))) = ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 f3 c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ creal_le f3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f1 c% f3 f2 c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f5 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ cIN f4 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f5 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))), (~ ((between (vec (NUMERAL _0))) (v , w))), (p IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))), (v IN ((hull affine) ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) |- ((p IN ((closed_segment ((CONS (v , w)) NIL)) INTER ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY))))) /\ ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cbetween cvec cNUMERAL c_0 c, f2 f3 c==> cIN f4 * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f4 * * part cINTER * part cclosed_segment cCONS c, f2 f3 cNIL * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\a. (!b. (!x. (((x IN (closed_segment ((CONS (a , b)) NIL))) = (?u. (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b))))))) /\ ((x IN (open_segment (a , b))) = ((~ (a = b)) /\ (?u. (((real_lt (real_of_num (NUMERAL _0))) u) /\ (((real_lt u) (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) a)) ((% u) b)))))))))))) a)
T * / ! ! c/\ c= cIN b2 * part cclosed_segment cCONS c, b0 b1 cNIL c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ creal_le b3 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b0 c% b3 b1 c= cIN b2 * part copen_segment c, b0 b1 c/\ c~ c= b0 b1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt b3 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b0 c% b3 b1 f0
- (p IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) |- ((p = v) ==> ((v IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v1 INSERT (v2 INSERT EMPTY)))) \/ ((v1 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) \/ (v2 IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))
T c==> cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f0 f3 c\/ cIN f3 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ cIN f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- (((!c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))) ==> ((\c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))) c)) = ((\c. (!d. (((open_segment (a , b)) SUBSET (closed_segment ((CONS (c , d)) NIL))) = ((a = b) \/ ((a IN (closed_segment ((CONS (c , d)) NIL))) /\ (b IN (closed_segment ((CONS (c , d)) NIL)))))))) c))
T c= c==> ! ! c= cSUBSET * part copen_segment c, f0 f1 * part cclosed_segment cCONS c, b0 b1 cNIL c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f1 * part cclosed_segment cCONS c, b0 b1 cNIL * / ! c= cSUBSET * part copen_segment c, f0 f1 * part cclosed_segment cCONS c, b0 b1 cNIL c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f1 * part cclosed_segment cCONS c, b0 b1 cNIL f2 * / ! c= cSUBSET * part copen_segment c, f0 f1 * part cclosed_segment cCONS c, b0 b1 cNIL c\/ c= f0 f1 c/\ cIN f0 * part cclosed_segment cCONS c, b0 b1 cNIL cIN f1 * part cclosed_segment cCONS c, b0 b1 cNIL f2
