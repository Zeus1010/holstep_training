N Hypermap.double_shift_lemma
C |- (!H. (((dart H) = (dart (shift (shift H)))) /\ (((edge_map H) = (node_map (shift (shift H)))) /\ (((node_map H) = (face_map (shift (shift H)))) /\ ((face_map H) = (edge_map (shift (shift H))))))))
T c/\ c= * part cdart f0 * part cdart cshift cshift f0 c/\ c= * part cedge_map f0 * part cnode_map cshift cshift f0 c/\ c= * part cnode_map f0 * part cface_map cshift cshift f0 c= * part cface_map f0 * part cedge_map cshift cshift f0
D TRUTH
A |- T
T cT
D Hypermap.shift_lemma
A |- (!H. (((dart H) = (dart (shift H))) /\ (((edge_map H) = (face_map (shift H))) /\ (((node_map H) = (edge_map (shift H))) /\ ((face_map H) = (node_map (shift H)))))))
T c/\ c= * part cdart f0 * part cdart cshift f0 c/\ c= * part cedge_map f0 * part cface_map cshift f0 c/\ c= * part cnode_map f0 * part cedge_map cshift f0 c= * part cface_map f0 * part cnode_map cshift f0
+ |- ((dart H) = (dart (shift H)))
T c= * part cdart f0 * part cdart cshift f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
