N Reduction1.subdivFace0_alt_finals
C |- (!vs. (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) vs))))))))))
T c==> c/\ cMEM f0 cfaces f1 c~ cSND f0 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 f2 f3 f4
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D SELECT_AX
A |- (!P. (!x. ((P x) ==> (P (@ P)))))
T c==> * f0 f1 * f0 c@ f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D RIGHT_FORALL_OR_THM
A |- (!P. (!Q. ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D GABS_DEF
A |- (!P. ((GABS P) = (@ P)))
T c= cGABS f0 c@ f0
D GEQ_DEF
A |- (!a. (!b. (((GEQ a) b) = (a = b))))
T c= cGEQ f0 f1 c= f0 f1
D PAIR_EQ
A |- (!x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))))
T c= c= c, f0 f1 c, f2 f3 c/\ c= f0 f2 c= f1 f3
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D PAIR
A |- (!x. (((FST x) , (SND x)) = x))
T c= c, cFST f0 cSND f0 f0
D pair_RECURSION
A |- (!PAIR'. (?fn. (!a0. (!a1. ((fn (a0 , a1)) = ((PAIR' a0) a1))))))
T c? / ! ! c= * b0 c, b1 b2 * * f0 b1 b2
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D Truong_tactic.hold_def
A |- (hold = I)
T c= part chold part cI
D Wrgcvdr_cizmrrh.PAIR_EQ2
A |- ((a = b) = (((FST a) = (FST b)) /\ ((SND a) = (SND b))))
T c= c= f0 f1 c/\ c= cFST f0 cFST f1 c= cSND f0 cSND f1
D Tame_defs2.subdivFace0_alt
A |- (((((((subdivFace0_alt g) f) u) n) NIL) = (f , g)) /\ ((((((subdivFace0_alt g) f) u) n) ((CONS vo) vos)) = (((COND (vo = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) vos)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) vos)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) vos))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the vo)))))
T c/\ c= csubdivFace0_alt f0 f1 f2 f3 cNIL c, f1 f0 c= csubdivFace0_alt f0 f1 f2 f3 cCONS f4 f5 cCOND c= f4 cNONE csubdivFace0_alt f0 f1 f2 cSUC f3 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f0 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f0 f2 b0 f1 b1 cupt ccountVertices f0 c+ ccountVertices f0 f3 cthe f4
D Tame_list.MEM_splitFace2
A |- (!g. (!u. (!v. (!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> cMEM f0 cfaces f1 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f1 f2 f3 f0 f4
D Tame_list.splitFace_split_face
A |- (!g. (!u. (!v. (!f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2)))))))))))
T c==> c= csplitFace f0 f1 f2 f3 f4 c, f5 c, f6 f7 c= csplit_face f3 f1 f2 f4 c, f5 f6
D Reduction1.splitFace_finals
A |- (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))
T c==> c~ cSND f0 c= cfinals cSND cSND csplitFace f1 f2 f3 f0 f4 cfinals f1
D Reduction1.split_face_nonfinal2
A |- (!f. (!u. (!v. (!ws. ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws))))))
T cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f0 f1 f2 f3
- |- (((((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))) ==> ((((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))
T c==> c==> c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF
- ((f1' = f1) /\ (f2' = f2)) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c/\ c= f0 f1 c= f2 f3 c= cMEM f4 cfaces f5 cMEM f4 cfaces f5
+ |- (((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F) = F)
T c= c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF cF
+ |- (((!u. (!v. (!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))))) ==> ((\u. (!v. (!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))))) u)) = ((\u. (!v. (!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))))) u))
T c= c==> ! ! ! ! c==> cMEM b2 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END cMEM b6 cfaces b7 csplitFace f0 b0 b1 b2 b3 * / ! ! ! c==> cMEM b2 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END cMEM b6 cfaces b7 csplitFace f0 b0 b1 b2 b3 f1 * / ! ! ! c==> cMEM b2 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END cMEM b6 cfaces b7 csplitFace f0 b0 b1 b2 b3 f1
+ (~ (SND f)), ((MEM f) (faces g)) |- (((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) (SUC n)) t))))) = ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) (SUC n)) t)))))
T c==> c~ cSND f0 c==> cMEM f0 cfaces f1 c= c==> c/\ cMEM f0 cfaces f1 c~ cSND f0 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 f2 cSUC f3 f4 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 f2 cSUC f3 f4
- |- ((((~ ((MEM f) (faces g))) \/ (SND f)) \/ (!u. (!n. ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))) = (!u. (((~ ((MEM f) (faces g))) \/ (SND f)) \/ (!n. ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))
T c= c\/ c\/ c~ cMEM f0 cfaces f1 cSND f0 ! ! c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 b0 b1 f2 ! c\/ c\/ c~ cMEM f0 cfaces f1 cSND f0 ! c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 b0 b1 f2
- ((FST (((((splitFace g) u) v) f) ws)) = f1) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cMEM f3 cfaces f0 cMEM f3 cfaces f0
+ |- ((a /\ T) = a)
T c= c/\ f0 cT f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! c==> c/\ cMEM f1 cfaces f2 c~ cSND f1 c= cfinals f2 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f2 f1 b0 cSUC b1 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 b0 b2 c= b1 cNUMERAL c_0 csubdivFace0_alt f2 f1 b2 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f0 csplitFace f2 b0 b2 f1 b3 cupt ccountVertices f2 c+ ccountVertices f2 b1 cthe f3
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))), ((FST (((((splitFace g) u) v) f) ws)) = f1), ((FST (SND (((((splitFace g) u) v) f) ws))) = f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((MEM f) (faces g)) |- ((((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws))))) ==> (hold ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws))))))) = (hold ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cSND cSND csplitFace f6 f3 f4 f1 f7 cSND cSND csplitFace f6 f3 f4 f1 f7 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f8 c==> c= cFST cSND csplitFace f6 f3 f4 f1 f7 f9 c==> c= cthe f2 f4 c==> c= cupt ccountVertices f6 c+ ccountVertices f6 f5 f7 c==> cMEM f1 cfaces f6 c= c==> c= cfinals f6 cfinals cSND cSND csplitFace f6 f3 f4 f1 f7 chold c= cfinals f6 cfinals cSND cSND csplitFace f6 f3 f4 f1 f7 chold c= cfinals f6 cfinals cSND cSND csplitFace f6 f3 f4 f1 f7
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((FST (((((splitFace g) u) v) f) ws)) = f1), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((((FST (SND (((((splitFace g) u) v) f) ws))) = (FST (f2 , g'))) /\ ((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (f2 , g')))) ==> ((finals g) = (finals g')))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f8 c==> c= f4 cthe f2 c==> c= f7 cupt ccountVertices f6 c+ ccountVertices f6 f5 c==> cMEM f1 cfaces f6 c==> c/\ c= cFST cSND csplitFace f6 f3 f4 f1 f7 cFST c, f9 f10 c= cSND cSND csplitFace f6 f3 f4 f1 f7 cSND c, f9 f10 c= cfinals f6 cfinals f10
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (F = F)
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= cF cF
- (~ (h = NONE)) |- (((~ (NONE = h)) ==> ((NONE = h) = F)) = ((NONE = h) = F))
T c==> c~ c= f0 cNONE c= c==> c~ c= cNONE f0 c= c= cNONE f0 cF c= c= cNONE f0 cF
+ |- ((T ==> (?ws. (ws = ((upt (countVertices g)) ((countVertices g) + n))))) = (?ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))))
T c= c==> cT c? / c= b0 cupt ccountVertices f0 c+ ccountVertices f0 f1 c? / c= b0 cupt ccountVertices f0 c+ ccountVertices f0 f1
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((~ (h = NONE)) /\ ((finals g) = (finals (SND (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c= c, f3 c, f4 f5 csplitFace f6 f7 f8 f1 f9 c==> c= f8 cthe f2 c==> c= f9 cupt ccountVertices f6 c+ ccountVertices f6 f10 c==> cMEM f1 cfaces f6 c/\ c~ c= f2 cNONE c= cfinals f6 cfinals cSND cCOND c/\ c= cnextVertex f1 f7 f8 c= f10 cNUMERAL c_0 csubdivFace0_alt f6 f1 f8 cNUMERAL c_0 f0 csubdivFace0_alt f5 f4 f8 cNUMERAL c_0 f0
+ ((\f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) f2) |- (((?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws)))))))) = ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> * / c? / c= c, f0 c, b0 b1 csplitFace f1 f2 f3 f4 f5 f6 c= c==> c? / c= c, f0 c, f6 b0 csplitFace f1 f2 f3 f4 f5 c= cfinals f1 cfinals cSND cCOND c= f7 cNONE csubdivFace0_alt f1 f4 f2 cSUC f8 f9 cCOND c/\ c= cnextVertex f4 f2 f3 c= f8 cNUMERAL c_0 csubdivFace0_alt f1 f4 f3 cNUMERAL c_0 f9 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f3 cNUMERAL c_0 f9 csplitFace f1 f2 f3 f4 f5 c= cfinals f1 cfinals cSND cCOND c= f7 cNONE csubdivFace0_alt f1 f4 f2 cSUC f8 f9 cCOND c/\ c= cnextVertex f4 f2 f3 c= f8 cNUMERAL c_0 csubdivFace0_alt f1 f4 f3 cNUMERAL c_0 f9 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f3 cNUMERAL c_0 f9 csplitFace f1 f2 f3 f4 f5
+ ((\g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) g') |- ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))
T c==> * / c= c, f0 c, f1 b0 csplitFace f2 f3 f4 f5 f6 f7 c= c, f0 c, f1 f7 csplitFace f2 f3 f4 f5 f6
+ |- (a ==> (hold a))
T c==> f0 chold f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c/\ cMEM f1 cfaces f2 c~ cSND f1 c= cfinals f2 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f2 f1 f4 cSUC f5 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f4 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) = (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))))
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= c~ c= cfinals f0 cfinals cSND cSND csplitFace f0 f1 f2 f3 f4 c~ c= cfinals f0 cfinals cSND cSND csplitFace f0 f1 f2 f3 f4
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))), ((MEM f) (faces g)) |- ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) /\ ((finals g) = (finals g')))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= f4 cthe f2 c==> c= f6 cupt ccountVertices f7 c+ ccountVertices f7 f5 c==> c/\ c= cFST csplitFace f7 f3 f4 f1 f6 f8 c= cSND csplitFace f7 f3 f4 f1 f6 c, f9 f10 c==> cMEM f1 cfaces f7 c/\ c/\ c= cFST csplitFace f7 f3 f4 f1 f6 f8 c= cSND csplitFace f7 f3 f4 f1 f6 c, f9 f10 c= cfinals f7 cfinals f10
+ (~ (SND f)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))))))
T c==> c~ cSND f0 c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c= cthe f4 f2 c==> c= cupt ccountVertices f5 c+ ccountVertices f5 f3 f6 c==> c= cFST cSND csplitFace f5 f1 f2 f0 f6 f7 c==> c= cSND cSND csplitFace f5 f1 f2 f0 f6 cSND cSND csplitFace f5 f1 f2 f0 f6 c==> c~ c= cfinals f5 cfinals cSND cSND csplitFace f5 f1 f2 f0 f6 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
- (~ (h = NONE)) |- ((NONE = h) = F)
T c==> c~ c= f0 cNONE c= c= cNONE f0 cF
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))), ((MEM f) (faces g)) |- ((finals g) = (finals g'))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= f4 cthe f2 c==> c= f6 cupt ccountVertices f7 c+ ccountVertices f7 f5 c==> c/\ c= cFST csplitFace f7 f3 f4 f1 f6 f8 c= cSND csplitFace f7 f3 f4 f1 f6 c, f9 f10 c==> cMEM f1 cfaces f7 c= cfinals f7 cfinals f10
+ |- (((!g'. ((GEQ ((GABS (\_10385606. (!f1. (!f2. (!g'. ((GEQ (_10385606 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))) ==> ((\g'. ((GEQ ((GABS (\_10385606. (!f1. (!f2. (!g'. ((GEQ (_10385606 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))) g')) = ((\g'. ((GEQ ((GABS (\_10385606. (!f1. (!f2. (!g'. ((GEQ (_10385606 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))) g'))
T c= c==> ! cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 * / cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 f2 * / cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 f2
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((((\f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) f2) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws)))))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> c= f4 cupt ccountVertices f5 c+ ccountVertices f5 f6 c==> cMEM f1 cfaces f5 c= c==> * / c? / c= c, f7 c, b0 b1 csplitFace f5 f8 f2 f1 f4 f9 c= cfinals f5 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f5 f1 f8 cSUC f6 f0 cCOND c/\ c= cnextVertex f1 f8 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f5 f1 f2 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f0 csplitFace f5 f8 f2 f1 f4 cT
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((MEM f) (faces g)) |- ((~ (h = NONE)) /\ ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> (hold ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c= cthe f2 f3 c==> c= cupt ccountVertices f4 c+ ccountVertices f4 f5 f6 c==> cMEM f1 cfaces f4 c/\ c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f3 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f4 f7 f3 f1 f6 f8 c==> c= cFST cSND csplitFace f4 f7 f3 f1 f6 f9 c==> c= cSND cSND csplitFace f4 f7 f3 f1 f6 cSND cSND csplitFace f4 f7 f3 f1 f6 chold c= cfinals f4 cfinals cSND cSND csplitFace f4 f7 f3 f1 f6
- (_10385586 = _10385587) |- ((_10385586 = _10385587) /\ ((faces _10385586) = (faces _10385587)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cfaces f0 cfaces f1
+ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))), (~ (SND f)) |- (((((finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))) = (finals g)) /\ ((finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))))) ==> ((finals g) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))))) = ((finals g) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n))))))))
T c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 c==> c~ cSND f0 c= c==> c/\ c= cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4 cfinals f1 c= cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4 cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4 c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4 c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4
+ (SND f2), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- (SND (SND ((((split_face f) u) v) ((upt (countVertices g)) ((countVertices g) + n)))))
T c==> cSND f0 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f2 f3 c==> c/\ c= f4 f5 c= f6 f0 c==> c/\ c= cFST csplit_face f7 f8 f9 f3 f4 c= cSND csplit_face f7 f8 f9 f3 f6 cSND cSND csplit_face f7 f8 f9 cupt ccountVertices f1 c+ ccountVertices f1 f2
+ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) |- (!g. (!r. (!v. (!f. ((SND f) \/ (!ws. ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))
T c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 ! ! ! ! c\/ cSND b3 ! c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
- |- ((!n. (((~ ((MEM f) (faces g))) \/ (SND f)) \/ ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))) = (((~ ((MEM f) (faces g))) \/ (SND f)) \/ (!n. ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))))
T c= ! c\/ c\/ c~ cMEM f0 cfaces f1 cSND f0 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 f2 b0 f3 c\/ c\/ c~ cMEM f0 cfaces f1 cSND f0 ! c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 f2 b0 f3
+ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))), (~ (SND f)), (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ (((nextVertex f) u) = v)) ==> F)
T c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 c==> c~ cSND f0 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 f3 f0 f4 c==> c= cthe f5 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f6 f4 c==> c~ c= cnextVertex f0 f2 f3 cF
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ (SND (SND ((((split_face f) u) (the h)) ((upt (countVertices g)) ((countVertices g) + n)))))), (SND f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((~ (SND (SND ((((split_face f) u) (the h)) ((upt (countVertices g)) ((countVertices g) + n)))))) /\ (SND (SND ((((split_face f) u) (the h)) ((upt (countVertices g)) ((countVertices g) + n))))))
T c==> c~ cSND cSND csplit_face f0 f1 cthe f2 cupt ccountVertices f3 c+ ccountVertices f3 f4 c==> cSND f5 c==> c= cthe f2 f6 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f4 f7 c==> c/\ c= f8 f9 c= f10 f5 c==> c/\ c= cFST csplit_face f0 f1 f6 f7 f8 c= cSND csplit_face f0 f1 f6 f7 f10 c/\ c~ cSND cSND csplit_face f0 f1 cthe f2 cupt ccountVertices f3 c+ ccountVertices f3 f4 cSND cSND csplit_face f0 f1 cthe f2 cupt ccountVertices f3 c+ ccountVertices f3 f4
+ |- ((((((subdivFace0_alt g) f) u) n) NIL) = (f , g))
T c= csubdivFace0_alt f0 f1 f2 f3 cNIL c, f1 f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((MEM f) (faces g)) |- ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f4 c+ ccountVertices f4 f5 f6 c==> cMEM f1 cfaces f4 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f3 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f4 f7 f3 f1 f6 f8 c==> c= cFST cSND csplitFace f4 f7 f3 f1 f6 f9 c==> c= cSND cSND csplitFace f4 f7 f3 f1 f6 cSND cSND csplitFace f4 f7 f3 f1 f6 c==> c~ c= cfinals f4 cfinals cSND cSND csplitFace f4 f7 f3 f1 f6 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF
+ |- (((!u. (!v. (!f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2)))))))))) ==> ((\u. (!v. (!f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2)))))))))) u)) = ((\u. (!v. (!f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2)))))))))) u))
T c= c==> ! ! ! ! ! ! ! c==> c= csplitFace f0 b0 b1 b2 b3 c, b4 c, b5 b6 c= csplit_face b2 b0 b1 b3 c, b4 b5 * / ! ! ! ! ! ! c==> c= csplitFace f0 b0 b1 b2 b3 c, b4 c, b5 b6 c= csplit_face b2 b0 b1 b3 c, b4 b5 f1 * / ! ! ! ! ! ! c==> c= csplitFace f0 b0 b1 b2 b3 c, b4 c, b5 b6 c= csplit_face b2 b0 b1 b3 c, b4 b5 f1
- (~ (h = NONE)) |- (((finals g) = (finals (SND (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))) = ((finals g) = (finals (SND (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))
T c==> c~ c= f0 cNONE c= c= cfinals f1 cfinals cSND cCOND c/\ c= cnextVertex f2 f3 f4 c= f5 cNUMERAL c_0 csubdivFace0_alt f1 f2 f4 cNUMERAL c_0 f6 csubdivFace0_alt f7 f8 f4 cNUMERAL c_0 f6 c= cfinals f1 cfinals cSND cCOND c/\ c= cnextVertex f2 f3 f4 c= f5 cNUMERAL c_0 csubdivFace0_alt f1 f2 f4 cNUMERAL c_0 f6 csubdivFace0_alt f7 f8 f4 cNUMERAL c_0 f6
+ (~ (SND f)), ((MEM f) (faces g)) |- (T = (((MEM f) (faces g)) /\ (~ (SND f))))
T c==> c~ cSND f0 c==> cMEM f0 cfaces f1 c= cT c/\ cMEM f0 cfaces f1 c~ cSND f0
- |- ((_10385546 = _10385548) ==> ((~ (_10385547 = _10385549)) \/ ((_10385546 , _10385547) = (_10385548 , _10385549))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- ((\f2. (!f2'. (!ws. (!v. (!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))))))))))) f2)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> cMEM b5 cfaces b11 c==> c~ cSND b5 c==> c= cthe b9 b3 c==> c= cupt ccountVertices b11 c+ ccountVertices b11 b8 b2 c==> c/\ c= cFST csplitFace b11 b4 b3 b5 b2 b7 c= cSND csplitFace b11 b4 b3 b5 b2 c, b0 b10 c==> c~ c= b9 cNONE c==> c~ c/\ c= cnextVertex b5 b4 b3 c= b8 cNUMERAL c_0 c==> c/\ c= b6 b7 c= b1 b0 c==> c/\ c= cFST csplit_face b5 b4 b3 b2 b6 c= cSND csplit_face b5 b4 b3 b2 b1 c==> c~ cSND b1 c==> cSND b0 cF f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))), ((FST (((((splitFace g) u) v) f) ws)) = f1), ((FST (SND (((((splitFace g) u) v) f) ws))) = f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((MEM f) (faces g)) |- F
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c= cfinals f3 cfinals cSND cSND csplitFace f3 f4 f5 f1 f6 c==> c~ c/\ c= cnextVertex f1 f4 f5 c= f7 cNUMERAL c_0 c==> c= cSND cSND csplitFace f3 f4 f5 f1 f6 cSND cSND csplitFace f3 f4 f5 f1 f6 c==> c= cFST csplitFace f3 f4 f5 f1 f6 f8 c==> c= cFST cSND csplitFace f3 f4 f5 f1 f6 f9 c==> c= cthe f2 f5 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f7 f6 c==> cMEM f1 cfaces f3 cF
+ ((f1' = (FST ((((split_face f) u) v) ws))) /\ (f2' = (SND ((((split_face f) u) v) ws)))) |- ((f1' , f2') = ((((split_face f) u) v) ws))
T c==> c/\ c= f0 cFST csplit_face f1 f2 f3 f4 c= f5 cSND csplit_face f1 f2 f3 f4 c= c, f0 f5 csplit_face f1 f2 f3 f4
+ |- (((?_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2))))))) ==> ((\_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2))))))) (GABS (\_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2)))))))))) = ((\_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2))))))) (GABS (\_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2))))))))))
T c= c==> c? / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 * / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 * / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2
+ |- (((!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))))))) ==> ((\f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))))))) f)) = ((\f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))))))) f))
T c= c==> ! ! ! ! ! ! ! c==> cMEM b0 cfaces b6 c==> c~ cSND b0 c==> c= cthe b4 f0 c==> c= cupt ccountVertices b6 c+ ccountVertices b6 b3 f1 c==> c/\ c= cFST csplitFace b6 f2 f0 b0 f1 b2 c= cSND csplitFace b6 f2 f0 b0 f1 c, f3 b5 c==> c~ c= b4 cNONE c==> c~ c/\ c= cnextVertex b0 f2 f0 c= b3 cNUMERAL c_0 c==> c/\ c= b1 b2 c= f4 f3 c==> c/\ c= cFST csplit_face b0 f2 f0 f1 b1 c= cSND csplit_face b0 f2 f0 f1 f4 c==> c~ cSND f4 c==> cSND f3 cF * / ! ! ! ! ! ! c==> cMEM b0 cfaces b6 c==> c~ cSND b0 c==> c= cthe b4 f0 c==> c= cupt ccountVertices b6 c+ ccountVertices b6 b3 f1 c==> c/\ c= cFST csplitFace b6 f2 f0 b0 f1 b2 c= cSND csplitFace b6 f2 f0 b0 f1 c, f3 b5 c==> c~ c= b4 cNONE c==> c~ c/\ c= cnextVertex b0 f2 f0 c= b3 cNUMERAL c_0 c==> c/\ c= b1 b2 c= f4 f3 c==> c/\ c= cFST csplit_face b0 f2 f0 f1 b1 c= cSND csplit_face b0 f2 f0 f1 f4 c==> c~ cSND f4 c==> cSND f3 cF f5 * / ! ! ! ! ! ! c==> cMEM b0 cfaces b6 c==> c~ cSND b0 c==> c= cthe b4 f0 c==> c= cupt ccountVertices b6 c+ ccountVertices b6 b3 f1 c==> c/\ c= cFST csplitFace b6 f2 f0 b0 f1 b2 c= cSND csplitFace b6 f2 f0 b0 f1 c, f3 b5 c==> c~ c= b4 cNONE c==> c~ c/\ c= cnextVertex b0 f2 f0 c= b3 cNUMERAL c_0 c==> c/\ c= b1 b2 c= f4 f3 c==> c/\ c= cFST csplit_face b0 f2 f0 f1 b1 c= cSND csplit_face b0 f2 f0 f1 f4 c==> c~ cSND f4 c==> cSND f3 cF f5
- ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)) |- (f2' = f2)
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= csplit_face f2 f3 f4 f5 c, f6 f7 c= f1 f7
+ |- ((!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> (~ (SND f2))))))))))))))))) = T)
T c= ! ! ! ! ! c==> cMEM f0 cfaces b4 c==> c~ cSND f0 c==> c= cthe b2 f1 c==> c= cupt ccountVertices b4 c+ ccountVertices b4 b1 f2 c==> c/\ c= cFST csplitFace b4 f3 f1 f0 f2 b0 c= cSND csplitFace b4 f3 f1 f0 f2 c, f4 b3 c==> c~ c= b2 cNONE c==> c~ c/\ c= cnextVertex f0 f3 f1 c= b1 cNUMERAL c_0 c==> c/\ c= f5 b0 c= f6 f4 c==> c/\ c= cFST csplit_face f0 f3 f1 f2 f5 c= cSND csplit_face f0 f3 f1 f2 f6 c==> c~ cSND f6 c~ cSND f4 cT
+ (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- (((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))) = ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ws)))))))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c= c= cfinals f1 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f1 f4 f5 cSUC f2 f6 cCOND c/\ c= cnextVertex f4 f5 f7 c= f2 cNUMERAL c_0 csubdivFace0_alt f1 f4 f7 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f7 cNUMERAL c_0 f6 csplitFace f1 f5 f7 f4 b0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c= cfinals f1 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f1 f4 f5 cSUC f2 f6 cCOND c/\ c= cnextVertex f4 f5 f7 c= f2 cNUMERAL c_0 csubdivFace0_alt f1 f4 f7 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f7 cNUMERAL c_0 f6 csplitFace f1 f5 f7 f4 b0 f0
- |- ((_10385579 = _10385583) ==> ((~ (_10385577 = _10385581)) \/ ((~ (_10385578 = _10385582)) \/ ((~ (_10385576 = _10385580)) \/ (((((split_face _10385576) _10385577) _10385578) _10385579) = ((((split_face _10385580) _10385581) _10385582) _10385583))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= csplit_face f6 f2 f4 f0 csplit_face f7 f3 f5 f1
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0))), ((MEM f) (faces g)) |- (((((nextVertex f) u) = v) /\ (n = (NUMERAL _0))) /\ ((finals g) = (finals (SND (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c/\ c= cnextVertex f1 f2 f3 c= f4 cNUMERAL c_0 c==> cMEM f1 cfaces f5 c/\ c/\ c= cnextVertex f1 f2 f3 c= f4 cNUMERAL c_0 c= cfinals f5 cfinals cSND csubdivFace0_alt f5 f1 f3 cNUMERAL c_0 f0
- |- ((~ (_10385586 = _10385587)) \/ ((faces _10385586) = (faces _10385587)))
T c\/ c~ c= f0 f1 c= cfaces f0 cfaces f1
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((MEM f) (faces g)) |- (((\v. (v = (the h))) v) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> cMEM f1 cfaces f2 c==> * / c= b0 cthe f3 f4 c= cfinals f2 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f2 f1 f5 cSUC f6 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f5 b0 c= f6 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f5 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f6 cthe f3
+ ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> (~ (SND f2)))))))
T c==> c= cthe f0 f1 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f3 f4 c==> c~ c= f0 cNONE c==> c~ c/\ c= cnextVertex f5 f6 f1 c= f3 cNUMERAL c_0 c==> c/\ c= f7 f8 c= f9 f10 c==> c/\ c= cFST csplit_face f5 f6 f1 f4 f7 c= cSND csplit_face f5 f6 f1 f4 f9 c==> c~ cSND f9 c~ cSND f10
+ |- (((f1' = (FST ((((split_face f) u) v) ws))) /\ (f2' = (SND ((((split_face f) u) v) ws)))) ==> (?f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))))
T c==> c/\ c= f0 cFST csplit_face f1 f2 f3 f4 c= f5 cSND csplit_face f1 f2 f3 f4 c? / c? / c= c, b0 b1 csplit_face f1 f2 f3 f4
- (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (((SND _10384924) \/ ((finals (SND (SND (((((splitFace _10384921) _10384922) _10384923) _10384924) _10384925)))) = (finals _10384921))) = ((SND _10384924) \/ ((finals (SND (SND (((((splitFace _10384921) _10384922) _10384923) _10384924) _10384925)))) = (finals _10384921))))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= c\/ cSND f3 c= cfinals cSND cSND csplitFace f4 f5 f6 f3 f7 cfinals f4 c\/ cSND f3 c= cfinals cSND cSND csplitFace f4 f5 f6 f3 f7 cfinals f4
+ |- ((!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> (~ (SND f2))))))))))))))) = T)
T c= ! ! ! c==> cMEM f0 cfaces b2 c==> c~ cSND f0 c==> c= cthe b0 f1 c==> c= cupt ccountVertices b2 c+ ccountVertices b2 f2 f3 c==> c/\ c= cFST csplitFace b2 f4 f1 f0 f3 f5 c= cSND csplitFace b2 f4 f1 f0 f3 c, f6 b1 c==> c~ c= b0 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f1 c= f2 cNUMERAL c_0 c==> c/\ c= f7 f5 c= f8 f6 c==> c/\ c= cFST csplit_face f0 f4 f1 f3 f7 c= cSND csplit_face f0 f4 f1 f3 f8 c==> c~ cSND f8 c~ cSND f6 cT
- ((((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))), (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))) |- ((((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))) /\ (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))
T c==> c==> c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c/\ c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF
+ |- (((!v. (!f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))))))) ==> ((\v. (!f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))))))) v)) = ((\v. (!f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))))))) v))
T c= c==> ! ! ! ! ! ! c==> c= csplitFace f0 f1 b0 b1 b2 c, b3 c, b4 b5 c= csplit_face b1 f1 b0 b2 c, b3 b4 * / ! ! ! ! ! c==> c= csplitFace f0 f1 b0 b1 b2 c, b3 c, b4 b5 c= csplit_face b1 f1 b0 b2 c, b3 b4 f2 * / ! ! ! ! ! c==> c= csplitFace f0 f1 b0 b1 b2 c, b3 c, b4 b5 c= csplit_face b1 f1 b0 b2 c, b3 b4 f2
+ |- ((\g'. ((GEQ ((GABS (\_10385606. (!f1. (!f2. (!g'. ((GEQ (_10385606 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))) g')
T * / cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 f2
- |- ((_10385489 = _10385491) ==> ((~ (_10385488 = _10385490)) \/ (((nextVertex _10385488) _10385489) = ((nextVertex _10385490) _10385491))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cnextVertex f2 f0 cnextVertex f3 f1
+ |- ((\_10385606. (!f1. (!f2. (!g'. ((GEQ (_10385606 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))) (GABS (\_10385606. (!f1. (!f2. (!g'. ((GEQ (_10385606 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))))
T * / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3
+ (~ (SND f)), (v = (the h)), ((MEM f) (faces g)) |- ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))
T c==> c~ cSND f0 c==> c= f1 cthe f2 c==> cMEM f0 cfaces f3 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f4 f5 c==> c/\ c= cFST csplitFace f3 f6 f1 f0 f5 f7 c= cSND csplitFace f3 f6 f1 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f1 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f1 f5 f10 c= cSND csplit_face f0 f6 f1 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF
+ |- (g' = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g')))))
T c= f0 c@ / ! ! c= * b0 c, b1 b2 b2 c@ / ! ! c= * b0 c, b1 b2 b2 c, f1 c, f2 f0
- |- ((((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))) ==> ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))) = ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))))
T c= c==> c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF
+ (v = (the h)) |- ((v = (the h)) /\ (?v. (v = (the h))))
T c==> c= f0 cthe f1 c/\ c= f0 cthe f1 c? / c= b0 cthe f1
+ ((finals g) = (finals g')) |- (((finals g') = (finals (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))) = ((finals g) = (finals (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))
T c==> c= cfinals f0 cfinals f1 c= c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f2 f3 cNUMERAL c_0 f4 c= cfinals f0 cfinals cSND csubdivFace0_alt f1 f2 f3 cNUMERAL c_0 f4
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), ((MEM f) (faces g)) |- (!ws. (((\ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))) ws) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> cMEM f1 cfaces f4 ! c==> * / c= b1 cupt ccountVertices f4 c+ ccountVertices f4 f5 b0 c= cfinals f4 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f4 f1 f6 cSUC f5 f0 cCOND c/\ c= cnextVertex f1 f6 f2 c= f5 cNUMERAL c_0 csubdivFace0_alt f4 f1 f2 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f0 csplitFace f4 f6 f2 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f5
- |- ((~ (_10385556 = _10385561)) \/ ((~ (_10385553 = _10385558)) \/ ((~ (_10385554 = _10385559)) \/ ((~ (_10385555 = _10385560)) \/ ((~ (_10385552 = _10385557)) \/ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561)))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplitFace f8 f2 f4 f6 f0 csplitFace f9 f3 f5 f7 f1
+ ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> (~ (SND f2))))))
T c==> c= cthe f0 f1 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f3 f4 c==> c~ c/\ c= cnextVertex f5 f6 f1 c= f3 cNUMERAL c_0 c==> c/\ c= f7 f8 c= f9 f10 c==> c/\ c= cFST csplit_face f5 f6 f1 f4 f7 c= cSND csplit_face f5 f6 f1 f4 f9 c==> c~ cSND f9 c~ cSND f10
- (_10385163 = _10385168), (_10385164 = _10385169), (_10385165 = _10385170), (_10385166 = _10385171) |- ((~ (_10385162 = _10385167)) \/ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c= csubdivFace0_alt f8 f0 f2 f4 f6 csubdivFace0_alt f9 f1 f3 f5 f7
+ (v = (the h)) |- ((((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))) = ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))
T c==> c= f0 cthe f1 c= c==> c= cthe f1 f0 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f3 f4 c==> c/\ c= cFST csplitFace f2 f5 f0 f6 f4 f7 c= cSND csplitFace f2 f5 f0 f6 f4 c, f8 f9 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f6 f5 f0 c= f3 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f6 f5 f0 f4 f10 c= cSND csplit_face f6 f5 f0 f4 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f3 f4 c==> c/\ c= cFST csplitFace f2 f5 f0 f6 f4 f7 c= cSND csplitFace f2 f5 f0 f6 f4 c, f8 f9 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f6 f5 f0 c= f3 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f6 f5 f0 f4 f10 c= cSND csplit_face f6 f5 f0 f4 f11 c==> c~ cSND f11 c==> cSND f8 cF
- ((f1' = f1) /\ (f2' = f2)) |- (((SND (((((splitFace g) u) v) f) ws)) = (f2 , g')) = ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g')))
T c==> c/\ c= f0 f1 c= f2 f3 c= c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9
+ |- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) NIL)))))))))
T c==> c/\ cMEM f0 cfaces f1 c~ cSND f0 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 f2 f3 cNIL
+ (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((!x. (((\f2'. ((f1' , f2') = ((((split_face f) u) v) ws))) x) ==> (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2)))))) ==> ((?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))) ==> (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2)))))) = ((?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))) ==> (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2))))))
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f4 cNUMERAL c_0 c==> c= c, f5 c, f6 f7 csplitFace f8 f2 f3 f0 f9 c==> c= csplit_face f0 f2 f3 f9 c, f5 f6 c==> c= f3 cthe f1 c==> c= f9 cupt ccountVertices f8 c+ ccountVertices f8 f4 c==> cMEM f0 cfaces f8 c= c==> ! c==> * / c= c, f10 b1 csplit_face f0 f2 f3 f9 b0 c==> cLET * part cGABS / ! ! cGEQ * b1 c, b2 b3 cLET_END c~ cSND b3 csplit_face f0 f2 f3 f9 c/\ cMEM f6 cfaces f7 c~ cSND f6 c==> c? / c= c, f10 b0 csplit_face f0 f2 f3 f9 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f0 f2 f3 f9 c/\ cMEM f6 cfaces f7 c~ cSND f6 c==> c? / c= c, f10 b0 csplit_face f0 f2 f3 f9 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f0 f2 f3 f9 c/\ cMEM f6 cfaces f7 c~ cSND f6
+ (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)) |- (((f1' = f1) /\ (f2' = f2)) /\ ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> (~ (SND f2)))))
T c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c= cthe f4 f2 c==> c= cupt ccountVertices f5 c+ ccountVertices f5 f3 f6 c==> c/\ c= f7 f8 c= f9 f10 c/\ c/\ c= f7 f8 c= f9 f10 c==> c/\ c= cFST csplit_face f0 f1 f2 f6 f7 c= cSND csplit_face f0 f1 f2 f6 f9 c==> c~ cSND f9 c~ cSND f10
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (!f1. (((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) f1) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws)))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> c= f4 cupt ccountVertices f5 c+ ccountVertices f5 f6 c==> cMEM f1 cfaces f5 ! c==> * / c? / c? / c= c, b1 c, b1 b2 csplitFace f5 f7 f2 f1 f4 b0 c= cfinals f5 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f5 f1 f7 cSUC f6 f0 cCOND c/\ c= cnextVertex f1 f7 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f5 f1 f2 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f0 csplitFace f5 f7 f2 f1 f4
+ (~ (SND f)) |- ((~ (SND f)) /\ (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> (~ (SND f2)))))))))))
T c==> c~ cSND f0 c/\ c~ cSND f0 c==> c= cthe f1 f2 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f4 f5 c==> c/\ c= cFST csplitFace f3 f6 f2 f0 f5 f7 c= cSND csplitFace f3 f6 f2 f0 f5 c, f8 f9 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f2 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f2 f5 f10 c= cSND csplit_face f0 f6 f2 f5 f11 c==> c~ cSND f11 c~ cSND f8
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (!u. (!n. (((~ ((MEM _10384918) (faces _10384917))) \/ (SND _10384918)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) u) n) t)))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! c\/ c\/ c~ cMEM f1 cfaces f2 cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 b0 b1 f0
- ((the h) = v) |- (((FST ((((split_face f) u) v) ((upt (countVertices g)) ((countVertices g) + n)))) = (FST (((((splitFace g) u) v) f) ((upt (countVertices g)) ((countVertices g) + n))))) = ((FST ((((split_face f) u) (the h)) ((upt (countVertices g)) ((countVertices g) + n)))) = (FST (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n))))))
T c==> c= cthe f0 f1 c= c= cFST csplit_face f2 f3 f1 cupt ccountVertices f4 c+ ccountVertices f4 f5 cFST csplitFace f4 f3 f1 f2 cupt ccountVertices f4 c+ ccountVertices f4 f5 c= cFST csplit_face f2 f3 cthe f0 cupt ccountVertices f4 c+ ccountVertices f4 f5 cFST csplitFace f4 f3 cthe f0 f2 cupt ccountVertices f4 c+ ccountVertices f4 f5
+ |- ((?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) = ((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) f1))
T c= c? / c? / c= c, f0 c, b0 b1 csplitFace f1 f2 f3 f4 f5 * / c? / c? / c= c, b0 c, b1 b2 csplitFace f1 f2 f3 f4 f5 f0
+ |- (?_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2)))))))
T c? / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2
+ (v = (the h)) |- (((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))) = ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) v))))))
T c==> c= f0 cthe f1 c= c= cfinals f2 cfinals cSND cCOND c= f1 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f2 f4 b0 f3 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f1 c= cfinals f2 cfinals cSND cCOND c= f1 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f2 f4 b0 f3 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 f0
- |- ((((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))
T c==> c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF
- (_10385572 = _10385574) |- ((_10385573 = _10385575) ==> (((upt _10385572) _10385573) = ((upt _10385574) _10385575)))
T c==> c= f0 f1 c==> c= f2 f3 c= cupt f0 f2 cupt f1 f3
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))))) = (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) ((CONS h) t)))))))))))
T c= ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND cCOND c= f0 cNONE csubdivFace0_alt b0 b1 b2 cSUC b3 f1 cLET / cLET_END cCOND c/\ c= cnextVertex b1 b2 b4 c= b3 cNUMERAL c_0 csubdivFace0_alt b0 b1 b4 cNUMERAL c_0 f1 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b6 c, b7 c, b8 b9 cLET_END csubdivFace0_alt b9 b8 b4 cNUMERAL c_0 f1 csplitFace b0 b2 b4 b1 b5 cupt ccountVertices b0 c+ ccountVertices b0 b3 cthe f0 ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 cCONS f0 f1
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (!g. (!f. (((~ ((MEM f) (faces g))) \/ (SND f)) \/ (!u. (!n. ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! c\/ c\/ c~ cMEM b1 cfaces b0 cSND b1 ! ! c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0
+ |- (((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (f2 , g')) = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g')))))
T c= c@ / ! ! c= * b0 c, b1 b2 b1 c, f0 f1 c@ / ! ! c= * b0 c, b1 b2 b1 c@ / ! ! c= * b0 c, b1 b2 b2 c, f2 c, f0 f1
+ |- (((!ws. (!f. (!v. (!u. (!g. (!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))))))))))))) ==> ((\ws. (!f. (!v. (!u. (!g. (!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))))))))))))) ws)) = ((\ws. (!f. (!v. (!u. (!g. (!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))))))))))))) ws))
T c= c==> ! ! ! ! ! ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b10 cfaces b10 c~ cSND b10 c= cfinals b10 cfinals cSND csubdivFace0_alt b10 b10 b10 b10 b9 c==> cMEM b1 cfaces b4 c==> c~ cSND b1 c==> c= cthe b8 b2 c==> c= cupt ccountVertices b4 c+ ccountVertices b4 b7 b0 c==> c~ c= b8 cNONE c==> c~ c/\ c= cnextVertex b1 b3 b2 c= b7 cNUMERAL c_0 c==> c= cFST csplitFace b4 b3 b2 b1 b0 b6 c==> c= cFST cSND csplitFace b4 b3 b2 b1 b0 b5 c==> c= cSND cSND csplitFace b4 b3 b2 b1 b0 cSND cSND csplitFace b4 b3 b2 b1 b0 c==> c~ c= cfinals b4 cfinals cSND cSND csplitFace b4 b3 b2 b1 b0 c==> ! ! ! ! ! c==> c~ cSND b11 c= cfinals cSND cSND csplitFace b10 b10 b11 b11 b11 cfinals b10 cF * / ! ! ! ! ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b10 cfaces b10 c~ cSND b10 c= cfinals b10 cfinals cSND csubdivFace0_alt b10 b10 b10 b10 b9 c==> cMEM b1 cfaces b4 c==> c~ cSND b1 c==> c= cthe b8 b2 c==> c= cupt ccountVertices b4 c+ ccountVertices b4 b7 b0 c==> c~ c= b8 cNONE c==> c~ c/\ c= cnextVertex b1 b3 b2 c= b7 cNUMERAL c_0 c==> c= cFST csplitFace b4 b3 b2 b1 b0 b6 c==> c= cFST cSND csplitFace b4 b3 b2 b1 b0 b5 c==> c= cSND cSND csplitFace b4 b3 b2 b1 b0 cSND cSND csplitFace b4 b3 b2 b1 b0 c==> c~ c= cfinals b4 cfinals cSND cSND csplitFace b4 b3 b2 b1 b0 c==> ! ! ! ! ! c==> c~ cSND b11 c= cfinals cSND cSND csplitFace b10 b10 b11 b11 b11 cfinals b10 cF f0 * / ! ! ! ! ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b10 cfaces b10 c~ cSND b10 c= cfinals b10 cfinals cSND csubdivFace0_alt b10 b10 b10 b10 b9 c==> cMEM b1 cfaces b4 c==> c~ cSND b1 c==> c= cthe b8 b2 c==> c= cupt ccountVertices b4 c+ ccountVertices b4 b7 b0 c==> c~ c= b8 cNONE c==> c~ c/\ c= cnextVertex b1 b3 b2 c= b7 cNUMERAL c_0 c==> c= cFST csplitFace b4 b3 b2 b1 b0 b6 c==> c= cFST cSND csplitFace b4 b3 b2 b1 b0 b5 c==> c= cSND cSND csplitFace b4 b3 b2 b1 b0 cSND cSND csplitFace b4 b3 b2 b1 b0 c==> c~ c= cfinals b4 cfinals cSND cSND csplitFace b4 b3 b2 b1 b0 c==> ! ! ! ! ! c==> c~ cSND b11 c= cfinals cSND cSND csplitFace b10 b10 b11 b11 b11 cfinals b10 cF f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) /\ (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))))))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c/\ ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (F = F)
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= cF cF
+ ((\f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))) f1') |- (((?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))) ==> (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2))))) = (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2)))))
T c==> * / c? / c= c, b0 b1 csplit_face f0 f1 f2 f3 f4 c= c==> c? / c= c, f4 b0 csplit_face f0 f1 f2 f3 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f0 f1 f2 f3 c/\ cMEM f5 cfaces f6 c~ cSND f5 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f0 f1 f2 f3 c/\ cMEM f5 cfaces f6 c~ cSND f5
+ |- (!f1. (!f2. (((\_10385202. (LET_END (~ (SND ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10385202))))) (f1 , f2)) = (LET_END (~ (SND f2))))))
T c= * / cLET_END c~ cSND c@ / ! ! c= * b1 c, b2 b3 b3 b0 c, f0 f1 cLET_END c~ cSND f1
+ |- (((!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))))) ==> ((\ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))))) ws)) = ((\ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))))) ws))
T c= c==> ! ! ! ! c==> c= csplitFace f0 f1 f2 f3 b0 c, b1 c, b2 b3 c= csplit_face f3 f1 f2 b0 c, b1 b2 * / ! ! ! c==> c= csplitFace f0 f1 f2 f3 b0 c, b1 c, b2 b3 c= csplit_face f3 f1 f2 b0 c, b1 b2 f4 * / ! ! ! c==> c= csplitFace f0 f1 f2 f3 b0 c, b1 c, b2 b3 c= csplit_face f3 f1 f2 b0 c, b1 b2 f4
+ |- ((!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> (~ (SND f2)))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> cMEM f0 cfaces b5 c==> c~ cSND f0 c==> c= cthe b3 f1 c==> c= cupt ccountVertices b5 c+ ccountVertices b5 b2 f2 c==> c/\ c= cFST csplitFace b5 f3 f1 f0 f2 b1 c= cSND csplitFace b5 f3 f1 f0 f2 c, f4 b4 c==> c~ c= b3 cNONE c==> c~ c/\ c= cnextVertex f0 f3 f1 c= b2 cNUMERAL c_0 c==> c/\ c= b0 b1 c= f5 f4 c==> c/\ c= cFST csplit_face f0 f3 f1 f2 b0 c= cSND csplit_face f0 f3 f1 f2 f5 c==> c~ cSND f5 c~ cSND f4 cT
+ (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((f1' , f2') = ((((split_face f) u) v) ws)) ==> (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2)))))
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f4 cNUMERAL c_0 c==> c= c, f5 c, f6 f7 csplitFace f8 f2 f3 f0 f9 c==> c= csplit_face f0 f2 f3 f9 c, f5 f6 c==> c= f3 cthe f1 c==> c= f9 cupt ccountVertices f8 c+ ccountVertices f8 f4 c==> cMEM f0 cfaces f8 c==> c= c, f10 f11 csplit_face f0 f2 f3 f9 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f0 f2 f3 f9 c/\ cMEM f6 cfaces f7 c~ cSND f6
- (~ (SND f2')), (SND f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((~ F) ==> F)
T c==> c~ cSND f0 c==> cSND f1 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f4 c+ ccountVertices f4 f5 f6 c==> c/\ c= f7 f8 c= f0 f1 c==> c/\ c= cFST csplit_face f9 f10 f3 f6 f7 c= cSND csplit_face f9 f10 f3 f6 f0 c==> c~ cF cF
+ (~ (SND f2')), ((f1' = f1) /\ (f2' = f2)) |- (~ (SND f2))
T c==> c~ cSND f0 c==> c/\ c= f1 f2 c= f0 f3 c~ cSND f3
+ |- ((!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) ((CONS h) t))))))))))))) = ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) NIL))))))))) /\ (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) ((CONS h) t)))))))))))))))
T c= ! ! c==> ! ! ! ! c==> c/\ cMEM b3 cfaces b2 c~ cSND b3 c= cfinals b2 cfinals cSND csubdivFace0_alt b2 b3 b4 b5 b1 ! ! ! ! c==> c/\ cMEM b3 cfaces b2 c~ cSND b3 c= cfinals b2 cfinals cSND csubdivFace0_alt b2 b3 b4 b5 cCONS b0 b1 c/\ ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 cNIL ! ! c==> ! ! ! ! c==> c/\ cMEM b3 cfaces b2 c~ cSND b3 c= cfinals b2 cfinals cSND csubdivFace0_alt b2 b3 b4 b5 b1 ! ! ! ! c==> c/\ cMEM b3 cfaces b2 c~ cSND b3 c= cfinals b2 cfinals cSND csubdivFace0_alt b2 b3 b4 b5 cCONS b0 b1
+ |- ((!ws. ((SND f) \/ ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))) = ((SND f) \/ (!ws. ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))
T c= ! c\/ cSND f0 c= cfinals cSND cSND csplitFace f1 f2 f3 f0 b0 cfinals f1 c\/ cSND f0 ! c= cfinals cSND cSND csplitFace f1 f2 f3 f0 b0 cfinals f1
+ ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- (f2 = (SND ((((split_face f) u) v) ws)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f0 c= cSND csplit_face f4 f5 f6 f7 f2 c= f3 cSND csplit_face f4 f5 f6 f7
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) f1) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> c= f4 cupt ccountVertices f5 c+ ccountVertices f5 f6 c==> cMEM f1 cfaces f5 c==> * / c? / c? / c= c, b0 c, b1 b2 csplitFace f5 f7 f2 f1 f4 f8 c= cfinals f5 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f5 f1 f7 cSUC f6 f0 cCOND c/\ c= cnextVertex f1 f7 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f5 f1 f2 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f0 csplitFace f5 f7 f2 f1 f4
+ |- ((\f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))))))) f1)
T * / ! ! ! c==> ! ! ! ! c==> c/\ cMEM b5 cfaces b4 c~ cSND b5 c= cfinals b4 cfinals cSND csubdivFace0_alt b4 b5 b6 b7 b3 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe b2 f2 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 b1 f3 c==> c~ c= b2 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f2 c= b1 cNUMERAL c_0 c==> c= cFST csplitFace f1 f4 f2 f0 f3 b0 c==> c= cFST cSND csplitFace f1 f4 f2 f0 f3 f5 c==> c= cSND cSND csplitFace f1 f4 f2 f0 f3 cSND cSND csplitFace f1 f4 f2 f0 f3 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f4 f2 f0 f3 c==> ! ! ! ! ! c==> c~ cSND b7 c= cfinals cSND cSND csplitFace b4 b5 b6 b7 b8 cfinals b4 cF f6
+ |- ((LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)) = (LET_END (((((subdivFace0_alt ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g'))))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g'))))) v) (NUMERAL _0)) t)))
T c= cLET_END csubdivFace0_alt f0 f1 f2 cNUMERAL c_0 f3 cLET_END csubdivFace0_alt c@ / ! ! c= * b0 c, b1 b2 b2 c@ / ! ! c= * b0 c, b1 b2 b2 c, f4 c, f1 f0 c@ / ! ! c= * b0 c, b1 b2 b1 c@ / ! ! c= * b0 c, b1 b2 b2 c, f4 c, f1 f0 f2 cNUMERAL c_0 f3
- (_10385553 = _10385558), (_10385556 = _10385561) |- ((_10385554 = _10385559) ==> ((~ (_10385555 = _10385560)) \/ ((~ (_10385552 = _10385557)) \/ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplitFace f8 f0 f4 f6 f2 csplitFace f9 f1 f5 f7 f3
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- ((~ (n = (NUMERAL _0))) = (~ (n = (NUMERAL _0))))
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= c~ c= f6 cNUMERAL c_0 c~ c= f6 cNUMERAL c_0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (_10385556 = _10385561) |- ((_10385556 = _10385561) /\ ((~ (_10385553 = _10385558)) \/ ((~ (_10385554 = _10385559)) \/ ((~ (_10385555 = _10385560)) \/ ((~ (_10385552 = _10385557)) \/ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561)))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplitFace f8 f2 f4 f6 f0 csplitFace f9 f3 f5 f7 f1
+ (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((((MEM f2) (faces g')) /\ (~ (SND f2))) ==> ((finals g') = (finals (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))) = ((finals g') = (finals (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f4 cNUMERAL c_0 c==> c= c, f5 c, f6 f7 csplitFace f8 f2 f3 f0 f9 c==> c= f3 cthe f1 c==> c= f9 cupt ccountVertices f8 c+ ccountVertices f8 f4 c==> cMEM f0 cfaces f8 c= c==> c/\ cMEM f6 cfaces f7 c~ cSND f6 c= cfinals f7 cfinals cSND csubdivFace0_alt f7 f6 f3 cNUMERAL c_0 f10 c= cfinals f7 cfinals cSND csubdivFace0_alt f7 f6 f3 cNUMERAL c_0 f10
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (((SND ((((split_face f) u) v) ws)) = f2) = ((SND ((((split_face f) u) v) ws)) = f2))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= c= cSND csplit_face f7 f5 f6 f8 f3 c= cSND csplit_face f7 f5 f6 f8 f3
- (~ (h = NONE)) |- ((h = NONE) = F)
T c==> c~ c= f0 cNONE c= c= f0 cNONE cF
- (h = NONE) |- (((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) (SUC n)) t)))) = ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) (SUC n)) t)))))
T c==> c= f0 cNONE c= c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f2 f3 cSUC f4 f5 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f2 f3 cSUC f4 f5
- ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((~ (n = (NUMERAL _0))) = (~ (n = (NUMERAL _0))))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f0 c= cSND csplit_face f4 f5 f6 f7 f2 c= c~ c= f8 cNUMERAL c_0 c~ c= f8 cNUMERAL c_0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- (((!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))) ==> ((\f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))) f)) = ((\f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))) f))
T c= c==> ! ! c==> cMEM b0 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END cMEM b4 cfaces b5 csplitFace f0 f1 f2 b0 b1 * / ! c==> cMEM b0 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END cMEM b4 cfaces b5 csplitFace f0 f1 f2 b0 b1 f3 * / ! c==> cMEM b0 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END cMEM b4 cfaces b5 csplitFace f0 f1 f2 b0 b1 f3
- (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (((the h) = v) = ((the h) = v))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= c= cthe f3 f4 c= cthe f3 f4
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((finals g) = (finals g')))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= f4 cthe f2 c==> c= f6 cupt ccountVertices f7 c+ ccountVertices f7 f5 c==> cMEM f1 cfaces f7 c==> c/\ c= cFST csplitFace f7 f3 f4 f1 f6 f8 c= cSND csplitFace f7 f3 f4 f1 f6 c, f9 f10 c= cfinals f7 cfinals f10
+ |- (!ws. (!f. (!v. (!u. (!g. (!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))))))))))))))))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
- (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) |- (((((nextVertex f) u) = v) /\ (n = (NUMERAL _0))) = F)
T c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 cF
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- (f2 = (FST (SND (((((splitFace g) u) v) f) ws))))
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= f5 cFST cSND csplitFace f0 f1 f2 f3 f4
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((\u. (!n. (((~ ((MEM _10384918) (faces _10384917))) \/ (SND _10384918)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) u) n) t))))))) _10384919)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 * / ! c\/ c\/ c~ cMEM f1 cfaces f2 cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 b0 b1 f0 f3
+ ((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) f1) |- (((?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws)))))))) = ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> * / c? / c? / c= c, b0 c, b1 b2 csplitFace f0 f1 f2 f3 f4 f5 c= c==> c? / c? / c= c, f5 c, b0 b1 csplitFace f0 f1 f2 f3 f4 c= cfinals f0 cfinals cSND cCOND c= f6 cNONE csubdivFace0_alt f0 f3 f1 cSUC f7 f8 cCOND c/\ c= cnextVertex f3 f1 f2 c= f7 cNUMERAL c_0 csubdivFace0_alt f0 f3 f2 cNUMERAL c_0 f8 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f8 csplitFace f0 f1 f2 f3 f4 c= cfinals f0 cfinals cSND cCOND c= f6 cNONE csubdivFace0_alt f0 f3 f1 cSUC f7 f8 cCOND c/\ c= cnextVertex f3 f1 f2 c= f7 cNUMERAL c_0 csubdivFace0_alt f0 f3 f2 cNUMERAL c_0 f8 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f8 csplitFace f0 f1 f2 f3 f4
- ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0))) |- (((((nextVertex f) u) = v) /\ (n = (NUMERAL _0))) = T)
T c==> c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 cT
+ |- ((\f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))))) f1)
T * / ! ! ! ! c==> cMEM f0 cfaces b4 c==> c~ cSND f0 c==> c= cthe b2 f1 c==> c= cupt ccountVertices b4 c+ ccountVertices b4 b1 f2 c==> c/\ c= cFST csplitFace b4 f3 f1 f0 f2 b0 c= cSND csplitFace b4 f3 f1 f0 f2 c, f4 b3 c==> c~ c= b2 cNONE c==> c~ c/\ c= cnextVertex f0 f3 f1 c= b1 cNUMERAL c_0 c==> c/\ c= f5 b0 c= f6 f4 c==> c/\ c= cFST csplit_face f0 f3 f1 f2 f5 c= cSND csplit_face f0 f3 f1 f2 f6 c==> c~ cSND f6 c==> cSND f4 cF f7
- (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))), (~ (SND f)), (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ F) ==> F)
T c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 c==> c~ cSND f0 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 f3 f0 f4 c==> c= cthe f5 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f6 f4 c==> c~ cF cF
- |- ((((~ ((MEM f) (faces g))) \/ (SND f)) \/ (!n. ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))) = (!n. (((~ ((MEM f) (faces g))) \/ (SND f)) \/ ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))))
T c= c\/ c\/ c~ cMEM f0 cfaces f1 cSND f0 ! c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 f2 b0 f3 ! c\/ c\/ c~ cMEM f0 cfaces f1 cSND f0 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 f2 b0 f3
- ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((((upt (countVertices g)) ((countVertices g) + n)) = ws) = (((upt (countVertices g)) ((countVertices g) + n)) = ws))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f0 c= cSND csplit_face f4 f5 f6 f7 f2 c= c= cupt ccountVertices f8 c+ ccountVertices f8 f9 f7 c= cupt ccountVertices f8 c+ ccountVertices f8 f9 f7
+ (~ (SND f)), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))))))))
T c==> c~ cSND f0 c==> c= cthe f1 f2 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f4 f5 c==> c~ c/\ c= cnextVertex f0 f6 f2 c= f4 cNUMERAL c_0 c==> c= cFST csplitFace f3 f6 f2 f0 f5 f7 c==> c= cFST cSND csplitFace f3 f6 f2 f0 f5 f8 c==> c= cSND cSND csplitFace f3 f6 f2 f0 f5 cSND cSND csplitFace f3 f6 f2 f0 f5 c==> c~ c= cfinals f3 cfinals cSND cSND csplitFace f3 f6 f2 f0 f5 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
+ |- ((\f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2)))))) f1)
T * / ! ! c==> c= csplitFace f0 f1 f2 f3 f4 c, b0 c, b1 b2 c= csplit_face f3 f1 f2 f4 c, b0 b1 f5
- ((the h) = v) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c= cthe f0 f1 c= cMEM f2 cfaces f3 cMEM f2 cfaces f3
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (!g'. (((\g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) g') ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws)))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> c= f4 cupt ccountVertices f5 c+ ccountVertices f5 f6 c==> cMEM f1 cfaces f5 ! c==> * / c= c, f7 c, f8 b1 csplitFace f5 f9 f2 f1 f4 b0 c= cfinals f5 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f5 f1 f9 cSUC f6 f0 cCOND c/\ c= cnextVertex f1 f9 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f5 f1 f2 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f0 csplitFace f5 f9 f2 f1 f4
- (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))) /\ (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2)))))
T c==> c? / c= c, f0 b0 csplit_face f1 f2 f3 f4 c==> c~ cSND f1 c==> c~ c= f5 cNONE c==> c~ c/\ c= cnextVertex f1 f2 f3 c= f6 cNUMERAL c_0 c==> c= c, f7 c, f8 f9 csplitFace f10 f2 f3 f1 f4 c==> c= csplit_face f1 f2 f3 f4 c, f7 f8 c==> c= f3 cthe f5 c==> c= f4 cupt ccountVertices f10 c+ ccountVertices f10 f6 c==> cMEM f1 cfaces f10 c/\ c? / c= c, f0 b0 csplit_face f1 f2 f3 f4 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f1 f2 f3 f4 c/\ cMEM f8 cfaces f9 c~ cSND f8
+ |- ((\f. (!u. (!v. (!ws. ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)))))) f)
T * / ! ! ! cLET * part cGABS / ! ! cGEQ * b4 c, b5 b6 cLET_END c~ cSND b6 csplit_face b0 b1 b2 b3 f0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((SND (SND (((((splitFace g) u) v) f) ws))) = g'), ((FST (((((splitFace g) u) v) f) ws)) = f1), ((FST (SND (((((splitFace g) u) v) f) ws))) = f2), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((hold ((finals g) = (finals g'))) ==> ((finals g) = (finals g'))) = ((finals g) = (finals g')))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cSND cSND csplitFace f6 f3 f4 f1 f7 f8 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f9 c==> c= cFST cSND csplitFace f6 f3 f4 f1 f7 f10 c==> c= f4 cthe f2 c==> c= f7 cupt ccountVertices f6 c+ ccountVertices f6 f5 c==> cMEM f1 cfaces f6 c= c==> chold c= cfinals f6 cfinals f8 c= cfinals f6 cfinals f8 c= cfinals f6 cfinals f8
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (((!f. (!u. (!n. (((~ ((MEM f) (faces _10384917))) \/ (SND f)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) f) u) n) t)))))))) ==> ((\f. (!u. (!n. (((~ ((MEM f) (faces _10384917))) \/ (SND f)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) f) u) n) t)))))))) _10384918)) = ((\f. (!u. (!n. (((~ ((MEM f) (faces _10384917))) \/ (SND f)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) f) u) n) t)))))))) _10384918))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= c==> ! ! ! c\/ c\/ c~ cMEM b0 cfaces f1 cSND b0 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 b0 b1 b2 f0 * / ! ! c\/ c\/ c~ cMEM b0 cfaces f1 cSND b0 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 b0 b1 b2 f0 f2 * / ! ! c\/ c\/ c~ cMEM b0 cfaces f1 cSND b0 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 b0 b1 b2 f0 f2
+ |- ((\f2. (!g'. ((GEQ ((GABS (\_10384890. (!f1. (!f2. (!g'. ((GEQ (_10384890 (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))))) (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))) f2)
T * / ! cGEQ cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b4 cLET_END csubdivFace0_alt b4 b4 f0 cNUMERAL c_0 f1 c, f2 c, b0 b1 cLET_END csubdivFace0_alt b1 b0 f0 cNUMERAL c_0 f1 f3
- ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)) |- ((~ (SND f)) = (~ (SND f)))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= c~ cSND f6 c~ cSND f6
- ((the h) = v) |- (((SND _10384924) \/ ((finals (SND (SND (((((splitFace _10384921) _10384922) _10384923) _10384924) _10384925)))) = (finals _10384921))) = ((SND _10384924) \/ ((finals (SND (SND (((((splitFace _10384921) _10384922) _10384923) _10384924) _10384925)))) = (finals _10384921))))
T c==> c= cthe f0 f1 c= c\/ cSND f2 c= cfinals cSND cSND csplitFace f3 f4 f5 f2 f6 cfinals f3 c\/ cSND f2 c= cfinals cSND cSND csplitFace f3 f4 f5 f2 f6 cfinals f3
+ |- ((T ==> (?v. (v = (the h)))) = (?v. (v = (the h))))
T c= c==> cT c? / c= b0 cthe f0 c? / c= b0 cthe f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), ((SND (SND (((((splitFace g) u) v) f) ws))) = g'), ((MEM f) (faces g)) |- ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = g') ==> (hold ((finals g) = (finals g')))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c= cSND cSND csplitFace f1 f2 f3 f4 f5 f6 c==> cMEM f4 cfaces f1 c==> c~ cSND f4 c==> c= cthe f7 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f8 f5 c==> c~ c= f7 cNONE c==> c~ c/\ c= cnextVertex f4 f2 f3 c= f8 cNUMERAL c_0 c==> c= cFST csplitFace f1 f2 f3 f4 f5 f9 c==> c= cFST cSND csplitFace f1 f2 f3 f4 f5 f10 c==> c= cSND cSND csplitFace f1 f2 f3 f4 f5 f6 chold c= cfinals f1 cfinals f6
+ |- ((LET_END ((MEM ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g'))))) (faces ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g'))))))) = (LET_END ((MEM f2) (faces g'))))
T c= cLET_END cMEM c@ / ! ! c= * b0 c, b1 b2 b1 c@ / ! ! c= * b0 c, b1 b2 b2 c, f0 c, f1 f2 cfaces c@ / ! ! c= * b0 c, b1 b2 b2 c@ / ! ! c= * b0 c, b1 b2 b2 c, f0 c, f1 f2 cLET_END cMEM f1 cfaces f2
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- ((~ (h = NONE)) = (~ (h = NONE)))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c~ c= f6 cNONE c~ c= f6 cNONE
+ |- ((?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))) = ((\f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))) f1'))
T c= c? / c= c, f0 b0 csplit_face f1 f2 f3 f4 * / c? / c= c, b0 b1 csplit_face f1 f2 f3 f4 f0
- ((FST (((((splitFace g) u) v) f) ws)) = f1) |- (((~ ((MEM _10384918) (faces _10384917))) \/ ((SND _10384918) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) _10384920) t)))))) = ((~ ((MEM _10384918) (faces _10384917))) \/ ((SND _10384918) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) _10384920) t)))))))
T c==> c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= c\/ c~ cMEM f6 cfaces f7 c\/ cSND f6 c= cfinals f7 cfinals cSND csubdivFace0_alt f7 f6 f8 f9 f10 c\/ c~ cMEM f6 cfaces f7 c\/ cSND f6 c= cfinals f7 cfinals cSND csubdivFace0_alt f7 f6 f8 f9 f10
+ |- (((!v. (!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))))))))) ==> ((\v. (!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))))))))) v)) = ((\v. (!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))))))))) v))
T c= c==> ! ! ! ! ! ! ! ! ! c==> cMEM b2 cfaces b8 c==> c~ cSND b2 c==> c= cthe b6 b0 c==> c= cupt ccountVertices b8 c+ ccountVertices b8 b5 f0 c==> c/\ c= cFST csplitFace b8 b1 b0 b2 f0 b4 c= cSND csplitFace b8 b1 b0 b2 f0 c, f1 b7 c==> c~ c= b6 cNONE c==> c~ c/\ c= cnextVertex b2 b1 b0 c= b5 cNUMERAL c_0 c==> c/\ c= b3 b4 c= f2 f1 c==> c/\ c= cFST csplit_face b2 b1 b0 f0 b3 c= cSND csplit_face b2 b1 b0 f0 f2 c==> c~ cSND f2 c==> cSND f1 cF * / ! ! ! ! ! ! ! ! c==> cMEM b2 cfaces b8 c==> c~ cSND b2 c==> c= cthe b6 b0 c==> c= cupt ccountVertices b8 c+ ccountVertices b8 b5 f0 c==> c/\ c= cFST csplitFace b8 b1 b0 b2 f0 b4 c= cSND csplitFace b8 b1 b0 b2 f0 c, f1 b7 c==> c~ c= b6 cNONE c==> c~ c/\ c= cnextVertex b2 b1 b0 c= b5 cNUMERAL c_0 c==> c/\ c= b3 b4 c= f2 f1 c==> c/\ c= cFST csplit_face b2 b1 b0 f0 b3 c= cSND csplit_face b2 b1 b0 f0 f2 c==> c~ cSND f2 c==> cSND f1 cF f3 * / ! ! ! ! ! ! ! ! c==> cMEM b2 cfaces b8 c==> c~ cSND b2 c==> c= cthe b6 b0 c==> c= cupt ccountVertices b8 c+ ccountVertices b8 b5 f0 c==> c/\ c= cFST csplitFace b8 b1 b0 b2 f0 b4 c= cSND csplitFace b8 b1 b0 b2 f0 c, f1 b7 c==> c~ c= b6 cNONE c==> c~ c/\ c= cnextVertex b2 b1 b0 c= b5 cNUMERAL c_0 c==> c/\ c= b3 b4 c= f2 f1 c==> c/\ c= cFST csplit_face b2 b1 b0 f0 b3 c= cSND csplit_face b2 b1 b0 f0 f2 c==> c~ cSND f2 c==> cSND f1 cF f3
- |- (((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))) ==> ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))))
T c==> c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF
+ |- (((!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))) ==> ((\n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))) n)) = ((\n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))) n))
T c= c==> ! ! ! ! c==> cMEM f0 cfaces b3 c==> c~ cSND f0 c==> c= cthe b1 f1 c==> c= cupt ccountVertices b3 c+ ccountVertices b3 b0 f2 c==> c/\ c= cFST csplitFace b3 f3 f1 f0 f2 f4 c= cSND csplitFace b3 f3 f1 f0 f2 c, f5 b2 c==> c~ c= b1 cNONE c==> c~ c/\ c= cnextVertex f0 f3 f1 c= b0 cNUMERAL c_0 c==> c/\ c= f6 f4 c= f7 f5 c==> c/\ c= cFST csplit_face f0 f3 f1 f2 f6 c= cSND csplit_face f0 f3 f1 f2 f7 c==> c~ cSND f7 c==> cSND f5 cF * / ! ! ! c==> cMEM f0 cfaces b3 c==> c~ cSND f0 c==> c= cthe b1 f1 c==> c= cupt ccountVertices b3 c+ ccountVertices b3 b0 f2 c==> c/\ c= cFST csplitFace b3 f3 f1 f0 f2 f4 c= cSND csplitFace b3 f3 f1 f0 f2 c, f5 b2 c==> c~ c= b1 cNONE c==> c~ c/\ c= cnextVertex f0 f3 f1 c= b0 cNUMERAL c_0 c==> c/\ c= f6 f4 c= f7 f5 c==> c/\ c= cFST csplit_face f0 f3 f1 f2 f6 c= cSND csplit_face f0 f3 f1 f2 f7 c==> c~ cSND f7 c==> cSND f5 cF f8 * / ! ! ! c==> cMEM f0 cfaces b3 c==> c~ cSND f0 c==> c= cthe b1 f1 c==> c= cupt ccountVertices b3 c+ ccountVertices b3 b0 f2 c==> c/\ c= cFST csplitFace b3 f3 f1 f0 f2 f4 c= cSND csplitFace b3 f3 f1 f0 f2 c, f5 b2 c==> c~ c= b1 cNONE c==> c~ c/\ c= cnextVertex f0 f3 f1 c= b0 cNUMERAL c_0 c==> c/\ c= f6 f4 c= f7 f5 c==> c/\ c= cFST csplit_face f0 f3 f1 f2 f6 c= cSND csplit_face f0 f3 f1 f2 f7 c==> c~ cSND f7 c==> cSND f5 cF f8
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- (((~ ((MEM _10384918) (faces _10384917))) \/ ((SND _10384918) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) _10384920) t)))))) = ((~ ((MEM _10384918) (faces _10384917))) \/ ((SND _10384918) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) _10384920) t)))))))
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= c\/ c~ cMEM f6 cfaces f7 c\/ cSND f6 c= cfinals f7 cfinals cSND csubdivFace0_alt f7 f6 f8 f9 f10 c\/ c~ cMEM f6 cfaces f7 c\/ cSND f6 c= cfinals f7 cfinals cSND csubdivFace0_alt f7 f6 f8 f9 f10
+ ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)) |- (((FST (((((splitFace g) u) v) f) ws)) = (FST (f1 , (f2 , g')))) /\ ((SND (((((splitFace g) u) v) f) ws)) = (SND (f1 , (f2 , g')))))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c/\ c= cFST csplitFace f3 f4 f5 f6 f7 cFST c, f0 c, f1 f2 c= cSND csplitFace f3 f4 f5 f6 f7 cSND c, f0 c, f1 f2
+ (~ (SND f2')), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- (~ (SND f2))
T c==> c~ cSND f0 c==> c~ c/\ c= cnextVertex f1 f2 f3 c= f4 cNUMERAL c_0 c==> c= cthe f5 f3 c==> c= cupt ccountVertices f6 c+ ccountVertices f6 f4 f7 c==> c/\ c= f8 f9 c= f0 f10 c==> c/\ c= cFST csplit_face f1 f2 f3 f7 f8 c= cSND csplit_face f1 f2 f3 f7 f0 c~ cSND f10
+ (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((MEM f2) (faces g')) /\ (~ (SND f2)))
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f4 cNUMERAL c_0 c==> c= c, f5 c, f6 f7 csplitFace f8 f2 f3 f0 f9 c==> c= f3 cthe f1 c==> c= f9 cupt ccountVertices f8 c+ ccountVertices f8 f4 c==> cMEM f0 cfaces f8 c/\ cMEM f6 cfaces f7 c~ cSND f6
- |- ((!f'. (((~ ((MEM f') (faces g))) \/ (SND f')) \/ (!u. (!n. ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))))) = ((!f. ((~ ((MEM f) (faces g))) \/ (SND f))) \/ (!u. (!n. ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))
T c= ! c\/ c\/ c~ cMEM b0 cfaces f0 cSND b0 ! ! c= cfinals f0 cfinals cSND csubdivFace0_alt f0 f1 b1 b2 f2 c\/ ! c\/ c~ cMEM b0 cfaces f0 cSND b0 ! ! c= cfinals f0 cfinals cSND csubdivFace0_alt f0 f1 b0 b1 f2
+ ((the h) = v) |- ((SND (SND ((((split_face f) u) v) ((upt (countVertices g)) ((countVertices g) + n))))) = (SND (SND ((((split_face f) u) (the h)) ((upt (countVertices g)) ((countVertices g) + n))))))
T c==> c= cthe f0 f1 c= cSND cSND csplit_face f2 f3 f1 cupt ccountVertices f4 c+ ccountVertices f4 f5 cSND cSND csplit_face f2 f3 cthe f0 cupt ccountVertices f4 c+ ccountVertices f4 f5
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)) |- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g')))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c/\ c= cFST csplitFace f3 f4 f5 f6 f7 f0 c= cSND csplitFace f3 f4 f5 f6 f7 c, f1 f2
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= c==> c/\ cMEM f1 cfaces f2 c~ cSND f1 c= cfinals f2 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f2 f1 f4 cSUC f5 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f4 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3 cT
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! ! c==> c/\ cMEM b0 cfaces f1 c~ cSND b0 c= cfinals f1 cfinals cSND cCOND c= f2 cNONE csubdivFace0_alt f1 b0 b1 cSUC b2 f0 cLET / cLET_END cCOND c/\ c= cnextVertex b0 b1 b3 c= b2 cNUMERAL c_0 csubdivFace0_alt f1 b0 b3 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f0 csplitFace f1 b1 b3 b0 b4 cupt ccountVertices f1 c+ ccountVertices f1 b2 cthe f2
- (~ (h = NONE)) |- (~ (NONE = h))
T c==> c~ c= f0 cNONE c~ c= cNONE f0
+ ((finals g) = (finals g')) |- (((finals g) = (finals (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))) = ((finals g') = (finals (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))
T c==> c= cfinals f0 cfinals f1 c= c= cfinals f0 cfinals cSND csubdivFace0_alt f1 f2 f3 cNUMERAL c_0 f4 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f2 f3 cNUMERAL c_0 f4
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((MEM f) (faces g)) |- (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> cMEM f1 cfaces f2 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF
+ |- (((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))) = (((h = NONE) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) (SUC n)) t))))) /\ ((~ (h = NONE)) ==> ((finals g) = (finals (SND (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))
T c= c= cfinals f0 cfinals cSND cCOND c= f1 cNONE csubdivFace0_alt f0 f2 f3 cSUC f4 f5 cCOND c/\ c= cnextVertex f2 f3 f6 c= f4 cNUMERAL c_0 csubdivFace0_alt f0 f2 f6 cNUMERAL c_0 f5 csubdivFace0_alt f7 f8 f6 cNUMERAL c_0 f5 c/\ c==> c= f1 cNONE c= cfinals f0 cfinals cSND csubdivFace0_alt f0 f2 f3 cSUC f4 f5 c==> c~ c= f1 cNONE c= cfinals f0 cfinals cSND cCOND c/\ c= cnextVertex f2 f3 f6 c= f4 cNUMERAL c_0 csubdivFace0_alt f0 f2 f6 cNUMERAL c_0 f5 csubdivFace0_alt f7 f8 f6 cNUMERAL c_0 f5
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= ! c==> c/\ cMEM f1 cfaces f2 c~ cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 b0 f0 cT
+ (~ (SND f)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) /\ ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))))))
T c==> c~ cSND f0 c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c= cSND cSND csplitFace f4 f1 f2 f0 f5 cSND cSND csplitFace f4 f1 f2 f0 f5 c==> c= cthe f6 f2 c==> c= cupt ccountVertices f4 c+ ccountVertices f4 f3 f5 c/\ c= cSND cSND csplitFace f4 f1 f2 f0 f5 cSND cSND csplitFace f4 f1 f2 f0 f5 c==> c~ c= cfinals f4 cfinals cSND cSND csplitFace f4 f1 f2 f0 f5 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
+ |- ((\f1. (!f2. (!g'. ((GEQ ((GABS (\_10385606. (!f1. (!f2. (!g'. ((GEQ (_10385606 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))) f1)
T * / ! ! cGEQ cGABS / ! ! ! cGEQ * b3 c, b4 c, b4 b4 cLET_END cMEM b4 cfaces b4 c, b0 c, b1 b2 cLET_END cMEM b1 cfaces b2 f0
+ ((f1 = (FST (((((splitFace g) u) v) f) ws))) /\ ((f2 = (FST (SND (((((splitFace g) u) v) f) ws)))) /\ (g' = (SND (SND (((((splitFace g) u) v) f) ws)))))) |- (((f1 = (FST (((((splitFace g) u) v) f) ws))) /\ ((f2 = (FST (SND (((((splitFace g) u) v) f) ws)))) /\ (g' = (SND (SND (((((splitFace g) u) v) f) ws)))))) /\ (?f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))))
T c==> c/\ c= f0 cFST csplitFace f1 f2 f3 f4 f5 c/\ c= f6 cFST cSND csplitFace f1 f2 f3 f4 f5 c= f7 cSND cSND csplitFace f1 f2 f3 f4 f5 c/\ c/\ c= f0 cFST csplitFace f1 f2 f3 f4 f5 c/\ c= f6 cFST cSND csplitFace f1 f2 f3 f4 f5 c= f7 cSND cSND csplitFace f1 f2 f3 f4 f5 c? / c? / c? / c= c, b0 c, b1 b2 csplitFace f1 f2 f3 f4 f5
- |- ((_10385539 = _10385541) ==> ((~ (_10385538 = _10385540)) \/ (((MEM _10385540) _10385541) \/ (~ ((MEM _10385538) _10385539)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cMEM f3 f1 c~ cMEM f2 f0
- |- ((_10385568 = _10385570) ==> ((~ (_10385569 = _10385571)) \/ ((_10385568 + _10385569) = (_10385570 + _10385571))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c+ f0 f2 c+ f1 f3
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), ((MEM f) (faces g)), ((\ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))) ws) |- (((\ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))) ws) /\ ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> cMEM f1 cfaces f4 c==> * / c= b0 cupt ccountVertices f4 c+ ccountVertices f4 f5 f6 c/\ * / c= b0 cupt ccountVertices f4 c+ ccountVertices f4 f5 f6 c= cfinals f4 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f4 f1 f7 cSUC f5 f0 cCOND c/\ c= cnextVertex f1 f7 f2 c= f5 cNUMERAL c_0 csubdivFace0_alt f4 f1 f2 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f0 csplitFace f4 f7 f2 f1 b0 cupt ccountVertices f4 c+ ccountVertices f4 f5
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! c==> c/\ cMEM f1 cfaces f2 c~ cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 b0 f0
- (_10385576 = _10385580), (_10385577 = _10385581), (_10385578 = _10385582), (_10385579 = _10385583) |- ((_10385576 = _10385580) /\ (((((split_face _10385576) _10385577) _10385578) _10385579) = ((((split_face _10385580) _10385581) _10385582) _10385583)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f0 f1 c= csplit_face f0 f2 f4 f6 csplit_face f1 f3 f5 f7
- |- ((~ (_10385489 = _10385491)) \/ ((~ (_10385488 = _10385490)) \/ (((nextVertex _10385488) _10385489) = ((nextVertex _10385490) _10385491))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cnextVertex f2 f0 cnextVertex f3 f1
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (((the h) = v) = ((the h) = v))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= c= cthe f8 f2 c= cthe f8 f2
+ |- ((T ==> (?f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))))) = (?f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))))
T c= c==> cT c? / c? / c= c, b0 b1 csplit_face f0 f1 f2 f3 c? / c? / c= c, b0 b1 csplit_face f0 f1 f2 f3
+ (~ (SND f2')), (SND f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((~ (((nextVertex f) u) = v)) ==> F)
T c==> c~ cSND f0 c==> cSND f1 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f4 c+ ccountVertices f4 f5 f6 c==> c/\ c= f7 f8 c= f0 f1 c==> c/\ c= cFST csplit_face f9 f10 f3 f6 f7 c= cSND csplit_face f9 f10 f3 f6 f0 c==> c~ c= cnextVertex f9 f10 f3 cF
- ((f1' = f1) /\ (f2' = f2)) |- ((SND f2) = (SND f2))
T c==> c/\ c= f0 f1 c= f2 f3 c= cSND f3 cSND f3
+ |- ((\f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))))) f1')
T * / ! ! ! ! ! c==> cMEM f0 cfaces b5 c==> c~ cSND f0 c==> c= cthe b3 f1 c==> c= cupt ccountVertices b5 c+ ccountVertices b5 b2 f2 c==> c/\ c= cFST csplitFace b5 f3 f1 f0 f2 b1 c= cSND csplitFace b5 f3 f1 f0 f2 c, f4 b4 c==> c~ c= b3 cNONE c==> c~ c/\ c= cnextVertex f0 f3 f1 c= b2 cNUMERAL c_0 c==> c/\ c= b0 b1 c= f5 f4 c==> c/\ c= cFST csplit_face f0 f3 f1 f2 b0 c= cSND csplit_face f0 f3 f1 f2 f5 c==> c~ cSND f5 c==> cSND f4 cF f6
- ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)) |- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) = (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f8 ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f8
+ |- (((!f2. (!f2'. (!ws. (!v. (!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))))))))))) ==> ((\f2. (!f2'. (!ws. (!v. (!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))))))))))) f2)) = ((\f2. (!f2'. (!ws. (!v. (!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))))))))))) f2))
T c= c==> ! ! ! ! ! ! ! ! ! ! ! ! c==> cMEM b5 cfaces b11 c==> c~ cSND b5 c==> c= cthe b9 b3 c==> c= cupt ccountVertices b11 c+ ccountVertices b11 b8 b2 c==> c/\ c= cFST csplitFace b11 b4 b3 b5 b2 b7 c= cSND csplitFace b11 b4 b3 b5 b2 c, b0 b10 c==> c~ c= b9 cNONE c==> c~ c/\ c= cnextVertex b5 b4 b3 c= b8 cNUMERAL c_0 c==> c/\ c= b6 b7 c= b1 b0 c==> c/\ c= cFST csplit_face b5 b4 b3 b2 b6 c= cSND csplit_face b5 b4 b3 b2 b1 c==> c~ cSND b1 c==> cSND b0 cF * / ! ! ! ! ! ! ! ! ! ! ! c==> cMEM b5 cfaces b11 c==> c~ cSND b5 c==> c= cthe b9 b3 c==> c= cupt ccountVertices b11 c+ ccountVertices b11 b8 b2 c==> c/\ c= cFST csplitFace b11 b4 b3 b5 b2 b7 c= cSND csplitFace b11 b4 b3 b5 b2 c, b0 b10 c==> c~ c= b9 cNONE c==> c~ c/\ c= cnextVertex b5 b4 b3 c= b8 cNUMERAL c_0 c==> c/\ c= b6 b7 c= b1 b0 c==> c/\ c= cFST csplit_face b5 b4 b3 b2 b6 c= cSND csplit_face b5 b4 b3 b2 b1 c==> c~ cSND b1 c==> cSND b0 cF f0 * / ! ! ! ! ! ! ! ! ! ! ! c==> cMEM b5 cfaces b11 c==> c~ cSND b5 c==> c= cthe b9 b3 c==> c= cupt ccountVertices b11 c+ ccountVertices b11 b8 b2 c==> c/\ c= cFST csplitFace b11 b4 b3 b5 b2 b7 c= cSND csplitFace b11 b4 b3 b5 b2 c, b0 b10 c==> c~ c= b9 cNONE c==> c~ c/\ c= cnextVertex b5 b4 b3 c= b8 cNUMERAL c_0 c==> c/\ c= b6 b7 c= b1 b0 c==> c/\ c= cFST csplit_face b5 b4 b3 b2 b6 c= cSND csplit_face b5 b4 b3 b2 b1 c==> c~ cSND b1 c==> cSND b0 cF f0
+ |- (((GABS (\_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2)))))))) (f1 , f2)) = (LET_END (~ (SND f2))))
T c= cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 c, f0 f1 cLET_END c~ cSND f1
+ ((f1' , f2') = ((((split_face f) u) v) ws)) |- (((FST ((((split_face f) u) v) ws)) = (FST (f1' , f2'))) /\ ((SND ((((split_face f) u) v) ws)) = (SND (f1' , f2'))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c/\ c= cFST csplit_face f2 f3 f4 f5 cFST c, f0 f1 c= cSND csplit_face f2 f3 f4 f5 cSND c, f0 f1
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((f1' , f2') = ((((split_face f) u) v) ws)) /\ (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2)))))
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f4 cNUMERAL c_0 c==> c= c, f5 c, f6 f7 csplitFace f8 f2 f3 f0 f9 c==> c= c, f10 f11 csplit_face f0 f2 f3 f9 c==> c= csplit_face f0 f2 f3 f9 c, f5 f6 c==> c= f3 cthe f1 c==> c= f9 cupt ccountVertices f8 c+ ccountVertices f8 f4 c==> cMEM f0 cfaces f8 c/\ c= c, f10 f11 csplit_face f0 f2 f3 f9 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f0 f2 f3 f9 c/\ cMEM f6 cfaces f7 c~ cSND f6
- (_10385572 = _10385574) |- ((_10385572 = _10385574) /\ ((~ (_10385573 = _10385575)) \/ (((upt _10385572) _10385573) = ((upt _10385574) _10385575))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cupt f0 f2 cupt f1 f3
+ ((f1 = (FST (((((splitFace g) u) v) f) ws))) /\ ((f2 = (FST (SND (((((splitFace g) u) v) f) ws)))) /\ (g' = (SND (SND (((((splitFace g) u) v) f) ws)))))) |- ((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) f1)
T c==> c/\ c= f0 cFST csplitFace f1 f2 f3 f4 f5 c/\ c= f6 cFST cSND csplitFace f1 f2 f3 f4 f5 c= f7 cSND cSND csplitFace f1 f2 f3 f4 f5 * / c? / c? / c= c, b0 c, b1 b2 csplitFace f1 f2 f3 f4 f5 f0
+ (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- ((ws = ((upt (countVertices g)) ((countVertices g) + n))) /\ (?ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c/\ c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c? / c= b0 cupt ccountVertices f1 c+ ccountVertices f1 f2
+ |- ((a = b) = ((GEQ a) b))
T c= c= f0 f1 cGEQ f0 f1
+ (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> (~ (SND f2)))))
T c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c= cthe f4 f2 c==> c= cupt ccountVertices f5 c+ ccountVertices f5 f3 f6 c==> c/\ c= f7 f8 c= f9 f10 c==> c/\ c= cFST csplit_face f0 f1 f2 f6 f7 c= cSND csplit_face f0 f1 f2 f6 f9 c==> c~ cSND f9 c~ cSND f10
- (_10385166 = _10385171) |- ((_10385164 = _10385169) ==> ((~ (_10385165 = _10385170)) \/ ((~ (_10385163 = _10385168)) \/ ((~ (_10385162 = _10385167)) \/ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csubdivFace0_alt f8 f6 f2 f4 f0 csubdivFace0_alt f9 f7 f3 f5 f1
+ (~ (SND f)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((FST (SND (((((splitFace g) u) v) f) ws))) = f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) /\ (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))))))
T c==> c~ cSND f0 c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c= cFST cSND csplitFace f4 f1 f2 f0 f5 f6 c==> c= cthe f7 f2 c==> c= cupt ccountVertices f4 c+ ccountVertices f4 f3 f5 c/\ c= cFST cSND csplitFace f4 f1 f2 f0 f5 f6 c==> c= cSND cSND csplitFace f4 f1 f2 f0 f5 cSND cSND csplitFace f4 f1 f2 f0 f5 c==> c~ c= cfinals f4 cfinals cSND cSND csplitFace f4 f1 f2 f0 f5 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
+ (~ (SND f2')), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((SND (SND ((((split_face f) u) (the h)) ((upt (countVertices g)) ((countVertices g) + n))))) ==> F)
T c==> c~ cSND f0 c==> c= cthe f1 f2 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f4 f5 c==> c/\ c= f6 f7 c= f0 f8 c==> c/\ c= cFST csplit_face f9 f10 f2 f5 f6 c= cSND csplit_face f9 f10 f2 f5 f0 c==> cSND cSND csplit_face f9 f10 cthe f1 cupt ccountVertices f3 c+ ccountVertices f3 f4 cF
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), ((MEM f) (faces g)) |- ((v = (the h)) /\ ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> cMEM f1 cfaces f4 c/\ c= f2 cthe f3 c= cfinals f4 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f4 f1 f5 cSUC f6 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f5 b0 c= f6 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f4 f5 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f6 cthe f3
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> c= f4 cupt ccountVertices f5 c+ ccountVertices f5 f6 c==> cMEM f1 cfaces f5 c= cfinals f5 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f5 f1 f7 cSUC f6 f0 cCOND c/\ c= cnextVertex f1 f7 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f5 f1 f2 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f0 csplitFace f5 f7 f2 f1 b0 cupt ccountVertices f5 c+ ccountVertices f5 f6
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- ((!f1. (!f2. (((\_10385202. (LET_END (~ (SND ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10385202))))) (f1 , f2)) = (LET_END (~ (SND f2)))))) = ((\_10385204. (!f1. (!f2. ((_10385204 (f1 , f2)) = (LET_END (~ (SND f2))))))) (\_10385202. (LET_END (~ (SND ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10385202)))))))
T c= ! ! c= * / cLET_END c~ cSND c@ / ! ! c= * b3 c, b4 b5 b5 b2 c, b0 b1 cLET_END c~ cSND b1 * / ! ! c= * b0 c, b1 b2 cLET_END c~ cSND b2 / cLET_END c~ cSND c@ / ! ! c= * b1 c, b2 b3 b3 b0
+ ((\f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) f2) |- (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))
T c==> * / c? / c= c, f0 c, b0 b1 csplitFace f1 f2 f3 f4 f5 f6 c? / c= c, f0 c, f6 b0 csplitFace f1 f2 f3 f4 f5
- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))) |- (((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))) /\ ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))))
T c==> c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF c/\ c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> c= f4 cupt ccountVertices f5 c+ ccountVertices f5 f6 c==> cMEM f1 cfaces f5 c==> c? / c= c, f7 c, f8 b0 csplitFace f5 f9 f2 f1 f4 c= cfinals f5 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f5 f1 f9 cSUC f6 f0 cCOND c/\ c= cnextVertex f1 f9 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f5 f1 f2 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f0 csplitFace f5 f9 f2 f1 f4
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws)))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c? / c= c, f1 c, f2 b0 csplitFace f3 f4 f5 f6 f7 c==> c~ cSND f6 c==> c= f5 cthe f8 c==> c= f7 cupt ccountVertices f3 c+ ccountVertices f3 f9 c==> cMEM f6 cfaces f3 c= cfinals f3 cfinals cSND cCOND c= f8 cNONE csubdivFace0_alt f3 f6 f4 cSUC f9 f0 cCOND c/\ c= cnextVertex f6 f4 f5 c= f9 cNUMERAL c_0 csubdivFace0_alt f3 f6 f5 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f0 csplitFace f3 f4 f5 f6 f7
+ |- ((LET_END (~ (SND f2))) = (LET_END (~ (SND ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , f2))))))
T c= cLET_END c~ cSND f0 cLET_END c~ cSND c@ / ! ! c= * b0 c, b1 b2 b2 c, f1 f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((FST (((((splitFace g) u) v) f) ws)) = f1), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) /\ ((SND (SND (((((splitFace g) u) v) f) ws))) = g')), ((MEM f) (faces g)) |- ((((FST (SND (((((splitFace g) u) v) f) ws))) = f2) /\ ((SND (SND (((((splitFace g) u) v) f) ws))) = g')) /\ ((finals g) = (finals g')))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f8 c==> c= f4 cthe f2 c==> c= f7 cupt ccountVertices f6 c+ ccountVertices f6 f5 c==> c/\ c= cFST cSND csplitFace f6 f3 f4 f1 f7 f9 c= cSND cSND csplitFace f6 f3 f4 f1 f7 f10 c==> cMEM f1 cfaces f6 c/\ c/\ c= cFST cSND csplitFace f6 f3 f4 f1 f7 f9 c= cSND cSND csplitFace f6 f3 f4 f1 f7 f10 c= cfinals f6 cfinals f10
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((~ (SND f2)) = (~ (SND f2)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= c~ cSND f3 c~ cSND f3
- ((the h) = v) |- ((~ (SND f)) = (~ (SND f)))
T c==> c= cthe f0 f1 c= c~ cSND f2 c~ cSND f2
+ |- (((!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))))) ==> ((\f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))))) f2)) = ((\f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))))) f2))
T c= c==> ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b6 cfaces b5 c~ cSND b6 c= cfinals b5 cfinals cSND csubdivFace0_alt b5 b6 b7 b8 b4 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe b3 f2 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 b2 f3 c==> c~ c= b3 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f2 c= b2 cNUMERAL c_0 c==> c= cFST csplitFace f1 f4 f2 f0 f3 b1 c==> c= cFST cSND csplitFace f1 f4 f2 f0 f3 b0 c==> c= cSND cSND csplitFace f1 f4 f2 f0 f3 cSND cSND csplitFace f1 f4 f2 f0 f3 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f4 f2 f0 f3 c==> ! ! ! ! ! c==> c~ cSND b8 c= cfinals cSND cSND csplitFace b5 b6 b7 b8 b9 cfinals b5 cF * / ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b6 cfaces b5 c~ cSND b6 c= cfinals b5 cfinals cSND csubdivFace0_alt b5 b6 b7 b8 b4 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe b3 f2 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 b2 f3 c==> c~ c= b3 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f2 c= b2 cNUMERAL c_0 c==> c= cFST csplitFace f1 f4 f2 f0 f3 b1 c==> c= cFST cSND csplitFace f1 f4 f2 f0 f3 b0 c==> c= cSND cSND csplitFace f1 f4 f2 f0 f3 cSND cSND csplitFace f1 f4 f2 f0 f3 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f4 f2 f0 f3 c==> ! ! ! ! ! c==> c~ cSND b8 c= cfinals cSND cSND csplitFace b5 b6 b7 b8 b9 cfinals b5 cF f5 * / ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b6 cfaces b5 c~ cSND b6 c= cfinals b5 cfinals cSND csubdivFace0_alt b5 b6 b7 b8 b4 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe b3 f2 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 b2 f3 c==> c~ c= b3 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f2 c= b2 cNUMERAL c_0 c==> c= cFST csplitFace f1 f4 f2 f0 f3 b1 c==> c= cFST cSND csplitFace f1 f4 f2 f0 f3 b0 c==> c= cSND cSND csplitFace f1 f4 f2 f0 f3 cSND cSND csplitFace f1 f4 f2 f0 f3 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f4 f2 f0 f3 c==> ! ! ! ! ! c==> c~ cSND b8 c= cfinals cSND cSND csplitFace b5 b6 b7 b8 b9 cfinals b5 cF f5
+ |- ((ws = ((upt (countVertices g)) ((countVertices g) + n))) = ((\ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))) ws))
T c= c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 * / c= b0 cupt ccountVertices f1 c+ ccountVertices f1 f2 f0
+ |- (?f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))))
T c? / c? / c= c, b0 b1 csplit_face f0 f1 f2 f3
+ (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ (SND (SND ((((split_face f) u) v) ws)))) = (~ (SND (SND ((((split_face f) u) v) ((upt (countVertices g)) ((countVertices g) + n)))))))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= c~ cSND cSND csplit_face f3 f4 f5 f2 c~ cSND cSND csplit_face f3 f4 f5 cupt ccountVertices f0 c+ ccountVertices f0 f1
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((finals g) = (finals (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= c, f6 c, f7 f8 csplitFace f9 f3 f4 f1 f10 c==> c= f4 cthe f2 c==> c= f10 cupt ccountVertices f9 c+ ccountVertices f9 f5 c==> cMEM f1 cfaces f9 c= cfinals f9 cfinals cSND csubdivFace0_alt f8 f7 f4 cNUMERAL c_0 f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((SND (SND (((((splitFace g) u) v) f) ws))) = g'), ((MEM f) (faces g)) |- (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = g') ==> (hold ((finals g) = (finals g'))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= cSND cSND csplitFace f2 f3 f4 f1 f5 f6 c==> cMEM f1 cfaces f2 c==> c= cthe f7 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f8 f5 c==> c~ c= f7 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f8 cNUMERAL c_0 c==> c= cFST csplitFace f2 f3 f4 f1 f5 f9 c==> c= cFST cSND csplitFace f2 f3 f4 f1 f5 f10 c==> c= cSND cSND csplitFace f2 f3 f4 f1 f5 f6 chold c= cfinals f2 cfinals f6
+ |- (((?f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws)))))))) = ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))))
T c= c==> c? / c? / c? / c= c, b0 c, b1 b2 csplitFace f0 f1 f2 f3 f4 c= cfinals f0 cfinals cSND cCOND c= f5 cNONE csubdivFace0_alt f0 f3 f1 cSUC f6 f7 cCOND c/\ c= cnextVertex f3 f1 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f0 f3 f2 cNUMERAL c_0 f7 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f7 csplitFace f0 f1 f2 f3 f4 c= cfinals f0 cfinals cSND cCOND c= f5 cNONE csubdivFace0_alt f0 f3 f1 cSUC f6 f7 cCOND c/\ c= cnextVertex f3 f1 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f0 f3 f2 cNUMERAL c_0 f7 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f7 csplitFace f0 f1 f2 f3 f4
+ |- ((!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))))))))))))))))))) = T)
T c= ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b6 cfaces b5 c~ cSND b6 c= cfinals b5 cfinals cSND csubdivFace0_alt b5 b6 b7 b8 b4 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe b3 f2 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 b2 f3 c==> c~ c= b3 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f2 c= b2 cNUMERAL c_0 c==> c= cFST csplitFace f1 f4 f2 f0 f3 b1 c==> c= cFST cSND csplitFace f1 f4 f2 f0 f3 b0 c==> c= cSND cSND csplitFace f1 f4 f2 f0 f3 cSND cSND csplitFace f1 f4 f2 f0 f3 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f4 f2 f0 f3 c~ ! ! ! ! ! c==> c~ cSND b8 c= cfinals cSND cSND csplitFace b5 b6 b7 b8 b9 cfinals b5 cT
- (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2))))
T c==> c? / c= c, f0 b0 csplit_face f1 f2 f3 f4 c==> c~ cSND f1 c==> c~ c= f5 cNONE c==> c~ c/\ c= cnextVertex f1 f2 f3 c= f6 cNUMERAL c_0 c==> c= c, f7 c, f8 f9 csplitFace f10 f2 f3 f1 f4 c==> c= csplit_face f1 f2 f3 f4 c, f7 f8 c==> c= f3 cthe f5 c==> c= f4 cupt ccountVertices f10 c+ ccountVertices f10 f6 c==> cMEM f1 cfaces f10 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f1 f2 f3 f4 c/\ cMEM f8 cfaces f9 c~ cSND f8
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((~ (((nextVertex f) u) = v)) = (~ (((nextVertex f) u) = v)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= c~ c= cnextVertex f7 f5 f6 c~ c= cnextVertex f7 f5 f6
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> c= f4 cupt ccountVertices f5 c+ ccountVertices f5 f6 c==> cMEM f1 cfaces f5 c==> c? / c? / c= c, f7 c, b0 b1 csplitFace f5 f8 f2 f1 f4 c= cfinals f5 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f5 f1 f8 cSUC f6 f0 cCOND c/\ c= cnextVertex f1 f8 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f5 f1 f2 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f0 csplitFace f5 f8 f2 f1 f4
+ |- ((\g. (!u. (!v. (!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws)))))))) g)
T * / ! ! ! ! c==> cMEM b3 cfaces b0 cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END cMEM b7 cfaces b8 csplitFace b0 b1 b2 b3 b4 f0
- (_10385553 = _10385558), (_10385554 = _10385559), (_10385556 = _10385561) |- ((~ (_10385555 = _10385560)) \/ ((~ (_10385552 = _10385557)) \/ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplitFace f8 f0 f2 f6 f4 csplitFace f9 f1 f3 f7 f5
+ (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) /\ (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> (~ (SND f2))))))
T c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c= cthe f4 f2 c==> c= cupt ccountVertices f5 c+ ccountVertices f5 f3 f6 c/\ c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c/\ c= f7 f8 c= f9 f10 c==> c/\ c= cFST csplit_face f0 f1 f2 f6 f7 c= cSND csplit_face f0 f1 f2 f6 f9 c==> c~ cSND f9 c~ cSND f10
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((SND f2) = (SND f2))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= cSND f3 cSND f3
+ ((f1' = (FST ((((split_face f) u) v) ws))) /\ (f2' = (SND ((((split_face f) u) v) ws)))) |- ((\f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))) f1')
T c==> c/\ c= f0 cFST csplit_face f1 f2 f3 f4 c= f5 cSND csplit_face f1 f2 f3 f4 * / c? / c= c, b0 b1 csplit_face f1 f2 f3 f4 f0
+ (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((?f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))) ==> (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2)))))
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f4 cNUMERAL c_0 c==> c= c, f5 c, f6 f7 csplitFace f8 f2 f3 f0 f9 c==> c= csplit_face f0 f2 f3 f9 c, f5 f6 c==> c= f3 cthe f1 c==> c= f9 cupt ccountVertices f8 c+ ccountVertices f8 f4 c==> cMEM f0 cfaces f8 c==> c? / c? / c= c, b0 b1 csplit_face f0 f2 f3 f9 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f0 f2 f3 f9 c/\ cMEM f6 cfaces f7 c~ cSND f6
- |- ((~ (_10385546 = _10385548)) \/ ((~ (_10385547 = _10385549)) \/ ((_10385546 , _10385547) = (_10385548 , _10385549))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- (((f1' = (FST ((((split_face f) u) v) ws))) /\ (f2' = (SND ((((split_face f) u) v) ws)))) = ((f1' , f2') = ((((split_face f) u) v) ws)))
T c= c/\ c= f0 cFST csplit_face f1 f2 f3 f4 c= f5 cSND csplit_face f1 f2 f3 f4 c= c, f0 f5 csplit_face f1 f2 f3 f4
+ |- (T ==> (?v. (v = (the h))))
T c==> cT c? / c= b0 cthe f0
+ |- ((\_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2))))))) (GABS (\_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2)))))))))
T * / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((FST (((((splitFace g) u) v) f) ws)) = f1), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) /\ ((SND (SND (((((splitFace g) u) v) f) ws))) = g')), ((MEM f) (faces g)) |- ((finals g) = (finals g'))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f8 c==> c= f4 cthe f2 c==> c= f7 cupt ccountVertices f6 c+ ccountVertices f6 f5 c==> c/\ c= cFST cSND csplitFace f6 f3 f4 f1 f7 f9 c= cSND cSND csplitFace f6 f3 f4 f1 f7 f10 c==> cMEM f1 cfaces f6 c= cfinals f6 cfinals f10
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((\f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) f2) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> c= f4 cupt ccountVertices f5 c+ ccountVertices f5 f6 c==> cMEM f1 cfaces f5 c==> * / c? / c= c, f7 c, b0 b1 csplitFace f5 f8 f2 f1 f4 f9 c= cfinals f5 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f5 f1 f8 cSUC f6 f0 cCOND c/\ c= cnextVertex f1 f8 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f5 f1 f2 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f0 csplitFace f5 f8 f2 f1 f4
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((MEM f) (faces g)) |- (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> (hold ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> cMEM f1 cfaces f2 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 chold c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)), ((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) f1) |- (((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) f1) /\ ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> c= f4 cupt ccountVertices f5 c+ ccountVertices f5 f6 c==> cMEM f1 cfaces f5 c==> * / c? / c? / c= c, b0 c, b1 b2 csplitFace f5 f7 f2 f1 f4 f8 c/\ * / c? / c? / c= c, b0 c, b1 b2 csplitFace f5 f7 f2 f1 f4 f8 c= cfinals f5 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f5 f1 f7 cSUC f6 f0 cCOND c/\ c= cnextVertex f1 f7 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f5 f1 f2 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f0 csplitFace f5 f7 f2 f1 f4
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! c==> c/\ cMEM f1 cfaces f2 c~ cSND f1 c= cfinals f2 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f2 f1 f4 cSUC b0 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b1 c= b0 cNUMERAL c_0 csubdivFace0_alt f2 f1 b1 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f0 csplitFace f2 f4 b1 f1 b2 cupt ccountVertices f2 c+ ccountVertices f2 b0 cthe f3
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))), ((FST (((((splitFace g) u) v) f) ws)) = f1), ((FST (SND (((((splitFace g) u) v) f) ws))) = f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((MEM f) (faces g)) |- (hold ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cSND cSND csplitFace f6 f3 f4 f1 f7 cSND cSND csplitFace f6 f3 f4 f1 f7 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f8 c==> c= cFST cSND csplitFace f6 f3 f4 f1 f7 f9 c==> c= cthe f2 f4 c==> c= cupt ccountVertices f6 c+ ccountVertices f6 f5 f7 c==> cMEM f1 cfaces f6 chold c= cfinals f6 cfinals cSND cSND csplitFace f6 f3 f4 f1 f7
+ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))), (~ (SND f)), (~ (n = (NUMERAL _0))), (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ (n = (NUMERAL _0))) /\ F)
T c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 c==> c~ cSND f0 c==> c~ c= f1 cNUMERAL c_0 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f3 f4 f0 f5 c==> c= cthe f6 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f1 f5 c/\ c~ c= f1 cNUMERAL c_0 cF
+ |- ((\f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2)))))))) f)
T * / ! ! ! ! c==> c= csplitFace f0 f1 f2 b0 b1 c, b2 c, b3 b4 c= csplit_face b0 f1 f2 b1 c, b2 b3 f3
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((((upt (countVertices g)) ((countVertices g) + n)) = ws) /\ ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> (~ (SND f2)))))))))
T c==> c= cthe f0 f1 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f3 f4 c/\ c= cupt ccountVertices f2 c+ ccountVertices f2 f3 f4 c==> c/\ c= cFST csplitFace f2 f5 f1 f6 f4 f7 c= cSND csplitFace f2 f5 f1 f6 f4 c, f8 f9 c==> c~ c= f0 cNONE c==> c~ c/\ c= cnextVertex f6 f5 f1 c= f3 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f6 f5 f1 f4 f10 c= cSND csplit_face f6 f5 f1 f4 f11 c==> c~ cSND f11 c~ cSND f8
+ |- ((\ws. ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws))) ws)
T * / cLET * part cGABS / ! ! cGEQ * b1 c, b2 b3 cLET_END c~ cSND b3 csplit_face f0 f1 f2 b0 f3
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= c, f2 c, f3 f4 csplitFace f5 f6 f7 f1 f8 c==> c= f7 cthe f9 c==> c= f8 cupt ccountVertices f5 c+ ccountVertices f5 f10 c==> cMEM f1 cfaces f5 c= cfinals f5 cfinals cSND cCOND c= f9 cNONE csubdivFace0_alt f5 f1 f6 cSUC f10 f0 cCOND c/\ c= cnextVertex f1 f6 f7 c= f10 cNUMERAL c_0 csubdivFace0_alt f5 f1 f7 cNUMERAL c_0 f0 csubdivFace0_alt f4 f3 f7 cNUMERAL c_0 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (((!g. (!f. (!u. (!n. (((~ ((MEM f) (faces g))) \/ (SND f)) \/ ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> ((\g. (!f. (!u. (!n. (((~ ((MEM f) (faces g))) \/ (SND f)) \/ ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) _10384917)) = ((\g. (!f. (!u. (!n. (((~ ((MEM f) (faces g))) \/ (SND f)) \/ ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) _10384917))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= c==> ! ! ! ! c\/ c\/ c~ cMEM b1 cfaces b0 cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 * / ! ! ! c\/ c\/ c~ cMEM b1 cfaces b0 cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 f1 * / ! ! ! c\/ c\/ c~ cMEM b1 cfaces b0 cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 f1
+ |- ((\_10385600. (LET_END ((MEM f2) (faces _10385600)))) = (\_10385600. (LET_END ((MEM ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g'))))) (faces _10385600)))))
T c= / cLET_END cMEM f0 cfaces b0 / cLET_END cMEM c@ / ! ! c= * b1 c, b2 b3 b2 c@ / ! ! c= * b1 c, b2 b3 b3 c, f1 c, f0 f2 cfaces b0
- (_10385577 = _10385581), (_10385578 = _10385582), (_10385579 = _10385583) |- ((_10385578 = _10385582) /\ ((~ (_10385576 = _10385580)) \/ (((((split_face _10385576) _10385577) _10385578) _10385579) = ((((split_face _10385580) _10385581) _10385582) _10385583))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ c~ c= f6 f7 c= csplit_face f6 f0 f2 f4 csplit_face f7 f1 f3 f5
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (((SND (((((splitFace g) u) v) f) ws)) = (f2 , g')) = ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g')))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7
- |- ((!f'. (((~ ((MEM f) (faces g))) \/ (SND f)) \/ (!u. (!n. ((finals g) = (finals (SND (((((subdivFace0_alt g) f') u) n) t)))))))) = (((~ ((MEM f) (faces g))) \/ (SND f)) \/ (!f. (!u. (!n. ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))))))
T c= ! c\/ c\/ c~ cMEM f0 cfaces f1 cSND f0 ! ! c= cfinals f1 cfinals cSND csubdivFace0_alt f1 b0 b1 b2 f2 c\/ c\/ c~ cMEM f0 cfaces f1 cSND f0 ! ! ! c= cfinals f1 cfinals cSND csubdivFace0_alt f1 b0 b1 b2 f2
- |- ((~ (_10385174 = _10385175)) \/ ((finals _10385174) = (finals _10385175)))
T c\/ c~ c= f0 f1 c= cfinals f0 cfinals f1
+ |- (!f1. (!f2. (!g'. (((\_10384888. (LET_END (((((subdivFace0_alt ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10384888))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10384888))) v) (NUMERAL _0)) t))) (f1 , (f2 , g'))) = (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))
T c= * / cLET_END csubdivFace0_alt c@ / ! ! c= * b1 c, b2 b3 b3 c@ / ! ! c= * b1 c, b2 b3 b3 b0 c@ / ! ! c= * b1 c, b2 b3 b2 c@ / ! ! c= * b1 c, b2 b3 b3 b0 f0 cNUMERAL c_0 f1 c, f2 c, f3 f4 cLET_END csubdivFace0_alt f4 f3 f0 cNUMERAL c_0 f1
+ (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))
T c==> c~ cSND f0 c==> c= f1 cthe f2 c==> c= f3 cupt ccountVertices f4 c+ ccountVertices f4 f5 c==> cMEM f0 cfaces f4 c==> c/\ c= cFST csplitFace f4 f6 f1 f0 f3 f7 c= cSND csplitFace f4 f6 f1 f0 f3 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f1 c= f5 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f1 f3 f10 c= cSND csplit_face f0 f6 f1 f3 f11 c==> c~ cSND f11 c==> cSND f8 cF
+ ((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) f1) |- (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))
T c==> * / c? / c? / c= c, b0 c, b1 b2 csplitFace f0 f1 f2 f3 f4 f5 c? / c? / c= c, f5 c, b0 b1 csplitFace f0 f1 f2 f3 f4
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((\g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) g') ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> c= f4 cupt ccountVertices f5 c+ ccountVertices f5 f6 c==> cMEM f1 cfaces f5 c==> * / c= c, f7 c, f8 b0 csplitFace f5 f9 f2 f1 f4 f10 c= cfinals f5 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f5 f1 f9 cSUC f6 f0 cCOND c/\ c= cnextVertex f1 f9 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f5 f1 f2 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f0 csplitFace f5 f9 f2 f1 f4
- (_10385539 = _10385541) |- ((_10385538 = _10385540) ==> (((MEM _10385540) _10385541) \/ (~ ((MEM _10385538) _10385539))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cMEM f3 f1 c~ cMEM f2 f0
+ |- ((!g'. (((\_10384888. (LET_END (((((subdivFace0_alt ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10384888))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10384888))) v) (NUMERAL _0)) t))) (f1 , (f2 , g'))) = (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))) = T)
T c= ! c= * / cLET_END csubdivFace0_alt c@ / ! ! c= * b2 c, b3 b4 b4 c@ / ! ! c= * b2 c, b3 b4 b4 b1 c@ / ! ! c= * b2 c, b3 b4 b3 c@ / ! ! c= * b2 c, b3 b4 b4 b1 f0 cNUMERAL c_0 f1 c, f2 c, f3 b0 cLET_END csubdivFace0_alt b0 f3 f0 cNUMERAL c_0 f1 cT
- (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))) |- ((((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))) /\ (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))
T c==> c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c/\ c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF
+ (~ (SND f)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))))
T c==> c~ cSND f0 c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c= cthe f4 f2 c==> c= cupt ccountVertices f5 c+ ccountVertices f5 f3 f6 c==> c~ c= cfinals f5 cfinals cSND cSND csplitFace f5 f1 f2 f0 f6 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
+ |- ((!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))))))))))))))) = T)
T c= ! c==> ! ! ! ! c==> c/\ cMEM b2 cfaces b1 c~ cSND b2 c= cfinals b1 cfinals cSND csubdivFace0_alt b1 b2 b3 b4 b0 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c= cFST csplitFace f1 f6 f3 f0 f5 f7 c==> c= cFST cSND csplitFace f1 f6 f3 f0 f5 f8 c==> c= cSND cSND csplitFace f1 f6 f3 f0 f5 cSND cSND csplitFace f1 f6 f3 f0 f5 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f6 f3 f0 f5 c~ ! ! ! ! ! c==> c~ cSND b4 c= cfinals cSND cSND csplitFace b1 b2 b3 b4 b5 cfinals b1 cT
+ |- (((!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))) ==> ((\h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))) h)) = ((\h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))) h))
T c= c==> ! ! ! c==> cMEM f0 cfaces b2 c==> c~ cSND f0 c==> c= cthe b0 f1 c==> c= cupt ccountVertices b2 c+ ccountVertices b2 f2 f3 c==> c/\ c= cFST csplitFace b2 f4 f1 f0 f3 f5 c= cSND csplitFace b2 f4 f1 f0 f3 c, f6 b1 c==> c~ c= b0 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f1 c= f2 cNUMERAL c_0 c==> c/\ c= f7 f5 c= f8 f6 c==> c/\ c= cFST csplit_face f0 f4 f1 f3 f7 c= cSND csplit_face f0 f4 f1 f3 f8 c==> c~ cSND f8 c==> cSND f6 cF * / ! ! c==> cMEM f0 cfaces b2 c==> c~ cSND f0 c==> c= cthe b0 f1 c==> c= cupt ccountVertices b2 c+ ccountVertices b2 f2 f3 c==> c/\ c= cFST csplitFace b2 f4 f1 f0 f3 f5 c= cSND csplitFace b2 f4 f1 f0 f3 c, f6 b1 c==> c~ c= b0 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f1 c= f2 cNUMERAL c_0 c==> c/\ c= f7 f5 c= f8 f6 c==> c/\ c= cFST csplit_face f0 f4 f1 f3 f7 c= cSND csplit_face f0 f4 f1 f3 f8 c==> c~ cSND f8 c==> cSND f6 cF f9 * / ! ! c==> cMEM f0 cfaces b2 c==> c~ cSND f0 c==> c= cthe b0 f1 c==> c= cupt ccountVertices b2 c+ ccountVertices b2 f2 f3 c==> c/\ c= cFST csplitFace b2 f4 f1 f0 f3 f5 c= cSND csplitFace b2 f4 f1 f0 f3 c, f6 b1 c==> c~ c= b0 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f1 c= f2 cNUMERAL c_0 c==> c/\ c= f7 f5 c= f8 f6 c==> c/\ c= cFST csplit_face f0 f4 f1 f3 f7 c= cSND csplit_face f0 f4 f1 f3 f8 c==> c~ cSND f8 c==> cSND f6 cF f9
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((((upt (countVertices g)) ((countVertices g) + n)) = ws) = (((upt (countVertices g)) ((countVertices g) + n)) = ws))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= c= cupt ccountVertices f0 c+ ccountVertices f0 f8 f4 c= cupt ccountVertices f0 c+ ccountVertices f0 f8 f4
+ |- (((!u. (!g. (!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))))))) ==> ((\u. (!g. (!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))))))) u)) = ((\u. (!g. (!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))))))) u))
T c= c==> ! ! ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b7 cfaces b7 c~ cSND b7 c= cfinals b7 cfinals cSND csubdivFace0_alt b7 b7 b8 b8 b6 c==> cMEM f0 cfaces b1 c==> c~ cSND f0 c==> c= cthe b5 f1 c==> c= cupt ccountVertices b1 c+ ccountVertices b1 b4 f2 c==> c~ c= b5 cNONE c==> c~ c/\ c= cnextVertex f0 b0 f1 c= b4 cNUMERAL c_0 c==> c= cFST csplitFace b1 b0 f1 f0 f2 b3 c==> c= cFST cSND csplitFace b1 b0 f1 f0 f2 b2 c==> c= cSND cSND csplitFace b1 b0 f1 f0 f2 cSND cSND csplitFace b1 b0 f1 f0 f2 c==> c~ c= cfinals b1 cfinals cSND cSND csplitFace b1 b0 f1 f0 f2 c==> ! ! ! ! ! c==> c~ cSND b9 c= cfinals cSND cSND csplitFace b7 b7 b8 b9 b10 cfinals b7 cF * / ! ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b7 cfaces b7 c~ cSND b7 c= cfinals b7 cfinals cSND csubdivFace0_alt b7 b7 b8 b8 b6 c==> cMEM f0 cfaces b1 c==> c~ cSND f0 c==> c= cthe b5 f1 c==> c= cupt ccountVertices b1 c+ ccountVertices b1 b4 f2 c==> c~ c= b5 cNONE c==> c~ c/\ c= cnextVertex f0 b0 f1 c= b4 cNUMERAL c_0 c==> c= cFST csplitFace b1 b0 f1 f0 f2 b3 c==> c= cFST cSND csplitFace b1 b0 f1 f0 f2 b2 c==> c= cSND cSND csplitFace b1 b0 f1 f0 f2 cSND cSND csplitFace b1 b0 f1 f0 f2 c==> c~ c= cfinals b1 cfinals cSND cSND csplitFace b1 b0 f1 f0 f2 c==> ! ! ! ! ! c==> c~ cSND b9 c= cfinals cSND cSND csplitFace b7 b7 b8 b9 b10 cfinals b7 cF f3 * / ! ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b7 cfaces b7 c~ cSND b7 c= cfinals b7 cfinals cSND csubdivFace0_alt b7 b7 b8 b8 b6 c==> cMEM f0 cfaces b1 c==> c~ cSND f0 c==> c= cthe b5 f1 c==> c= cupt ccountVertices b1 c+ ccountVertices b1 b4 f2 c==> c~ c= b5 cNONE c==> c~ c/\ c= cnextVertex f0 b0 f1 c= b4 cNUMERAL c_0 c==> c= cFST csplitFace b1 b0 f1 f0 f2 b3 c==> c= cFST cSND csplitFace b1 b0 f1 f0 f2 b2 c==> c= cSND cSND csplitFace b1 b0 f1 f0 f2 cSND cSND csplitFace b1 b0 f1 f0 f2 c==> c~ c= cfinals b1 cfinals cSND cSND csplitFace b1 b0 f1 f0 f2 c==> ! ! ! ! ! c==> c~ cSND b9 c= cfinals cSND cSND csplitFace b7 b7 b8 b9 b10 cfinals b7 cF f3
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((SND f2) = (SND f2))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= cSND f6 cSND f6
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((SND (SND (((((splitFace g) u) v) f) ws))) = g'), ((FST (((((splitFace g) u) v) f) ws)) = f1), ((FST (SND (((((splitFace g) u) v) f) ws))) = f2), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((finals g) = (finals g'))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cSND cSND csplitFace f6 f3 f4 f1 f7 f8 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f9 c==> c= cFST cSND csplitFace f6 f3 f4 f1 f7 f10 c==> c= f4 cthe f2 c==> c= f7 cupt ccountVertices f6 c+ ccountVertices f6 f5 c==> cMEM f1 cfaces f6 c= cfinals f6 cfinals f8
+ |- (((!v. (!ws. ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)))) ==> ((\v. (!ws. ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)))) v)) = ((\v. (!ws. ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)))) v))
T c= c==> ! ! cLET * part cGABS / ! ! cGEQ * b2 c, b3 b4 cLET_END c~ cSND b4 csplit_face f0 f1 b0 b1 * / ! cLET * part cGABS / ! ! cGEQ * b2 c, b3 b4 cLET_END c~ cSND b4 csplit_face f0 f1 b0 b1 f2 * / ! cLET * part cGABS / ! ! cGEQ * b2 c, b3 b4 cLET_END c~ cSND b4 csplit_face f0 f1 b0 b1 f2
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ws))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> c= f4 cupt ccountVertices f5 c+ ccountVertices f5 f6 c==> cMEM f1 cfaces f5 c= cfinals f5 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f5 f1 f7 cSUC f6 f0 cCOND c/\ c= cnextVertex f1 f7 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f5 f1 f2 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f0 csplitFace f5 f7 f2 f1 b0 f4
+ |- ((T ==> (?f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))))) = (?f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))))
T c= c==> cT c? / c? / c? / c= c, b0 c, b1 b2 csplitFace f0 f1 f2 f3 f4 c? / c? / c? / c= c, b0 c, b1 b2 csplitFace f0 f1 f2 f3 f4
+ |- ((\f2'. (!ws. (!v. (!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))))))))))) f2')
T * / ! ! ! ! ! ! ! ! ! ! c==> cMEM b4 cfaces b10 c==> c~ cSND b4 c==> c= cthe b8 b2 c==> c= cupt ccountVertices b10 c+ ccountVertices b10 b7 b1 c==> c/\ c= cFST csplitFace b10 b3 b2 b4 b1 b6 c= cSND csplitFace b10 b3 b2 b4 b1 c, f0 b9 c==> c~ c= b8 cNONE c==> c~ c/\ c= cnextVertex b4 b3 b2 c= b7 cNUMERAL c_0 c==> c/\ c= b5 b6 c= b0 f0 c==> c/\ c= cFST csplit_face b4 b3 b2 b1 b5 c= cSND csplit_face b4 b3 b2 b1 b0 c==> c~ cSND b0 c==> cSND f0 cF f1
+ |- (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))))))))))))))
T c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c= cFST csplitFace f1 f6 f3 f0 f5 f7 c==> c= cFST cSND csplitFace f1 f6 f3 f0 f5 f8 c==> c= cSND cSND csplitFace f1 f6 f3 f0 f5 cSND cSND csplitFace f1 f6 f3 f0 f5 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f6 f3 f0 f5 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
+ |- (((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))) = ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ws)))))))
T c= c= cfinals f0 cfinals cSND cCOND c= f1 cNONE csubdivFace0_alt f0 f2 f3 cSUC f4 f5 cCOND c/\ c= cnextVertex f2 f3 f6 c= f4 cNUMERAL c_0 csubdivFace0_alt f0 f2 f6 cNUMERAL c_0 f5 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f6 cNUMERAL c_0 f5 csplitFace f0 f3 f6 f2 f7 c= cfinals f0 cfinals cSND cCOND c= f1 cNONE csubdivFace0_alt f0 f2 f3 cSUC f4 f5 cCOND c/\ c= cnextVertex f2 f3 f6 c= f4 cNUMERAL c_0 csubdivFace0_alt f0 f2 f6 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f6 cNUMERAL c_0 f5 csplitFace f0 f3 f6 f2 b0 f7
+ |- (((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))) = ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) v))))))
T c= c= cfinals f0 cfinals cSND cCOND c= f1 cNONE csubdivFace0_alt f0 f2 f3 cSUC f4 f5 cCOND c/\ c= cnextVertex f2 f3 f6 c= f4 cNUMERAL c_0 csubdivFace0_alt f0 f2 f6 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f6 cNUMERAL c_0 f5 csplitFace f0 f3 f6 f2 b0 cupt ccountVertices f0 c+ ccountVertices f0 f4 c= cfinals f0 cfinals cSND cCOND c= f1 cNONE csubdivFace0_alt f0 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f0 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f0 f3 b0 f2 b1 cupt ccountVertices f0 c+ ccountVertices f0 f4 f6
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((~ (SND f)) = (~ (SND f)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= c~ cSND f7 c~ cSND f7
- (v = (the h)) |- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) = (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))))
T c==> c= f0 cthe f1 c= ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f2 ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f2
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), ((MEM f) (faces g)) |- (((!x. (((\ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))) x) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))))) ==> ((?ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))))) = ((?ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> cMEM f1 cfaces f4 c= c==> ! c==> * / c= b1 cupt ccountVertices f4 c+ ccountVertices f4 f5 b0 c= cfinals f4 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f4 f1 f6 cSUC f5 f0 cCOND c/\ c= cnextVertex f1 f6 f2 c= f5 cNUMERAL c_0 csubdivFace0_alt f4 f1 f2 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 f2 cNUMERAL c_0 f0 csplitFace f4 f6 f2 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f5 c==> c? / c= b0 cupt ccountVertices f4 c+ ccountVertices f4 f5 c= cfinals f4 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f4 f1 f6 cSUC f5 f0 cCOND c/\ c= cnextVertex f1 f6 f2 c= f5 cNUMERAL c_0 csubdivFace0_alt f4 f1 f2 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f0 csplitFace f4 f6 f2 f1 b0 cupt ccountVertices f4 c+ ccountVertices f4 f5 c==> c? / c= b0 cupt ccountVertices f4 c+ ccountVertices f4 f5 c= cfinals f4 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f4 f1 f6 cSUC f5 f0 cCOND c/\ c= cnextVertex f1 f6 f2 c= f5 cNUMERAL c_0 csubdivFace0_alt f4 f1 f2 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f0 csplitFace f4 f6 f2 f1 b0 cupt ccountVertices f4 c+ ccountVertices f4 f5
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), ((SND (SND (((((splitFace g) u) v) f) ws))) = g'), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = g') ==> (hold ((finals g) = (finals g')))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c= cSND cSND csplitFace f3 f4 f5 f1 f6 f7 c==> c= f5 cthe f2 c==> c= f6 cupt ccountVertices f3 c+ ccountVertices f3 f8 c==> cMEM f1 cfaces f3 c==> c~ c/\ c= cnextVertex f1 f4 f5 c= f8 cNUMERAL c_0 c==> c= cFST csplitFace f3 f4 f5 f1 f6 f9 c==> c= cFST cSND csplitFace f3 f4 f5 f1 f6 f10 c==> c= cSND cSND csplitFace f3 f4 f5 f1 f6 f7 chold c= cfinals f3 cfinals f7
+ |- (((!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))))) ==> ((\h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))))) h)) = ((\h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))))) h))
T c= c==> ! ! c==> ! ! ! ! c==> c/\ cMEM b3 cfaces b2 c~ cSND b3 c= cfinals b2 cfinals cSND csubdivFace0_alt b2 b3 b4 b5 b1 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe b0 f2 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f3 f4 c==> c~ c= b0 cNONE c==> c~ c/\ c= cnextVertex f0 f5 f2 c= f3 cNUMERAL c_0 c==> c= cFST csplitFace f1 f5 f2 f0 f4 f6 c==> c= cFST cSND csplitFace f1 f5 f2 f0 f4 f7 c==> c= cSND cSND csplitFace f1 f5 f2 f0 f4 cSND cSND csplitFace f1 f5 f2 f0 f4 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f5 f2 f0 f4 c==> ! ! ! ! ! c==> c~ cSND b5 c= cfinals cSND cSND csplitFace b2 b3 b4 b5 b6 cfinals b2 cF * / ! c==> ! ! ! ! c==> c/\ cMEM b3 cfaces b2 c~ cSND b3 c= cfinals b2 cfinals cSND csubdivFace0_alt b2 b3 b4 b5 b1 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe b0 f2 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f3 f4 c==> c~ c= b0 cNONE c==> c~ c/\ c= cnextVertex f0 f5 f2 c= f3 cNUMERAL c_0 c==> c= cFST csplitFace f1 f5 f2 f0 f4 f6 c==> c= cFST cSND csplitFace f1 f5 f2 f0 f4 f7 c==> c= cSND cSND csplitFace f1 f5 f2 f0 f4 cSND cSND csplitFace f1 f5 f2 f0 f4 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f5 f2 f0 f4 c==> ! ! ! ! ! c==> c~ cSND b5 c= cfinals cSND cSND csplitFace b2 b3 b4 b5 b6 cfinals b2 cF f8 * / ! c==> ! ! ! ! c==> c/\ cMEM b3 cfaces b2 c~ cSND b3 c= cfinals b2 cfinals cSND csubdivFace0_alt b2 b3 b4 b5 b1 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe b0 f2 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f3 f4 c==> c~ c= b0 cNONE c==> c~ c/\ c= cnextVertex f0 f5 f2 c= f3 cNUMERAL c_0 c==> c= cFST csplitFace f1 f5 f2 f0 f4 f6 c==> c= cFST cSND csplitFace f1 f5 f2 f0 f4 f7 c==> c= cSND cSND csplitFace f1 f5 f2 f0 f4 cSND cSND csplitFace f1 f5 f2 f0 f4 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f5 f2 f0 f4 c==> ! ! ! ! ! c==> c~ cSND b5 c= cfinals cSND cSND csplitFace b2 b3 b4 b5 b6 cfinals b2 cF f8
- |- ((~ (_10385536 = _10385537)) \/ ((SND _10385537) \/ (~ (SND _10385536))))
T c\/ c~ c= f0 f1 c\/ cSND f1 c~ cSND f0
+ ((f1 = (FST (((((splitFace g) u) v) f) ws))) /\ ((f2 = (FST (SND (((((splitFace g) u) v) f) ws)))) /\ (g' = (SND (SND (((((splitFace g) u) v) f) ws)))))) |- ((\g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) g')
T c==> c/\ c= f0 cFST csplitFace f1 f2 f3 f4 f5 c/\ c= f6 cFST cSND csplitFace f1 f2 f3 f4 f5 c= f7 cSND cSND csplitFace f1 f2 f3 f4 f5 * / c= c, f0 c, f6 b0 csplitFace f1 f2 f3 f4 f5 f7
- |- (T = (((SND _10384924) \/ ((finals (SND (SND (((((splitFace _10384921) _10384922) _10384923) _10384924) _10384925)))) = (finals _10384921))) = (((finals (SND (SND (((((splitFace _10384921) _10384922) _10384923) _10384924) _10384925)))) = (finals _10384921)) \/ (SND _10384924))))
T c= cT c= c\/ cSND f0 c= cfinals cSND cSND csplitFace f1 f2 f3 f0 f4 cfinals f1 c\/ c= cfinals cSND cSND csplitFace f1 f2 f3 f0 f4 cfinals f1 cSND f0
+ ((MEM f) (faces g)) |- (((MEM f) (faces g)) = T)
T c==> cMEM f0 cfaces f1 c= cMEM f0 cfaces f1 cT
- (v = (the h)) |- ((~ (SND f)) = (~ (SND f)))
T c==> c= f0 cthe f1 c= c~ cSND f2 c~ cSND f2
+ |- (((!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))) ==> ((\f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))) f2)) = ((\f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))) f2))
T c= c==> ! ! c==> c= csplitFace f0 f1 f2 f3 f4 c, f5 c, b0 b1 c= csplit_face f3 f1 f2 f4 c, f5 b0 * / ! c==> c= csplitFace f0 f1 f2 f3 f4 c, f5 c, b0 b1 c= csplit_face f3 f1 f2 f4 c, f5 b0 f6 * / ! c==> c= csplitFace f0 f1 f2 f3 f4 c, f5 c, b0 b1 c= csplit_face f3 f1 f2 f4 c, f5 b0 f6
+ (~ (SND f)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))))))))
T c==> c~ cSND f0 c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c= cthe f4 f2 c==> c= cupt ccountVertices f5 c+ ccountVertices f5 f3 f6 c==> c= cFST csplitFace f5 f1 f2 f0 f6 f7 c==> c= cFST cSND csplitFace f5 f1 f2 f0 f6 f8 c==> c= cSND cSND csplitFace f5 f1 f2 f0 f6 cSND cSND csplitFace f5 f1 f2 f0 f6 c==> c~ c= cfinals f5 cfinals cSND cSND csplitFace f5 f1 f2 f0 f6 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
+ |- (?v. (v = (the h)))
T c? / c= b0 cthe f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((SND (SND (((((splitFace g) u) v) f) ws))) = g'), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = g') ==> (hold ((finals g) = (finals g'))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cSND cSND csplitFace f6 f3 f4 f1 f7 f8 c==> c= f4 cthe f2 c==> c= f7 cupt ccountVertices f6 c+ ccountVertices f6 f5 c==> cMEM f1 cfaces f6 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f9 c==> c= cFST cSND csplitFace f6 f3 f4 f1 f7 f10 c==> c= cSND cSND csplitFace f6 f3 f4 f1 f7 f8 chold c= cfinals f6 cfinals f8
- ((FST (((((splitFace g) u) v) f) ws)) = f1) |- (((SND _10384924) \/ ((finals (SND (SND (((((splitFace _10384921) _10384922) _10384923) _10384924) _10384925)))) = (finals _10384921))) = ((SND _10384924) \/ ((finals (SND (SND (((((splitFace _10384921) _10384922) _10384923) _10384924) _10384925)))) = (finals _10384921))))
T c==> c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= c\/ cSND f6 c= cfinals cSND cSND csplitFace f7 f8 f9 f6 f10 cfinals f7 c\/ cSND f6 c= cfinals cSND cSND csplitFace f7 f8 f9 f6 f10 cfinals f7
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (f1 , (f2 , g'))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= c, f2 c, f3 f4 csplitFace f5 f6 f7 f1 f8 c==> c= f7 cthe f9 c==> c= f8 cupt ccountVertices f5 c+ ccountVertices f5 f10 c==> cMEM f1 cfaces f5 c= cfinals f5 cfinals cSND cCOND c= f9 cNONE csubdivFace0_alt f5 f1 f6 cSUC f10 f0 cCOND c/\ c= cnextVertex f1 f6 f7 c= f10 cNUMERAL c_0 csubdivFace0_alt f5 f1 f7 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f7 cNUMERAL c_0 f0 c, f2 c, f3 f4
+ (~ (SND f)), (~ (SND f2')), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (~ (SND f2))
T c==> c~ cSND f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f3 f4 c= f5 cNUMERAL c_0 c==> c= c, f6 c, f7 f8 csplitFace f9 f3 f4 f0 f10 c==> c= c, f11 f1 csplit_face f0 f3 f4 f10 c==> c= csplit_face f0 f3 f4 f10 c, f6 f7 c==> c= f4 cthe f2 c==> c= f10 cupt ccountVertices f9 c+ ccountVertices f9 f5 c==> cMEM f0 cfaces f9 c~ cSND f7
+ |- (((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (f1 , (f2 , g'))) ==> ((MEM f2) (faces g')))
T c==> cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 c, f0 c, f1 f2 cMEM f1 cfaces f2
+ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))), (~ (SND f)), (~ (((nextVertex f) u) = v)), (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ (((nextVertex f) u) = v)) /\ F)
T c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 c==> c~ cSND f0 c==> c~ c= cnextVertex f0 f1 f2 c==> c~ c= cfinals f3 cfinals cSND cSND csplitFace f3 f1 f2 f0 f4 c==> c= cthe f5 f2 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f6 f4 c/\ c~ c= cnextVertex f0 f1 f2 cF
- ((the h) = v) |- (F = F)
T c==> c= cthe f0 f1 c= cF cF
+ (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((((\f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))) f1') ==> (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2))))) = T)
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f4 cNUMERAL c_0 c==> c= c, f5 c, f6 f7 csplitFace f8 f2 f3 f0 f9 c==> c= csplit_face f0 f2 f3 f9 c, f5 f6 c==> c= f3 cthe f1 c==> c= f9 cupt ccountVertices f8 c+ ccountVertices f8 f4 c==> cMEM f0 cfaces f8 c= c==> * / c? / c= c, b0 b1 csplit_face f0 f2 f3 f9 f10 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f0 f2 f3 f9 c/\ cMEM f6 cfaces f7 c~ cSND f6 cT
+ |- ((GEQ ((GABS (\_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2)))))))) (f1 , f2))) (LET_END (~ (SND f2))))
T cGEQ cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 c, f0 f1 cLET_END c~ cSND f1
+ (~ (SND f)), (~ (h = NONE)), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c= c, f2 c, f3 f4 csplitFace f5 f6 f7 f0 f8 c==> c= f7 cthe f1 c==> c= f8 cupt ccountVertices f5 c+ ccountVertices f5 f9 c==> cMEM f0 cfaces f5 c==> c~ c/\ c= cnextVertex f0 f6 f7 c= f9 cNUMERAL c_0 c==> c/\ c= f10 f2 c= f11 f3 c==> c/\ c= cFST csplit_face f0 f6 f7 f8 f10 c= cSND csplit_face f0 f6 f7 f8 f11 c==> c~ cSND f11 c==> cSND f3 cF
+ |- (T ==> (?f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))))
T c==> cT c? / c? / c= c, b0 b1 csplit_face f0 f1 f2 f3
+ |- (((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> F) = ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws))))))
T c= c==> c~ c= cfinals f0 cfinals cSND cSND csplitFace f0 f1 f2 f3 f4 cF c= cfinals f0 cfinals cSND cSND csplitFace f0 f1 f2 f3 f4
+ |- (!f1. (!f2. (!g'. (((\_10385604. (LET_END ((MEM ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10385604))) (faces ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10385604)))))) (f1 , (f2 , g'))) = (LET_END ((MEM f2) (faces g')))))))
T c= * / cLET_END cMEM c@ / ! ! c= * b1 c, b2 b3 b2 c@ / ! ! c= * b1 c, b2 b3 b3 b0 cfaces c@ / ! ! c= * b1 c, b2 b3 b3 c@ / ! ! c= * b1 c, b2 b3 b3 b0 c, f0 c, f1 f2 cLET_END cMEM f1 cfaces f2
- |- ((!u. (((~ ((MEM f) (faces g))) \/ (SND f)) \/ (!n. ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))) = (((~ ((MEM f) (faces g))) \/ (SND f)) \/ (!u. (!n. ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))
T c= ! c\/ c\/ c~ cMEM f0 cfaces f1 cSND f0 ! c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 b0 b1 f2 c\/ c\/ c~ cMEM f0 cfaces f1 cSND f0 ! ! c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 b0 b1 f2
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((\g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) g)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 * / ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 f1
- (_10385568 = _10385570), (_10385569 = _10385571) |- ((_10385569 = _10385571) /\ ((_10385568 + _10385569) = (_10385570 + _10385571)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c+ f0 f2 c+ f1 f3
+ |- (((!ws. (!v. (!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))))))))) ==> ((\ws. (!v. (!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))))))))) ws)) = ((\ws. (!v. (!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))))))))) ws))
T c= c==> ! ! ! ! ! ! ! ! ! ! c==> cMEM b3 cfaces b9 c==> c~ cSND b3 c==> c= cthe b7 b1 c==> c= cupt ccountVertices b9 c+ ccountVertices b9 b6 b0 c==> c/\ c= cFST csplitFace b9 b2 b1 b3 b0 b5 c= cSND csplitFace b9 b2 b1 b3 b0 c, f0 b8 c==> c~ c= b7 cNONE c==> c~ c/\ c= cnextVertex b3 b2 b1 c= b6 cNUMERAL c_0 c==> c/\ c= b4 b5 c= f1 f0 c==> c/\ c= cFST csplit_face b3 b2 b1 b0 b4 c= cSND csplit_face b3 b2 b1 b0 f1 c==> c~ cSND f1 c==> cSND f0 cF * / ! ! ! ! ! ! ! ! ! c==> cMEM b3 cfaces b9 c==> c~ cSND b3 c==> c= cthe b7 b1 c==> c= cupt ccountVertices b9 c+ ccountVertices b9 b6 b0 c==> c/\ c= cFST csplitFace b9 b2 b1 b3 b0 b5 c= cSND csplitFace b9 b2 b1 b3 b0 c, f0 b8 c==> c~ c= b7 cNONE c==> c~ c/\ c= cnextVertex b3 b2 b1 c= b6 cNUMERAL c_0 c==> c/\ c= b4 b5 c= f1 f0 c==> c/\ c= cFST csplit_face b3 b2 b1 b0 b4 c= cSND csplit_face b3 b2 b1 b0 f1 c==> c~ cSND f1 c==> cSND f0 cF f2 * / ! ! ! ! ! ! ! ! ! c==> cMEM b3 cfaces b9 c==> c~ cSND b3 c==> c= cthe b7 b1 c==> c= cupt ccountVertices b9 c+ ccountVertices b9 b6 b0 c==> c/\ c= cFST csplitFace b9 b2 b1 b3 b0 b5 c= cSND csplitFace b9 b2 b1 b3 b0 c, f0 b8 c==> c~ c= b7 cNONE c==> c~ c/\ c= cnextVertex b3 b2 b1 c= b6 cNUMERAL c_0 c==> c/\ c= b4 b5 c= f1 f0 c==> c/\ c= cFST csplit_face b3 b2 b1 b0 b4 c= cSND csplit_face b3 b2 b1 b0 f1 c==> c~ cSND f1 c==> cSND f0 cF f2
- (_10385488 = _10385490), (_10385489 = _10385491) |- ((_10385488 = _10385490) /\ (((nextVertex _10385488) _10385489) = ((nextVertex _10385490) _10385491)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cnextVertex f0 f2 cnextVertex f1 f3
- (_10385568 = _10385570) |- ((_10385568 = _10385570) /\ ((~ (_10385569 = _10385571)) \/ ((_10385568 + _10385569) = (_10385570 + _10385571))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c+ f0 f2 c+ f1 f3
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!f. ((P f) \/ Q)) = ((!f. (P f)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (~ (h = NONE)), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ (h = NONE)) /\ ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> (~ (SND f2)))))))
T c==> c~ c= f0 cNONE c==> c= cthe f0 f1 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f3 f4 c/\ c~ c= f0 cNONE c==> c~ c/\ c= cnextVertex f5 f6 f1 c= f3 cNUMERAL c_0 c==> c/\ c= f7 f8 c= f9 f10 c==> c/\ c= cFST csplit_face f5 f6 f1 f4 f7 c= cSND csplit_face f5 f6 f1 f4 f9 c==> c~ cSND f9 c~ cSND f10
+ |- (((!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))) ==> ((\g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))) g')) = ((\g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))) g'))
T c= c==> ! ! c==> cMEM f0 cfaces b1 c==> c~ cSND f0 c==> c= cthe f1 f2 c==> c= cupt ccountVertices b1 c+ ccountVertices b1 f3 f4 c==> c/\ c= cFST csplitFace b1 f5 f2 f0 f4 f6 c= cSND csplitFace b1 f5 f2 f0 f4 c, f7 b0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f5 f2 c= f3 cNUMERAL c_0 c==> c/\ c= f8 f6 c= f9 f7 c==> c/\ c= cFST csplit_face f0 f5 f2 f4 f8 c= cSND csplit_face f0 f5 f2 f4 f9 c==> c~ cSND f9 c==> cSND f7 cF * / ! c==> cMEM f0 cfaces b1 c==> c~ cSND f0 c==> c= cthe f1 f2 c==> c= cupt ccountVertices b1 c+ ccountVertices b1 f3 f4 c==> c/\ c= cFST csplitFace b1 f5 f2 f0 f4 f6 c= cSND csplitFace b1 f5 f2 f0 f4 c, f7 b0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f5 f2 c= f3 cNUMERAL c_0 c==> c/\ c= f8 f6 c= f9 f7 c==> c/\ c= cFST csplit_face f0 f5 f2 f4 f8 c= cSND csplit_face f0 f5 f2 f4 f9 c==> c~ cSND f9 c==> cSND f7 cF f10 * / ! c==> cMEM f0 cfaces b1 c==> c~ cSND f0 c==> c= cthe f1 f2 c==> c= cupt ccountVertices b1 c+ ccountVertices b1 f3 f4 c==> c/\ c= cFST csplitFace b1 f5 f2 f0 f4 f6 c= cSND csplitFace b1 f5 f2 f0 f4 c, f7 b0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f5 f2 c= f3 cNUMERAL c_0 c==> c/\ c= f8 f6 c= f9 f7 c==> c/\ c= cFST csplit_face f0 f5 f2 f4 f8 c= cSND csplit_face f0 f5 f2 f4 f9 c==> c~ cSND f9 c==> cSND f7 cF f10
- ((FST (((((splitFace g) u) v) f) ws)) = f1) |- ((((upt (countVertices g)) ((countVertices g) + n)) = ws) = (((upt (countVertices g)) ((countVertices g) + n)) = ws))
T c==> c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= c= cupt ccountVertices f0 c+ ccountVertices f0 f6 f4 c= cupt ccountVertices f0 c+ ccountVertices f0 f6 f4
+ |- (((((((nextVertex f) u) = v) /\ (n = (NUMERAL _0))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t))))) /\ ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))) = ((finals g) = (finals (SND (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))
T c= c/\ c==> c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cfinals f4 cfinals cSND csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cfinals f4 cfinals cSND csubdivFace0_alt f6 f7 f2 cNUMERAL c_0 f5 c= cfinals f4 cfinals cSND cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 csubdivFace0_alt f6 f7 f2 cNUMERAL c_0 f5
- ((the h) = v) |- (((~ ((MEM _10384918) (faces _10384917))) \/ ((SND _10384918) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) _10384920) t)))))) = ((~ ((MEM _10384918) (faces _10384917))) \/ ((SND _10384918) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) _10384920) t)))))))
T c==> c= cthe f0 f1 c= c\/ c~ cMEM f2 cfaces f3 c\/ cSND f2 c= cfinals f3 cfinals cSND csubdivFace0_alt f3 f2 f4 f5 f6 c\/ c~ cMEM f2 cfaces f3 c\/ cSND f2 c= cfinals f3 cfinals cSND csubdivFace0_alt f3 f2 f4 f5 f6
+ (~ (SND f)), (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)
T c==> c~ cSND f0 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 f3 f0 f4 c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f5 cNUMERAL c_0 c==> c= cthe f6 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f5 f4 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF
- (_10385538 = _10385540), (_10385539 = _10385541) |- ((_10385538 = _10385540) /\ (((MEM _10385540) _10385541) \/ (~ ((MEM _10385538) _10385539))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cMEM f1 f3 c~ cMEM f0 f2
- (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) |- (((finals g) = (finals (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))) = ((finals g) = (finals (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))
T c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= c= cfinals f4 cfinals cSND csubdivFace0_alt f5 f6 f2 cNUMERAL c_0 f7 c= cfinals f4 cfinals cSND csubdivFace0_alt f5 f6 f2 cNUMERAL c_0 f7
+ (~ (SND f)), ((MEM f) (faces g)) |- (((MEM f) (faces g)) /\ (~ (SND f)))
T c==> c~ cSND f0 c==> cMEM f0 cfaces f1 c/\ cMEM f0 cfaces f1 c~ cSND f0
+ |- (((((FST (SND (((((splitFace g) u) v) f) ws))) = f2) /\ ((SND (SND (((((splitFace g) u) v) f) ws))) = g')) ==> ((finals g) = (finals g'))) = ((((FST (SND (((((splitFace g) u) v) f) ws))) = (FST (f2 , g'))) /\ ((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (f2 , g')))) ==> ((finals g) = (finals g'))))
T c= c==> c/\ c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= cSND cSND csplitFace f0 f1 f2 f3 f4 f6 c= cfinals f0 cfinals f6 c==> c/\ c= cFST cSND csplitFace f0 f1 f2 f3 f4 cFST c, f5 f6 c= cSND cSND csplitFace f0 f1 f2 f3 f4 cSND c, f5 f6 c= cfinals f0 cfinals f6
+ |- (((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))) = ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (f1 , (f2 , g')))))))))
T c= c= cfinals f0 cfinals cSND cCOND c= f1 cNONE csubdivFace0_alt f0 f2 f3 cSUC f4 f5 cCOND c/\ c= cnextVertex f2 f3 f6 c= f4 cNUMERAL c_0 csubdivFace0_alt f0 f2 f6 cNUMERAL c_0 f5 csubdivFace0_alt f7 f8 f6 cNUMERAL c_0 f5 c= cfinals f0 cfinals cSND cCOND c= f1 cNONE csubdivFace0_alt f0 f2 f3 cSUC f4 f5 cCOND c/\ c= cnextVertex f2 f3 f6 c= f4 cNUMERAL c_0 csubdivFace0_alt f0 f2 f6 cNUMERAL c_0 f5 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f6 cNUMERAL c_0 f5 c, f9 c, f8 f7
+ ((the h) = v) |- ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ((upt (countVertices g)) ((countVertices g) + n)))))))) = (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))))))
T c==> c= cthe f0 f1 c= c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f3 f1 f4 cupt ccountVertices f2 c+ ccountVertices f2 f5 c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f3 cthe f0 f4 cupt ccountVertices f2 c+ ccountVertices f2 f5
+ |- ((\f2. (!g'. ((GEQ ((GABS (\_10385606. (!f1. (!f2. (!g'. ((GEQ (_10385606 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))) f2)
T * / ! cGEQ cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b4 cLET_END cMEM b4 cfaces b4 c, f0 c, b0 b1 cLET_END cMEM b0 cfaces b1 f1
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- (((SND _10384924) \/ ((finals (SND (SND (((((splitFace _10384921) _10384922) _10384923) _10384924) _10384925)))) = (finals _10384921))) = ((SND _10384924) \/ ((finals (SND (SND (((((splitFace _10384921) _10384922) _10384923) _10384924) _10384925)))) = (finals _10384921))))
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= c\/ cSND f6 c= cfinals cSND cSND csplitFace f7 f8 f9 f6 f10 cfinals f7 c\/ cSND f6 c= cfinals cSND cSND csplitFace f7 f8 f9 f6 f10 cfinals f7
- (h = NONE) |- (NONE = h)
T c==> c= f0 cNONE c= cNONE f0
- (NONE = h) |- (h = NONE)
T c==> c= cNONE f0 c= f0 cNONE
+ |- ((\_10384890. (!f1. (!f2. (!g'. ((GEQ (_10384890 (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))) (GABS (\_10384890. (!f1. (!f2. (!g'. ((GEQ (_10384890 (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))))))
T * / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f0 cNUMERAL c_0 f1 * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f0 cNUMERAL c_0 f1
+ (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (!f2'. (((\f2'. ((f1' , f2') = ((((split_face f) u) v) ws))) f2') ==> (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2))))))
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f4 cNUMERAL c_0 c==> c= c, f5 c, f6 f7 csplitFace f8 f2 f3 f0 f9 c==> c= csplit_face f0 f2 f3 f9 c, f5 f6 c==> c= f3 cthe f1 c==> c= f9 cupt ccountVertices f8 c+ ccountVertices f8 f4 c==> cMEM f0 cfaces f8 ! c==> * / c= c, f10 b1 csplit_face f0 f2 f3 f9 b0 c==> cLET * part cGABS / ! ! cGEQ * b1 c, b2 b3 cLET_END c~ cSND b3 csplit_face f0 f2 f3 f9 c/\ cMEM f6 cfaces f7 c~ cSND f6
+ |- (((!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))) ==> ((\n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))) n)) = ((\n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))) n))
T c= c==> ! ! ! c==> ! ! ! ! c==> c/\ cMEM b4 cfaces b3 c~ cSND b4 c= cfinals b3 cfinals cSND csubdivFace0_alt b3 b4 b5 b6 b2 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe b1 f2 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 b0 f3 c==> c~ c= b1 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f2 c= b0 cNUMERAL c_0 c==> c= cFST csplitFace f1 f4 f2 f0 f3 f5 c==> c= cFST cSND csplitFace f1 f4 f2 f0 f3 f6 c==> c= cSND cSND csplitFace f1 f4 f2 f0 f3 cSND cSND csplitFace f1 f4 f2 f0 f3 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f4 f2 f0 f3 c==> ! ! ! ! ! c==> c~ cSND b6 c= cfinals cSND cSND csplitFace b3 b4 b5 b6 b7 cfinals b3 cF * / ! ! c==> ! ! ! ! c==> c/\ cMEM b4 cfaces b3 c~ cSND b4 c= cfinals b3 cfinals cSND csubdivFace0_alt b3 b4 b5 b6 b2 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe b1 f2 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 b0 f3 c==> c~ c= b1 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f2 c= b0 cNUMERAL c_0 c==> c= cFST csplitFace f1 f4 f2 f0 f3 f5 c==> c= cFST cSND csplitFace f1 f4 f2 f0 f3 f6 c==> c= cSND cSND csplitFace f1 f4 f2 f0 f3 cSND cSND csplitFace f1 f4 f2 f0 f3 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f4 f2 f0 f3 c==> ! ! ! ! ! c==> c~ cSND b6 c= cfinals cSND cSND csplitFace b3 b4 b5 b6 b7 cfinals b3 cF f7 * / ! ! c==> ! ! ! ! c==> c/\ cMEM b4 cfaces b3 c~ cSND b4 c= cfinals b3 cfinals cSND csubdivFace0_alt b3 b4 b5 b6 b2 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe b1 f2 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 b0 f3 c==> c~ c= b1 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f2 c= b0 cNUMERAL c_0 c==> c= cFST csplitFace f1 f4 f2 f0 f3 f5 c==> c= cFST cSND csplitFace f1 f4 f2 f0 f3 f6 c==> c= cSND cSND csplitFace f1 f4 f2 f0 f3 cSND cSND csplitFace f1 f4 f2 f0 f3 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f4 f2 f0 f3 c==> ! ! ! ! ! c==> c~ cSND b6 c= cfinals cSND cSND csplitFace b3 b4 b5 b6 b7 cfinals b3 cF f7
- (_10385584 = _10385585) |- ((_10385584 = _10385585) /\ ((SND _10385584) = (SND _10385585)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cSND f0 cSND f1
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) /\ ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c? / c= c, f1 c, f2 b0 csplitFace f3 f4 f5 f6 f7 c==> c~ cSND f6 c==> c= f5 cthe f8 c==> c= f7 cupt ccountVertices f3 c+ ccountVertices f3 f9 c==> cMEM f6 cfaces f3 c/\ c? / c= c, f1 c, f2 b0 csplitFace f3 f4 f5 f6 f7 c= cfinals f3 cfinals cSND cCOND c= f8 cNONE csubdivFace0_alt f3 f6 f4 cSUC f9 f0 cCOND c/\ c= cnextVertex f6 f4 f5 c= f9 cNUMERAL c_0 csubdivFace0_alt f3 f6 f5 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f0 csplitFace f3 f4 f5 f6 f7
+ |- (((((FST (((((splitFace g) u) v) f) ws)) = (FST (f1 , (f2 , g')))) /\ ((SND (((((splitFace g) u) v) f) ws)) = (SND (f1 , (f2 , g'))))) ==> ((finals g) = (finals g'))) = (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> ((finals g) = (finals g'))))
T c= c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 cFST c, f5 c, f6 f7 c= cSND csplitFace f0 f1 f2 f3 f4 cSND c, f5 c, f6 f7 c= cfinals f0 cfinals f7 c==> c= csplitFace f0 f1 f2 f3 f4 c, f5 c, f6 f7 c= cfinals f0 cfinals f7
+ ((f1' , f2') = ((((split_face f) u) v) ws)) |- (((((split_face f) u) v) ws) = (f1' , f2'))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= csplit_face f2 f3 f4 f5 c, f0 f1
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((~ (h = NONE)) ==> ((finals g) = (finals (SND (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= c, f2 c, f3 f4 csplitFace f5 f6 f7 f1 f8 c==> c= f7 cthe f9 c==> c= f8 cupt ccountVertices f5 c+ ccountVertices f5 f10 c==> cMEM f1 cfaces f5 c==> c~ c= f9 cNONE c= cfinals f5 cfinals cSND cCOND c/\ c= cnextVertex f1 f6 f7 c= f10 cNUMERAL c_0 csubdivFace0_alt f5 f1 f7 cNUMERAL c_0 f0 csubdivFace0_alt f4 f3 f7 cNUMERAL c_0 f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((MEM f) (faces g)) |- ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) (SUC n)) t))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> cMEM f1 cfaces f2 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 cSUC f4 f0
+ |- ((\g. (!u. (!v. (!f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))))))))) g)
T * / ! ! ! ! ! ! ! c==> c= csplitFace b0 b1 b2 b3 b4 c, b5 c, b6 b7 c= csplit_face b3 b1 b2 b4 c, b5 b6 f0
+ (~ (SND f)), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))
T c==> c~ cSND f0 c==> c= c, f1 c, f2 f3 csplitFace f4 f5 f6 f0 f7 c==> c= f6 cthe f8 c==> c= f7 cupt ccountVertices f4 c+ ccountVertices f4 f9 c==> cMEM f0 cfaces f4 c==> c~ c= f8 cNONE c==> c~ c/\ c= cnextVertex f0 f5 f6 c= f9 cNUMERAL c_0 c==> c/\ c= f10 f1 c= f11 f2 c==> c/\ c= cFST csplit_face f0 f5 f6 f7 f10 c= cSND csplit_face f0 f5 f6 f7 f11 c==> c~ cSND f11 c==> cSND f2 cF
+ (~ (SND f)), (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) /\ (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))))
T c==> c~ cSND f0 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 f3 f0 f4 c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f5 cNUMERAL c_0 c==> c= cthe f6 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f5 f4 c/\ c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 f3 f0 f4 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
+ ((f1 = (FST (((((splitFace g) u) v) f) ws))) /\ ((f2 = (FST (SND (((((splitFace g) u) v) f) ws)))) /\ (g' = (SND (SND (((((splitFace g) u) v) f) ws)))))) |- ((\f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) f2)
T c==> c/\ c= f0 cFST csplitFace f1 f2 f3 f4 f5 c/\ c= f6 cFST cSND csplitFace f1 f2 f3 f4 f5 c= f7 cSND cSND csplitFace f1 f2 f3 f4 f5 * / c? / c= c, f0 c, b0 b1 csplitFace f1 f2 f3 f4 f5 f6
+ ((MEM f) (faces g)) |- (((MEM f) (faces g)) /\ ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))))))))))))))
T c==> cMEM f0 cfaces f1 c/\ cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c= cFST csplitFace f1 f6 f3 f0 f5 f7 c==> c= cFST cSND csplitFace f1 f6 f3 f0 f5 f8 c==> c= cSND cSND csplitFace f1 f6 f3 f0 f5 cSND cSND csplitFace f1 f6 f3 f0 f5 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f6 f3 f0 f5 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (((MEM f) (faces g)) /\ (~ (SND f))) |- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) /\ ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c/\ cMEM f1 cfaces f2 c~ cSND f1 c/\ ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 f4 f0
+ |- ((\v. (!f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))))))) v)
T * / ! ! ! ! ! c==> c= csplitFace f0 f1 b0 b1 b2 c, b3 c, b4 b5 c= csplit_face b1 f1 b0 b2 c, b3 b4 f2
+ (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f4 cNUMERAL c_0 c==> c= c, f5 c, f6 f7 csplitFace f8 f2 f3 f0 f9 c==> c= f3 cthe f1 c==> c= f9 cupt ccountVertices f8 c+ ccountVertices f8 f4 c==> cMEM f0 cfaces f8 c==> c/\ c= f10 f5 c= f11 f6 c==> c/\ c= cFST csplit_face f0 f2 f3 f9 f10 c= cSND csplit_face f0 f2 f3 f9 f11 c==> c~ cSND f11 c==> cSND f6 cF
- |- ((_10385586 = _10385587) ==> ((faces _10385586) = (faces _10385587)))
T c==> c= f0 f1 c= cfaces f0 cfaces f1
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((FST (((((splitFace g) u) v) f) ws)) = f1), ((FST (SND (((((splitFace g) u) v) f) ws))) = f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((MEM f) (faces g)) |- (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) /\ (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> (hold ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f8 c==> c= cFST cSND csplitFace f6 f3 f4 f1 f7 f9 c==> c= cthe f2 f4 c==> c= cupt ccountVertices f6 c+ ccountVertices f6 f5 f7 c==> cMEM f1 cfaces f6 c/\ c= cFST cSND csplitFace f6 f3 f4 f1 f7 f9 c==> c= cSND cSND csplitFace f6 f3 f4 f1 f7 cSND cSND csplitFace f6 f3 f4 f1 f7 chold c= cfinals f6 cfinals cSND cSND csplitFace f6 f3 f4 f1 f7
+ |- (((!f. (!v. (!u. (!g. (!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))))))))) ==> ((\f. (!v. (!u. (!g. (!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))))))))) f)) = ((\f. (!v. (!u. (!g. (!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))))))))) f))
T c= c==> ! ! ! ! ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b9 cfaces b9 c~ cSND b9 c= cfinals b9 cfinals cSND csubdivFace0_alt b9 b9 b9 b9 b8 c==> cMEM b0 cfaces b3 c==> c~ cSND b0 c==> c= cthe b7 b1 c==> c= cupt ccountVertices b3 c+ ccountVertices b3 b6 f0 c==> c~ c= b7 cNONE c==> c~ c/\ c= cnextVertex b0 b2 b1 c= b6 cNUMERAL c_0 c==> c= cFST csplitFace b3 b2 b1 b0 f0 b5 c==> c= cFST cSND csplitFace b3 b2 b1 b0 f0 b4 c==> c= cSND cSND csplitFace b3 b2 b1 b0 f0 cSND cSND csplitFace b3 b2 b1 b0 f0 c==> c~ c= cfinals b3 cfinals cSND cSND csplitFace b3 b2 b1 b0 f0 c==> ! ! ! ! ! c==> c~ cSND b10 c= cfinals cSND cSND csplitFace b9 b9 b10 b10 b10 cfinals b9 cF * / ! ! ! ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b9 cfaces b9 c~ cSND b9 c= cfinals b9 cfinals cSND csubdivFace0_alt b9 b9 b9 b9 b8 c==> cMEM b0 cfaces b3 c==> c~ cSND b0 c==> c= cthe b7 b1 c==> c= cupt ccountVertices b3 c+ ccountVertices b3 b6 f0 c==> c~ c= b7 cNONE c==> c~ c/\ c= cnextVertex b0 b2 b1 c= b6 cNUMERAL c_0 c==> c= cFST csplitFace b3 b2 b1 b0 f0 b5 c==> c= cFST cSND csplitFace b3 b2 b1 b0 f0 b4 c==> c= cSND cSND csplitFace b3 b2 b1 b0 f0 cSND cSND csplitFace b3 b2 b1 b0 f0 c==> c~ c= cfinals b3 cfinals cSND cSND csplitFace b3 b2 b1 b0 f0 c==> ! ! ! ! ! c==> c~ cSND b10 c= cfinals cSND cSND csplitFace b9 b9 b10 b10 b10 cfinals b9 cF f1 * / ! ! ! ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b9 cfaces b9 c~ cSND b9 c= cfinals b9 cfinals cSND csubdivFace0_alt b9 b9 b9 b9 b8 c==> cMEM b0 cfaces b3 c==> c~ cSND b0 c==> c= cthe b7 b1 c==> c= cupt ccountVertices b3 c+ ccountVertices b3 b6 f0 c==> c~ c= b7 cNONE c==> c~ c/\ c= cnextVertex b0 b2 b1 c= b6 cNUMERAL c_0 c==> c= cFST csplitFace b3 b2 b1 b0 f0 b5 c==> c= cFST cSND csplitFace b3 b2 b1 b0 f0 b4 c==> c= cSND cSND csplitFace b3 b2 b1 b0 f0 cSND cSND csplitFace b3 b2 b1 b0 f0 c==> c~ c= cfinals b3 cfinals cSND cSND csplitFace b3 b2 b1 b0 f0 c==> ! ! ! ! ! c==> c~ cSND b10 c= cfinals cSND cSND csplitFace b9 b9 b10 b10 b10 cfinals b9 cF f1
+ (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) /\ ((~ (SND f2')) ==> (~ (SND f2))))
T c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c= cthe f4 f2 c==> c= cupt ccountVertices f5 c+ ccountVertices f5 f3 f6 c==> c/\ c= f7 f8 c= f9 f10 c==> c/\ c= cFST csplit_face f0 f1 f2 f6 f7 c= cSND csplit_face f0 f1 f2 f6 f9 c/\ c/\ c= cFST csplit_face f0 f1 f2 f6 f7 c= cSND csplit_face f0 f1 f2 f6 f9 c==> c~ cSND f9 c~ cSND f10
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((FST (((((splitFace g) u) v) f) ws)) = f1), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((MEM f) (faces g)) |- (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f8 c==> c= cthe f2 f4 c==> c= cupt ccountVertices f6 c+ ccountVertices f6 f5 f7 c==> cMEM f1 cfaces f6 c==> c= cFST cSND csplitFace f6 f3 f4 f1 f7 f9 c==> c= cSND cSND csplitFace f6 f3 f4 f1 f7 cSND cSND csplitFace f6 f3 f4 f1 f7 c==> c~ c= cfinals f6 cfinals cSND cSND csplitFace f6 f3 f4 f1 f7 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), ((MEM f) (faces g)) |- ((((\ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))) ws) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> cMEM f1 cfaces f4 c= c==> * / c= b0 cupt ccountVertices f4 c+ ccountVertices f4 f5 f6 c= cfinals f4 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f4 f1 f7 cSUC f5 f0 cCOND c/\ c= cnextVertex f1 f7 f2 c= f5 cNUMERAL c_0 csubdivFace0_alt f4 f1 f2 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f0 csplitFace f4 f7 f2 f1 b0 cupt ccountVertices f4 c+ ccountVertices f4 f5 cT
- ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((FST ((((split_face f) u) (the h)) ((upt (countVertices g)) ((countVertices g) + n)))) = (FST (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))
T c==> c= cthe f0 f1 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f3 f4 c==> c/\ c= f5 f6 c= f7 f8 c==> c/\ c= cFST csplitFace f2 f9 f1 f10 f4 f6 c= cSND csplitFace f2 f9 f1 f10 f4 c, f8 f11 c==> c/\ c= cFST csplit_face f10 f9 f1 f4 f5 c= cSND csplit_face f10 f9 f1 f4 f7 c= cFST csplit_face f10 f9 cthe f0 cupt ccountVertices f2 c+ ccountVertices f2 f3 cFST csplitFace f2 f9 cthe f0 f10 cupt ccountVertices f2 c+ ccountVertices f2 f3
+ (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (ws = ((upt (countVertices g)) ((countVertices g) + n)))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= f2 cupt ccountVertices f0 c+ ccountVertices f0 f1
+ |- (T ==> (?ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))))
T c==> cT c? / c= b0 cupt ccountVertices f0 c+ ccountVertices f0 f1
+ ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((~ (SND f2)) = (~ (SND (SND ((((split_face f) u) v) ws)))))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f0 c= cSND csplit_face f4 f5 f6 f7 f2 c= c~ cSND f3 c~ cSND cSND csplit_face f4 f5 f6 f7
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)) |- ((((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))) = ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= csplit_face f2 f3 f4 f5 c, f6 f7 c= c==> c/\ c= f0 f6 c= f1 f7 c==> c/\ c= cFST csplit_face f2 f3 f4 f5 f0 c= cSND csplit_face f2 f3 f4 f5 f1 c==> c~ cSND f1 c==> cSND f7 cF c==> c/\ c= cFST csplit_face f2 f3 f4 f5 f0 c= cSND csplit_face f2 f3 f4 f5 f1 c==> c~ cSND f1 c==> cSND f7 cF
+ (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((((((split_face f) u) v) ws) = (f1 , f2)) /\ (((MEM f2) (faces g')) /\ (~ (SND f2))))
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f4 cNUMERAL c_0 c==> c= c, f5 c, f6 f7 csplitFace f8 f2 f3 f0 f9 c==> c= csplit_face f0 f2 f3 f9 c, f5 f6 c==> c= f3 cthe f1 c==> c= f9 cupt ccountVertices f8 c+ ccountVertices f8 f4 c==> cMEM f0 cfaces f8 c/\ c= csplit_face f0 f2 f3 f9 c, f5 f6 c/\ cMEM f6 cfaces f7 c~ cSND f6
+ |- (?ws. (ws = ((upt (countVertices g)) ((countVertices g) + n))))
T c? / c= b0 cupt ccountVertices f0 c+ ccountVertices f0 f1
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (((FST ((((split_face f) u) v) ws)) = f1') = ((FST ((((split_face f) u) v) ws)) = (FST (((((splitFace g) u) v) f) ws))))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= c= cFST csplit_face f7 f5 f6 f8 f0 c= cFST csplit_face f7 f5 f6 f8 cFST csplitFace f4 f5 f6 f7 f8
+ (v = (the h)) |- ((the h) = v)
T c==> c= f0 cthe f1 c= cthe f1 f0
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= cMEM f3 cfaces f0 cMEM f3 cfaces f0
+ |- (?_10385606. (!f1. (!f2. (!g'. ((_10385606 (f1 , (f2 , g'))) = (LET_END ((MEM f2) (faces g'))))))))
T c? / ! ! ! c= * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((the h) = v), ((MEM f) (faces g)) |- (((the h) = v) /\ ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> (hold ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= cthe f2 f3 c==> cMEM f1 cfaces f4 c/\ c= cthe f2 f3 c==> c= cupt ccountVertices f4 c+ ccountVertices f4 f5 f6 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f3 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f4 f7 f3 f1 f6 f8 c==> c= cFST cSND csplitFace f4 f7 f3 f1 f6 f9 c==> c= cSND cSND csplitFace f4 f7 f3 f1 f6 cSND cSND csplitFace f4 f7 f3 f1 f6 chold c= cfinals f4 cfinals cSND cSND csplitFace f4 f7 f3 f1 f6
+ ((\v. (v = (the h))) v) |- (((v = (the h)) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))) = ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))))
T c==> * / c= b0 cthe f0 f1 c= c==> c= f1 cthe f0 c= cfinals f2 cfinals cSND cCOND c= f0 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f2 f4 b0 f3 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 c= cfinals f2 cfinals cSND cCOND c= f0 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f2 f4 b0 f3 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0
+ |- (((!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws)))) ==> ((\ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws)))) ws)) = ((\ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws)))) ws))
T c= c==> ! c==> cMEM f0 cfaces f1 cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 csplitFace f1 f2 f3 f0 b0 * / c==> cMEM f0 cfaces f1 cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 csplitFace f1 f2 f3 f0 b0 f4 * / c==> cMEM f0 cfaces f1 cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 csplitFace f1 f2 f3 f0 b0 f4
+ |- (((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) ((CONS h) t))))))))))) = T)
T c= c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 cCONS f1 f0 cT
- ((f1' = f1) /\ (f2' = f2)) |- ((((upt (countVertices g)) ((countVertices g) + n)) = ws) = (((upt (countVertices g)) ((countVertices g) + n)) = ws))
T c==> c/\ c= f0 f1 c= f2 f3 c= c= cupt ccountVertices f4 c+ ccountVertices f4 f5 f6 c= cupt ccountVertices f4 c+ ccountVertices f4 f5 f6
- ((the h) = v) |- ((~ (h = NONE)) = (~ (h = NONE)))
T c==> c= cthe f0 f1 c= c~ c= f0 cNONE c~ c= f0 cNONE
+ |- ((((MEM f2) (faces g')) ==> ((MEM f2) (faces g'))) = (((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (f1 , (f2 , g'))) ==> ((MEM f2) (faces g'))))
T c= c==> cMEM f0 cfaces f1 cMEM f0 cfaces f1 c==> cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 c, f2 c, f0 f1 cMEM f0 cfaces f1
+ |- ((? P) ==> (P (GABS P)))
T c==> c? f0 * f0 cGABS f0
+ |- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> (hold ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws))))))))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 chold c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6
+ |- ((\u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))))))) u)
T * / ! ! ! ! ! ! ! c==> cMEM b1 cfaces b7 c==> c~ cSND b1 c==> c= cthe b5 f0 c==> c= cupt ccountVertices b7 c+ ccountVertices b7 b4 f1 c==> c/\ c= cFST csplitFace b7 b0 f0 b1 f1 b3 c= cSND csplitFace b7 b0 f0 b1 f1 c, f2 b6 c==> c~ c= b5 cNONE c==> c~ c/\ c= cnextVertex b1 b0 f0 c= b4 cNUMERAL c_0 c==> c/\ c= b2 b3 c= f3 f2 c==> c/\ c= cFST csplit_face b1 b0 f0 f1 b2 c= cSND csplit_face b1 b0 f0 f1 f3 c==> c~ cSND f3 c==> cSND f2 cF f4
+ |- (((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f2 , g')) = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g')))))
T c= c@ / ! ! c= * b0 c, b1 b2 b2 c, f0 f1 c@ / ! ! c= * b0 c, b1 b2 b2 c@ / ! ! c= * b0 c, b1 b2 b2 c, f2 c, f0 f1
+ ((MEM f) (faces g)) |- ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))
T c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF
- |- ((!f'. ((SND f) \/ (!ws. ((finals (SND (SND (((((splitFace g) r) v) f') ws)))) = (finals g))))) = ((SND f) \/ (!f. (!ws. ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))
T c= ! c\/ cSND f0 ! c= cfinals cSND cSND csplitFace f1 f2 f3 b0 b1 cfinals f1 c\/ cSND f0 ! ! c= cfinals cSND cSND csplitFace f1 f2 f3 b0 b1 cfinals f1
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((MEM f) (faces g)) |- (((~ (h = NONE)) ==> ((finals g) = (finals (SND (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))) = (((h = NONE) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) (SUC n)) t))))) /\ ((~ (h = NONE)) ==> ((finals g) = (finals (SND (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> cMEM f1 cfaces f2 c= c==> c~ c= f3 cNONE c= cfinals f2 cfinals cSND cCOND c/\ c= cnextVertex f1 f4 f5 c= f6 cNUMERAL c_0 csubdivFace0_alt f2 f1 f5 cNUMERAL c_0 f0 csubdivFace0_alt f7 f8 f5 cNUMERAL c_0 f0 c/\ c==> c= f3 cNONE c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f4 cSUC f6 f0 c==> c~ c= f3 cNONE c= cfinals f2 cfinals cSND cCOND c/\ c= cnextVertex f1 f4 f5 c= f6 cNUMERAL c_0 csubdivFace0_alt f2 f1 f5 cNUMERAL c_0 f0 csubdivFace0_alt f7 f8 f5 cNUMERAL c_0 f0
+ ((f1' = (FST ((((split_face f) u) v) ws))) /\ (f2' = (SND ((((split_face f) u) v) ws)))) |- (((f1' = (FST ((((split_face f) u) v) ws))) /\ (f2' = (SND ((((split_face f) u) v) ws)))) /\ (?f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))))
T c==> c/\ c= f0 cFST csplit_face f1 f2 f3 f4 c= f5 cSND csplit_face f1 f2 f3 f4 c/\ c/\ c= f0 cFST csplit_face f1 f2 f3 f4 c= f5 cSND csplit_face f1 f2 f3 f4 c? / c? / c= c, b0 b1 csplit_face f1 f2 f3 f4
+ |- ((!f2. (!g'. (((\_10384888. (LET_END (((((subdivFace0_alt ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10384888))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10384888))) v) (NUMERAL _0)) t))) (f1 , (f2 , g'))) = (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))) = T)
T c= ! ! c= * / cLET_END csubdivFace0_alt c@ / ! ! c= * b3 c, b4 b5 b5 c@ / ! ! c= * b3 c, b4 b5 b5 b2 c@ / ! ! c= * b3 c, b4 b5 b4 c@ / ! ! c= * b3 c, b4 b5 b5 b2 f0 cNUMERAL c_0 f1 c, f2 c, b0 b1 cLET_END csubdivFace0_alt b1 b0 f0 cNUMERAL c_0 f1 cT
- (_10385553 = _10385558), (_10385554 = _10385559), (_10385556 = _10385561) |- ((_10385555 = _10385560) ==> ((~ (_10385552 = _10385557)) \/ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c= csplitFace f8 f0 f2 f6 f4 csplitFace f9 f1 f3 f7 f5
- (_10385542 = _10385543) |- ((_10385542 = _10385543) /\ ((NUMERAL _10385542) = (NUMERAL _10385543)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (F = F)
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= cF cF
+ ((f1' , f2') = ((((split_face f) u) v) ws)) |- ((((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) (f1' , f2')) ==> (((MEM f2) (faces g')) /\ (~ (SND f2)))) = (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2)))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 c, f0 f1 c/\ cMEM f6 cfaces f7 c~ cSND f6 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f2 f3 f4 f5 c/\ cMEM f6 cfaces f7 c~ cSND f6
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((((upt (countVertices g)) ((countVertices g) + n)) = ws) = (((upt (countVertices g)) ((countVertices g) + n)) = ws))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= c= cupt ccountVertices f4 c+ ccountVertices f4 f10 f8 c= cupt ccountVertices f4 c+ ccountVertices f4 f10 f8
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((MEM f) (faces g)) |- (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cthe f2 f4 c==> c= cupt ccountVertices f6 c+ ccountVertices f6 f5 f7 c==> cMEM f1 cfaces f6 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f8 c==> c= cFST cSND csplitFace f6 f3 f4 f1 f7 f9 c==> c= cSND cSND csplitFace f6 f3 f4 f1 f7 cSND cSND csplitFace f6 f3 f4 f1 f7 c==> c~ c= cfinals f6 cfinals cSND cSND csplitFace f6 f3 f4 f1 f7 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF
+ |- ((\g'. ((GEQ ((GABS (\_10384890. (!f1. (!f2. (!g'. ((GEQ (_10384890 (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))))) (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))) g')
T * / cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f0 cNUMERAL c_0 f1 c, f2 c, f3 b0 cLET_END csubdivFace0_alt b0 f3 f0 cNUMERAL c_0 f1 f4
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- ((~ (SND f)) = (~ (SND f)))
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= c~ cSND f3 c~ cSND f3
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((MEM f) (faces g)) |- (((((nextVertex f) u) = v) /\ (n = (NUMERAL _0))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> cMEM f1 cfaces f2 c==> c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f4 cNUMERAL c_0 f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), ((MEM f) (faces g)) |- (((MEM f) (faces g)) /\ ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> (hold ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c/\ cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 chold c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6
+ ((\f2'. ((f1' , f2') = ((((split_face f) u) v) ws))) f2') |- ((f1' , f2') = ((((split_face f) u) v) ws))
T c==> * / c= c, f0 b0 csplit_face f1 f2 f3 f4 f5 c= c, f0 f5 csplit_face f1 f2 f3 f4
- (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))) |- (((((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))
T c==> c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> c==> c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF
- ((FST (((((splitFace g) u) v) f) ws)) = f1) |- ((~ (h = NONE)) = (~ (h = NONE)))
T c==> c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= c~ c= f6 cNONE c~ c= f6 cNONE
+ (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((~ (SND f2')) ==> ((SND f2) ==> F))
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f4 cNUMERAL c_0 c==> c= c, f5 c, f6 f7 csplitFace f8 f2 f3 f0 f9 c==> c= c, f10 f11 csplit_face f0 f2 f3 f9 c==> c= csplit_face f0 f2 f3 f9 c, f5 f6 c==> c= f3 cthe f1 c==> c= f9 cupt ccountVertices f8 c+ ccountVertices f8 f4 c==> cMEM f0 cfaces f8 c==> c~ cSND f11 c==> cSND f6 cF
+ ((f1 = (FST (((((splitFace g) u) v) f) ws))) /\ ((f2 = (FST (SND (((((splitFace g) u) v) f) ws)))) /\ (g' = (SND (SND (((((splitFace g) u) v) f) ws)))))) |- (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))
T c==> c/\ c= f0 cFST csplitFace f1 f2 f3 f4 f5 c/\ c= f6 cFST cSND csplitFace f1 f2 f3 f4 f5 c= f7 cSND cSND csplitFace f1 f2 f3 f4 f5 c? / c? / c= c, f0 c, b0 b1 csplitFace f1 f2 f3 f4 f5
+ |- ((\u. (!v. (!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))))) u)
T * / ! ! ! c==> cMEM b2 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END cMEM b6 cfaces b7 csplitFace f0 b0 b1 b2 b3 f1
+ (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n))))))))
T c==> c~ c= cfinals f0 cfinals cSND cSND csplitFace f0 f1 f2 f3 f4 c==> c= cthe f5 f2 c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f6 f4 c~ c= cfinals f0 cfinals cSND cSND csplitFace f0 f1 cthe f5 f3 cupt ccountVertices f0 c+ ccountVertices f0 f6
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (((~ ((MEM _10384918) (faces _10384917))) \/ (SND _10384918)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) _10384920) t)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c\/ c\/ c~ cMEM f1 cfaces f2 cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 f4 f0
+ ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), ((MEM f) (faces g)) |- ((((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))) ==> ((MEM f2) (faces g')))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c==> cMEM f6 cfaces f3 c==> c==> cMEM f6 cfaces f3 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f3 f4 f5 f6 f7 cMEM f1 cfaces f2
+ (~ (SND f)), ((the h) = v) |- (((the h) = v) /\ ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))))))))))))
T c==> c~ cSND f0 c==> c= cthe f1 f2 c/\ c= cthe f1 f2 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f4 f5 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f2 c= f4 cNUMERAL c_0 c==> c= cFST csplitFace f3 f6 f2 f0 f5 f7 c==> c= cFST cSND csplitFace f3 f6 f2 f0 f5 f8 c==> c= cSND cSND csplitFace f3 f6 f2 f0 f5 cSND cSND csplitFace f3 f6 f2 f0 f5 c==> c~ c= cfinals f3 cfinals cSND cSND csplitFace f3 f6 f2 f0 f5 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
+ |- (((?f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))) ==> (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2))))) = (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2)))))
T c= c==> c? / c? / c= c, b0 b1 csplit_face f0 f1 f2 f3 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f0 f1 f2 f3 c/\ cMEM f4 cfaces f5 c~ cSND f4 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f0 f1 f2 f3 c/\ cMEM f4 cfaces f5 c~ cSND f4
+ |- ((\_10385204. (!f1. (!f2. ((_10385204 (f1 , f2)) = (LET_END (~ (SND f2))))))) (\_10385202. (LET_END (~ (SND ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10385202))))))
T * / ! ! c= * b0 c, b1 b2 cLET_END c~ cSND b2 / cLET_END c~ cSND c@ / ! ! c= * b1 c, b2 b3 b3 b0
- |- ((~ (_10385542 = _10385543)) \/ ((NUMERAL _10385542) = (NUMERAL _10385543)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ ((SND (SND (((((splitFace g) u) v) f) ws))) = g') |- (g' = (SND (SND (((((splitFace g) u) v) f) ws))))
T c==> c= cSND cSND csplitFace f0 f1 f2 f3 f4 f5 c= f5 cSND cSND csplitFace f0 f1 f2 f3 f4
+ (~ (SND f)), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((((upt (countVertices g)) ((countVertices g) + n)) = ws) /\ ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))))))))))
T c==> c~ cSND f0 c==> c= cthe f1 f2 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f4 f5 c/\ c= cupt ccountVertices f3 c+ ccountVertices f3 f4 f5 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f2 c= f4 cNUMERAL c_0 c==> c= cFST csplitFace f3 f6 f2 f0 f5 f7 c==> c= cFST cSND csplitFace f3 f6 f2 f0 f5 f8 c==> c= cSND cSND csplitFace f3 f6 f2 f0 f5 cSND cSND csplitFace f3 f6 f2 f0 f5 c==> c~ c= cfinals f3 cfinals cSND cSND csplitFace f3 f6 f2 f0 f5 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
+ |- ((!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))))))))))))))))) = T)
T c= ! ! ! c==> ! ! ! ! c==> c/\ cMEM b4 cfaces b3 c~ cSND b4 c= cfinals b3 cfinals cSND csubdivFace0_alt b3 b4 b5 b6 b2 c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe b1 f2 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 b0 f3 c==> c~ c= b1 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f2 c= b0 cNUMERAL c_0 c==> c= cFST csplitFace f1 f4 f2 f0 f3 f5 c==> c= cFST cSND csplitFace f1 f4 f2 f0 f3 f6 c==> c= cSND cSND csplitFace f1 f4 f2 f0 f3 cSND cSND csplitFace f1 f4 f2 f0 f3 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f4 f2 f0 f3 c~ ! ! ! ! ! c==> c~ cSND b6 c= cfinals cSND cSND csplitFace b3 b4 b5 b6 b7 cfinals b3 cT
- (v = (the h)) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c= f0 cthe f1 c= cMEM f2 cfaces f3 cMEM f2 cfaces f3
+ (~ (SND f2')), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((~ (SND f2')) /\ (~ (SND f2)))
T c==> c~ cSND f0 c==> c~ c/\ c= cnextVertex f1 f2 f3 c= f4 cNUMERAL c_0 c==> c= cthe f5 f3 c==> c= cupt ccountVertices f6 c+ ccountVertices f6 f4 f7 c==> c/\ c= f8 f9 c= f0 f10 c==> c/\ c= cFST csplit_face f1 f2 f3 f7 f8 c= cSND csplit_face f1 f2 f3 f7 f0 c/\ c~ cSND f0 c~ cSND f10
- (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((FST ((((split_face f) u) v) ((upt (countVertices g)) ((countVertices g) + n)))) = (FST (((((splitFace g) u) v) f) ((upt (countVertices g)) ((countVertices g) + n)))))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c==> c/\ c= f3 f4 c= f5 f6 c==> c/\ c= cFST csplitFace f0 f7 f8 f9 f2 f4 c= cSND csplitFace f0 f7 f8 f9 f2 c, f6 f10 c==> c/\ c= cFST csplit_face f9 f7 f8 f2 f3 c= cSND csplit_face f9 f7 f8 f2 f5 c= cFST csplit_face f9 f7 f8 cupt ccountVertices f0 c+ ccountVertices f0 f1 cFST csplitFace f0 f7 f8 f9 cupt ccountVertices f0 c+ ccountVertices f0 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) ((CONS h) t)))))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 cCONS f1 f0
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)) |- ((f1' = f1) /\ (f2' = f2))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= csplit_face f2 f3 f4 f5 c, f6 f7 c/\ c= f0 f6 c= f1 f7
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((h = NONE) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) (SUC n)) t))))) /\ ((~ (h = NONE)) ==> ((finals g) = (finals (SND (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= c, f2 c, f3 f4 csplitFace f5 f6 f7 f1 f8 c==> c= f7 cthe f9 c==> c= f8 cupt ccountVertices f5 c+ ccountVertices f5 f10 c==> cMEM f1 cfaces f5 c/\ c==> c= f9 cNONE c= cfinals f5 cfinals cSND csubdivFace0_alt f5 f1 f6 cSUC f10 f0 c==> c~ c= f9 cNONE c= cfinals f5 cfinals cSND cCOND c/\ c= cnextVertex f1 f6 f7 c= f10 cNUMERAL c_0 csubdivFace0_alt f5 f1 f7 cNUMERAL c_0 f0 csubdivFace0_alt f4 f3 f7 cNUMERAL c_0 f0
- ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- (((FST ((((split_face f) u) v) ws)) = (FST (((((splitFace g) u) v) f) ws))) = ((FST ((((split_face f) u) v) ws)) = (FST (((((splitFace g) u) v) f) ws))))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f0 c= cSND csplit_face f4 f5 f6 f7 f2 c= c= cFST csplit_face f4 f5 f6 f7 cFST csplitFace f8 f5 f6 f4 f7 c= cFST csplit_face f4 f5 f6 f7 cFST csplitFace f8 f5 f6 f4 f7
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((SND (SND (((((splitFace g) u) v) f) ws))) = g'), ((FST (((((splitFace g) u) v) f) ws)) = f1), ((FST (SND (((((splitFace g) u) v) f) ws))) = f2), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (hold ((finals g) = (finals g')))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cSND cSND csplitFace f6 f3 f4 f1 f7 f8 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f9 c==> c= cFST cSND csplitFace f6 f3 f4 f1 f7 f10 c==> c= f4 cthe f2 c==> c= f7 cupt ccountVertices f6 c+ ccountVertices f6 f5 c==> cMEM f1 cfaces f6 chold c= cfinals f6 cfinals f8
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((MEM f) (faces g)) |- (!v. (((\v. (v = (the h))) v) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> cMEM f1 cfaces f2 ! c==> * / c= b1 cthe f3 b0 c= cfinals f2 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f2 f1 f4 cSUC f5 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b1 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b1 cNUMERAL c_0 f0 csplitFace f2 f4 b1 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3
+ |- (!f2. (!f2'. (!ws. (!v. (!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> (~ (SND f2))))))))))))))))))))))))
T c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c~ cSND f8
+ |- (((!u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))))))) ==> ((\u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))))))) u)) = ((\u. (!f. (!f1'. (!f1. (!n. (!h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))))))))) u))
T c= c==> ! ! ! ! ! ! ! ! c==> cMEM b1 cfaces b7 c==> c~ cSND b1 c==> c= cthe b5 f0 c==> c= cupt ccountVertices b7 c+ ccountVertices b7 b4 f1 c==> c/\ c= cFST csplitFace b7 b0 f0 b1 f1 b3 c= cSND csplitFace b7 b0 f0 b1 f1 c, f2 b6 c==> c~ c= b5 cNONE c==> c~ c/\ c= cnextVertex b1 b0 f0 c= b4 cNUMERAL c_0 c==> c/\ c= b2 b3 c= f3 f2 c==> c/\ c= cFST csplit_face b1 b0 f0 f1 b2 c= cSND csplit_face b1 b0 f0 f1 f3 c==> c~ cSND f3 c==> cSND f2 cF * / ! ! ! ! ! ! ! c==> cMEM b1 cfaces b7 c==> c~ cSND b1 c==> c= cthe b5 f0 c==> c= cupt ccountVertices b7 c+ ccountVertices b7 b4 f1 c==> c/\ c= cFST csplitFace b7 b0 f0 b1 f1 b3 c= cSND csplitFace b7 b0 f0 b1 f1 c, f2 b6 c==> c~ c= b5 cNONE c==> c~ c/\ c= cnextVertex b1 b0 f0 c= b4 cNUMERAL c_0 c==> c/\ c= b2 b3 c= f3 f2 c==> c/\ c= cFST csplit_face b1 b0 f0 f1 b2 c= cSND csplit_face b1 b0 f0 f1 f3 c==> c~ cSND f3 c==> cSND f2 cF f4 * / ! ! ! ! ! ! ! c==> cMEM b1 cfaces b7 c==> c~ cSND b1 c==> c= cthe b5 f0 c==> c= cupt ccountVertices b7 c+ ccountVertices b7 b4 f1 c==> c/\ c= cFST csplitFace b7 b0 f0 b1 f1 b3 c= cSND csplitFace b7 b0 f0 b1 f1 c, f2 b6 c==> c~ c= b5 cNONE c==> c~ c/\ c= cnextVertex b1 b0 f0 c= b4 cNUMERAL c_0 c==> c/\ c= b2 b3 c= f3 f2 c==> c/\ c= cFST csplit_face b1 b0 f0 f1 b2 c= cSND csplit_face b1 b0 f0 f1 f3 c==> c~ cSND f3 c==> cSND f2 cF f4
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((~ (SND f)) = (~ (SND f)))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= c~ cSND f3 c~ cSND f3
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) /\ (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> (hold ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws))))))))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c/\ ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 chold c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ ((f1' , f2') = ((((split_face f) u) v) ws)) |- ((((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) ((((split_face f) u) v) ws)) ==> (((MEM f2) (faces g')) /\ (~ (SND f2)))) = (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END (~ (SND f2))))))))) (f1' , f2')) ==> (((MEM f2) (faces g')) /\ (~ (SND f2)))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 csplit_face f2 f3 f4 f5 c/\ cMEM f6 cfaces f7 c~ cSND f6 c==> cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c~ cSND b2 c, f0 f1 c/\ cMEM f6 cfaces f7 c~ cSND f6
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)), ((\g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) g') |- (((\g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) g') /\ ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> c= f4 cupt ccountVertices f5 c+ ccountVertices f5 f6 c==> cMEM f1 cfaces f5 c==> * / c= c, f7 c, f8 b0 csplitFace f5 f9 f2 f1 f4 f10 c/\ * / c= c, f7 c, f8 b0 csplitFace f5 f9 f2 f1 f4 f10 c= cfinals f5 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f5 f1 f9 cSUC f6 f0 cCOND c/\ c= cnextVertex f1 f9 f2 c= f6 cNUMERAL c_0 csubdivFace0_alt f5 f1 f2 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f0 csplitFace f5 f9 f2 f1 f4
+ |- ((GEQ ((GABS (\_10384890. (!f1. (!f2. (!g'. ((GEQ (_10384890 (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))))) (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))
T cGEQ cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f0 cNUMERAL c_0 f1 c, f2 c, f3 f4 cLET_END csubdivFace0_alt f4 f3 f0 cNUMERAL c_0 f1
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))), ((FST (((((splitFace g) u) v) f) ws)) = f1), ((FST (SND (((((splitFace g) u) v) f) ws))) = f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((MEM f) (faces g)) |- ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) /\ F)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c= cfinals f3 cfinals cSND cSND csplitFace f3 f4 f5 f1 f6 c==> c~ c/\ c= cnextVertex f1 f4 f5 c= f7 cNUMERAL c_0 c==> c= cSND cSND csplitFace f3 f4 f5 f1 f6 cSND cSND csplitFace f3 f4 f5 f1 f6 c==> c= cFST csplitFace f3 f4 f5 f1 f6 f8 c==> c= cFST cSND csplitFace f3 f4 f5 f1 f6 f9 c==> c= cthe f2 f5 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f7 f6 c==> cMEM f1 cfaces f3 c/\ c~ c= cfinals f3 cfinals cSND cSND csplitFace f3 f4 f5 f1 f6 cF
+ |- ((\f. (!v. (!u. (!g. (!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))))))))))))) f)
T * / ! ! ! ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b9 cfaces b9 c~ cSND b9 c= cfinals b9 cfinals cSND csubdivFace0_alt b9 b9 b9 b9 b8 c==> cMEM b0 cfaces b3 c==> c~ cSND b0 c==> c= cthe b7 b1 c==> c= cupt ccountVertices b3 c+ ccountVertices b3 b6 f0 c==> c~ c= b7 cNONE c==> c~ c/\ c= cnextVertex b0 b2 b1 c= b6 cNUMERAL c_0 c==> c= cFST csplitFace b3 b2 b1 b0 f0 b5 c==> c= cFST cSND csplitFace b3 b2 b1 b0 f0 b4 c==> c= cSND cSND csplitFace b3 b2 b1 b0 f0 cSND cSND csplitFace b3 b2 b1 b0 f0 c==> c~ c= cfinals b3 cfinals cSND cSND csplitFace b3 b2 b1 b0 f0 c==> ! ! ! ! ! c==> c~ cSND b10 c= cfinals cSND cSND csplitFace b9 b9 b10 b10 b10 cfinals b9 cF f1
+ (~ (SND f)), (~ (SND f2')), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((~ (SND f2)) /\ ((MEM f2) (faces g')))
T c==> c~ cSND f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f3 f4 c= f5 cNUMERAL c_0 c==> c= c, f6 c, f7 f8 csplitFace f9 f3 f4 f0 f10 c==> c= c, f11 f1 csplit_face f0 f3 f4 f10 c==> c= csplit_face f0 f3 f4 f10 c, f6 f7 c==> c= f4 cthe f2 c==> c= f10 cupt ccountVertices f9 c+ ccountVertices f9 f5 c==> cMEM f0 cfaces f9 c/\ c~ cSND f7 cMEM f7 cfaces f8
- (_10385489 = _10385491) |- ((_10385489 = _10385491) /\ ((~ (_10385488 = _10385490)) \/ (((nextVertex _10385488) _10385489) = ((nextVertex _10385490) _10385491))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cnextVertex f2 f0 cnextVertex f3 f1
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= ! c==> c/\ cMEM f1 cfaces f2 c~ cSND f1 c= cfinals f2 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f2 f1 f4 cSUC b0 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b1 c= b0 cNUMERAL c_0 csubdivFace0_alt f2 f1 b1 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f0 csplitFace f2 f4 b1 f1 b2 cupt ccountVertices f2 c+ ccountVertices f2 b0 cthe f3 cT
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ |- ((((\_10385604. (LET_END ((MEM ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10385604))) (faces ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10385604)))))) (f1 , (f2 , g'))) = (LET_END ((MEM f2) (faces g')))) = T)
T c= c= * / cLET_END cMEM c@ / ! ! c= * b1 c, b2 b3 b2 c@ / ! ! c= * b1 c, b2 b3 b3 b0 cfaces c@ / ! ! c= * b1 c, b2 b3 b3 c@ / ! ! c= * b1 c, b2 b3 b3 b0 c, f0 c, f1 f2 cLET_END cMEM f1 cfaces f2 cT
+ |- ((\h. (!g'. (!g. (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))))) h)
T * / ! ! c==> cMEM f0 cfaces b2 c==> c~ cSND f0 c==> c= cthe b0 f1 c==> c= cupt ccountVertices b2 c+ ccountVertices b2 f2 f3 c==> c/\ c= cFST csplitFace b2 f4 f1 f0 f3 f5 c= cSND csplitFace b2 f4 f1 f0 f3 c, f6 b1 c==> c~ c= b0 cNONE c==> c~ c/\ c= cnextVertex f0 f4 f1 c= f2 cNUMERAL c_0 c==> c/\ c= f7 f5 c= f8 f6 c==> c/\ c= cFST csplit_face f0 f4 f1 f3 f7 c= cSND csplit_face f0 f4 f1 f3 f8 c==> c~ cSND f8 c==> cSND f6 cF f9
+ (SND f2), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- (SND (SND ((((split_face f) u) v) ws)))
T c==> cSND f0 c==> c/\ c= f1 f2 c= f3 f0 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f1 c= cSND csplit_face f4 f5 f6 f7 f3 cSND cSND csplit_face f4 f5 f6 f7
+ (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((~ (n = (NUMERAL _0))) ==> F), ((~ (((nextVertex f) u) = v)) ==> F) |- F
T c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c==> c~ c= f3 cNUMERAL c_0 cF c==> c==> c~ c= cnextVertex f0 f1 f2 cF cF
- ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((~ (((nextVertex f) u) = v)) = (~ (((nextVertex f) u) = v)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f0 c= cSND csplit_face f4 f5 f6 f7 f2 c= c~ c= cnextVertex f4 f5 f6 c~ c= cnextVertex f4 f5 f6
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))), ((FST (((((splitFace g) u) v) f) ws)) = f1), ((FST (SND (((((splitFace g) u) v) f) ws))) = f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((MEM f) (faces g)) |- ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cSND cSND csplitFace f6 f3 f4 f1 f7 cSND cSND csplitFace f6 f3 f4 f1 f7 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f8 c==> c= cFST cSND csplitFace f6 f3 f4 f1 f7 f9 c==> c= cthe f2 f4 c==> c= cupt ccountVertices f6 c+ ccountVertices f6 f5 f7 c==> cMEM f1 cfaces f6 c==> c~ c= cfinals f6 cfinals cSND cSND csplitFace f6 f3 f4 f1 f7 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF
- |- ((_10385542 = _10385543) ==> ((NUMERAL _10385542) = (NUMERAL _10385543)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- ((!g'. (((\_10385604. (LET_END ((MEM ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10385604))) (faces ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10385604)))))) (f1 , (f2 , g'))) = (LET_END ((MEM f2) (faces g'))))) = T)
T c= ! c= * / cLET_END cMEM c@ / ! ! c= * b2 c, b3 b4 b3 c@ / ! ! c= * b2 c, b3 b4 b4 b1 cfaces c@ / ! ! c= * b2 c, b3 b4 b4 c@ / ! ! c= * b2 c, b3 b4 b4 b1 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 cT
- ((the h) = v) |- ((~ (n = (NUMERAL _0))) = (~ (n = (NUMERAL _0))))
T c==> c= cthe f0 f1 c= c~ c= f2 cNUMERAL c_0 c~ c= f2 cNUMERAL c_0
+ ((f1' = f1) /\ (f2' = f2)) |- (((SND ((((split_face f) u) v) ws)) = f2') = ((SND ((((split_face f) u) v) ws)) = f2))
T c==> c/\ c= f0 f1 c= f2 f3 c= c= cSND csplit_face f4 f5 f6 f7 f2 c= cSND csplit_face f4 f5 f6 f7 f3
+ ((SND (SND (((((splitFace g) u) v) f) ws))) = g') |- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = g') ==> (hold ((finals g) = (finals g')))))))))))))
T c==> c= cSND cSND csplitFace f0 f1 f2 f3 f4 f5 c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f6 c==> cMEM f3 cfaces f0 c==> c~ cSND f3 c==> c= cthe f7 f2 c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f8 f4 c==> c~ c= f7 cNONE c==> c~ c/\ c= cnextVertex f3 f1 f2 c= f8 cNUMERAL c_0 c==> c= cFST csplitFace f0 f1 f2 f3 f4 f9 c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f10 c==> c= cSND cSND csplitFace f0 f1 f2 f3 f4 f5 chold c= cfinals f0 cfinals f5
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c= c, f3 c, f4 f5 csplitFace f6 f7 f8 f1 f9 c==> c= f8 cthe f2 c==> c= f9 cupt ccountVertices f6 c+ ccountVertices f6 f10 c==> cMEM f1 cfaces f6 c==> c~ c/\ c= cnextVertex f1 f7 f8 c= f10 cNUMERAL c_0 c= cfinals f6 cfinals cSND csubdivFace0_alt f5 f4 f8 cNUMERAL c_0 f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= ! ! c==> c/\ cMEM f1 cfaces f2 c~ cSND f1 c= cfinals f2 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f2 f1 b0 cSUC b1 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 b0 b2 c= b1 cNUMERAL c_0 csubdivFace0_alt f2 f1 b2 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f0 csplitFace f2 b0 b2 f1 b3 cupt ccountVertices f2 c+ ccountVertices f2 b1 cthe f3 cT
+ (~ (SND f)), ((MEM f) (faces g)) |- (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))
T c==> c~ cSND f0 c==> cMEM f0 cfaces f1 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF
+ |- (((!g. (!u. (!v. (!f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))))))))) ==> ((\g. (!u. (!v. (!f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))))))))) g)) = ((\g. (!u. (!v. (!f. (!ws. (!f1. (!f2. (!g'. (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) ==> (((((split_face f) u) v) ws) = (f1 , f2))))))))))) g))
T c= c==> ! ! ! ! ! ! ! ! c==> c= csplitFace b0 b1 b2 b3 b4 c, b5 c, b6 b7 c= csplit_face b3 b1 b2 b4 c, b5 b6 * / ! ! ! ! ! ! ! c==> c= csplitFace b0 b1 b2 b3 b4 c, b5 c, b6 b7 c= csplit_face b3 b1 b2 b4 c, b5 b6 f0 * / ! ! ! ! ! ! ! c==> c= csplitFace b0 b1 b2 b3 b4 c, b5 c, b6 b7 c= csplit_face b3 b1 b2 b4 c, b5 b6 f0
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((\n. (((~ ((MEM _10384918) (faces _10384917))) \/ (SND _10384918)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) n) t)))))) _10384920)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 * / c\/ c\/ c~ cMEM f1 cfaces f2 cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 b0 f0 f4
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! ! c==> c/\ cMEM b0 cfaces f1 c~ cSND b0 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 b0 b1 b2 f0
+ ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), ((MEM f) (faces g)) |- ((MEM f2) (faces g'))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c==> cMEM f6 cfaces f3 cMEM f1 cfaces f2
+ (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))
T c==> c~ cSND f0 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f2 f3 c= f4 cNUMERAL c_0 c==> c= c, f5 c, f6 f7 csplitFace f8 f2 f3 f0 f9 c==> c= c, f10 f11 csplit_face f0 f2 f3 f9 c==> c= csplit_face f0 f2 f3 f9 c, f5 f6 c==> c= f3 cthe f1 c==> c= f9 cupt ccountVertices f8 c+ ccountVertices f8 f4 c==> cMEM f0 cfaces f8 c==> c/\ c= cFST csplit_face f0 f2 f3 f9 f10 c= cSND csplit_face f0 f2 f3 f9 f11 c==> c~ cSND f11 c==> cSND f6 cF
+ |- (((?_10384890. (!f1. (!f2. (!g'. ((GEQ (_10384890 (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))) ==> ((\_10384890. (!f1. (!f2. (!g'. ((GEQ (_10384890 (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))) (GABS (\_10384890. (!f1. (!f2. (!g'. ((GEQ (_10384890 (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))))))) = ((\_10384890. (!f1. (!f2. (!g'. ((GEQ (_10384890 (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))) (GABS (\_10384890. (!f1. (!f2. (!g'. ((GEQ (_10384890 (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))))
T c= c==> c? / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f0 cNUMERAL c_0 f1 * / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f0 cNUMERAL c_0 f1 * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f0 cNUMERAL c_0 f1 * / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f0 cNUMERAL c_0 f1 * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f0 cNUMERAL c_0 f1
+ |- ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g))))))))))))))))))
T c==> c~ cSND f0 c==> c= cthe f1 f2 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f4 f5 c==> c~ c= f1 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f2 c= f4 cNUMERAL c_0 c==> c= cFST csplitFace f3 f6 f2 f0 f5 f7 c==> c= cFST cSND csplitFace f3 f6 f2 f0 f5 f8 c==> c= cSND cSND csplitFace f3 f6 f2 f0 f5 cSND cSND csplitFace f3 f6 f2 f0 f5 c==> c~ c= cfinals f3 cfinals cSND cSND csplitFace f3 f6 f2 f0 f5 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
+ |- ((\f1. (!f2. (!g'. ((GEQ ((GABS (\_10384890. (!f1. (!f2. (!g'. ((GEQ (_10384890 (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))))) (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))) f1)
T * / ! ! cGEQ cGABS / ! ! ! cGEQ * b3 c, b4 c, b4 b4 cLET_END csubdivFace0_alt b4 b4 f0 cNUMERAL c_0 f1 c, b0 c, b1 b2 cLET_END csubdivFace0_alt b2 b1 f0 cNUMERAL c_0 f1 f2
+ ((f1' = (FST ((((split_face f) u) v) ws))) /\ (f2' = (SND ((((split_face f) u) v) ws)))) |- (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))
T c==> c/\ c= f0 cFST csplit_face f1 f2 f3 f4 c= f5 cSND csplit_face f1 f2 f3 f4 c? / c= c, f0 b0 csplit_face f1 f2 f3 f4
+ |- ((\_10384890. (!f1. (!f2. (!g'. ((_10384890 (f1 , (f2 , g'))) = (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))) (\_10384888. (LET_END (((((subdivFace0_alt ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10384888))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10384888))) v) (NUMERAL _0)) t))))
T * / ! ! ! c= * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f0 cNUMERAL c_0 f1 / cLET_END csubdivFace0_alt c@ / ! ! c= * b1 c, b2 b3 b3 c@ / ! ! c= * b1 c, b2 b3 b3 b0 c@ / ! ! c= * b1 c, b2 b3 b2 c@ / ! ! c= * b1 c, b2 b3 b3 b0 f0 cNUMERAL c_0 f1
- (SND f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((~ (SND (SND ((((split_face f) u) (the h)) ((upt (countVertices g)) ((countVertices g) + n)))))) ==> (SND (SND ((((split_face f) u) (the h)) ((upt (countVertices g)) ((countVertices g) + n))))))
T c==> cSND f0 c==> c= cthe f1 f2 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f4 f5 c==> c/\ c= f6 f7 c= f8 f0 c==> c/\ c= cFST csplit_face f9 f10 f2 f5 f6 c= cSND csplit_face f9 f10 f2 f5 f8 c==> c~ cSND cSND csplit_face f9 f10 cthe f1 cupt ccountVertices f3 c+ ccountVertices f3 f4 cSND cSND csplit_face f9 f10 cthe f1 cupt ccountVertices f3 c+ ccountVertices f3 f4
+ (SND f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- (SND (SND ((((split_face f) u) (the h)) ((upt (countVertices g)) ((countVertices g) + n)))))
T c==> cSND f0 c==> c= cthe f1 f2 c==> c= cupt ccountVertices f3 c+ ccountVertices f3 f4 f5 c==> c/\ c= f6 f7 c= f8 f0 c==> c/\ c= cFST csplit_face f9 f10 f2 f5 f6 c= cSND csplit_face f9 f10 f2 f5 f8 cSND cSND csplit_face f9 f10 cthe f1 cupt ccountVertices f3 c+ ccountVertices f3 f4
+ (v = (the h)) |- ((\v. (v = (the h))) v)
T c==> c= f0 cthe f1 * / c= b0 cthe f1 f0
- (_10385568 = _10385570) |- ((_10385569 = _10385571) ==> ((_10385568 + _10385569) = (_10385570 + _10385571)))
T c==> c= f0 f1 c==> c= f2 f3 c= c+ f0 f2 c+ f1 f3
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((f2' = f2) = (f2' = f2))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= c= f8 f6 c= f8 f6
+ |- ((\v. (!u. (!g. (!f2. (!f1. (!n. (!h. (!t. ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))))))))))))))))))) v)
T * / ! ! ! ! ! ! ! c==> ! ! ! ! c==> c/\ cMEM b8 cfaces b8 c~ cSND b8 c= cfinals b8 cfinals cSND csubdivFace0_alt b8 b8 b9 b9 b7 c==> cMEM f0 cfaces b2 c==> c~ cSND f0 c==> c= cthe b6 b0 c==> c= cupt ccountVertices b2 c+ ccountVertices b2 b5 f1 c==> c~ c= b6 cNONE c==> c~ c/\ c= cnextVertex f0 b1 b0 c= b5 cNUMERAL c_0 c==> c= cFST csplitFace b2 b1 b0 f0 f1 b4 c==> c= cFST cSND csplitFace b2 b1 b0 f0 f1 b3 c==> c= cSND cSND csplitFace b2 b1 b0 f0 f1 cSND cSND csplitFace b2 b1 b0 f0 f1 c==> c~ c= cfinals b2 cfinals cSND cSND csplitFace b2 b1 b0 f0 f1 c==> ! ! ! ! ! c==> c~ cSND b9 c= cfinals cSND cSND csplitFace b8 b8 b9 b9 b10 cfinals b8 cF f2
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((MEM f) (faces g)) |- (((!x. (((\v. (v = (the h))) x) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))))) ==> ((?v. (v = (the h))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))))) = ((?v. (v = (the h))) ==> ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> cMEM f1 cfaces f2 c= c==> ! c==> * / c= b1 cthe f3 b0 c= cfinals f2 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f2 f1 f4 cSUC f5 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b1 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f0 csplitFace f2 f4 b1 f1 b2 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3 c==> c? / c= b0 cthe f3 c= cfinals f2 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f2 f1 f4 cSUC f5 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f4 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3 c==> c? / c= b0 cthe f3 c= cfinals f2 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f2 f1 f4 cSUC f5 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f4 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3
+ |- (T = (((MEM f2) (faces g')) ==> ((MEM f2) (faces g'))))
T c= cT c==> cMEM f0 cfaces f1 cMEM f0 cfaces f1
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)) |- ((f1' , f2') = (f1 , f2))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= csplit_face f2 f3 f4 f5 c, f6 f7 c= c, f0 f1 c, f6 f7
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (v = (the h)), ((MEM f) (faces g)) |- ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c= f2 cthe f3 c==> cMEM f1 cfaces f4 c= cfinals f4 cfinals cSND cCOND c= f3 cNONE csubdivFace0_alt f4 f1 f5 cSUC f6 f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f5 b0 c= f6 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f4 f5 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f6 cthe f3
+ |- (((GABS (\_10385606. (!f1. (!f2. (!g'. ((GEQ (_10385606 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g'))) = (LET_END ((MEM f2) (faces g'))))
T c= cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 c, f0 c, f1 f2 cLET_END cMEM f1 cfaces f2
- (_10385489 = _10385491) |- ((_10385488 = _10385490) ==> (((nextVertex _10385488) _10385489) = ((nextVertex _10385490) _10385491)))
T c==> c= f0 f1 c==> c= f2 f3 c= cnextVertex f2 f0 cnextVertex f3 f1
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((FST (((((splitFace g) u) v) f) ws)) = f1), ((FST (SND (((((splitFace g) u) v) f) ws))) = f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((MEM f) (faces g)) |- (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F)))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f6 f3 f4 f1 f7 f8 c==> c= cFST cSND csplitFace f6 f3 f4 f1 f7 f9 c==> c= cthe f2 f4 c==> c= cupt ccountVertices f6 c+ ccountVertices f6 f5 f7 c==> cMEM f1 cfaces f6 c==> c= cSND cSND csplitFace f6 f3 f4 f1 f7 cSND cSND csplitFace f6 f3 f4 f1 f7 c==> c~ c= cfinals f6 cfinals cSND cSND csplitFace f6 f3 f4 f1 f7 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ |- (((!f2. ((GEQ ((GABS (\_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2)))))))) (f1 , f2))) (LET_END (~ (SND f2))))) ==> ((\f2. ((GEQ ((GABS (\_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2)))))))) (f1 , f2))) (LET_END (~ (SND f2))))) f2)) = ((\f2. ((GEQ ((GABS (\_10385204. (!f1. (!f2. ((GEQ (_10385204 (f1 , f2))) (LET_END (~ (SND f2)))))))) (f1 , f2))) (LET_END (~ (SND f2))))) f2))
T c= c==> ! cGEQ cGABS / ! ! cGEQ * b1 c, b2 b3 cLET_END c~ cSND b3 c, f0 b0 cLET_END c~ cSND b0 * / cGEQ cGABS / ! ! cGEQ * b1 c, b2 b3 cLET_END c~ cSND b3 c, f0 b0 cLET_END c~ cSND b0 f1 * / cGEQ cGABS / ! ! cGEQ * b1 c, b2 b3 cLET_END c~ cSND b3 c, f0 b0 cLET_END c~ cSND b0 f1
- |- ((_10385556 = _10385561) ==> ((~ (_10385553 = _10385558)) \/ ((~ (_10385554 = _10385559)) \/ ((~ (_10385555 = _10385560)) \/ ((~ (_10385552 = _10385557)) \/ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561)))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplitFace f8 f2 f4 f6 f0 csplitFace f9 f3 f5 f7 f1
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), ((MEM f) (faces g)) |- ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((FST (((((splitFace g) u) v) f) ws)) = f1) ==> (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> ((!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))) ==> F))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c~ cSND f1 c==> c= cthe f3 f4 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c==> c~ c= f3 cNONE c==> c~ c/\ c= cnextVertex f1 f7 f4 c= f5 cNUMERAL c_0 c==> c= cFST csplitFace f2 f7 f4 f1 f6 f8 c==> c= cFST cSND csplitFace f2 f7 f4 f1 f6 f9 c==> c= cSND cSND csplitFace f2 f7 f4 f1 f6 cSND cSND csplitFace f2 f7 f4 f1 f6 c==> c~ c= cfinals f2 cfinals cSND cSND csplitFace f2 f7 f4 f1 f6 c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 cF
+ (~ (SND f2')), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), (SND f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((SND f2) /\ F)
T c==> c~ cSND f0 c==> c~ c/\ c= cnextVertex f1 f2 f3 c= f4 cNUMERAL c_0 c==> cSND f5 c==> c= cthe f6 f3 c==> c= cupt ccountVertices f7 c+ ccountVertices f7 f4 f8 c==> c/\ c= f9 f10 c= f0 f5 c==> c/\ c= cFST csplit_face f1 f2 f3 f8 f9 c= cSND csplit_face f1 f2 f3 f8 f0 c/\ cSND f5 cF
+ (~ (SND f)), (~ (SND f2')), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- (((MEM f2) (faces g')) /\ (~ (SND f2)))
T c==> c~ cSND f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f3 f4 c= f5 cNUMERAL c_0 c==> c= c, f6 c, f7 f8 csplitFace f9 f3 f4 f0 f10 c==> c= c, f11 f1 csplit_face f0 f3 f4 f10 c==> c= csplit_face f0 f3 f4 f10 c, f6 f7 c==> c= f4 cthe f2 c==> c= f10 cupt ccountVertices f9 c+ ccountVertices f9 f5 c==> cMEM f0 cfaces f9 c/\ cMEM f7 cfaces f8 c~ cSND f7
- (_10385536 = _10385537) |- ((((SND _10385536) = (SND _10385537)) ==> ((SND _10385537) \/ (~ (SND _10385536)))) = ((SND _10385537) \/ (~ (SND _10385536))))
T c==> c= f0 f1 c= c==> c= cSND f0 cSND f1 c\/ cSND f1 c~ cSND f0 c\/ cSND f1 c~ cSND f0
+ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (~ (SND f)), ((MEM f) (faces g)) |- ((h = NONE) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) (SUC n)) t)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c~ cSND f1 c==> cMEM f1 cfaces f2 c==> c= f3 cNONE c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f4 cSUC f5 f0
+ (~ (SND f)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), ((FST (((((splitFace g) u) v) f) ws)) = f1), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ (((FST (SND (((((splitFace g) u) v) f) ws))) = f2) ==> (((SND (SND (((((splitFace g) u) v) f) ws))) = (SND (SND (((((splitFace g) u) v) f) ws)))) ==> ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) ==> (~ (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))))))))
T c==> c~ cSND f0 c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c= cFST csplitFace f4 f1 f2 f0 f5 f6 c==> c= cthe f7 f2 c==> c= cupt ccountVertices f4 c+ ccountVertices f4 f3 f5 c/\ c= cFST csplitFace f4 f1 f2 f0 f5 f6 c==> c= cFST cSND csplitFace f4 f1 f2 f0 f5 f8 c==> c= cSND cSND csplitFace f4 f1 f2 f0 f5 cSND cSND csplitFace f4 f1 f2 f0 f5 c==> c~ c= cfinals f4 cfinals cSND cSND csplitFace f4 f1 f2 f0 f5 c~ ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- (_10385577 = _10385581), (_10385579 = _10385583) |- ((_10385578 = _10385582) ==> ((~ (_10385576 = _10385580)) \/ (((((split_face _10385576) _10385577) _10385578) _10385579) = ((((split_face _10385580) _10385581) _10385582) _10385583))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c= csplit_face f6 f0 f4 f2 csplit_face f7 f1 f5 f3
- ((the h) = v) |- (((SND (((((splitFace g) u) v) f) ((upt (countVertices g)) ((countVertices g) + n)))) = ((SND ((((split_face f) u) v) ((upt (countVertices g)) ((countVertices g) + n)))) , g')) = ((SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))) = ((SND ((((split_face f) u) (the h)) ((upt (countVertices g)) ((countVertices g) + n)))) , g')))
T c==> c= cthe f0 f1 c= c= cSND csplitFace f2 f3 f1 f4 cupt ccountVertices f2 c+ ccountVertices f2 f5 c, cSND csplit_face f4 f3 f1 cupt ccountVertices f2 c+ ccountVertices f2 f5 f6 c= cSND csplitFace f2 f3 cthe f0 f4 cupt ccountVertices f2 c+ ccountVertices f2 f5 c, cSND csplit_face f4 f3 cthe f0 cupt ccountVertices f2 c+ ccountVertices f2 f5 f6
- |- (((((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))) ==> (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F)))))))))))) = (((MEM f) (faces g)) ==> ((~ (SND f)) ==> (((the h) = v) ==> ((((upt (countVertices g)) ((countVertices g) + n)) = ws) ==> ((((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) ==> ((~ (h = NONE)) ==> ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ==> (((f1' = f1) /\ (f2' = f2)) ==> ((((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) ==> ((~ (SND f2')) ==> ((SND f2) ==> F))))))))))))
T c= c==> c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF c==> cMEM f0 cfaces f1 c==> c~ cSND f0 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f4 f5 c==> c/\ c= cFST csplitFace f1 f6 f3 f0 f5 f7 c= cSND csplitFace f1 f6 f3 f0 f5 c, f8 f9 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f6 f3 c= f4 cNUMERAL c_0 c==> c/\ c= f10 f7 c= f11 f8 c==> c/\ c= cFST csplit_face f0 f6 f3 f5 f10 c= cSND csplit_face f0 f6 f3 f5 f11 c==> c~ cSND f11 c==> cSND f8 cF
- (_10385547 = _10385549), (_10385546 = _10385548) |- ((_10385547 = _10385549) /\ ((_10385546 , _10385547) = (_10385548 , _10385549)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= c, f2 f0 c, f3 f1
- (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))), (~ (SND f)) |- ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))))) ==> ((finals g) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n))))))))
T c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 c==> c~ cSND f0 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4 c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4
- (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ (((nextVertex f) u) = v)) = (~ (((nextVertex f) u) = v)))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= c~ c= cnextVertex f3 f4 f5 c~ c= cnextVertex f3 f4 f5
- (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ (SND f)) = (~ (SND f)))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= c~ cSND f3 c~ cSND f3
- (_10385536 = _10385537) |- ((_10385536 = _10385537) /\ ((SND _10385537) \/ (~ (SND _10385536))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cSND f1 c~ cSND f0
- |- ((~ (_10385572 = _10385574)) \/ ((~ (_10385573 = _10385575)) \/ (((upt _10385572) _10385573) = ((upt _10385574) _10385575))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cupt f0 f2 cupt f1 f3
- (_10385555 = _10385560), (_10385553 = _10385558), (_10385554 = _10385559), (_10385556 = _10385561) |- ((_10385555 = _10385560) /\ ((~ (_10385552 = _10385557)) \/ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f0 f1 c\/ c~ c= f8 f9 c= csplitFace f8 f2 f4 f0 f6 csplitFace f9 f3 f5 f1 f7
- |- ((_10385584 = _10385585) ==> ((SND _10385584) = (SND _10385585)))
T c==> c= f0 f1 c= cSND f0 cSND f1
- (~ F), (~ (SND f2')), (SND f2), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ cSND f0 c==> cSND f1 c==> c= cthe f2 f3 c==> c= cupt ccountVertices f4 c+ ccountVertices f4 f5 f6 c==> c/\ c= f7 f8 c= f0 f1 c==> c/\ c= cFST csplit_face f9 f10 f3 f6 f7 c= cSND csplit_face f9 f10 f3 f6 f0 c/\ c~ cF cF
- (_10385164 = _10385169), (_10385165 = _10385170), (_10385166 = _10385171) |- ((~ (_10385163 = _10385168)) \/ ((~ (_10385162 = _10385167)) \/ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csubdivFace0_alt f8 f6 f0 f2 f4 csubdivFace0_alt f9 f7 f1 f3 f5
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= ! ! c==> c/\ cMEM f1 cfaces f2 c~ cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 b0 b1 f0 cT
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws)))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c? / c? / c= c, f1 c, b0 b1 csplitFace f2 f3 f4 f5 f6 c==> c~ cSND f5 c==> c= f4 cthe f7 c==> c= f6 cupt ccountVertices f2 c+ ccountVertices f2 f8 c==> cMEM f5 cfaces f2 c= cfinals f2 cfinals cSND cCOND c= f7 cNONE csubdivFace0_alt f2 f5 f3 cSUC f8 f0 cCOND c/\ c= cnextVertex f5 f3 f4 c= f8 cNUMERAL c_0 csubdivFace0_alt f2 f5 f4 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f5 f6
- (_10385164 = _10385169), (_10385166 = _10385171) |- ((_10385164 = _10385169) /\ ((~ (_10385165 = _10385170)) \/ ((~ (_10385163 = _10385168)) \/ ((~ (_10385162 = _10385167)) \/ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csubdivFace0_alt f8 f6 f0 f4 f2 csubdivFace0_alt f9 f7 f1 f5 f3
- (_10385164 = _10385169), (_10385166 = _10385171) |- ((~ (_10385165 = _10385170)) \/ ((~ (_10385163 = _10385168)) \/ ((~ (_10385162 = _10385167)) \/ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csubdivFace0_alt f8 f6 f0 f4 f2 csubdivFace0_alt f9 f7 f1 f5 f3
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (!g. (!f. (!u. (!n. (((~ ((MEM f) (faces g))) \/ (SND f)) \/ ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! ! ! c\/ c\/ c~ cMEM b1 cfaces b0 cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ (h = NONE)) = (~ (h = NONE)))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= c~ c= f3 cNONE c~ c= f3 cNONE
- (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((SND (((((splitFace g) u) v) f) ((upt (countVertices g)) ((countVertices g) + n)))) = ((SND ((((split_face f) u) v) ((upt (countVertices g)) ((countVertices g) + n)))) , g'))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c==> c/\ c= f3 f4 c= f5 f6 c==> c/\ c= cFST csplitFace f0 f7 f8 f9 f2 f4 c= cSND csplitFace f0 f7 f8 f9 f2 c, f6 f10 c==> c/\ c= cFST csplit_face f9 f7 f8 f2 f3 c= cSND csplit_face f9 f7 f8 f2 f5 c= cSND csplitFace f0 f7 f8 f9 cupt ccountVertices f0 c+ ccountVertices f0 f1 c, cSND csplit_face f9 f7 f8 cupt ccountVertices f0 c+ ccountVertices f0 f1 f10
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((f1' = f1) = (f1' = (FST (((((splitFace g) u) v) f) ws))))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= c= f8 f5 c= f8 cFST csplitFace f0 f1 f2 f3 f4
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((~ (n = (NUMERAL _0))) = (~ (n = (NUMERAL _0))))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= c~ c= f8 cNUMERAL c_0 c~ c= f8 cNUMERAL c_0
- ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)) |- (f1' = f1)
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= csplit_face f2 f3 f4 f5 c, f6 f7 c= f0 f6
- |- ((~ (_10385579 = _10385583)) \/ ((~ (_10385577 = _10385581)) \/ ((~ (_10385578 = _10385582)) \/ ((~ (_10385576 = _10385580)) \/ (((((split_face _10385576) _10385577) _10385578) _10385579) = ((((split_face _10385580) _10385581) _10385582) _10385583))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= csplit_face f6 f2 f4 f0 csplit_face f7 f3 f5 f1
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (!n. (((~ ((MEM _10384918) (faces _10384917))) \/ (SND _10384918)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) n) t))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! c\/ c\/ c~ cMEM f1 cfaces f2 cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 b0 f0
- ((f1' = f1) /\ (f2' = f2)) |- (((the h) = v) = ((the h) = v))
T c==> c/\ c= f0 f1 c= f2 f3 c= c= cthe f4 f5 c= cthe f4 f5
- (~ (SND f)) |- ((SND f) ==> (~ (SND f)))
T c==> c~ cSND f0 c==> cSND f0 c~ cSND f0
- (h = NONE) |- ((h = NONE) = T)
T c==> c= f0 cNONE c= c= f0 cNONE cT
- ((FST (((((splitFace g) u) v) f) ws)) = f1) |- (F = F)
T c==> c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cF cF
- (_10385572 = _10385574), (_10385573 = _10385575) |- ((_10385573 = _10385575) /\ (((upt _10385572) _10385573) = ((upt _10385574) _10385575)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cupt f0 f2 cupt f1 f3
- (_10385163 = _10385168), (_10385164 = _10385169), (_10385165 = _10385170), (_10385166 = _10385171) |- ((_10385162 = _10385167) ==> ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c= csubdivFace0_alt f8 f0 f2 f4 f6 csubdivFace0_alt f9 f1 f3 f5 f7
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (f1' = (FST (((((splitFace g) u) v) f) ws)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= f0 cFST csplitFace f4 f5 f6 f7 f8
- (_10385564 = _10385565) |- ((_10385564 = _10385565) /\ ((the _10385564) = (the _10385565)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cthe f0 cthe f1
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= cMEM f7 cfaces f4 cMEM f7 cfaces f4
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- (F = F)
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= cF cF
- ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)) |- ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= cSND csplitFace f3 f4 f5 f6 f7 c, f1 f2
- (_10385553 = _10385558), (_10385556 = _10385561) |- ((~ (_10385554 = _10385559)) \/ ((~ (_10385555 = _10385560)) \/ ((~ (_10385552 = _10385557)) \/ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplitFace f8 f0 f4 f6 f2 csplitFace f9 f1 f5 f7 f3
- |- ((_10385564 = _10385565) ==> ((the _10385564) = (the _10385565)))
T c==> c= f0 f1 c= cthe f0 cthe f1
- (_10385539 = _10385541) |- ((_10385539 = _10385541) /\ ((~ (_10385538 = _10385540)) \/ (((MEM _10385540) _10385541) \/ (~ ((MEM _10385538) _10385539)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cMEM f3 f1 c~ cMEM f2 f0
- |- ((~ (_10385166 = _10385171)) \/ ((~ (_10385164 = _10385169)) \/ ((~ (_10385165 = _10385170)) \/ ((~ (_10385163 = _10385168)) \/ ((~ (_10385162 = _10385167)) \/ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171)))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csubdivFace0_alt f8 f6 f2 f4 f0 csubdivFace0_alt f9 f7 f3 f5 f1
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- (((the h) = v) = ((the h) = v))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c= cthe f6 f4 c= cthe f6 f4
- ((f1' = f1) /\ (f2' = f2)) |- (F = F)
T c==> c/\ c= f0 f1 c= f2 f3 c= cF cF
- ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- (((SND (((((splitFace g) u) v) f) ws)) = (f2 , g')) = ((SND (((((splitFace g) u) v) f) ws)) = ((SND ((((split_face f) u) v) ws)) , g')))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f0 c= cSND csplit_face f4 f5 f6 f7 f2 c= c= cSND csplitFace f8 f5 f6 f4 f7 c, f3 f9 c= cSND csplitFace f8 f5 f6 f4 f7 c, cSND csplit_face f4 f5 f6 f7 f9
- (((MEM f) (faces g)) /\ (~ (SND f))) |- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))
T c==> c/\ cMEM f0 cfaces f1 c~ cSND f0 c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f2 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 f0 f3 f4 f2
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= c==> c/\ cMEM f1 cfaces f2 c~ cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 f4 f0 cT
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- (((FST (((((splitFace g) u) v) f) ws)) = f1) = ((FST (((((splitFace g) u) v) f) ws)) = f1))
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= c= cFST csplitFace f0 f1 f2 f3 f4 f6 c= cFST csplitFace f0 f1 f2 f3 f4 f6
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- ((SND ((((split_face f) u) v) ws)) = f2')
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= cSND csplit_face f2 f3 f4 f5 f1
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((\g. (!f. (!u. (!n. (((~ ((MEM f) (faces g))) \/ (SND f)) \/ ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) _10384917)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 * / ! ! ! c\/ c\/ c~ cMEM b1 cfaces b0 cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 f1
- (_10385555 = _10385560), (_10385553 = _10385558), (_10385554 = _10385559), (_10385556 = _10385561) |- ((_10385552 = _10385557) ==> ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c= csplitFace f8 f2 f4 f0 f6 csplitFace f9 f3 f5 f1 f7
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (f1 = (FST (((((splitFace g) u) v) f) ws)))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= f5 cFST csplitFace f0 f1 f2 f3 f4
- ((FST (((((splitFace g) u) v) f) ws)) = f1) |- ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))) = (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))))
T c==> c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= c~ c= cfinals f0 cfinals cSND cSND csplitFace f0 f1 f2 f3 f4 c~ c= cfinals f0 cfinals cSND cSND csplitFace f0 f1 f2 f3 f4
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((~ ((MEM _10384918) (faces _10384917))) \/ ((SND _10384918) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) _10384920) t))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c\/ c~ cMEM f1 cfaces f2 c\/ cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 f4 f0
- (_10385553 = _10385558), (_10385556 = _10385561) |- ((_10385553 = _10385558) /\ ((~ (_10385554 = _10385559)) \/ ((~ (_10385555 = _10385560)) \/ ((~ (_10385552 = _10385557)) \/ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplitFace f8 f0 f4 f6 f2 csplitFace f9 f1 f5 f7 f3
- ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)) |- ((((upt (countVertices g)) ((countVertices g) + n)) = ws) = (((upt (countVertices g)) ((countVertices g) + n)) = ws))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= c= cupt ccountVertices f3 c+ ccountVertices f3 f8 f7 c= cupt ccountVertices f3 c+ ccountVertices f3 f8 f7
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= cMEM f3 cfaces f0 cMEM f3 cfaces f0
- (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))), (~ (SND f)) |- ((~ ((finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))) = (finals g))) ==> ((finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))) = (finals g)))
T c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 c==> c~ cSND f0 c==> c~ c= cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4 cfinals f1 c= cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4 cfinals f1
- (_10385538 = _10385540), (_10385539 = _10385541) |- (((((MEM _10385538) _10385539) = ((MEM _10385540) _10385541)) ==> (((MEM _10385540) _10385541) \/ (~ ((MEM _10385538) _10385539)))) = (((MEM _10385540) _10385541) \/ (~ ((MEM _10385538) _10385539))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cMEM f0 f2 cMEM f1 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2 c\/ cMEM f1 f3 c~ cMEM f0 f2
- (_10385577 = _10385581), (_10385579 = _10385583) |- ((_10385577 = _10385581) /\ ((~ (_10385578 = _10385582)) \/ ((~ (_10385576 = _10385580)) \/ (((((split_face _10385576) _10385577) _10385578) _10385579) = ((((split_face _10385580) _10385581) _10385582) _10385583)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= csplit_face f6 f0 f4 f2 csplit_face f7 f1 f5 f3
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- ((~ (h = NONE)) = (~ (h = NONE)))
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= c~ c= f6 cNONE c~ c= f6 cNONE
- ((FST (((((splitFace g) u) v) f) ws)) = f1) |- ((~ (n = (NUMERAL _0))) = (~ (n = (NUMERAL _0))))
T c==> c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= c~ c= f6 cNUMERAL c_0 c~ c= f6 cNUMERAL c_0
- (_10385546 = _10385548) |- ((_10385546 = _10385548) /\ ((~ (_10385547 = _10385549)) \/ ((_10385546 , _10385547) = (_10385548 , _10385549))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- ((f1' = f1) /\ (f2' = f2)) |- ((f1' = (FST (((((splitFace g) u) v) f) ws))) = (f1' = (FST (((((splitFace g) u) v) f) ws))))
T c==> c/\ c= f0 f1 c= f2 f3 c= c= f0 cFST csplitFace f4 f5 f6 f7 f8 c= f0 cFST csplitFace f4 f5 f6 f7 f8
- (_10385538 = _10385540), (_10385539 = _10385541) |- (((MEM _10385540) _10385541) \/ (~ ((MEM _10385538) _10385539)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- (((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))) = ((((((splitFace g) u) v) f) ws) = (f1 , (f2 , g'))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c= csplitFace f6 f3 f4 f2 f5 c, f7 c, f8 f9 c= csplitFace f6 f3 f4 f2 f5 c, f7 c, f8 f9
- |- ((~ (_10385566 = _10385567)) \/ ((countVertices _10385566) = (countVertices _10385567)))
T c\/ c~ c= f0 f1 c= ccountVertices f0 ccountVertices f1
- (_10385579 = _10385583) |- ((_10385577 = _10385581) ==> ((~ (_10385578 = _10385582)) \/ ((~ (_10385576 = _10385580)) \/ (((((split_face _10385576) _10385577) _10385578) _10385579) = ((((split_face _10385580) _10385581) _10385582) _10385583)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= csplit_face f6 f2 f4 f0 csplit_face f7 f3 f5 f1
- (_10385566 = _10385567) |- ((_10385566 = _10385567) /\ ((countVertices _10385566) = (countVertices _10385567)))
T c==> c= f0 f1 c/\ c= f0 f1 c= ccountVertices f0 ccountVertices f1
- (~ (SND f)), (~ (SND f2')), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), (SND f2), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- F
T c==> c~ cSND f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f3 f4 c= f5 cNUMERAL c_0 c==> cSND f6 c==> c= c, f7 c, f6 f8 csplitFace f9 f3 f4 f0 f10 c==> c= c, f11 f1 csplit_face f0 f3 f4 f10 c==> c= csplit_face f0 f3 f4 f10 c, f7 f6 c==> c= f4 cthe f2 c==> c= f10 cupt ccountVertices f9 c+ ccountVertices f9 f5 c==> cMEM f0 cfaces f9 cF
- (_10385164 = _10385169), (_10385165 = _10385170), (_10385166 = _10385171) |- ((_10385165 = _10385170) /\ ((~ (_10385163 = _10385168)) \/ ((~ (_10385162 = _10385167)) \/ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csubdivFace0_alt f8 f6 f0 f2 f4 csubdivFace0_alt f9 f7 f1 f3 f5
- (_10385577 = _10385581), (_10385578 = _10385582), (_10385579 = _10385583) |- ((_10385576 = _10385580) ==> (((((split_face _10385576) _10385577) _10385578) _10385579) = ((((split_face _10385580) _10385581) _10385582) _10385583)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c= csplit_face f6 f0 f2 f4 csplit_face f7 f1 f3 f5
- ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((~ (h = NONE)) = (~ (h = NONE)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f0 c= cSND csplit_face f4 f5 f6 f7 f2 c= c~ c= f8 cNONE c~ c= f8 cNONE
- (~ (SND f)), (SND f) |- ((SND f) /\ (~ (SND f)))
T c==> c~ cSND f0 c==> cSND f0 c/\ cSND f0 c~ cSND f0
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- ((~ (((nextVertex f) u) = v)) = (~ (((nextVertex f) u) = v)))
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= c~ c= cnextVertex f3 f1 f2 c~ c= cnextVertex f3 f1 f2
- |- ((_10385566 = _10385567) ==> ((countVertices _10385566) = (countVertices _10385567)))
T c==> c= f0 f1 c= ccountVertices f0 ccountVertices f1
- (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (((FST ((((split_face f) u) v) ws)) = (FST (((((splitFace g) u) v) f) ws))) = ((FST ((((split_face f) u) v) ((upt (countVertices g)) ((countVertices g) + n)))) = (FST (((((splitFace g) u) v) f) ((upt (countVertices g)) ((countVertices g) + n))))))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= c= cFST csplit_face f3 f4 f5 f2 cFST csplitFace f0 f4 f5 f3 f2 c= cFST csplit_face f3 f4 f5 cupt ccountVertices f0 c+ ccountVertices f0 f1 cFST csplitFace f0 f4 f5 f3 cupt ccountVertices f0 c+ ccountVertices f0 f1
- |- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) ==> (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0
- ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- (F = F)
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f0 c= cSND csplit_face f4 f5 f6 f7 f2 c= cF cF
- ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f0 c= cSND csplit_face f4 f5 f6 f7 f2 c= cMEM f4 cfaces f8 cMEM f4 cfaces f8
- ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws), ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))) = ((SND ((((split_face f) u) (the h)) ((upt (countVertices g)) ((countVertices g) + n)))) , g'))
T c==> c= cthe f0 f1 c==> c= cupt ccountVertices f2 c+ ccountVertices f2 f3 f4 c==> c/\ c= f5 f6 c= f7 f8 c==> c/\ c= cFST csplitFace f2 f9 f1 f10 f4 f6 c= cSND csplitFace f2 f9 f1 f10 f4 c, f8 f11 c==> c/\ c= cFST csplit_face f10 f9 f1 f4 f5 c= cSND csplit_face f10 f9 f1 f4 f7 c= cSND csplitFace f2 f9 cthe f0 f10 cupt ccountVertices f2 c+ ccountVertices f2 f3 c, cSND csplit_face f10 f9 cthe f0 cupt ccountVertices f2 c+ ccountVertices f2 f3 f11
- |- ((_10385174 = _10385175) ==> ((finals _10385174) = (finals _10385175)))
T c==> c= f0 f1 c= cfinals f0 cfinals f1
- (_10385163 = _10385168), (_10385164 = _10385169), (_10385165 = _10385170), (_10385166 = _10385171) |- ((_10385163 = _10385168) /\ ((~ (_10385162 = _10385167)) \/ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f0 f1 c\/ c~ c= f8 f9 c= csubdivFace0_alt f8 f0 f2 f4 f6 csubdivFace0_alt f9 f1 f3 f5 f7
- (_10385166 = _10385171) |- ((_10385166 = _10385171) /\ ((~ (_10385164 = _10385169)) \/ ((~ (_10385165 = _10385170)) \/ ((~ (_10385163 = _10385168)) \/ ((~ (_10385162 = _10385167)) \/ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171)))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csubdivFace0_alt f8 f6 f2 f4 f0 csubdivFace0_alt f9 f7 f3 f5 f1
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- (((the h) = v) = ((the h) = v))
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= c= cthe f6 f2 c= cthe f6 f2
- (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) = (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c= ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f3 ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f3
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))), (~ (SND f)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) /\ ((finals g) = (finals (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) t)) (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c? / c? / c= c, f1 c, b0 b1 csplitFace f2 f3 f4 f5 f6 c==> c~ cSND f5 c==> c= f4 cthe f7 c==> c= f6 cupt ccountVertices f2 c+ ccountVertices f2 f8 c==> cMEM f5 cfaces f2 c/\ c? / c? / c= c, f1 c, b0 b1 csplitFace f2 f3 f4 f5 f6 c= cfinals f2 cfinals cSND cCOND c= f7 cNONE csubdivFace0_alt f2 f5 f3 cSUC f8 f0 cCOND c/\ c= cnextVertex f5 f3 f4 c= f8 cNUMERAL c_0 csubdivFace0_alt f2 f5 f4 cNUMERAL c_0 f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f5 f6
- |- ((~ (_10385568 = _10385570)) \/ ((~ (_10385569 = _10385571)) \/ ((_10385568 + _10385569) = (_10385570 + _10385571))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c+ f0 f2 c+ f1 f3
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (((the h) = v) = ((the h) = v))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= c= cthe f10 f6 c= cthe f10 f6
- (~ (((nextVertex f) u) = v)), ((the h) = v) |- (~ (((nextVertex f) u) = (the h)))
T c==> c~ c= cnextVertex f0 f1 f2 c==> c= cthe f3 f2 c~ c= cnextVertex f0 f1 cthe f3
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (((SND (((((splitFace g) u) v) f) ws)) = (f2 , g')) = ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g')))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9
- ((f1' = f1) /\ (f2' = f2)) |- ((~ (SND f)) = (~ (SND f)))
T c==> c/\ c= f0 f1 c= f2 f3 c= c~ cSND f4 c~ cSND f4
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((\f. (!u. (!n. (((~ ((MEM f) (faces _10384917))) \/ (SND f)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) f) u) n) t)))))))) _10384918)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 * / ! ! c\/ c\/ c~ cMEM b0 cfaces f1 cSND b0 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 b0 b1 b2 f0 f2
- |- ((!g'. (P g')) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)) |- (((the h) = v) = ((the h) = v))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= c= cthe f8 f5 c= cthe f8 f5
- ((f1' = f1) /\ (f2' = f2)) |- (((FST ((((split_face f) u) v) ws)) = f1') = ((FST ((((split_face f) u) v) ws)) = f1'))
T c==> c/\ c= f0 f1 c= f2 f3 c= c= cFST csplit_face f4 f5 f6 f7 f0 c= cFST csplit_face f4 f5 f6 f7 f0
- (_10385579 = _10385583) |- ((_10385579 = _10385583) /\ ((~ (_10385577 = _10385581)) \/ ((~ (_10385578 = _10385582)) \/ ((~ (_10385576 = _10385580)) \/ (((((split_face _10385576) _10385577) _10385578) _10385579) = ((((split_face _10385580) _10385581) _10385582) _10385583))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= csplit_face f6 f2 f4 f0 csplit_face f7 f3 f5 f1
- (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= cMEM f3 cfaces f0 cMEM f3 cfaces f0
- (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (((SND (((((splitFace g) u) v) f) ws)) = ((SND ((((split_face f) u) v) ws)) , g')) = ((SND (((((splitFace g) u) v) f) ((upt (countVertices g)) ((countVertices g) + n)))) = ((SND ((((split_face f) u) v) ((upt (countVertices g)) ((countVertices g) + n)))) , g')))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= c= cSND csplitFace f0 f3 f4 f5 f2 c, cSND csplit_face f5 f3 f4 f2 f6 c= cSND csplitFace f0 f3 f4 f5 cupt ccountVertices f0 c+ ccountVertices f0 f1 c, cSND csplit_face f5 f3 f4 cupt ccountVertices f0 c+ ccountVertices f0 f1 f6
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (_10385584 = _10385585)) \/ ((SND _10385584) = (SND _10385585)))
T c\/ c~ c= f0 f1 c= cSND f0 cSND f1
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- ((~ (SND f)) = (~ (SND f)))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c~ cSND f2 c~ cSND f2
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- ((((upt (countVertices g)) ((countVertices g) + n)) = ws) = (((upt (countVertices g)) ((countVertices g) + n)) = ws))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c= cupt ccountVertices f6 c+ ccountVertices f6 f7 f5 c= cupt ccountVertices f6 c+ ccountVertices f6 f7 f5
- (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- (((the h) = v) = ((the h) = v))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c= c= cthe f3 f4 c= cthe f3 f4
- (_10385162 = _10385167), (_10385163 = _10385168), (_10385164 = _10385169), (_10385165 = _10385170), (_10385166 = _10385171) |- ((_10385162 = _10385167) /\ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c/\ c= f0 f1 c= csubdivFace0_alt f0 f2 f4 f6 f8 csubdivFace0_alt f1 f3 f5 f7 f9
- (_10385174 = _10385175) |- ((_10385174 = _10385175) /\ ((finals _10385174) = (finals _10385175)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cfinals f0 cfinals f1
- (_10385552 = _10385557), (_10385555 = _10385560), (_10385553 = _10385558), (_10385554 = _10385559), (_10385556 = _10385561) |- ((_10385552 = _10385557) /\ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c/\ c= f0 f1 c= csplitFace f0 f4 f6 f2 f8 csplitFace f1 f5 f7 f3 f9
- (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))), (~ (SND f)), (~ ((finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))) = (finals g))) |- ((~ ((finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))) = (finals g))) /\ ((finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))) = (finals g)))
T c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 c==> c~ cSND f0 c==> c~ c= cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4 cfinals f1 c/\ c~ c= cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4 cfinals f1 c= cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4 cfinals f1
- (_10385562 = _10385563) |- ((_10385562 = _10385563) /\ ((FST _10385562) = (FST _10385563)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cFST f0 cFST f1
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((~ (h = NONE)) = (~ (h = NONE)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= c~ c= f10 cNONE c~ c= f10 cNONE
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (!f. (!u. (!n. (((~ ((MEM f) (faces _10384917))) \/ (SND f)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) f) u) n) t))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! ! c\/ c\/ c~ cMEM b0 cfaces f1 cSND b0 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 b0 b1 b2 f0
- ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= cMEM f6 cfaces f3 cMEM f6 cfaces f3
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (((!u. (!n. (((~ ((MEM _10384918) (faces _10384917))) \/ (SND _10384918)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) u) n) t))))))) ==> ((\u. (!n. (((~ ((MEM _10384918) (faces _10384917))) \/ (SND _10384918)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) u) n) t))))))) _10384919)) = ((\u. (!n. (((~ ((MEM _10384918) (faces _10384917))) \/ (SND _10384918)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) u) n) t))))))) _10384919))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= c==> ! ! c\/ c\/ c~ cMEM f1 cfaces f2 cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 b0 b1 f0 * / ! c\/ c\/ c~ cMEM f1 cfaces f2 cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 b0 b1 f0 f3 * / ! c\/ c\/ c~ cMEM f1 cfaces f2 cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 b0 b1 f0 f3
- (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))), (~ (SND f)), (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))))) |- ((~ ((finals g) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))))) /\ ((finals g) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n))))))))
T c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 c==> c~ cSND f0 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4 c/\ c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4 c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 cthe f3 f0 cupt ccountVertices f1 c+ ccountVertices f1 f4
- (_10385577 = _10385581), (_10385579 = _10385583) |- ((~ (_10385578 = _10385582)) \/ ((~ (_10385576 = _10385580)) \/ (((((split_face _10385576) _10385577) _10385578) _10385579) = ((((split_face _10385580) _10385581) _10385582) _10385583))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= csplit_face f6 f0 f4 f2 csplit_face f7 f1 f5 f3
- (_10385553 = _10385558), (_10385554 = _10385559), (_10385556 = _10385561) |- ((_10385554 = _10385559) /\ ((~ (_10385555 = _10385560)) \/ ((~ (_10385552 = _10385557)) \/ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplitFace f8 f0 f2 f6 f4 csplitFace f9 f1 f3 f7 f5
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))), (((MEM f) (faces g)) /\ (~ (SND f))) |- ((((MEM f) (faces g)) /\ (~ (SND f))) /\ ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c/\ cMEM f1 cfaces f2 c~ cSND f1 c/\ c/\ cMEM f1 cfaces f2 c~ cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 f4 f0
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t)))))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= ! ! ! c==> c/\ cMEM b0 cfaces f1 c~ cSND b0 c= cfinals f1 cfinals cSND csubdivFace0_alt f1 b0 b1 b2 f0 cT
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- ((FST ((((split_face f) u) v) ws)) = f1')
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= cFST csplit_face f2 f3 f4 f5 f0
- |- ((_10385166 = _10385171) ==> ((~ (_10385164 = _10385169)) \/ ((~ (_10385165 = _10385170)) \/ ((~ (_10385163 = _10385168)) \/ ((~ (_10385162 = _10385167)) \/ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171)))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csubdivFace0_alt f8 f6 f2 f4 f0 csubdivFace0_alt f9 f7 f3 f5 f1
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- ((~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) = (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c~ c/\ c= cnextVertex f2 f3 f4 c= f6 cNUMERAL c_0 c~ c/\ c= cnextVertex f2 f3 f4 c= f6 cNUMERAL c_0
- ((FST (((((splitFace g) u) v) f) ws)) = f1) |- (f1 = (FST (((((splitFace g) u) v) f) ws)))
T c==> c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= f5 cFST csplitFace f0 f1 f2 f3 f4
- ((FST (((((splitFace g) u) v) f) ws)) = f1) |- ((~ (((nextVertex f) u) = v)) = (~ (((nextVertex f) u) = v)))
T c==> c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= c~ c= cnextVertex f3 f1 f2 c~ c= cnextVertex f3 f1 f2
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= cMEM f2 cfaces f6 cMEM f2 cfaces f6
- ((f1' = f1) /\ (f2' = f2)) |- ((~ (n = (NUMERAL _0))) = (~ (n = (NUMERAL _0))))
T c==> c/\ c= f0 f1 c= f2 f3 c= c~ c= f4 cNUMERAL c_0 c~ c= f4 cNUMERAL c_0
- |- ((~ ((finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))))) ==> ((finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n))))))))
T c==> c~ c= cfinals cSND cSND csplitFace f0 f1 cthe f2 f3 cupt ccountVertices f0 c+ ccountVertices f0 f4 cfinals cSND cSND csplitFace f0 f1 cthe f2 f3 cupt ccountVertices f0 c+ ccountVertices f0 f4 c= cfinals cSND cSND csplitFace f0 f1 cthe f2 f3 cupt ccountVertices f0 c+ ccountVertices f0 f4 cfinals cSND cSND csplitFace f0 f1 cthe f2 f3 cupt ccountVertices f0 c+ ccountVertices f0 f4
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((~ (h = NONE)) = (~ (h = NONE)))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= c~ c= f8 cNONE c~ c= f8 cNONE
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((~ (n = (NUMERAL _0))) = (~ (n = (NUMERAL _0))))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c= c~ c= f10 cNUMERAL c_0 c~ c= f10 cNUMERAL c_0
- (_10385164 = _10385169), (_10385166 = _10385171) |- ((_10385165 = _10385170) ==> ((~ (_10385163 = _10385168)) \/ ((~ (_10385162 = _10385167)) \/ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csubdivFace0_alt f8 f6 f0 f4 f2 csubdivFace0_alt f9 f7 f1 f5 f3
- (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ (n = (NUMERAL _0))) = (~ (n = (NUMERAL _0))))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= c~ c= f1 cNUMERAL c_0 c~ c= f1 cNUMERAL c_0
- (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c= cMEM f3 cfaces f1 cMEM f3 cfaces f1
- |- ((T /\ t) = t)
T c= c/\ cT f0 f0
- ((f1' = f1) /\ (f2' = f2)) |- ((~ (h = NONE)) = (~ (h = NONE)))
T c==> c/\ c= f0 f1 c= f2 f3 c= c~ c= f4 cNONE c~ c= f4 cNONE
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- (((!n. (((~ ((MEM _10384918) (faces _10384917))) \/ (SND _10384918)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) n) t)))))) ==> ((\n. (((~ ((MEM _10384918) (faces _10384917))) \/ (SND _10384918)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) n) t)))))) _10384920)) = ((\n. (((~ ((MEM _10384918) (faces _10384917))) \/ (SND _10384918)) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) n) t)))))) _10384920))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= c==> ! c\/ c\/ c~ cMEM f1 cfaces f2 cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 b0 f0 * / c\/ c\/ c~ cMEM f1 cfaces f2 cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 b0 f0 f4 * / c\/ c\/ c~ cMEM f1 cfaces f2 cSND f1 c= cfinals f2 cfinals cSND csubdivFace0_alt f2 f1 f3 b0 f0 f4
- (_10385577 = _10385581), (_10385578 = _10385582), (_10385579 = _10385583) |- ((~ (_10385576 = _10385580)) \/ (((((split_face _10385576) _10385577) _10385578) _10385579) = ((((split_face _10385580) _10385581) _10385582) _10385583)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c= csplit_face f6 f0 f2 f4 csplit_face f7 f1 f3 f5
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (((SND ((((split_face f) u) v) ws)) = f2') = ((SND ((((split_face f) u) v) ws)) = f2'))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= c= cSND csplit_face f3 f1 f2 f4 f8 c= cSND csplit_face f3 f1 f2 f4 f8
- (~ (SND f)), (~ (SND f2')), (~ (h = NONE)), (~ ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))), (SND f2), ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)), ((f1' , f2') = ((((split_face f) u) v) ws)), (((((split_face f) u) v) ws) = (f1 , f2)), (v = (the h)), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((SND f2) /\ F)
T c==> c~ cSND f0 c==> c~ cSND f1 c==> c~ c= f2 cNONE c==> c~ c/\ c= cnextVertex f0 f3 f4 c= f5 cNUMERAL c_0 c==> cSND f6 c==> c= c, f7 c, f6 f8 csplitFace f9 f3 f4 f0 f10 c==> c= c, f11 f1 csplit_face f0 f3 f4 f10 c==> c= csplit_face f0 f3 f4 f10 c, f7 f6 c==> c= f4 cthe f2 c==> c= f10 cupt ccountVertices f9 c+ ccountVertices f9 f5 c==> cMEM f0 cfaces f9 c/\ cSND f6 cF
- ((f1' = f1) /\ (f2' = f2)) |- ((~ (((nextVertex f) u) = v)) = (~ (((nextVertex f) u) = v)))
T c==> c/\ c= f0 f1 c= f2 f3 c= c~ c= cnextVertex f4 f5 f6 c~ c= cnextVertex f4 f5 f6
- |- ((~ (_10385562 = _10385563)) \/ ((FST _10385562) = (FST _10385563)))
T c\/ c~ c= f0 f1 c= cFST f0 cFST f1
- ((FST (((((splitFace g) u) v) f) ws)) = f1) |- ((~ (SND f)) = (~ (SND f)))
T c==> c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= c~ cSND f3 c~ cSND f3
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((~ (SND f2')) = (~ (SND f2')))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= c~ cSND f8 c~ cSND f8
- (~ ((finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))))) |- ((~ ((finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))))) /\ ((finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n)))))) = (finals (SND (SND (((((splitFace g) u) (the h)) f) ((upt (countVertices g)) ((countVertices g) + n))))))))
T c==> c~ c= cfinals cSND cSND csplitFace f0 f1 cthe f2 f3 cupt ccountVertices f0 c+ ccountVertices f0 f4 cfinals cSND cSND csplitFace f0 f1 cthe f2 f3 cupt ccountVertices f0 c+ ccountVertices f0 f4 c/\ c~ c= cfinals cSND cSND csplitFace f0 f1 cthe f2 f3 cupt ccountVertices f0 c+ ccountVertices f0 f4 cfinals cSND cSND csplitFace f0 f1 cthe f2 f3 cupt ccountVertices f0 c+ ccountVertices f0 f4 c= cfinals cSND cSND csplitFace f0 f1 cthe f2 f3 cupt ccountVertices f0 c+ ccountVertices f0 f4 cfinals cSND cSND csplitFace f0 f1 cthe f2 f3 cupt ccountVertices f0 c+ ccountVertices f0 f4
- |- ((~ (_10385539 = _10385541)) \/ ((~ (_10385538 = _10385540)) \/ (((MEM _10385540) _10385541) \/ (~ ((MEM _10385538) _10385539)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cMEM f3 f1 c~ cMEM f2 f0
- ((FST (SND (((((splitFace g) u) v) f) ws))) = f2) |- ((((upt (countVertices g)) ((countVertices g) + n)) = ws) = (((upt (countVertices g)) ((countVertices g) + n)) = ws))
T c==> c= cFST cSND csplitFace f0 f1 f2 f3 f4 f5 c= c= cupt ccountVertices f0 c+ ccountVertices f0 f6 f4 c= cupt ccountVertices f0 c+ ccountVertices f0 f6 f4
- (_10385546 = _10385548) |- ((_10385547 = _10385549) ==> ((_10385546 , _10385547) = (_10385548 , _10385549)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((SND (((((splitFace g) u) v) f) ws)) = ((SND ((((split_face f) u) v) ws)) , g'))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c==> c/\ c= cFST csplit_face f7 f5 f6 f8 f0 c= cSND csplit_face f7 f5 f6 f8 f2 c= cSND csplitFace f4 f5 f6 f7 f8 c, cSND csplit_face f7 f5 f6 f8 f9
- |- ((_10385562 = _10385563) ==> ((FST _10385562) = (FST _10385563)))
T c==> c= f0 f1 c= cFST f0 cFST f1
- ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- (((the h) = v) = ((the h) = v))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f0 c= cSND csplit_face f4 f5 f6 f7 f2 c= c= cthe f8 f6 c= cthe f8 f6
- |- ((~ (_10385564 = _10385565)) \/ ((the _10385564) = (the _10385565)))
T c\/ c~ c= f0 f1 c= cthe f0 cthe f1
- (_10385164 = _10385169), (_10385165 = _10385170), (_10385166 = _10385171) |- ((_10385163 = _10385168) ==> ((~ (_10385162 = _10385167)) \/ ((((((subdivFace0_alt _10385162) _10385163) _10385164) _10385165) _10385166) = (((((subdivFace0_alt _10385167) _10385168) _10385169) _10385170) _10385171))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c= csubdivFace0_alt f8 f6 f0 f2 f4 csubdivFace0_alt f9 f7 f1 f3 f5
- ((the h) = v) |- ((~ (((nextVertex f) u) = v)) = (~ (((nextVertex f) u) = (the h))))
T c==> c= cthe f0 f1 c= c~ c= cnextVertex f2 f3 f1 c~ c= cnextVertex f2 f3 cthe f0
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- ((~ (((nextVertex f) u) = v)) = (~ (((nextVertex f) u) = v)))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= c~ c= cnextVertex f3 f1 f2 c~ c= cnextVertex f3 f1 f2
- ((f1' = f1) /\ (f2' = f2)), (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((FST ((((split_face f) u) v) ws)) = (FST (((((splitFace g) u) v) f) ws)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplitFace f4 f5 f6 f7 f8 f1 c= cSND csplitFace f4 f5 f6 f7 f8 c, f3 f9 c==> c/\ c= cFST csplit_face f7 f5 f6 f8 f0 c= cSND csplit_face f7 f5 f6 f8 f2 c= cFST csplit_face f7 f5 f6 f8 cFST csplitFace f4 f5 f6 f7 f8
- (_10385555 = _10385560), (_10385553 = _10385558), (_10385554 = _10385559), (_10385556 = _10385561) |- ((~ (_10385552 = _10385557)) \/ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c= csplitFace f8 f2 f4 f0 f6 csplitFace f9 f3 f5 f1 f7
- (!g. (!r. (!v. (!f. (!ws. ((~ (SND f)) ==> ((finals (SND (SND (((((splitFace g) r) v) f) ws)))) = (finals g)))))))), (~ F), (~ (SND f)), (~ ((finals g) = (finals (SND (SND (((((splitFace g) u) v) f) ws)))))), ((the h) = v), (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- ((~ F) /\ F)
T c==> ! ! ! ! ! c==> c~ cSND b3 c= cfinals cSND cSND csplitFace b0 b1 b2 b3 b4 cfinals b0 c==> c~ cF c==> c~ cSND f0 c==> c~ c= cfinals f1 cfinals cSND cSND csplitFace f1 f2 f3 f0 f4 c==> c= cthe f5 f3 c==> c= cupt ccountVertices f1 c+ ccountVertices f1 f6 f4 c/\ c~ cF cF
- (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- ((~ (SND f)) = (~ (SND f)))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c= c~ cSND f3 c~ cSND f3
- (((FST (((((splitFace g) u) v) f) ws)) = f1) /\ ((SND (((((splitFace g) u) v) f) ws)) = (f2 , g'))) |- (((FST ((((split_face f) u) v) ws)) = f1') = ((FST ((((split_face f) u) v) ws)) = f1'))
T c==> c/\ c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= cSND csplitFace f0 f1 f2 f3 f4 c, f6 f7 c= c= cFST csplit_face f3 f1 f2 f4 f8 c= cFST csplit_face f3 f1 f2 f4 f8
- (((upt (countVertices g)) ((countVertices g) + n)) = ws) |- (((~ ((MEM _10384918) (faces _10384917))) \/ ((SND _10384918) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) _10384920) t)))))) = ((~ ((MEM _10384918) (faces _10384917))) \/ ((SND _10384918) \/ ((finals _10384917) = (finals (SND (((((subdivFace0_alt _10384917) _10384918) _10384919) _10384920) t)))))))
T c==> c= cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= c\/ c~ cMEM f3 cfaces f4 c\/ cSND f3 c= cfinals f4 cfinals cSND csubdivFace0_alt f4 f3 f5 f6 f7 c\/ c~ cMEM f3 cfaces f4 c\/ cSND f3 c= cfinals f4 cfinals cSND csubdivFace0_alt f4 f3 f5 f6 f7
- ((FST (((((splitFace g) u) v) f) ws)) = f1) |- (((the h) = v) = ((the h) = v))
T c==> c= cFST csplitFace f0 f1 f2 f3 f4 f5 c= c= cthe f6 f2 c= cthe f6 f2
- |- ((_10385572 = _10385574) ==> ((~ (_10385573 = _10385575)) \/ (((upt _10385572) _10385573) = ((upt _10385574) _10385575))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cupt f0 f2 cupt f1 f3
- ((f1' = f1) /\ (f2' = f2)), (((FST ((((split_face f) u) v) ws)) = f1') /\ ((SND ((((split_face f) u) v) ws)) = f2')) |- ((~ (SND f)) = (~ (SND f)))
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c= cFST csplit_face f4 f5 f6 f7 f0 c= cSND csplit_face f4 f5 f6 f7 f2 c= c~ cSND f4 c~ cSND f4
- |- ((_10385536 = _10385537) ==> ((SND _10385537) \/ (~ (SND _10385536))))
T c==> c= f0 f1 c\/ cSND f1 c~ cSND f0
- ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0))) |- (((finals g) = (finals (SND (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)))) = ((finals g) = (finals (SND (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)))))
T c==> c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= c= cfinals f4 cfinals cSND csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 c= cfinals f4 cfinals cSND csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5
- (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) |- ((!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))) /\ (!g. (!f. (!u. (!n. ((((MEM f) (faces g)) /\ (~ (SND f))) ==> ((finals g) = (finals (SND (((((subdivFace0_alt g) f) u) n) t))))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 c/\ ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! ! ! c==> c/\ cMEM b1 cfaces b0 c~ cSND b1 c= cfinals b0 cfinals cSND csubdivFace0_alt b0 b1 b2 b3 f0
- (_10385556 = _10385561) |- ((_10385553 = _10385558) ==> ((~ (_10385554 = _10385559)) \/ ((~ (_10385555 = _10385560)) \/ ((~ (_10385552 = _10385557)) \/ ((((((splitFace _10385552) _10385553) _10385554) _10385555) _10385556) = (((((splitFace _10385557) _10385558) _10385559) _10385560) _10385561))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplitFace f8 f2 f4 f6 f0 csplitFace f9 f3 f5 f7 f1
- ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)) |- ((FST (((((splitFace g) u) v) f) ws)) = f1)
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= cFST csplitFace f3 f4 f5 f6 f7 f0
