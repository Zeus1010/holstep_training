N SERIES_ADD
C |- (!x. (!x0. (!y. (!y0. (!s. (((((sums x) x0) s) /\ (((sums y) y0) s)) ==> (((sums (\n. ((vector_add (x n)) (y n)))) ((vector_add x0) y0)) s)))))))
T c==> c/\ csums f0 f1 f2 csums f3 f4 f2 csums / cvector_add * f0 b0 * f3 b0 cvector_add f1 f4 f2
D TRUTH
A |- T
T cT
D FINITE_INTER_NUMSEG
A |- (!s. (!m. (!n. (FINITE (s INTER (m .. n))))))
T cFINITE * * part cINTER f0 * * part c.. f1 f2
D VSUM_ADD
A |- (!f. (!g. (!s. ((FINITE s) ==> (((vsum s) (\x. ((vector_add (f x)) (g x)))) = ((vector_add ((vsum s) f)) ((vsum s) g)))))))
T c==> cFINITE f0 c= cvsum f0 / cvector_add * f1 b0 * f2 b0 cvector_add cvsum f0 f1 cvsum f0 f2
D LIM_ADD
A |- (!net. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net)))))))
T c==> c/\ c--> f0 f1 f2 c--> f3 f4 f2 c--> / cvector_add * f0 b0 * f3 b0 cvector_add f1 f4 f2
D sums
A |- (!s. (!f. (!l. ((((sums f) l) s) = (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) f))) l) sequentially)))))
T c= csums f0 f1 f2 c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially
+ |- (((((((sums x) x0) s) /\ (((sums y) y0) s)) = ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) /\ (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially))) ==> ((((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) /\ (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially)) ==> ((((sums (\n. ((vector_add (x n)) (y n)))) ((vector_add x0) y0)) s) = q')) ==> ((((((sums x) x0) s) /\ (((sums y) y0) s)) ==> (((sums (\n. ((vector_add (x n)) (y n)))) ((vector_add x0) y0)) s)) = (((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) /\ (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially)) ==> q')))) = ((((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) /\ (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially)) ==> ((((sums (\n. ((vector_add (x n)) (y n)))) ((vector_add x0) y0)) s) = q')) ==> ((((((sums x) x0) s) /\ (((sums y) y0) s)) ==> (((sums (\n. ((vector_add (x n)) (y n)))) ((vector_add x0) y0)) s)) = (((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) /\ (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially)) ==> q'))))
T c= c==> c= c/\ csums f0 f1 f2 csums f3 f4 f2 c/\ c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially c==> c==> c/\ c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially c= csums / cvector_add * f0 b0 * f3 b0 cvector_add f1 f4 f2 f5 c= c==> c/\ csums f0 f1 f2 csums f3 f4 f2 csums / cvector_add * f0 b0 * f3 b0 cvector_add f1 f4 f2 c==> c/\ c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially f5 c==> c==> c/\ c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially c= csums / cvector_add * f0 b0 * f3 b0 cvector_add f1 f4 f2 f5 c= c==> c/\ csums f0 f1 f2 csums f3 f4 f2 csums / cvector_add * f0 b0 * f3 b0 cvector_add f1 f4 f2 c==> c/\ c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f0 f1 csequentially c--> / cvsum * * part cINTER f2 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially f5
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) /\ (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially)) ==> ((((sums (\n. ((vector_add (x n)) (y n)))) ((vector_add x0) y0)) s) = T)) ==> ((((((sums x) x0) s) /\ (((sums y) y0) s)) ==> (((sums (\n. ((vector_add (x n)) (y n)))) ((vector_add x0) y0)) s)) = (((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) /\ (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially)) ==> T))) = ((((((sums x) x0) s) /\ (((sums y) y0) s)) ==> (((sums (\n. ((vector_add (x n)) (y n)))) ((vector_add x0) y0)) s)) = (((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) /\ (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially)) ==> T)))
T c= c==> c==> c/\ c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially c= csums / cvector_add * f1 b0 * f3 b0 cvector_add f2 f4 f0 cT c= c==> c/\ csums f1 f2 f0 csums f3 f4 f0 csums / cvector_add * f1 b0 * f3 b0 cvector_add f2 f4 f0 c==> c/\ c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially cT c= c==> c/\ csums f1 f2 f0 csums f3 f4 f0 csums / cvector_add * f1 b0 * f3 b0 cvector_add f2 f4 f0 c==> c/\ c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\s. (!m. (!n. (FINITE (s INTER (m .. n)))))) s)
T * / ! ! cFINITE * * part cINTER b0 * * part c.. b1 b2 f0
+ |- ((!s. t) = t)
T c= ! f0 f0
+ |- ((\g. (!s. ((FINITE s) ==> (((vsum s) (\x. ((vector_add (f x)) (g x)))) = ((vector_add ((vsum s) f)) ((vsum s) g)))))) g)
T * / ! c==> cFINITE b1 c= cvsum b1 / cvector_add * f0 b2 * b0 b2 cvector_add cvsum b1 f0 cvsum b1 b0 f1
+ |- (((!net. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net))))))) ==> ((\net. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net))))))) net)) = ((\net. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net))))))) net))
T c= c==> ! ! ! ! ! c==> c/\ c--> b1 b3 b0 c--> b2 b4 b0 c--> / cvector_add * b1 b5 * b2 b5 cvector_add b3 b4 b0 * / ! ! ! ! c==> c/\ c--> b1 b3 b0 c--> b2 b4 b0 c--> / cvector_add * b1 b5 * b2 b5 cvector_add b3 b4 b0 f0 * / ! ! ! ! c==> c/\ c--> b1 b3 b0 c--> b2 b4 b0 c--> / cvector_add * b1 b5 * b2 b5 cvector_add b3 b4 b0 f0
- (FINITE s) |- ((FINITE s) /\ (((vsum s) (\x. ((vector_add (f x)) (g x)))) = ((vector_add ((vsum s) f)) ((vsum s) g))))
T c==> cFINITE f0 c/\ cFINITE f0 c= cvsum f0 / cvector_add * f1 b0 * f2 b0 cvector_add cvsum f0 f1 cvsum f0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) /\ (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially)) |- (T = ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) /\ (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially)))
T c==> c/\ c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially c= cT c/\ c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially
- ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) /\ (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially)) |- ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially) = T)
T c==> c/\ c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially c= c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially cT
- |- ((T /\ t) = t)
T c= c/\ cT f0 f0
- ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) /\ (((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) y))) y0) sequentially)) |- ((((--> (\n. ((vsum (s INTER ((NUMERAL _0) .. n))) x))) x0) sequentially) = T)
T c==> c/\ c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f3 f4 csequentially c= c--> / cvsum * * part cINTER f0 * * part c.. cNUMERAL c_0 b0 f1 f2 csequentially cT
