N ARG_EQ_SUBSET_HALFLINE
C |- (!a. (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY))))))
T c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_LE
A |- ((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) /\ (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))))
T c/\ ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
D ARITH_LT
A |- ((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))))))
T c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_LT_IMP_LE
A |- (!x. (!y. (((real_lt x) y) ==> ((real_le x) y))))
T c==> creal_lt f0 f1 creal_le f0 f1
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D SUBSET_TRANS
A |- (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))))
T c==> c/\ cSUBSET f0 f1 cSUBSET f1 f2 cSUBSET f0 f2
D DIMINDEX_2
A |- ((dimindex UNIV) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cdimindex part cUNIV cNUMERAL cBIT0 cBIT1 c_0
D VECTOR_ADD_LID
A |- (!x. (((vector_add (vec (NUMERAL _0))) x) = x))
T c= cvector_add cvec cNUMERAL c_0 f0 f0
D VECTOR_MUL_RZERO
A |- (((% c) (vec (NUMERAL _0))) = (vec (NUMERAL _0)))
T c= c% f0 cvec cNUMERAL c_0 cvec cNUMERAL c_0
D BASIS_NONZERO
A |- (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (~ ((basis k) = (vec (NUMERAL _0))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c~ c= cbasis f0 cvec cNUMERAL c_0
D COMPLEX_VEC_0
A |- ((vec (NUMERAL _0)) = (Cx (real_of_num (NUMERAL _0))))
T c= cvec cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_CMUL
A |- (!c. (!x. (((% c) x) = ((complex_mul (Cx c)) x))))
T c= c% f0 f1 ccomplex_mul cCx f0 f1
D ARG_EQ
A |- (!w. (!z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((Arg w) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (w = ((complex_mul (Cx x)) z))))))))
T c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= f1 cCx creal_of_num cNUMERAL c_0 c= c= cArg f0 cArg f1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1
D HALFLINE_EXPLICIT
A |- (!x. (!y. (((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5123. (?z. (((SETSPEC GEN%PVAR%5123) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (z = ((vector_add ((% t1) x)) ((% t2) y)))))))) z)))))))
T c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f1 b1
D ENDS_IN_HALFLINE
A |- ((!x. (!y. (x IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY))))) /\ (!x. (!y. (y IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY))))))
T c/\ ! ! cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY ! ! cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)), (x = ((complex_mul (Cx u)) z)), ((real_lt (real_of_num (NUMERAL _0))) u) |- ((\t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% u) z) = ((vector_add (vec (NUMERAL _0))) ((% t2) z)))))) u)
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c= f0 ccomplex_mul cCx f3 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= c% f3 f1 cvector_add cvec cNUMERAL c_0 c% b0 f1 f3
+ (~ (z = (vec (NUMERAL _0)))) |- (((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((a = (Arg z)) ==> ((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0))))))))) = ((a = (Arg z)) ==> ((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c= f1 cArg f0 c==> c~ c= f2 cCx creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f2 ccomplex_mul cCx f3 f0 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f1 cArg f0 c==> c~ c= f2 cCx creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f2 ccomplex_mul cCx f3 f0 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- (((\x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) u) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 f3 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
- |- ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
- |- (((!n. (((BIT0 n) + _0) = (BIT0 n))) ==> ((\n. (((BIT0 n) + _0) = (BIT0 n))) n)) = ((\n. (((BIT0 n) + _0) = (BIT0 n))) n))
T c= c==> ! c= c+ cBIT0 b0 c_0 cBIT0 b0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) /\ (((basis k) = (vec (NUMERAL _0))) = F))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= cbasis f0 cvec cNUMERAL c_0 cF
- (~ (x = (vec (NUMERAL _0)))) |- (~ ((Cx (real_of_num (NUMERAL _0))) = x))
T c==> c~ c= f0 cvec cNUMERAL c_0 c~ c= cCx creal_of_num cNUMERAL c_0 f0
- |- (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))
T c= cEXP cBIT0 f0 cBIT0 f1 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
- |- ((\y. (y IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)))) y)
T * / cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f1
- |- (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) ==> ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m)) = ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0
- |- ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- ((basis k) = (vec (NUMERAL _0))) |- ((vec (NUMERAL _0)) = (basis k))
T c==> c= cbasis f0 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 cbasis f0
- |- (((!n. (((BIT1 n) * _0) = _0)) ==> ((\n. (((BIT1 n) * _0) = _0)) n)) = ((\n. (((BIT1 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT1 b0 c_0 c_0 * / c= c* cBIT1 b0 c_0 c_0 f0 * / c= c* cBIT1 b0 c_0 c_0 f0
+ |- ((?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% u) z) = ((vector_add (vec (NUMERAL _0))) ((% t2) z)))))) = ((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% u) z) = ((vector_add (vec (NUMERAL _0))) ((% t2) z))))))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)))
T c= c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= c% f0 f1 cvector_add cvec cNUMERAL c_0 c% b0 f1 * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= c% f0 f1 cvector_add cvec cNUMERAL c_0 c% b1 f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0
- ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F), (((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F) ==> ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F)) |- ((((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F) ==> ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F)) /\ ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F))
T c==> c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF c==> c==> c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF c/\ c==> c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF
- |- (((BIT0 m) = (BIT1 n)) = F)
T c= c= cBIT0 f0 cBIT1 f1 cF
- |- (((!n. (((BIT0 n) * _0) = _0)) ==> ((\n. (((BIT0 n) * _0) = _0)) n)) = ((\n. (((BIT0 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT0 b0 c_0 c_0 * / c= c* cBIT0 b0 c_0 c_0 f0 * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((!n. ((BIT1 n) > _0)) ==> ((\n. ((BIT1 n) > _0)) n)) = ((\n. ((BIT1 n) > _0)) n))
T c= c==> ! c> cBIT1 b0 c_0 * / c> cBIT1 b0 c_0 f0 * / c> cBIT1 b0 c_0 f0
+ |- (((complex_mul (Cx c)) x) = ((% c) x))
T c= ccomplex_mul cCx f0 f1 c% f0 f1
- |- (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))
T c= c+ cBIT0 f0 cBIT1 f1 cBIT1 c+ f0 f1
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- |- ((SUC _0) = (BIT1 _0))
T c= cSUC c_0 cBIT1 c_0
- |- (((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
- |- ((_0 <= (BIT0 n)) = T)
T c= c<= c_0 cBIT0 f0 cT
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((BIT1 m) = (BIT0 n)) = F)
T c= c= cBIT1 f0 cBIT0 f1 cF
- |- ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))
T c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ |- (((!y. (((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5123. (?z. (((SETSPEC GEN%PVAR%5123) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (z = ((vector_add ((% t1) x)) ((% t2) y)))))))) z)))))) ==> ((\y. (((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5123. (?z. (((SETSPEC GEN%PVAR%5123) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (z = ((vector_add ((% t1) x)) ((% t2) y)))))))) z)))))) y)) = ((\y. (((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5123. (?z. (((SETSPEC GEN%PVAR%5123) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (z = ((vector_add ((% t1) x)) ((% t2) y)))))))) z)))))) y))
T c= c==> ! c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 c% b4 b0 b2 * / c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 c% b4 b0 b2 f1 * / c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 c% b4 b0 b2 f1
- |- (((PRE _0) = _0) /\ ((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) /\ (!n. ((PRE (BIT1 n)) = (BIT0 n)))))
T c/\ c= cPRE c_0 c_0 c/\ ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 ! c= cPRE cBIT1 b0 cBIT0 b0
- |- (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))
T c= c* cBIT0 f0 cBIT0 f1 cBIT0 cBIT0 c* f0 f1
- |- (((!p'. (!q'. (((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> (((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> (((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> (((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= f0 ccomplex_mul cCx b2 f1 b0 c==> c==> b0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 c= c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= f0 ccomplex_mul cCx b2 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> b0 b1 * / ! c==> c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= f0 ccomplex_mul cCx b2 f1 b0 c==> c==> b0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 c= c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= f0 ccomplex_mul cCx b2 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> b0 b1 f2 * / ! c==> c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= f0 ccomplex_mul cCx b2 f1 b0 c==> c==> b0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 c= c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= f0 ccomplex_mul cCx b2 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> b0 b1 f2
+ |- (((!x. (((complex_mul (Cx c)) x) = ((% c) x))) ==> ((\x. (((complex_mul (Cx c)) x) = ((% c) x))) x)) = ((\x. (((complex_mul (Cx c)) x) = ((% c) x))) x))
T c= c==> ! c= ccomplex_mul cCx f0 b0 c% f0 b0 * / c= ccomplex_mul cCx f0 b0 c% f0 b0 f1 * / c= ccomplex_mul cCx f0 b0 c% f0 b0 f1
- |- ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))
T c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT1 m) < (BIT0 n)) = (m < n))
T c= c< cBIT1 f0 cBIT0 f1 c< f0 f1
+ |- (((!w. (!z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((Arg w) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (w = ((complex_mul (Cx x)) z)))))))) ==> ((\w. (!z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((Arg w) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (w = ((complex_mul (Cx x)) z)))))))) w)) = ((\w. (!z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((Arg w) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (w = ((complex_mul (Cx x)) z)))))))) w))
T c= c==> ! ! c==> c/\ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c~ c= b1 cCx creal_of_num cNUMERAL c_0 c= c= cArg b0 cArg b1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= b0 ccomplex_mul cCx b2 b1 * / ! c==> c/\ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c~ c= b1 cCx creal_of_num cNUMERAL c_0 c= c= cArg b0 cArg b1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= b0 ccomplex_mul cCx b2 b1 f0 * / ! c==> c/\ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c~ c= b1 cCx creal_of_num cNUMERAL c_0 c= c= cArg b0 cArg b1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= b0 ccomplex_mul cCx b2 b1 f0
- |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))))) |- (((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0
- |- ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
+ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)) |- ((~ ((basis (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))))
T c==> cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c/\ c~ c= cbasis cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
- |- ((~ (a = a)) ==> (a = a))
T c==> c~ c= f0 f0 c= f0 f0
- (!u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))), (((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) |- ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) /\ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))
T c==> ! c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0 c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY f1 c/\ cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY f1 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 f1
- |- ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))
T c= cEXP c_0 cBIT0 f0 c* cEXP c_0 f0 cEXP c_0 f0
+ |- ((((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))) = ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))))
T c= c==> c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ (x = (vec (NUMERAL _0)))) |- (((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> c= f0 ccomplex_mul cCx f1 f2 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f1 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> c= f0 ccomplex_mul cCx f1 f2 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f1 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ (~ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((a = (Arg z)) ==> ((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((~ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((a = (Arg z)) ==> ((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c~ c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c= f1 cArg f0 c==> c~ c= f2 cCx creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f2 ccomplex_mul cCx f3 f0 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c= f1 cArg f0 c==> c~ c= f2 cCx creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f2 ccomplex_mul cCx f3 f0 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((((x = (vec (NUMERAL _0))) ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = T)) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) ==> T))) = (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) ==> T)))
T c= c==> c==> c= f0 cvec cNUMERAL c_0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY cT c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> c= f0 cvec cNUMERAL c_0 cT c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> c= f0 cvec cNUMERAL c_0 cT
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
- |- (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))
T c= cEXP cNUMERAL f0 cNUMERAL f1 cNUMERAL cEXP f0 f1
- |- (((!n. ((SUC (BIT0 n)) = (BIT1 n))) ==> ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)) = ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n))
T c= c==> ! c= cSUC cBIT0 b0 cBIT1 b0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0
+ (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c= f1 cArg f0 c/\ c~ c= f0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
- |- ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F)))
T c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!n. ((ODD (BIT0 n)) = F)) ==> ((\n. ((ODD (BIT0 n)) = F)) n)) = ((\n. ((ODD (BIT0 n)) = F)) n))
T c= c==> ! c= cODD cBIT0 b0 cF * / c= cODD cBIT0 b0 cF f0 * / c= cODD cBIT0 b0 cF f0
+ |- (((~ ((basis (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = ((\b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY))))) (basis (NUMERAL (BIT1 _0)))))
T c= c/\ c~ c= cbasis cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY * / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY cbasis cNUMERAL cBIT1 c_0
+ |- (((!p'. (!q'. (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = q')) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = q')) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = q')) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 c==> c==> b0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY b1 c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> b0 b1 * / ! c==> c= cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 c==> c==> b0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY b1 c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> b0 b1 f1 * / ! c==> c= cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 c==> c==> b0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY b1 c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> b0 b1 f1
- |- ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
- |- (((!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) ==> ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n)) = ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F) |- (((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F) /\ ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F))
T c==> c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF c/\ c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF
- |- (((!s. (!a. ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F))) ==> ((\s. (!a. ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F))) s)) = ((\s. (!a. ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F))) s))
T c= c==> ! ! c==> c~ c==> c~ ! c==> * b0 b2 c= b2 b1 c? / c/\ c~ c= b1 b2 * b0 b2 cF * / ! c==> c~ c==> c~ ! c==> * b0 b2 c= b2 b1 c? / c/\ c~ c= b1 b2 * b0 b2 cF f0 * / ! c==> c~ c==> c~ ! c==> * b0 b2 c= b2 b1 c? / c/\ c~ c= b1 b2 * b0 b2 cF f0
- |- (((!n. ((_0 * (BIT0 n)) = _0)) ==> ((\n. ((_0 * (BIT0 n)) = _0)) n)) = ((\n. ((_0 * (BIT0 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT0 b0 c_0 * / c= c* c_0 cBIT0 b0 c_0 f0 * / c= c* c_0 cBIT0 b0 c_0 f0
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- (((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY))))))
T c==> cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY
- |- (((!n. ((EVEN (BIT1 n)) = F)) ==> ((\n. ((EVEN (BIT1 n)) = F)) n)) = ((\n. ((EVEN (BIT1 n)) = F)) n))
T c= c==> ! c= cEVEN cBIT1 b0 cF * / c= cEVEN cBIT1 b0 cF f0 * / c= cEVEN cBIT1 b0 cF f0
- |- (((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
- |- ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)
T * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
+ |- ((\y. (((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5123. (?z. (((SETSPEC GEN%PVAR%5123) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (z = ((vector_add ((% t1) x)) ((% t2) y)))))))) z)))))) y)
T * / c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 c% b4 b0 b2 f1
+ (~ (?z. ((~ (a = z)) /\ (s z)))) |- (!z. ((a = z) \/ (~ (s z))))
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 ! c\/ c= f0 b0 c~ * f1 b0
+ |- ((((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) = (x = (vec (NUMERAL _0)))) ==> (((x = (vec (NUMERAL _0))) ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = q')) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) ==> q')))) = (((x = (vec (NUMERAL _0))) ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = q')) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) ==> q'))))
T c= c==> c= cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c= f0 cvec cNUMERAL c_0 c==> c==> c= f0 cvec cNUMERAL c_0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY f1 c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> c= f0 cvec cNUMERAL c_0 f1 c==> c==> c= f0 cvec cNUMERAL c_0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY f1 c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> c= f0 cvec cNUMERAL c_0 f1
+ |- (((real_lt x) y) ==> (((real_le x) y) = T))
T c==> creal_lt f0 f1 c= creal_le f0 f1 cT
- |- ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)
T * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
- |- ((\s. (!a. ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F))) s)
T * / ! c==> c~ c==> c~ ! c==> * b0 b2 c= b2 b1 c? / c/\ c~ c= b1 b2 * b0 b2 cF f0
+ |- ((\x. (!y. (((real_lt x) y) ==> ((real_le x) y)))) x)
T * / ! c==> creal_lt b0 b1 creal_le b0 b1 f0
- |- ((\n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) n)
T * / c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 f0
+ (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- (!x. (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c= f1 cArg f0 ! c==> c= cArg b0 cArg f0 cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- (((vec (NUMERAL _0)) INSERT EMPTY) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))
T cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY
- |- ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))
T c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))))
T c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- ((x = (vec (NUMERAL _0))) ==> (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c= f0 cvec cNUMERAL c_0 c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
- |- ((_0 < _0) = F)
T c= c< c_0 c_0 cF
+ ((s x) /\ (~ (x = a))) |- (((s x) ==> (a = x)) = (a = x))
T c==> c/\ * f0 f1 c~ c= f1 f2 c= c==> * f0 f1 c= f2 f1 c= f2 f1
- |- (((!n. (((BIT1 n) < _0) = F)) ==> ((\n. (((BIT1 n) < _0) = F)) n)) = ((\n. (((BIT1 n) < _0) = F)) n))
T c= c==> ! c= c< cBIT1 b0 c_0 cF * / c= c< cBIT1 b0 c_0 cF f0 * / c= c< cBIT1 b0 c_0 cF f0
+ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((_0 + (BIT0 n)) = (BIT0 n))
T c= c+ c_0 cBIT0 f0 cBIT0 f0
- |- ((\x. (!y. (y IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY))))) x)
T * / ! cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f0
- |- ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))
T c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((\n. ((BIT0 n) >= _0)) n)
T * / c>= cBIT0 b0 c_0 f0
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- (((BIT1 n) - _0) = (BIT1 n))
T c= c- cBIT1 f0 c_0 cBIT1 f0
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- ((~ (x = (vec (NUMERAL _0)))) /\ (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c/\ c~ c= f0 cvec cNUMERAL c_0 c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
- |- (((!n. ((_0 - (BIT0 n)) = _0)) ==> ((\n. ((_0 - (BIT0 n)) = _0)) n)) = ((\n. ((_0 - (BIT0 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT0 b0 c_0 * / c= c- c_0 cBIT0 b0 c_0 f0 * / c= c- c_0 cBIT0 b0 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((~ ((vec (NUMERAL _0)) = z)) /\ ((Arg z) = a)) |- (((~ ((vec (NUMERAL _0)) = z)) /\ ((Arg z) = a)) /\ ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c/\ c~ c= cvec cNUMERAL c_0 f0 c= cArg f0 f1 c/\ c/\ c~ c= cvec cNUMERAL c_0 f0 c= cArg f0 f1 c/\ c~ c= f0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY
- (~ (?z. ((~ (a = z)) /\ (s z)))), ((s x) /\ (~ (x = a))) |- ((~ F) ==> F)
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c/\ * f1 f2 c~ c= f2 f0 c==> c~ cF cF
- |- (((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) ==> ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)) = ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n))
T c= c==> ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)
T * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))
T c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 n) <= _0) = F)) ==> ((\n. (((BIT1 n) <= _0) = F)) n)) = ((\n. (((BIT1 n) <= _0) = F)) n))
T c= c==> ! c= c<= cBIT1 b0 c_0 cF * / c= c<= cBIT1 b0 c_0 cF f0 * / c= c<= cBIT1 b0 c_0 cF f0
- |- ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
- |- ((?z. (P z)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
- |- ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))
T c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((\n. (~ (_0 >= (BIT1 n)))) n)
T * / c~ c>= c_0 cBIT1 b0 f0
- |- (((!n. ((_0 + (BIT0 n)) = (BIT0 n))) ==> ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)) = ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n))
T c= c==> ! c= c+ c_0 cBIT0 b0 cBIT0 b0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- |- (((!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) ==> ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)) = ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
- (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) /\ (((vec (NUMERAL _0)) = (basis k)) = F))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= cvec cNUMERAL c_0 cbasis f0 cF
- |- (((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) ==> ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)) = ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT0 b1 cF * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0 * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
- |- ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)
T * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
+ (~ (!x. ((s x) ==> (x = a)))), (~ (?z. ((~ (a = z)) /\ (s z)))) |- ((~ (?z. ((~ (a = z)) /\ (s z)))) /\ F)
T c==> c~ ! c==> * f0 b0 c= b0 f1 c==> c~ c? / c/\ c~ c= f1 b0 * f0 b0 c/\ c~ c? / c/\ c~ c= f1 b0 * f0 b0 cF
- ((real_lt (real_of_num (NUMERAL _0))) u) |- (T = ((real_lt (real_of_num (NUMERAL _0))) u))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= cT creal_lt creal_of_num cNUMERAL c_0 f0
- |- ((SUC (BIT1 n)) = (BIT0 (SUC n)))
T c= cSUC cBIT1 f0 cBIT0 cSUC f0
+ |- (((!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) ==> (!s. (!t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u))))))) = (!s. (!t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u)))))))
T c= c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 ! ! c==> cSUBSET b0 b1 ! c==> cSUBSET b1 b2 cSUBSET b0 b2 ! ! c==> cSUBSET b0 b1 ! c==> cSUBSET b1 b2 cSUBSET b0 b2
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((BIT1 m) < (BIT1 n)) = (m < n))
T c= c< cBIT1 f0 cBIT1 f1 c< f0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((x IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY))) = T)
T c= cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cT
- |- ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)
T * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
+ (~ (?z. ((~ (a = z)) /\ (s z)))) |- (((\x. ((s x) /\ (~ (x = a)))) x) ==> F)
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> * / c/\ * f1 b0 c~ c= b0 f0 f2 cF
- |- (((!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- |- ((!z'. ((a = z) \/ (~ (s z')))) = ((a = z) \/ (!z. (~ (s z)))))
T c= ! c\/ c= f0 f1 c~ * f2 b0 c\/ c= f0 f1 ! c~ * f2 b0
- |- ((NUMERAL (NUMERAL _0)) = (NUMERAL _0))
T c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) |- (((!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u))))) ==> ((\t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u))))) t)) = ((\t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u))))) t))
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 c= c==> ! ! c==> cSUBSET f0 b0 c==> cSUBSET b0 b1 cSUBSET f0 b1 * / ! c==> cSUBSET f0 b0 c==> cSUBSET b0 b1 cSUBSET f0 b1 f1 * / ! c==> cSUBSET f0 b0 c==> cSUBSET b0 b1 cSUBSET f0 b1 f1
+ (~ (x = (vec (NUMERAL _0)))) |- (~ (x = (Cx (real_of_num (NUMERAL _0)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 cCx creal_of_num cNUMERAL c_0
- |- (((!n. ((PRE (BIT1 n)) = (BIT0 n))) ==> ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n)) = ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n))
T c= c==> ! c= cPRE cBIT1 b0 cBIT0 b0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0
+ |- ((\k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (~ ((basis k) = (vec (NUMERAL _0)))))) k)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c~ c= cbasis b0 cvec cNUMERAL c_0 f0
+ (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c= f1 cArg f0 c==> c= cArg f2 cArg f0 cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- (((!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) ==> ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)) = ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n))
T c= c==> ! c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
- |- ((!z'. ((a = z') \/ (~ (s z)))) = ((!z. (a = z)) \/ (~ (s z))))
T c= ! c\/ c= f0 b0 c~ * f1 f2 c\/ ! c= f0 b0 c~ * f1 f2
+ |- (((BIT1 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT1 f0 cBIT1 f1 c<= f0 f1
+ |- (((!c. (!x. (((complex_mul (Cx c)) x) = ((% c) x)))) ==> ((\c. (!x. (((complex_mul (Cx c)) x) = ((% c) x)))) c)) = ((\c. (!x. (((complex_mul (Cx c)) x) = ((% c) x)))) c))
T c= c==> ! ! c= ccomplex_mul cCx b0 b1 c% b0 b1 * / ! c= ccomplex_mul cCx b0 b1 c% b0 b1 f0 * / ! c= ccomplex_mul cCx b0 b1 c% b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) ==> ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)) = ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
+ (~ (?z. ((~ (a = z)) /\ (s z)))) |- ((\z. ((a = z) \/ (~ (s z)))) _2100396)
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 * / c\/ c= f0 b0 c~ * f1 b0 f2
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((EVEN _0) = T) /\ ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F))))
T c/\ c= cEVEN c_0 cT c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1
- (~ (x = (vec (NUMERAL _0)))) |- (((~ ((vec (NUMERAL _0)) = x)) ==> (((vec (NUMERAL _0)) = x) = F)) = (((vec (NUMERAL _0)) = x) = F))
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c==> c~ c= cvec cNUMERAL c_0 f0 c= c= cvec cNUMERAL c_0 f0 cF c= c= cvec cNUMERAL c_0 f0 cF
+ |- ((\t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u))))) t)
T * / c==> cSUBSET f0 b0 ! c==> cSUBSET b0 b1 cSUBSET f0 b1 f1
- |- (((NUMERAL n) > (NUMERAL m)) = (n > m))
T c= c> cNUMERAL f0 cNUMERAL f1 c> f0 f1
- |- ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))
T c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- (((BIT0 m) < (BIT0 n)) = (m < n))
T c= c< cBIT0 f0 cBIT0 f1 c< f0 f1
+ |- ((\q'. ((((Arg x) = (Arg z)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (p' ==> q'))))) q')
T * / c==> c= c= cArg f0 cArg f1 f2 c==> c==> f2 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> f2 b0 f3
- |- ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))
T c= cPRE cNUMERAL f0 cNUMERAL cPRE f0
+ (~ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY))) |- ((~ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY))) /\ (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY))))))
T c==> c~ cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c/\ c~ cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) ==> ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))))
T c==> c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (dimindex UNIV)))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((((% u) z) IN (GSPEC (\GEN%PVAR%5123. (?z'. (((SETSPEC GEN%PVAR%5123) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (z' = ((vector_add (vec (NUMERAL _0))) ((% t2) z)))))))) z'))))) = (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% u) z) = ((vector_add (vec (NUMERAL _0))) ((% t2) z))))))))
T c= cIN c% f0 f1 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add cvec cNUMERAL c_0 c% b3 f1 b1 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= c% f0 f1 cvector_add cvec cNUMERAL c_0 c% b1 f1
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) |- ((\s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) s)
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 * / ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 f0
+ (~ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY))) |- (((?z. ((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z))))))) ==> (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY)))))) = (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY))))))
T c==> c~ cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c= c==> c? / c/\ c~ c= cvec cNUMERAL c_0 b0 cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY
+ (~ (?z. ((~ (a = z)) /\ (s z)))), ((\x. ((s x) /\ (~ (x = a)))) x) |- (((\x. ((s x) /\ (~ (x = a)))) x) /\ F)
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> * / c/\ * f1 b0 c~ c= b0 f0 f2 c/\ * / c/\ * f1 b0 c~ c= b0 f0 f2 cF
- |- (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))
T c= c+ cBIT1 f0 cBIT1 f1 cBIT0 cSUC c+ f0 f1
- |- (((!n. ((_0 EXP (BIT1 n)) = _0)) ==> ((\n. ((_0 EXP (BIT1 n)) = _0)) n)) = ((\n. ((_0 EXP (BIT1 n)) = _0)) n))
T c= c==> ! c= cEXP c_0 cBIT1 b0 c_0 * / c= cEXP c_0 cBIT1 b0 c_0 f0 * / c= cEXP c_0 cBIT1 b0 c_0 f0
+ ((real_lt (real_of_num (NUMERAL _0))) u) |- ((((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))) = (((real_le (real_of_num (NUMERAL _0))) u) /\ ((((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% u) z) = ((vector_add (vec (NUMERAL _0))) ((% u) z))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL cBIT1 c_0 c= c% f0 f1 cvector_add cvec cNUMERAL c_0 c% f0 f1
- |- ((_0 >= (BIT0 n)) = (_0 >= n))
T c= c>= c_0 cBIT0 f0 c>= c_0 f0
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (x = (vec (NUMERAL _0))))) = ((\t. (t \/ (~ t))) (x = (vec (NUMERAL _0)))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= f0 cvec cNUMERAL c_0 * / c\/ b0 c~ b0 c= f0 cvec cNUMERAL c_0
+ ((~ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY))) ==> (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY)))))) |- (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY)))))
T c==> c==> c~ cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY
- |- (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))))
T c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT0 n) - _0) = (BIT0 n))
T c= c- cBIT0 f0 c_0 cBIT0 f0
- |- (((!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) ==> ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)) = ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)), ((real_lt (real_of_num (NUMERAL _0))) u) |- ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f0 ccomplex_mul cCx f3 f1 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0
- |- (((BIT1 n) <= _0) = F)
T c= c<= cBIT1 f0 c_0 cF
+ (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- ((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c= f1 cArg f0 c==> c~ c= f2 cCx creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f2 ccomplex_mul cCx f3 f0 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))))) |- ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))
T c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)
T * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)
T * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
- |- ((\n. ((EVEN (BIT0 n)) = T)) n)
T * / c= cEVEN cBIT0 b0 cT f0
- |- ((_0 + _0) = _0)
T c= c+ c_0 c_0 c_0
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))) |- ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
- |- (((!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) ==> ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)) = ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n))
T c= c==> ! c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
+ |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
- (!u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))), (((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) |- ((!u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))) /\ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))
T c==> ! c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0 c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY f1 c/\ ! c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 f1
- |- ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))
T c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((_0 * (BIT0 n)) = _0)
T c= c* c_0 cBIT0 f0 c_0
- |- (((!n. (((BIT0 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- (((BIT0 n) >= (BIT0 m)) = (n >= m))
T c= c>= cBIT0 f0 cBIT0 f1 c>= f0 f1
- |- (((BIT0 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT1 f1 c<= f0 f1
- |- ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0
+ (~ (z = (vec (NUMERAL _0)))), ((~ ((vec (NUMERAL _0)) = z)) /\ ((Arg z) = a)) |- ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c/\ c~ c= cvec cNUMERAL c_0 f0 c= cArg f0 f1 c/\ c~ c= f0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- (((!n. ((_0 * (BIT1 n)) = _0)) ==> ((\n. ((_0 * (BIT1 n)) = _0)) n)) = ((\n. ((_0 * (BIT1 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT1 b0 c_0 * / c= c* c_0 cBIT1 b0 c_0 f0 * / c= c* c_0 cBIT1 b0 c_0 f0
- |- ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m)
T * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0
+ (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- ((!x. (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))) = ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c= f1 cArg f0 c= ! c==> c= cArg b0 cArg f0 cIN b0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ c~ c= f0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- ((EVEN (BIT1 n)) = F)
T c= cEVEN cBIT1 f0 cF
- |- ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)
T * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((PRE _0) = _0)
T c= cPRE c_0 c_0
- |- ((?t2. t) = t)
T c= c? / f0 f0
+ |- (((!z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((Arg w) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (w = ((complex_mul (Cx x)) z))))))) ==> ((\z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((Arg w) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (w = ((complex_mul (Cx x)) z))))))) z)) = ((\z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((Arg w) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (w = ((complex_mul (Cx x)) z))))))) z))
T c= c==> ! c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= c= cArg f0 cArg b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= f0 ccomplex_mul cCx b1 b0 * / c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= c= cArg f0 cArg b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= f0 ccomplex_mul cCx b1 b0 f1 * / c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= c= cArg f0 cArg b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= f0 ccomplex_mul cCx b1 b0 f1
- |- ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n)
T * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- (~ (?z. ((~ (a = z)) /\ (s z)))), ((s x) /\ (~ (x = a))) |- ((~ (a = x)) ==> (a = x))
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c/\ * f1 f2 c~ c= f2 f0 c==> c~ c= f0 f2 c= f0 f2
- |- ((\n. ((BIT1 n) > _0)) n)
T * / c> cBIT1 b0 c_0 f0
- |- (((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) ==> ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0
- (~ (x = (vec (NUMERAL _0)))) |- (((vec (NUMERAL _0)) = x) = F)
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c= cvec cNUMERAL c_0 f0 cF
- |- (((!n. ((BIT1 n) >= _0)) ==> ((\n. ((BIT1 n) >= _0)) n)) = ((\n. ((BIT1 n) >= _0)) n))
T c= c==> ! c>= cBIT1 b0 c_0 * / c>= cBIT1 b0 c_0 f0 * / c>= cBIT1 b0 c_0 f0
- |- (((!n. (((BIT1 n) > (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 > (BIT0 n)) = F)
T c= c> c_0 cBIT0 f0 cF
- |- (((!n. (((BIT1 n) - _0) = (BIT1 n))) ==> ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)) = ((\n. (((BIT1 n) - _0) = (BIT1 n))) n))
T c= c==> ! c= c- cBIT1 b0 c_0 cBIT1 b0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) ==> ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)) = ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((EVEN _0) = T)
T c= cEVEN c_0 cT
+ |- (((!x. (((vector_add (vec (NUMERAL _0))) x) = x)) ==> ((\x. (((vector_add (vec (NUMERAL _0))) x) = x)) x)) = ((\x. (((vector_add (vec (NUMERAL _0))) x) = x)) x))
T c= c==> ! c= cvector_add cvec cNUMERAL c_0 b0 b0 * / c= cvector_add cvec cNUMERAL c_0 b0 b0 f0 * / c= cvector_add cvec cNUMERAL c_0 b0 b0 f0
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) ==> ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)) = ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m))
T c= c==> ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
- |- ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))
T c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)) |- ((\b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY))))) (basis (NUMERAL (BIT1 _0))))
T c==> cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY cbasis cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
- |- (((!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) ==> ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- (((!y. (((real_lt x) y) ==> ((real_le x) y))) ==> ((\y. (((real_lt x) y) ==> ((real_le x) y))) y)) = ((\y. (((real_lt x) y) ==> ((real_le x) y))) y))
T c= c==> ! c==> creal_lt f0 b0 creal_le f0 b0 * / c==> creal_lt f0 b0 creal_le f0 b0 f1 * / c==> creal_lt f0 b0 creal_le f0 b0 f1
- |- (((!n. (((BIT0 n) > _0) = (n > _0))) ==> ((\n. (((BIT0 n) > _0) = (n > _0))) n)) = ((\n. (((BIT0 n) > _0) = (n > _0))) n))
T c= c==> ! c= c> cBIT0 b0 c_0 c> b0 c_0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0
- |- ((_0 = (BIT1 n)) = F)
T c= c= c_0 cBIT1 f0 cF
- |- (((!n. (~ (_0 > (BIT0 n)))) ==> ((\n. (~ (_0 > (BIT0 n)))) n)) = ((\n. (~ (_0 > (BIT0 n)))) n))
T c= c==> ! c~ c> c_0 cBIT0 b0 * / c~ c> c_0 cBIT0 b0 f0 * / c~ c> c_0 cBIT0 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((SUC (BIT0 n)) = (BIT1 n))
T c= cSUC cBIT0 f0 cBIT1 f0
+ ((s x) /\ (~ (x = a))) |- ((x = a) ==> F)
T c==> c/\ * f0 f1 c~ c= f1 f2 c==> c= f1 f2 cF
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
- (~ (x = (vec (NUMERAL _0)))) |- (((Cx (real_of_num (NUMERAL _0))) = x) = F)
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c= cCx creal_of_num cNUMERAL c_0 f0 cF
- |- ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)
T * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
+ |- (((!x. (!y. (x IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY))))) ==> ((\x. (!y. (x IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY))))) x)) = ((\x. (!y. (x IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY))))) x))
T c= c==> ! ! cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * / ! cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f0 * / ! cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f0
- |- ((\n. ((_0 = (BIT1 n)) = F)) n)
T * / c= c= c_0 cBIT1 b0 cF f0
- |- ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)
T * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) ==> ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)) = ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m))
T c= c==> ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))
T c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ ((Arg z) = a) |- (a = (Arg z))
T c==> c= cArg f0 f1 c= f1 cArg f0
- |- ((\n. ((BIT1 n) >= _0)) n)
T * / c>= cBIT1 b0 c_0 f0
+ (~ (?z. ((~ (a = z)) /\ (s z)))), ((s x) /\ (~ (x = a))) |- (((s x) /\ (~ (x = a))) /\ F)
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c/\ * f1 f2 c~ c= f2 f0 c/\ c/\ * f1 f2 c~ c= f2 f0 cF
- |- ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)
T * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
+ |- ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u))))
T c==> cSUBSET f0 f1 ! c==> cSUBSET f1 b0 cSUBSET f0 b0
- |- (((BIT0 n) > (BIT0 m)) = (n > m))
T c= c> cBIT0 f0 cBIT0 f1 c> f0 f1
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) |- (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u))))
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 ! c==> cSUBSET f0 f1 c==> cSUBSET f1 b0 cSUBSET f0 b0
+ |- ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- |- ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)
T * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- (((!x. (((\x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) x) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))) ==> ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))) = ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c= c==> ! c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= f0 ccomplex_mul cCx b1 f1 b0 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))) /\ (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) /\ ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))) /\ (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))))
T c/\ c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 c/\ c/\ ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n)
T * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1
- |- (((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) ==> ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m)) = ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT1 b1 cF * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0 * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0
+ |- (((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) ==> ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))))
T c= c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY
- |- (((ODD _0) = F) /\ ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T))))
T c/\ c= cODD c_0 cF c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
- |- (((!n. (((BIT1 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
- |- ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))
T c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- (((~ (_0 >= (BIT1 n))) ==> ((_0 >= (BIT1 n)) = F)) = ((_0 >= (BIT1 n)) = F))
T c= c==> c~ c>= c_0 cBIT1 f0 c= c>= c_0 cBIT1 f0 cF c= c>= c_0 cBIT1 f0 cF
- |- ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))
T c= cSUC cNUMERAL f0 cNUMERAL cSUC f0
- (~ (?z. ((~ (a = z)) /\ (s z)))), ((s x) /\ (~ (x = a))) |- ((~ (x = a)) ==> (x = a))
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c/\ * f1 f2 c~ c= f2 f0 c==> c~ c= f2 f0 c= f2 f0
- |- (((BIT0 n) >= _0) = T)
T c= c>= cBIT0 f0 c_0 cT
- |- ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))
T c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((!n. (((BIT1 n) = _0) = F)) ==> ((\n. (((BIT1 n) = _0) = F)) n)) = ((\n. (((BIT1 n) = _0) = F)) n))
T c= c==> ! c= c= cBIT1 b0 c_0 cF * / c= c= cBIT1 b0 c_0 cF f0 * / c= c= cBIT1 b0 c_0 cF f0
+ (((complex_mul (Cx c)) x) = ((% c) x)) |- (((% c) x) = ((complex_mul (Cx c)) x))
T c==> c= ccomplex_mul cCx f0 f1 c% f0 f1 c= c% f0 f1 ccomplex_mul cCx f0 f1
- |- ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))
T c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) ==> ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)) = ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n))
T c= c==> ! c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
- |- (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))))))
T c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))))) |- (~ (x = (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c~ c= f2 cCx creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT0 n) = _0) = (n = _0))) ==> ((\n. (((BIT0 n) = _0) = (n = _0))) n)) = ((\n. (((BIT0 n) = _0) = (n = _0))) n))
T c= c==> ! c= c= cBIT0 b0 c_0 c= b0 c_0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
+ |- (((!z. (((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))))) ==> ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))) ==> ((?z. ((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z))))))) ==> (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY))))))) = ((?z. ((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z))))))) ==> (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY)))))))
T c= c==> ! c==> c/\ c~ c= cvec cNUMERAL c_0 b0 cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c? / c/\ c~ c= cvec cNUMERAL c_0 b0 cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c? / c/\ c~ c= cvec cNUMERAL c_0 b0 cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY
- |- (((BIT0 n) > (BIT1 m)) = (n > m))
T c= c> cBIT0 f0 cBIT1 f1 c> f0 f1
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- ((((\x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) u) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = T)
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c= c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 f3 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY cT
- |- ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)
T * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))) |- (((((Arg x) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z))))) ==> (((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> q')))) = (((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> q'))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c= c==> c= c= cArg f0 cArg f1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 c==> c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 f2 c==> c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 f2
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))) |- (T = ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c= cT c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= f1 cCx creal_of_num cNUMERAL c_0
- |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- |- (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))))
T c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- ((\n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- (((!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) ==> ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
- |- (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))
T c= c+ cBIT0 f0 cBIT0 f1 cBIT0 c+ f0 f1
- |- (((!n. ((_0 + (BIT1 n)) = (BIT1 n))) ==> ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n)) = ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n))
T c= c==> ! c= c+ c_0 cBIT1 b0 cBIT1 b0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0
- |- ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)
T * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))
T c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)
T * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
+ (~ (!x. ((s x) ==> (x = a)))) |- (?x. ((s x) /\ (~ (x = a))))
T c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ * f0 b0 c~ c= b0 f1
- |- (((!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)) = ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
+ |- ((\x. (((vector_add (vec (NUMERAL _0))) x) = x)) x)
T * / c= cvector_add cvec cNUMERAL c_0 b0 b0 f0
- (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (((~ ((vec (NUMERAL _0)) = (basis k))) ==> (((vec (NUMERAL _0)) = (basis k)) = F)) = (((vec (NUMERAL _0)) = (basis k)) = F))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c~ c= cvec cNUMERAL c_0 cbasis f0 c= c= cvec cNUMERAL c_0 cbasis f0 cF c= c= cvec cNUMERAL c_0 cbasis f0 cF
- |- (((!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) ==> ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)) = ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n))
T c= c==> ! c= cSUC cBIT1 b0 cBIT0 cSUC b0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
+ |- (((!x. (!y. (((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5123. (?z. (((SETSPEC GEN%PVAR%5123) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (z = ((vector_add ((% t1) x)) ((% t2) y)))))))) z))))))) ==> ((\x. (!y. (((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5123. (?z. (((SETSPEC GEN%PVAR%5123) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (z = ((vector_add ((% t1) x)) ((% t2) y)))))))) z))))))) x)) = ((\x. (!y. (((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5123. (?z. (((SETSPEC GEN%PVAR%5123) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (z = ((vector_add ((% t1) x)) ((% t2) y)))))))) z))))))) x))
T c= c==> ! ! c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 b0 c% b5 b1 b3 * / ! c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 b0 c% b5 b1 b3 f0 * / ! c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 b0 c% b5 b1 b3 f0
- (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) |- ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) = T)
T c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 cT
- |- ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))))
T c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ ((real_lt (real_of_num (NUMERAL _0))) u) |- (((real_le (real_of_num (NUMERAL _0))) u) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 f0 cT
- |- ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))
T c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((real_neg ((real_sub ((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((_2100397 = _2100398) ==> ((s _2100398) \/ (~ (s _2100397))))
T c==> c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- |- (((!n. (((BIT0 m) < (BIT0 n)) = (m < n))) ==> ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
- |- ((\n. (((BIT0 n) = _0) = (n = _0))) n)
T * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m)
T * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0
+ |- (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) ==> T))
T c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> c= f0 cvec cNUMERAL c_0 cT
- |- (((NUMERAL n) >= (NUMERAL m)) = (n >= m))
T c= c>= cNUMERAL f0 cNUMERAL f1 c>= f0 f1
- |- (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))
T c= c- cBIT0 f0 cBIT0 f1 cBIT0 c- f0 f1
- |- (((!n. (((BIT1 m) = (BIT0 n)) = F)) ==> ((\n. (((BIT1 m) = (BIT0 n)) = F)) n)) = ((\n. (((BIT1 m) = (BIT0 n)) = F)) n))
T c= c==> ! c= c= cBIT1 f0 cBIT0 b0 cF * / c= c= cBIT1 f0 cBIT0 b0 cF f1 * / c= c= cBIT1 f0 cBIT0 b0 cF f1
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!z. ((P z) \/ Q)) = ((!z. (P z)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- |- ((\n. ((_0 EXP (BIT1 n)) = _0)) n)
T * / c= cEXP c_0 cBIT1 b0 c_0 f0
+ (~ (?z. ((~ (a = z)) /\ (s z)))) |- (((!z. ((a = z) \/ (~ (s z)))) ==> ((\z. ((a = z) \/ (~ (s z)))) _2100396)) = ((\z. ((a = z) \/ (~ (s z)))) _2100396))
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c= c==> ! c\/ c= f0 b0 c~ * f1 b0 * / c\/ c= f0 b0 c~ * f1 b0 f2 * / c\/ c= f0 b0 c~ * f1 b0 f2
- |- ((!u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))) ==> (!u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))))
T c==> ! c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0 ! c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0
+ (~ (?z. ((~ (a = z)) /\ (s z)))), ((s x) /\ (~ (x = a))) |- ((((a = x) /\ (a = a)) ==> (x = a)) = (x = a))
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c/\ * f1 f2 c~ c= f2 f0 c= c==> c/\ c= f0 f2 c= f0 f0 c= f2 f0 c= f2 f0
- |- (((!n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 EXP (BIT1 n)) = _0)
T c= cEXP c_0 cBIT1 f0 c_0
- |- ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))
T c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))
T c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)
T * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (x = (vec (NUMERAL _0)))) |- ((x = (Cx (real_of_num (NUMERAL _0)))) = F)
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c= f0 cCx creal_of_num cNUMERAL c_0 cF
+ (~ (x = (vec (NUMERAL _0)))) |- (((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> ((x = (Cx (real_of_num (NUMERAL _0)))) = F)) = ((x = (Cx (real_of_num (NUMERAL _0)))) = F))
T c==> c~ c= f0 cvec cNUMERAL c_0 c= c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= c= f0 cCx creal_of_num cNUMERAL c_0 cF c= c= f0 cCx creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))
T c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- (!u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))) |- ((!u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))) /\ (!u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))))
T c==> ! c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0 c/\ ! c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0 ! c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0
- |- (((!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0
+ |- (((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = ((~ ((basis (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))))
T c= cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c/\ c~ c= cbasis cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY
- |- ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n)
T * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1
- |- ((\n. ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))) n)
T * / c= cPRE cNUMERAL b0 cNUMERAL cPRE b0 f0
- |- (((!n. ((_0 <= (BIT0 n)) = T)) ==> ((\n. ((_0 <= (BIT0 n)) = T)) n)) = ((\n. ((_0 <= (BIT0 n)) = T)) n))
T c= c==> ! c= c<= c_0 cBIT0 b0 cT * / c= c<= c_0 cBIT0 b0 cT f0 * / c= c<= c_0 cBIT0 b0 cT f0
- |- (((!n. ((_0 < (BIT0 n)) = (_0 < n))) ==> ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)) = ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n))
T c= c==> ! c= c< c_0 cBIT0 b0 c< c_0 b0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
- ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) |- (((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) /\ ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))))
T c==> c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c/\ c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
- |- (((BIT1 n) = _0) = F)
T c= c= cBIT1 f0 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))
T c= c- cBIT0 f0 cBIT1 f1 cPRE cBIT0 c- f0 f1
- |- ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))
T c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- ((((~ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((a = (Arg z)) ==> ((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F) ==> ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((a = (Arg z)) ==> ((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))))))))) = ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((a = (Arg z)) ==> ((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0))))))))))
T c= c==> c==> c~ c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c= f1 cArg f0 c==> c~ c= f2 cCx creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f2 ccomplex_mul cCx f3 f0 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c= f1 cArg f0 c==> c~ c= f2 cCx creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f2 ccomplex_mul cCx f3 f0 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c= f1 cArg f0 c==> c~ c= f2 cCx creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f2 ccomplex_mul cCx f3 f0 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m)
T * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0
- |- ((_0 < (BIT0 n)) = (_0 < n))
T c= c< c_0 cBIT0 f0 c< c_0 f0
- |- ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)
T * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- (((!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) ==> ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n)) = ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n))
T c= c==> ! c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1 * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1
- |- ((\m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) m)
T * / ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT0 n) + _0) = (BIT0 n))
T c= c+ cBIT0 f0 c_0 cBIT0 f0
- |- (((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> (((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> q')))
T c==> c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c= c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 f2
- |- ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n)
T * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1
- |- (((BIT1 n) > _0) = T)
T c= c> cBIT1 f0 c_0 cT
- |- ((\n. ((_0 <= (BIT1 n)) = T)) n)
T * / c= c<= c_0 cBIT1 b0 cT f0
+ |- (T = (((vec (NUMERAL _0)) INSERT EMPTY) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))))
T c= cT cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY
- |- (((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z)))) = T)
T c= c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cT
+ |- (((!z. (((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))))) ==> ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))) ==> ((?z. ((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z))))))) ==> (?z. ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))))) = ((!z. (((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))))) ==> ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))) ==> ((?z. ((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z))))))) ==> (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY))))))))
T c= c==> ! c==> c/\ c~ c= cvec cNUMERAL c_0 b0 cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c? / c/\ c~ c= cvec cNUMERAL c_0 b0 cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY c==> ! c==> c/\ c~ c= cvec cNUMERAL c_0 b0 cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c? / c/\ c~ c= cvec cNUMERAL c_0 b0 cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY
- |- (((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F) ==> ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F))
T c==> c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF
+ |- (((!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((\n. (((BIT1 n) < _0) = F)) n)
T * / c= c< cBIT1 b0 c_0 cF f0
- |- (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n))))))
T c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
- |- ((!a. ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) = T)
T c= ! c==> c~ ! c==> * f0 b1 c= b1 b0 c? / c/\ c~ c= b0 b1 * f0 b1 cT
+ |- (((!p'. (!q'. ((((Arg x) = (Arg z)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((Arg x) = (Arg z)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((Arg x) = (Arg z)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c= cArg f0 cArg f1 b0 c==> c==> b0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> b0 b1 * / ! c==> c= c= cArg f0 cArg f1 b0 c==> c==> b0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> b0 b1 f2 * / ! c==> c= c= cArg f0 cArg f1 b0 c==> c==> b0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> b0 b1 f2
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))) |- (((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> q')))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 f2
- |- ((\n. ((_0 >= (BIT0 n)) = (_0 >= n))) n)
T * / c= c>= c_0 cBIT0 b0 c>= c_0 b0 f0
- |- ((\n. (((BIT1 n) * _0) = _0)) n)
T * / c= c* cBIT1 b0 c_0 c_0 f0
- |- ((_0 - _0) = _0)
T c= c- c_0 c_0 c_0
+ |- ((\y. (x IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)))) y)
T * / cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f1
+ ((real_lt x) y) |- (((real_lt x) y) /\ (((real_le x) y) = T))
T c==> creal_lt f0 f1 c/\ creal_lt f0 f1 c= creal_le f0 f1 cT
+ |- (((!s. (!t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u)))))) ==> ((\s. (!t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u)))))) s)) = ((\s. (!t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u)))))) s))
T c= c==> ! ! c==> cSUBSET b0 b1 ! c==> cSUBSET b1 b2 cSUBSET b0 b2 * / ! c==> cSUBSET b0 b1 ! c==> cSUBSET b1 b2 cSUBSET b0 b2 f0 * / ! c==> cSUBSET b0 b1 ! c==> cSUBSET b1 b2 cSUBSET b0 b2 f0
+ |- (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = q')) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = (p' ==> q'))))
T c==> c= cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY f1 c==> c==> f1 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY f2 c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> f1 f2
- |- (((!n. ((_0 = (BIT1 n)) = F)) ==> ((\n. ((_0 = (BIT1 n)) = F)) n)) = ((\n. ((_0 = (BIT1 n)) = F)) n))
T c= c==> ! c= c= c_0 cBIT1 b0 cF * / c= c= c_0 cBIT1 b0 cF f0 * / c= c= c_0 cBIT1 b0 cF f0
- |- (((!n. (((BIT1 m) = (BIT1 n)) = (m = n))) ==> ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n)) = ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n))
T c= c==> ! c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1
+ (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- ((~ (x = (vec (NUMERAL _0)))) ==> (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c= f1 cArg f0 c==> c~ c= f2 cvec cNUMERAL c_0 c==> c= cArg f2 cArg f0 cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0
- |- ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
+ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)) |- ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))
T c==> cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY
+ |- (((~ (!x. ((x IN s) ==> (x IN (a INSERT EMPTY))))) ==> (?z. ((~ (a = z)) /\ (z IN s)))) = ((~ (s SUBSET (a INSERT EMPTY))) ==> (?z. ((~ (a = z)) /\ (z IN s)))))
T c= c==> c~ ! c==> cIN b0 f0 cIN b0 * * part cINSERT f1 part cEMPTY c? / c/\ c~ c= f1 b0 cIN b0 f0 c==> c~ cSUBSET f0 * * part cINSERT f1 part cEMPTY c? / c/\ c~ c= f1 b0 cIN b0 f0
+ |- (((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))))) ==> F)
T c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) ==> ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)) = ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m))
T c= c==> ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0 * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
- |- ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)
T * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
+ (~ (?z. ((~ (a = z)) /\ (s z)))), ((s x) /\ (~ (x = a))) |- (a = x)
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c/\ * f1 f2 c~ c= f2 f0 c= f0 f2
- |- (((!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) ==> ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n)) = ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
- |- ((_0 EXP _0) = (BIT1 _0))
T c= cEXP c_0 c_0 cBIT1 c_0
- (~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) |- F
T c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF
- |- ((\m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)), (x = ((complex_mul (Cx u)) z)), ((real_lt (real_of_num (NUMERAL _0))) u) |- ((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% u) z) = ((vector_add (vec (NUMERAL _0))) ((% t2) z))))))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c= f0 ccomplex_mul cCx f3 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= c% f3 f1 cvector_add cvec cNUMERAL c_0 c% b1 f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3
- |- (((!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) ==> ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n)) = ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1 * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1
+ |- (((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)
T * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- (~ F), (~ (?z. ((~ (a = z)) /\ (s z)))), ((s x) /\ (~ (x = a))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c/\ * f1 f2 c~ c= f2 f0 c/\ c~ cF cF
+ |- ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
- |- (((!n. (~ (_0 >= (BIT1 n)))) ==> ((\n. (~ (_0 >= (BIT1 n)))) n)) = ((\n. (~ (_0 >= (BIT1 n)))) n))
T c= c==> ! c~ c>= c_0 cBIT1 b0 * / c~ c>= c_0 cBIT1 b0 f0 * / c~ c>= c_0 cBIT1 b0 f0
- |- ((!s. (!a. ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z)))))) = (!s. (!a. ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F))))
T c= ! ! c==> c~ ! c==> * b0 b2 c= b2 b1 c? / c/\ c~ c= b1 b2 * b0 b2 ! ! c==> c~ c==> c~ ! c==> * b0 b2 c= b2 b1 c? / c/\ c~ c= b1 b2 * b0 b2 cF
+ (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = T)
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c= f1 cArg f0 c= c==> c= cArg f2 cArg f0 cIN f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY cT
- |- ((?z'. ((~ (a = z')) /\ (s z))) = ((?z. (~ (a = z))) /\ (s z)))
T c= c? / c/\ c~ c= f0 b0 * f1 f2 c/\ c? / c~ c= f0 b0 * f1 f2
+ |- (((!t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u))))) ==> ((\t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u))))) t)) = ((\t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u))))) t))
T c= c==> ! c==> cSUBSET f0 b0 ! c==> cSUBSET b0 b1 cSUBSET f0 b1 * / c==> cSUBSET f0 b0 ! c==> cSUBSET b0 b1 cSUBSET f0 b1 f1 * / c==> cSUBSET f0 b0 ! c==> cSUBSET b0 b1 cSUBSET f0 b1 f1
+ |- ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)
T * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
- |- ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
+ ((~ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY))) ==> (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY)))))), (((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY)))))) |- (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY)))))
T c==> c==> c~ cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c==> cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))))
T c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- (((!x. (!y. (y IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY))))) ==> ((\x. (!y. (y IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY))))) x)) = ((\x. (!y. (y IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY))))) x))
T c= c==> ! ! cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * / ! cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f0 * / ! cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f0
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))) |- (((Arg x) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c= c= cArg f0 cArg f1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1
- ((Cx (real_of_num (NUMERAL _0))) = x) |- (x = (Cx (real_of_num (NUMERAL _0))))
T c==> c= cCx creal_of_num cNUMERAL c_0 f0 c= f0 cCx creal_of_num cNUMERAL c_0
+ (((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))))) \/ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))))))) |- F
T c==> c\/ c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))
T c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((\n. ((ODD (BIT0 n)) = F)) n)
T * / c= cODD cBIT0 b0 cF f0
- |- ((((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F) ==> ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F)) = ((~ ((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z))))) ==> F))
T c= c==> c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF c==> c~ c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 cF
- (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))), (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))
T c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
- |- ((_0 - (BIT1 n)) = _0)
T c= c- c_0 cBIT1 f0 c_0
+ |- ((\x. (!y. (x IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY))))) x)
T * / ! cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f0
- |- (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))
T c= c* cBIT0 f0 cBIT1 f1 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 f1
+ |- ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))
T c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)
T * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
- |- (((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) ==> ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m)) = ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m))
T c= c==> ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0 * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0
- |- ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T)))
T c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
- |- (((!n. ((EVEN (NUMERAL n)) = (EVEN n))) ==> ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n)) = ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n))
T c= c==> ! c= cEVEN cNUMERAL b0 cEVEN b0 * / c= cEVEN cNUMERAL b0 cEVEN b0 f0 * / c= cEVEN cNUMERAL b0 cEVEN b0 f0
+ |- (((basis (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0))) = F)
T c= c= cbasis cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- ((((real_lt (real_of_num (NUMERAL _0))) u) /\ (x = ((complex_mul (Cx u)) z))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f0 ccomplex_mul cCx f3 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
- |- ((\n. ((ODD (BIT1 n)) = T)) n)
T * / c= cODD cBIT1 b0 cT f0
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
- |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((vec (NUMERAL _0)) = (basis k)) = F))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= cvec cNUMERAL c_0 cbasis f0 cF
- |- ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n)
T * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0
- |- ((_0 = _0) = T)
T c= c= c_0 c_0 cT
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- |- ((\n. (((BIT0 n) * _0) = _0)) n)
T * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((BIT1 n) >= (BIT1 m)) = (n >= m))
T c= c>= cBIT1 f0 cBIT1 f1 c>= f0 f1
- |- (((!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) ==> ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)) = ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n))
T c= c==> ! c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1 * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
+ |- ((\q'. (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = q')) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY f1 c==> c==> f1 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY b0 c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> f1 b0 f2
+ |- ((!z. ((P z) ==> (Q z))) ==> ((?z. (P z)) ==> (?z. (Q z))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
+ |- ((?z. ((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z))))))) ==> (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY))))))
T c==> c? / c/\ c~ c= cvec cNUMERAL c_0 b0 cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY
+ |- ((!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) ==> (!s. (!t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u)))))))
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 ! ! c==> cSUBSET b0 b1 ! c==> cSUBSET b1 b2 cSUBSET b0 b2
+ |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (dimindex UNIV))) ==> (((basis (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0))) = F)) = (((basis (NUMERAL (BIT1 _0))) = (vec (NUMERAL _0))) = F))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c= cbasis cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF c= c= cbasis cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cF
+ (x = (vec (NUMERAL _0))) |- (T = (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c= f0 cvec cNUMERAL c_0 c= cT c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ |- (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))
T c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ ((\x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) u) |- (((((real_lt (real_of_num (NUMERAL _0))) u) /\ (x = ((complex_mul (Cx u)) z))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 f2 c= c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f2 c= f0 ccomplex_mul cCx f2 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (a = (Arg z)) |- ((Arg z) = a)
T c==> c= f0 cArg f1 c= cArg f1 f0
+ (~ (!x. ((s x) ==> (x = a)))) |- ((~ (?z. ((~ (a = z)) /\ (s z)))) ==> F)
T c==> c~ ! c==> * f0 b0 c= b0 f1 c==> c~ c? / c/\ c~ c= f1 b0 * f0 b0 cF
+ (~ (?z. ((~ (a = z)) /\ (s z)))), ((s x) /\ (~ (x = a))) |- ((a = a) = ((a = x) /\ (a = a)))
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c/\ * f1 f2 c~ c= f2 f0 c= c= f0 f0 c/\ c= f0 f2 c= f0 f0
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)), (x = ((complex_mul (Cx u)) z)), ((real_lt (real_of_num (NUMERAL _0))) u) |- (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% u) z) = ((vector_add (vec (NUMERAL _0))) ((% t2) z)))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c= f0 ccomplex_mul cCx f3 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= c% f3 f1 cvector_add cvec cNUMERAL c_0 c% b1 f1
+ (x = (vec (NUMERAL _0))) |- ((x = (vec (NUMERAL _0))) /\ (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c= f0 cvec cNUMERAL c_0 c/\ c= f0 cvec cNUMERAL c_0 c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- ((\s. (!t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u)))))) s)
T * / ! c==> cSUBSET b0 b1 ! c==> cSUBSET b1 b2 cSUBSET b0 b2 f0
+ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)) |- ((\u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))) u)
T c==> cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * / c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0 f1
+ ((\x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) u) |- (((real_lt (real_of_num (NUMERAL _0))) u) /\ (x = ((complex_mul (Cx u)) z)))
T c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 f2 c/\ creal_lt creal_of_num cNUMERAL c_0 f2 c= f0 ccomplex_mul cCx f2 f1
+ |- ((~ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY))) ==> (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY))))))
T c==> c~ cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY
+ |- (((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)) \/ (~ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY))))
T c\/ cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c~ cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY
+ |- (((!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
+ |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((a = (Arg z)) ==> ((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c= f1 cArg f0 c==> c~ c= f2 cCx creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f2 ccomplex_mul cCx f3 f0 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% u) z) = ((vector_add (vec (NUMERAL _0))) ((% t2) z))))))) = (((% u) z) IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c= c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= c% f0 f1 cvector_add cvec cNUMERAL c_0 c% b1 f1 cIN c% f0 f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)) |- (!u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u)))
T c==> cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY ! c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0
+ |- (((!y. (x IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)))) ==> ((\y. (x IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)))) y)) = ((\y. (x IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)))) y))
T c= c==> ! cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * / cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f1 * / cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f1
+ |- ((\c. (!x. (((complex_mul (Cx c)) x) = ((% c) x)))) c)
T * / ! c= ccomplex_mul cCx b0 b1 c% b0 b1 f0
+ |- ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))
T c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (~ (?z. ((~ (a = z)) /\ (s z)))) |- (((s x) /\ (~ (x = a))) ==> F)
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c/\ * f1 f2 c~ c= f2 f0 cF
+ |- ((x IN (GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z))))) = ((Arg x) = a))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 c= cArg f0 f1
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ ((~ (x = (vec (NUMERAL _0)))) ==> (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))), ((x = (vec (NUMERAL _0))) ==> (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))) |- (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> c==> c~ c= f0 cvec cNUMERAL c_0 c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c= f0 cvec cNUMERAL c_0 c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)), (((real_lt (real_of_num (NUMERAL _0))) u) /\ (x = ((complex_mul (Cx u)) z))) |- ((((real_lt (real_of_num (NUMERAL _0))) u) /\ (x = ((complex_mul (Cx u)) z))) /\ (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f0 ccomplex_mul cCx f3 f1 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f0 ccomplex_mul cCx f3 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- ((~ (!x. ((x IN s) ==> (x IN (a INSERT EMPTY))))) ==> (?z. ((~ (a = z)) /\ (z IN s))))
T c==> c~ ! c==> cIN b0 f0 cIN b0 * * part cINSERT f1 part cEMPTY c? / c/\ c~ c= f1 b0 cIN b0 f0
+ |- (((BIT1 m) <= (BIT0 n)) = (m < n))
T c= c<= cBIT1 f0 cBIT0 f1 c< f0 f1
+ |- (((!q'. ((((Arg x) = (Arg z)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (p' ==> q'))))) ==> ((\q'. ((((Arg x) = (Arg z)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (p' ==> q'))))) q')) = ((\q'. ((((Arg x) = (Arg z)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c= cArg f0 cArg f1 f2 c==> c==> f2 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> f2 b0 * / c==> c= c= cArg f0 cArg f1 f2 c==> c==> f2 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> f2 b0 f3 * / c==> c= c= cArg f0 cArg f1 f2 c==> c==> f2 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> f2 b0 f3
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
+ |- ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)
T * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ (((% c) x) = ((complex_mul (Cx c)) x)) |- (((complex_mul (Cx c)) x) = ((% c) x))
T c==> c= c% f0 f1 ccomplex_mul cCx f0 f1 c= ccomplex_mul cCx f0 f1 c% f0 f1
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)), (x = ((complex_mul (Cx u)) z)), ((real_lt (real_of_num (NUMERAL _0))) u) |- (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c= f0 ccomplex_mul cCx f3 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) ==> ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)) = ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
+ |- ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))
T c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((x = (vec (NUMERAL _0))) \/ (~ (x = (vec (NUMERAL _0)))))
T c\/ c= f0 cvec cNUMERAL c_0 c~ c= f0 cvec cNUMERAL c_0
+ ((\x. ((s x) /\ (~ (x = a)))) x) |- ((((s x) /\ (~ (x = a))) ==> F) = F)
T c==> * / c/\ * f0 b0 c~ c= b0 f1 f2 c= c==> c/\ * f0 f2 c~ c= f2 f1 cF cF
+ |- ((((Arg x) = (Arg z)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (p' ==> q'))))
T c==> c= c= cArg f0 cArg f1 f2 c==> c==> f2 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> f2 f3
+ (x = ((complex_mul (Cx u)) z)) |- ((((% u) z) IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> c= f0 ccomplex_mul cCx f1 f2 c= cIN c% f1 f2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((\p'. (!q'. ((((Arg x) = (Arg z)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = q')) ==> ((((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (p' ==> q')))))) p')
T * / ! c==> c= c= cArg f0 cArg f1 b0 c==> c==> b0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 c= c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> b0 b1 f2
+ |- (((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (~ ((basis k) = (vec (NUMERAL _0)))))) ==> ((\k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (~ ((basis k) = (vec (NUMERAL _0)))))) k)) = ((\k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (~ ((basis k) = (vec (NUMERAL _0)))))) k))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c~ c= cbasis b0 cvec cNUMERAL c_0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c~ c= cbasis b0 cvec cNUMERAL c_0 f0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c~ c= cbasis b0 cvec cNUMERAL c_0 f0
+ (~ (!x. ((s x) ==> (x = a)))) |- (((?x. ((s x) /\ (~ (x = a)))) ==> F) = F)
T c==> c~ ! c==> * f0 b0 c= b0 f1 c= c==> c? / c/\ * f0 b0 c~ c= b0 f1 cF cF
+ |- (((~ (!x. ((s x) ==> (x = a)))) ==> (?z. ((~ (a = z)) /\ (s z)))) = ((~ (!x. ((x IN s) ==> (x IN (a INSERT EMPTY))))) ==> (?z. ((~ (a = z)) /\ (z IN s)))))
T c= c==> c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0 c==> c~ ! c==> cIN b0 f0 cIN b0 * * part cINSERT f1 part cEMPTY c? / c/\ c~ c= f1 b0 cIN b0 f0
+ |- ((((real_le (real_of_num (NUMERAL _0))) u) /\ ((((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% u) z) = ((vector_add (vec (NUMERAL _0))) ((% u) z))))) = ((\t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% u) z) = ((vector_add (vec (NUMERAL _0))) ((% t2) z)))))) u))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL cBIT1 c_0 c= c% f0 f1 cvector_add cvec cNUMERAL c_0 c% f0 f1 * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= c% f0 f1 cvector_add cvec cNUMERAL c_0 c% b0 f1 f0
+ |- ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)
T * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) |- ((\t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u))))) t)
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 * / ! c==> cSUBSET f0 b0 c==> cSUBSET b0 b1 cSUBSET f0 b1 f1
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- (!u. (((\x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) u) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 ! c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= f0 ccomplex_mul cCx b1 f1 b0 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- ((\w. (!z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((Arg w) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (w = ((complex_mul (Cx x)) z)))))))) w)
T * / ! c==> c/\ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c~ c= b1 cCx creal_of_num cNUMERAL c_0 c= c= cArg b0 cArg b1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= b0 ccomplex_mul cCx b2 b1 f0
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))), (s SUBSET t) |- (((t SUBSET u) ==> (s SUBSET u)) = T)
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 c==> cSUBSET f0 f1 c= c==> cSUBSET f1 f2 cSUBSET f0 f2 cT
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))))) |- ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))))
T c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)))) = ((\t. (t \/ (~ t))) ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * / c\/ b0 c~ b0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)), (((real_lt (real_of_num (NUMERAL _0))) u) /\ (x = ((complex_mul (Cx u)) z))), ((real_lt (real_of_num (NUMERAL _0))) u) |- (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= f0 ccomplex_mul cCx f3 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- ((\x. (((complex_mul (Cx c)) x) = ((% c) x))) x)
T * / c= ccomplex_mul cCx f0 b0 c% f0 b0 f1
+ |- ((\n. ((_0 < (BIT1 n)) = T)) n)
T * / c= c< c_0 cBIT1 b0 cT f0
+ |- ((_0 < (BIT1 n)) = T)
T c= c< c_0 cBIT1 f0 cT
+ |- (((!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) ==> ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)) = ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n))
T c= c==> ! c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
+ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)) |- (((!u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))) ==> ((\u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))) u)) = ((\u. ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET u))) u))
T c==> cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c= c==> ! c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0 * / c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0 f1 * / c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 b0 f1
+ |- (((!q'. (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = q')) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = (p' ==> q'))))) ==> ((\q'. (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = q')) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = (p' ==> q'))))) q')) = ((\q'. (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = q')) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY f1 c==> c==> f1 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY b0 c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> f1 b0 * / c==> c= cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY f1 c==> c==> f1 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY b0 c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> f1 b0 f2 * / c==> c= cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY f1 c==> c==> f1 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY b0 c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> f1 b0 f2
+ |- ((~ (s SUBSET (a INSERT EMPTY))) ==> (?z. ((~ (a = z)) /\ (z IN s))))
T c==> c~ cSUBSET f0 * * part cINSERT f1 part cEMPTY c? / c/\ c~ c= f1 b0 cIN b0 f0
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))), (s SUBSET t) |- ((s SUBSET t) /\ (!u. ((t SUBSET u) ==> (s SUBSET u))))
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 c==> cSUBSET f0 f1 c/\ cSUBSET f0 f1 ! c==> cSUBSET f1 b0 cSUBSET f0 b0
+ |- ((x = (vec (NUMERAL _0))) ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = T))
T c==> c= f0 cvec cNUMERAL c_0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY cT
+ (~ (?z. ((~ (a = z)) /\ (s z)))) |- ((a = _2100396) \/ (~ (s _2100396)))
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c\/ c= f0 f2 c~ * f1 f2
+ |- ((_0 <= _0) = T)
T c= c<= c_0 c_0 cT
+ |- ((\z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((Arg w) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (w = ((complex_mul (Cx x)) z))))))) z)
T * / c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= c= cArg f0 cArg b0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= f0 ccomplex_mul cCx b1 b0 f1
+ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)) |- (((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)) /\ (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY))))))
T c==> cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c/\ cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))) |- ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= f1 cCx creal_of_num cNUMERAL c_0
+ ((~ (x = (vec (NUMERAL _0)))) ==> (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))) |- (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> c==> c~ c= f0 cvec cNUMERAL c_0 c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) |- ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u))))
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 c==> cSUBSET f0 f1 ! c==> cSUBSET f1 b0 cSUBSET f0 b0
+ |- ((\t. (t \/ (~ t))) (x = (vec (NUMERAL _0))))
T * / c\/ b0 c~ b0 c= f0 cvec cNUMERAL c_0
+ ((~ ((vec (NUMERAL _0)) = z)) /\ ((Arg z) = a)) |- (~ (z = (vec (NUMERAL _0))))
T c==> c/\ c~ c= cvec cNUMERAL c_0 f0 c= cArg f0 f1 c~ c= f0 cvec cNUMERAL c_0
+ ((\x. ((s x) /\ (~ (x = a)))) x) |- ((s x) /\ (~ (x = a)))
T c==> * / c/\ * f0 b0 c~ c= b0 f1 f2 c/\ * f0 f2 c~ c= f2 f1
+ |- ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))
T c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u))))))
T c==> cSUBSET f0 f1 c==> cSUBSET f1 f2 cSUBSET f0 f2
+ (~ (?z. ((~ (a = z)) /\ (s z)))), ((s x) /\ (~ (x = a))) |- (((x = a) ==> F) = F)
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c/\ * f1 f2 c~ c= f2 f0 c= c==> c= f2 f0 cF cF
+ (~ (?z. ((~ (a = z)) /\ (s z)))) |- (!x. (((\x. ((s x) /\ (~ (x = a)))) x) ==> F))
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 ! c==> * / c/\ * f1 b1 c~ c= b1 f0 b0 cF
+ (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) |- ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) /\ ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))) = (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 c/\ c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))))) |- (((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))))) /\ F)
T c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (~ (?z. ((~ (a = z)) /\ (s z)))) |- ((?x. ((s x) /\ (~ (x = a)))) ==> F)
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c? / c/\ * f1 b0 c~ c= b0 f0 cF
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)), (x = ((complex_mul (Cx u)) z)), ((real_lt (real_of_num (NUMERAL _0))) u) |- (((% u) z) IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c= f0 ccomplex_mul cCx f3 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 cIN c% f3 f1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ (!x. ((s x) ==> (x = a)))) |- ((~ (!x. ((s x) ==> (x = a)))) /\ (?z. ((~ (a = z)) /\ (s z))))
T c==> c~ ! c==> * f0 b0 c= b0 f1 c/\ c~ ! c==> * f0 b0 c= b0 f1 c? / c/\ c~ c= f1 b0 * f0 b0
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (((~ ((basis k) = (vec (NUMERAL _0)))) ==> (((basis k) = (vec (NUMERAL _0))) = F)) = (((basis k) = (vec (NUMERAL _0))) = F))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c~ c= cbasis f0 cvec cNUMERAL c_0 c= c= cbasis f0 cvec cNUMERAL c_0 cF c= c= cbasis f0 cvec cNUMERAL c_0 cF
+ |- (x IN ((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)))
T cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))) |- (((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))) = (((Arg x) = (Arg z)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c= c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= cArg f0 cArg f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))
T c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) |- (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 ! ! c==> cSUBSET f0 b0 c==> cSUBSET b0 b1 cSUBSET f0 b1
+ |- (((x = (vec (NUMERAL _0))) ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = q')) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) ==> q')))
T c==> c==> c= f0 cvec cNUMERAL c_0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY f1 c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> c= f0 cvec cNUMERAL c_0 f1
+ |- ((~ F) = T)
T c= c~ cF cT
+ |- ((~ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((a = (Arg z)) ==> ((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F)
T c==> c~ c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c= f1 cArg f0 c==> c~ c= f2 cCx creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f2 ccomplex_mul cCx f3 f0 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((NUMERAL m) <= (NUMERAL n)) = (m <= n))
T c= c<= cNUMERAL f0 cNUMERAL f1 c<= f0 f1
+ |- ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))), (s SUBSET t) |- ((t SUBSET u) ==> (s SUBSET u))
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 c==> cSUBSET f0 f1 c==> cSUBSET f1 f2 cSUBSET f0 f2
+ (~ (?z. ((~ (a = z)) /\ (s z)))) |- (((!x. (((\x. ((s x) /\ (~ (x = a)))) x) ==> F)) ==> ((?x. ((s x) /\ (~ (x = a)))) ==> F)) = ((?x. ((s x) /\ (~ (x = a)))) ==> F))
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c= c==> ! c==> * / c/\ * f1 b1 c~ c= b1 f0 b0 cF c==> c? / c/\ * f1 b0 c~ c= b0 f0 cF c==> c? / c/\ * f1 b0 c~ c= b0 f0 cF
+ (~ (?z. ((~ (a = z)) /\ (s z)))), ((s x) /\ (~ (x = a))) |- (x = a)
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c/\ * f1 f2 c~ c= f2 f0 c= f2 f0
+ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))))) |- (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((~ ((vec (NUMERAL _0)) = z)) /\ ((Arg z) = a)) ==> ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))
T c==> c/\ c~ c= cvec cNUMERAL c_0 f0 c= cArg f0 f1 c/\ c~ c= f0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)
T * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
+ |- (T = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (dimindex UNIV))))
T c= cT c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV
+ |- ((((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))))) ==> ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))) = T)
T c= c==> c/\ c~ c= cvec cNUMERAL c_0 f0 cIN f0 * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 c/\ c~ c= f0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY cT
+ |- ((((~ ((vec (NUMERAL _0)) = z)) /\ ((Arg z) = a)) ==> ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))) = (((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))))) ==> ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))))
T c= c==> c/\ c~ c= cvec cNUMERAL c_0 f0 c= cArg f0 f1 c/\ c~ c= f0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c/\ c~ c= cvec cNUMERAL c_0 f0 cIN f0 * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 c/\ c~ c= f0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- (((!n. ((_0 < (BIT1 n)) = T)) ==> ((\n. ((_0 < (BIT1 n)) = T)) n)) = ((\n. ((_0 < (BIT1 n)) = T)) n))
T c= c==> ! c= c< c_0 cBIT1 b0 cT * / c= c< c_0 cBIT1 b0 cT f0 * / c= c< c_0 cBIT1 b0 cT f0
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) |- (((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u)))) = T)
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 c= c==> cSUBSET f0 f1 ! c==> cSUBSET f1 b0 cSUBSET f0 b0 cT
+ |- (((!n. (((BIT1 m) <= (BIT0 n)) = (m < n))) ==> ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1 * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)), (x = ((complex_mul (Cx u)) z)), ((real_lt (real_of_num (NUMERAL _0))) u) |- (((real_le (real_of_num (NUMERAL _0))) u) /\ ((((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% u) z) = ((vector_add (vec (NUMERAL _0))) ((% u) z)))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c= f0 ccomplex_mul cCx f3 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0 c= c% f3 f1 cvector_add cvec cNUMERAL c_0 c% f3 f1
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) |- ((!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) /\ (!s. (!t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u)))))))
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 c/\ ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 ! ! c==> cSUBSET b0 b1 ! c==> cSUBSET b1 b2 cSUBSET b0 b2
+ |- ((\y. (((real_lt x) y) ==> ((real_le x) y))) y)
T * / c==> creal_lt f0 b0 creal_le f0 b0 f1
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)), ((\x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) u) |- (((\x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) u) /\ (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 f3 c/\ * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 f3 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))) |- ((((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((Arg x) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))))) = (((Arg x) = (Arg z)) = (?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c= c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= f1 cCx creal_of_num cNUMERAL c_0 c= c= cArg f0 cArg f1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 c= c= cArg f0 cArg f1 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1
+ (~ (?z. ((~ (a = z)) /\ (s z)))) |- ((s _2100396) ==> (a = _2100396))
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> * f1 f2 c= f0 f2
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)) |- ((?x. (((real_lt (real_of_num (NUMERAL _0))) x) /\ (x = ((complex_mul (Cx x)) z)))) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 ccomplex_mul cCx b0 f1 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) |- (!t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u)))))
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 ! c==> cSUBSET f0 b0 ! c==> cSUBSET b0 b1 cSUBSET f0 b1
+ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)) |- ((((vec (NUMERAL _0)) INSERT EMPTY) SUBSET u) ==> ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET u))
T c==> cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c==> cSUBSET * * part cINSERT cvec cNUMERAL c_0 part cEMPTY f1 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 f1
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) |- ((!t. ((s SUBSET t) ==> (!u. ((t SUBSET u) ==> (s SUBSET u))))) = T)
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 c= ! c==> cSUBSET f0 b0 ! c==> cSUBSET b0 b1 cSUBSET f0 b1 cT
+ |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
+ (~ (?z. ((~ (a = z)) /\ (s z)))) |- ((((\x. ((s x) /\ (~ (x = a)))) x) ==> F) = T)
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c= c==> * / c/\ * f1 b0 c~ c= b0 f0 f2 cF cT
+ (~ (?z. ((~ (a = z)) /\ (s z)))), ((s x) /\ (~ (x = a))) |- ((a = x) /\ (a = a))
T c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 c==> c/\ * f1 f2 c~ c= f2 f0 c/\ c= f0 f2 c= f0 f0
+ ((~ ((vec (NUMERAL _0)) = z)) /\ ((Arg z) = a)) |- ((~ (z = (vec (NUMERAL _0)))) /\ (a = (Arg z)))
T c==> c/\ c~ c= cvec cNUMERAL c_0 f0 c= cArg f0 f1 c/\ c~ c= f0 cvec cNUMERAL c_0 c= f1 cArg f0
+ |- ((\x. (!y. (((aff_ge (x INSERT EMPTY)) (y INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5123. (?z. (((SETSPEC GEN%PVAR%5123) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (z = ((vector_add ((% t1) x)) ((% t2) y)))))))) z))))))) x)
T * / ! c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 b0 c% b5 b1 b3 f0
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)), (x = ((complex_mul (Cx u)) z)), ((real_lt (real_of_num (NUMERAL _0))) u) |- (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c= f0 ccomplex_mul cCx f3 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ (x = (vec (NUMERAL _0)))), (~ (z = (vec (NUMERAL _0)))), (a = (Arg z)), (x = ((complex_mul (Cx u)) z)), ((real_lt (real_of_num (NUMERAL _0))) u) |- (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% u) z) = ((vector_add (vec (NUMERAL _0))) ((% t2) z))))))
T c==> c~ c= f0 cvec cNUMERAL c_0 c==> c~ c= f1 cvec cNUMERAL c_0 c==> c= f2 cArg f1 c==> c= f0 ccomplex_mul cCx f3 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= c% f3 f1 cvector_add cvec cNUMERAL c_0 c% b0 f1
+ |- ((?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY))))) = T)
T c= c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY cT
+ |- ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n)
T * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1
+ |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((basis k) = (vec (NUMERAL _0))) = F))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= cbasis f0 cvec cNUMERAL c_0 cF
+ (x = (vec (NUMERAL _0))) |- ((x = (vec (NUMERAL _0))) /\ ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = T))
T c==> c= f0 cvec cNUMERAL c_0 c/\ c= f0 cvec cNUMERAL c_0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY cT
+ ((~ ((vec (NUMERAL _0)) = z)) /\ ((Arg z) = a)) |- (a = (Arg z))
T c==> c/\ c~ c= cvec cNUMERAL c_0 f0 c= cArg f0 f1 c= f1 cArg f0
+ |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) |- ((\u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))) u)
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 * / c==> cSUBSET f0 f1 c==> cSUBSET f1 b0 cSUBSET f0 b0 f2
+ |- (((x = y) /\ (x = z)) ==> (y = z))
T c==> c/\ c= f0 f1 c= f0 f2 c= f1 f2
+ (!s. (!t. (!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))))) |- (((!u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))) ==> ((\u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))) u)) = ((\u. ((s SUBSET t) ==> ((t SUBSET u) ==> (s SUBSET u)))) u))
T c==> ! ! ! c==> cSUBSET b0 b1 c==> cSUBSET b1 b2 cSUBSET b0 b2 c= c==> ! c==> cSUBSET f0 f1 c==> cSUBSET f1 b0 cSUBSET f0 b0 * / c==> cSUBSET f0 f1 c==> cSUBSET f1 b0 cSUBSET f0 b0 f2 * / c==> cSUBSET f0 f1 c==> cSUBSET f1 b0 cSUBSET f0 b0 f2
+ |- ((x IN (GSPEC (\GEN%PVAR%5123. (?z'. (((SETSPEC GEN%PVAR%5123) (p z')) z'))))) = (p x))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 * f1 f0
+ |- (((!x. (!y. (((real_lt x) y) ==> ((real_le x) y)))) ==> ((\x. (!y. (((real_lt x) y) ==> ((real_le x) y)))) x)) = ((\x. (!y. (((real_lt x) y) ==> ((real_le x) y)))) x))
T c= c==> ! ! c==> creal_lt b0 b1 creal_le b0 b1 * / ! c==> creal_lt b0 b1 creal_le b0 b1 f0 * / ! c==> creal_lt b0 b1 creal_le b0 b1 f0
+ |- ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))
T c\/ c= f0 f1 c\/ c~ c= f2 f0 c~ c= f2 f1
+ |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
+ (~ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((a = (Arg z)) ==> ((~ (x = (Cx (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) u) ==> ((x = ((complex_mul (Cx u)) z)) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) u)) u) = (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))))) \/ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Arg z))) = (real_of_num (NUMERAL _0))) /\ ((~ (x = (Cx (real_of_num (NUMERAL _0))))) /\ (((real_gt u) (real_of_num (NUMERAL _0))) /\ ((x = ((complex_mul (Cx u)) z)) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))))))
T c==> c~ c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c= f1 cArg f0 c==> c~ c= f2 cCx creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f2 ccomplex_mul cCx f3 f0 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f3 creal_of_num cNUMERAL cBIT1 c_0 c\/ c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cArg f0 creal_of_num cNUMERAL c_0 c/\ c~ c= f2 cCx creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 c/\ c= f2 ccomplex_mul cCx f3 f0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))
T c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- (((~ (?z. ((~ (a = z)) /\ (s z)))) ==> F) = (?z. ((~ (a = z)) /\ (s z))))
T c= c==> c~ c? / c/\ c~ c= f0 b0 * f1 b0 cF c? / c/\ c~ c= f0 b0 * f1 b0
+ |- ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))))
T c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((!z. (((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))))) ==> ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY)))))) ==> ((?z. ((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z))))))) ==> (?b. ((~ (b = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (b INSERT EMPTY)))))))
T c==> ! c==> c/\ c~ c= cvec cNUMERAL c_0 b0 cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c? / c/\ c~ c= cvec cNUMERAL c_0 b0 cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 c? / c/\ c~ c= b0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT b0 part cEMPTY
+ |- ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))
T c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((\p'. (!q'. (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) = p') ==> ((p' ==> ((x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY))) = q')) ==> (((x IN ((vec (NUMERAL _0)) INSERT EMPTY)) ==> (x IN ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) ((basis (NUMERAL (BIT1 _0))) INSERT EMPTY)))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY b0 c==> c==> b0 c= cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY b1 c= c==> cIN f0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cbasis cNUMERAL cBIT1 c_0 part cEMPTY c==> b0 b1 f1
+ |- ((\t. (t \/ (~ t))) ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY)))
T * / c\/ b0 c~ b0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY
+ |- (!z. (((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))))) ==> ((~ (z = (vec (NUMERAL _0)))) /\ ((GSPEC (\GEN%PVAR%5163. (?z. (((SETSPEC GEN%PVAR%5163) ((Arg z) = a)) z)))) SUBSET ((aff_ge ((vec (NUMERAL _0)) INSERT EMPTY)) (z INSERT EMPTY))))))
T c==> c/\ c~ c= cvec cNUMERAL c_0 f0 cIN f0 * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 c/\ c~ c= f0 cvec cNUMERAL c_0 cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f1 b1 * * part caff_ge * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (~ ((GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))) SUBSET ((vec (NUMERAL _0)) INSERT EMPTY))) |- (?z. ((~ ((vec (NUMERAL _0)) = z)) /\ (z IN (GSPEC (\GEN%PVAR%5162. (?z. (((SETSPEC GEN%PVAR%5162) ((Arg z) = a)) z)))))))
T c==> c~ cSUBSET * part cGSPEC / c? / cSETSPEC b0 c= cArg b1 f0 b1 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c? / c/\ c~ c= cvec cNUMERAL c_0 b0 cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= cArg b2 f0 b2
