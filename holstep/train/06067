N Cuxvzoz.deform_simplex_edge_exists
C |- (!V. (!g01. (!g12. (!v0. (!v1. (!v2. (!e. (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g01) (open_real_interval ((real_neg e) , e))) /\ (((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) /\ (((g01 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((g12 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. ((~ (v = v1)) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = ((real_add (distance (v0 , v1))) (g01 t))) /\ (((distance (v2 , ((f v1) t))) = ((real_add (distance (v2 , v1))) (g12 t))) /\ ((vector_norm ((f v1) t)) = (vector_norm v1)))))))))))))))))))
T c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c/\ creal_continuous_on f4 * part copen_real_interval c, creal_neg f3 f3 c/\ creal_continuous_on f5 * part copen_real_interval c, creal_neg f3 f3 c/\ c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= * f5 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f6 c, creal_neg b1 b1 c/\ ! ! c==> c~ c= b2 f1 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f0 * * b0 f1 b2 creal_add cdistance c, f0 f1 * f4 b2 c/\ c= cdistance c, f2 * * b0 f1 b2 creal_add cdistance c, f2 f1 * f5 b2 c= cvector_norm * * b0 f1 b2 cvector_norm f1
D TRUTH
A |- T
T cT
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D Cuxvzoz.deform_simplex_decrease_edge23
A |- (!V. (!g01. (!g12. (!v0. (!v1. (!v2. (!e. ((LET (\f. (LET_END (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g01) (open_real_interval ((real_neg e) , e))) /\ (((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) /\ (((g01 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((g12 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. ((~ (v = v1)) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = ((real_add (distance (v0 , v1))) (g01 t))) /\ (((distance (v2 , ((f v1) t))) = ((real_add (distance (v2 , v1))) (g12 t))) /\ ((vector_norm ((f v1) t)) = (vector_norm v1)))))))))))))) (\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))))))))))
T cLET / cLET_END c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c/\ creal_continuous_on f4 * part copen_real_interval c, creal_neg f3 f3 c/\ creal_continuous_on f5 * part copen_real_interval c, creal_neg f3 f3 c/\ c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= * f5 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f6 c, creal_neg b1 b1 c/\ ! ! c==> c~ c= b2 f1 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f0 * * b0 f1 b2 creal_add cdistance c, f0 f1 * f4 b2 c/\ c= cdistance c, f2 * * b0 f1 b2 creal_add cdistance c, f2 f1 * f5 b2 c= cvector_norm * * b0 f1 b2 cvector_norm f1 / / cCOND c= b0 f1 cmk_simplex1 cvec cNUMERAL c_0 f2 f0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f0 f1 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f1 * f5 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b0
+ |- ((\g01. (!g12. (!v0. (!v1. (!v2. (!e. ((LET (\f. (LET_END (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g01) (open_real_interval ((real_neg e) , e))) /\ (((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) /\ (((g01 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((g12 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. ((~ (v = v1)) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = ((real_add (distance (v0 , v1))) (g01 t))) /\ (((distance (v2 , ((f v1) t))) = ((real_add (distance (v2 , v1))) (g12 t))) /\ ((vector_norm ((f v1) t)) = (vector_norm v1)))))))))))))) (\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))))))))) g01)
T * / ! ! ! ! ! cLET / cLET_END c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ creal_gt cdot b3 ccross b4 b2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ creal_continuous_on b0 * part copen_real_interval c, creal_neg b5 b5 c/\ creal_continuous_on b1 * part copen_real_interval c, creal_neg b5 b5 c/\ c= * b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= * b1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ cdeformation b6 f0 c, creal_neg b7 b7 c/\ ! ! c==> c~ c= b8 b3 c= * * b6 b8 b9 b8 ! c==> creal_lt creal_abs b8 b7 c/\ c= cdistance c, b2 * * b6 b3 b8 creal_add cdistance c, b2 b3 * b0 b8 c/\ c= cdistance c, b4 * * b6 b3 b8 creal_add cdistance c, b4 b3 * b1 b8 c= cvector_norm * * b6 b3 b8 cvector_norm b3 / / cCOND c= b6 b3 cmk_simplex1 cvec cNUMERAL c_0 b4 b2 creal_pow cvector_norm b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, b2 b3 * b0 b7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, b4 b3 * b1 b7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b2 b4 cNUMERAL cBIT0 cBIT1 c_0 b6 f1
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))), ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f), (((g01 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((g12 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))), ((real_lt (real_of_num (NUMERAL _0))) e), ((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))), ((real_continuous_on g01) (open_real_interval ((real_neg e) , e))), ((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) |- (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. ((~ (v = v1)) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = ((real_add (distance (v0 , v1))) (g01 t))) /\ (((distance (v2 , ((f v1) t))) = ((real_add (distance (v2 , v1))) (g12 t))) /\ ((vector_norm ((f v1) t)) = (vector_norm v1))))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= / / cCOND c= b0 f1 cmk_simplex1 cvec cNUMERAL c_0 f2 f0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f0 f1 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f1 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 c==> c/\ c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c==> creal_continuous_on f3 * part copen_real_interval c, creal_neg f6 f6 c==> creal_continuous_on f4 * part copen_real_interval c, creal_neg f6 f6 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ cdeformation f5 f7 c, creal_neg b0 b0 c/\ ! ! c==> c~ c= b1 f1 c= * * f5 b1 b2 b1 ! c==> creal_lt creal_abs b1 b0 c/\ c= cdistance c, f0 * * f5 f1 b1 creal_add cdistance c, f0 f1 * f3 b1 c/\ c= cdistance c, f2 * * f5 f1 b1 creal_add cdistance c, f2 f1 * f4 b1 c= cvector_norm * * f5 f1 b1 cvector_norm f1
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ ((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) |- (((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) = T)
T c==> creal_continuous_on f0 * part copen_real_interval c, creal_neg f1 f1 c= creal_continuous_on f0 * part copen_real_interval c, creal_neg f1 f1 cT
+ ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f), ((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g01) (open_real_interval ((real_neg e) , e))) /\ (((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) /\ (((g01 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((g12 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) |- (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g01) (open_real_interval ((real_neg e) , e))) /\ (((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) /\ (((g01 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((g12 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) /\ (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. ((~ (v = v1)) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = ((real_add (distance (v0 , v1))) (g01 t))) /\ (((distance (v2 , ((f v1) t))) = ((real_add (distance (v2 , v1))) (g12 t))) /\ ((vector_norm ((f v1) t)) = (vector_norm v1)))))))))))
T c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ creal_gt cdot f0 ccross f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f6 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f6 f6 c/\ creal_continuous_on f4 * part copen_real_interval c, creal_neg f6 f6 c/\ c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ creal_gt cdot f0 ccross f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f6 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f6 f6 c/\ creal_continuous_on f4 * part copen_real_interval c, creal_neg f6 f6 c/\ c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ cdeformation f5 f7 c, creal_neg b0 b0 c/\ ! ! c==> c~ c= b1 f0 c= * * f5 b1 b2 b1 ! c==> creal_lt creal_abs b1 b0 c/\ c= cdistance c, f2 * * f5 f0 b1 creal_add cdistance c, f2 f0 * f3 b1 c/\ c= cdistance c, f1 * * f5 f0 b1 creal_add cdistance c, f1 f0 * f4 b1 c= cvector_norm * * f5 f0 b1 cvector_norm f0
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))), ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f), (((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) /\ (((g01 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((g12 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))), ((real_lt (real_of_num (NUMERAL _0))) e), ((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))), ((real_continuous_on g01) (open_real_interval ((real_neg e) , e))), ((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) |- (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. ((~ (v = v1)) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = ((real_add (distance (v0 , v1))) (g01 t))) /\ (((distance (v2 , ((f v1) t))) = ((real_add (distance (v2 , v1))) (g12 t))) /\ ((vector_norm ((f v1) t)) = (vector_norm v1))))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= / / cCOND c= b0 f1 cmk_simplex1 cvec cNUMERAL c_0 f2 f0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f0 f1 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f1 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 c==> c/\ creal_continuous_on f4 * part copen_real_interval c, creal_neg f6 f6 c/\ c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c==> creal_continuous_on f3 * part copen_real_interval c, creal_neg f6 f6 c==> creal_continuous_on f4 * part copen_real_interval c, creal_neg f6 f6 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ cdeformation f5 f7 c, creal_neg b0 b0 c/\ ! ! c==> c~ c= b1 f1 c= * * f5 b1 b2 b1 ! c==> creal_lt creal_abs b1 b0 c/\ c= cdistance c, f0 * * f5 f1 b1 creal_add cdistance c, f0 f1 * f3 b1 c/\ c= cdistance c, f2 * * f5 f1 b1 creal_add cdistance c, f2 f1 * f4 b1 c= cvector_norm * * f5 f1 b1 cvector_norm f1
- ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f) |- ((\f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) f)
T c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f5
+ |- (((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = (\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))) = ((\f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) (\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w)))))
T c= c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0
+ |- ((!v2. (!e. (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g01) (open_real_interval ((real_neg e) , e))) /\ (((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) /\ (((g01 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((g12 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. ((~ (v = v1)) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = ((real_add (distance (v0 , v1))) (g01 t))) /\ (((distance (v2 , ((f v1) t))) = ((real_add (distance (v2 , v1))) (g12 t))) /\ ((vector_norm ((f v1) t)) = (vector_norm v1)))))))))))))) = T)
T c= ! ! c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ creal_gt cdot f1 ccross b0 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ creal_continuous_on f2 * part copen_real_interval c, creal_neg b1 b1 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg b1 b1 c/\ c= * f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ cdeformation b2 f4 c, creal_neg b3 b3 c/\ ! ! c==> c~ c= b4 f1 c= * * b2 b4 b5 b4 ! c==> creal_lt creal_abs b4 b3 c/\ c= cdistance c, f0 * * b2 f1 b4 creal_add cdistance c, f0 f1 * f2 b4 c/\ c= cdistance c, b0 * * b2 f1 b4 creal_add cdistance c, b0 f1 * f3 b4 c= cvector_norm * * b2 f1 b4 cvector_norm f1 cT
- ((\f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) f) |- ((((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f) ==> (?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f))) = (?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)))
T c==> * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f5 c= c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) ==> (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g01) (open_real_interval ((real_neg e) , e))) /\ (((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) /\ (((g01 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((g12 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. ((~ (v = v1)) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = ((real_add (distance (v0 , v1))) (g01 t))) /\ (((distance (v2 , ((f v1) t))) = ((real_add (distance (v2 , v1))) (g12 t))) /\ ((vector_norm ((f v1) t)) = (vector_norm v1))))))))))))) = (?f. (((~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))) /\ (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g01) (open_real_interval ((real_neg e) , e))) /\ (((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) /\ (((g01 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((g12 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. ((~ (v = v1)) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = ((real_add (distance (v0 , v1))) (g01 t))) /\ (((distance (v2 , ((f v1) t))) = ((real_add (distance (v2 , v1))) (g12 t))) /\ ((vector_norm ((f v1) t)) = (vector_norm v1)))))))))))))
T c= c==> c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ creal_gt cdot f0 ccross f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f5 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f5 f5 c/\ creal_continuous_on f4 * part copen_real_interval c, creal_neg f5 f5 c/\ c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f6 c, creal_neg b1 b1 c/\ ! ! c==> c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f2 * * b0 f0 b2 creal_add cdistance c, f2 f0 * f3 b2 c/\ c= cdistance c, f1 * * b0 f0 b2 creal_add cdistance c, f1 f0 * f4 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0 c? / c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ creal_gt cdot f0 ccross f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f5 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f5 f5 c/\ creal_continuous_on f4 * part copen_real_interval c, creal_neg f5 f5 c/\ c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ cdeformation b0 f6 c, creal_neg b1 b1 c/\ ! ! c==> c~ c= b2 f0 c= * * b0 b2 b3 b2 ! c==> creal_lt creal_abs b2 b1 c/\ c= cdistance c, f2 * * b0 f0 b2 creal_add cdistance c, f2 f0 * f3 b2 c/\ c= cdistance c, f1 * * b0 f0 b2 creal_add cdistance c, f1 f0 * f4 b2 c= cvector_norm * * b0 f0 b2 cvector_norm f0
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))), ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f), ((g01 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))), ((g12 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))), ((real_lt (real_of_num (NUMERAL _0))) e), ((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))), ((real_continuous_on g01) (open_real_interval ((real_neg e) , e))), ((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) |- (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. ((~ (v = v1)) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = ((real_add (distance (v0 , v1))) (g01 t))) /\ (((distance (v2 , ((f v1) t))) = ((real_add (distance (v2 , v1))) (g12 t))) /\ ((vector_norm ((f v1) t)) = (vector_norm v1))))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= / / cCOND c= b0 f1 cmk_simplex1 cvec cNUMERAL c_0 f2 f0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f0 f1 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f1 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 c==> c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c==> c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c==> creal_continuous_on f3 * part copen_real_interval c, creal_neg f6 f6 c==> creal_continuous_on f4 * part copen_real_interval c, creal_neg f6 f6 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ cdeformation f5 f7 c, creal_neg b0 b0 c/\ ! ! c==> c~ c= b1 f1 c= * * f5 b1 b2 b1 ! c==> creal_lt creal_abs b1 b0 c/\ c= cdistance c, f0 * * f5 f1 b1 creal_add cdistance c, f0 f1 * f3 b1 c/\ c= cdistance c, f2 * * f5 f1 b1 creal_add cdistance c, f2 f1 * f4 b1 c= cvector_norm * * f5 f1 b1 cvector_norm f1
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT (v2 INSERT EMPTY)))))), ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f), (((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) e) /\ (((real_continuous_on g01) (open_real_interval ((real_neg e) , e))) /\ (((real_continuous_on g12) (open_real_interval ((real_neg e) , e))) /\ (((g01 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((g12 (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))))))), ((real_gt ((dot v1) ((cross v2) v0))) (real_of_num (NUMERAL _0))) |- (?e'. (((real_lt (real_of_num (NUMERAL _0))) e') /\ ((((deformation f) V) ((real_neg e') , e')) /\ ((!v. (!t. ((~ (v = v1)) ==> (((f v) t) = v)))) /\ (!t. (((real_lt (real_abs t)) e') ==> (((distance (v0 , ((f v1) t))) = ((real_add (distance (v0 , v1))) (g01 t))) /\ (((distance (v2 , ((f v1) t))) = ((real_add (distance (v2 , v1))) (g12 t))) /\ ((vector_norm ((f v1) t)) = (vector_norm v1))))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= / / cCOND c= b0 f1 cmk_simplex1 cvec cNUMERAL c_0 f2 f0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f0 f1 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f1 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 c==> c/\ creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f6 c/\ creal_continuous_on f3 * part copen_real_interval c, creal_neg f6 f6 c/\ creal_continuous_on f4 * part copen_real_interval c, creal_neg f6 f6 c/\ c= * f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= * f4 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c==> creal_gt cdot f1 ccross f2 f0 creal_of_num cNUMERAL c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ cdeformation f5 f7 c, creal_neg b0 b0 c/\ ! ! c==> c~ c= b1 f1 c= * * f5 b1 b2 b1 ! c==> creal_lt creal_abs b1 b0 c/\ c= cdistance c, f0 * * f5 f1 b1 creal_add cdistance c, f0 f1 * f3 b1 c/\ c= cdistance c, f2 * * f5 f1 b1 creal_add cdistance c, f2 f1 * f4 b1 c= cvector_norm * * f5 f1 b1 cvector_norm f1
- |- ((!t. t) = t)
T c= ! f0 f0
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
- |- ((?e'. t) = t)
T c= c? / f0 f0
- |- ((?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) ==> (?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)))
T c==> c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f) |- (((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f) /\ (?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)))
T c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 c/\ c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- (((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f) = ((\f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) f))
T c= c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f5
- ((\f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) f) |- (((\f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) f) /\ (?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)))
T c==> * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f5 c/\ * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f5 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f) ==> (?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)))
T c==> c= / / cCOND c= b0 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f5 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- (((!x. (((\f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) x) ==> (?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)))) ==> ((?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) ==> (?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)))) = ((?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) ==> (?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f))))
T c= c==> ! c==> * / c= / / cCOND c= b2 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b2 b1 b0 c? / c= / / cCOND c= b2 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b2 b1 c==> c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c==> c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- (!f. (((\f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) f) ==> (?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f))))
T c==> * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f5 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0
- |- ((((\f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f)) f) ==> (?f. ((\w. (\t. (((COND (w = v1)) (((((((((mk_simplex1 (vec (NUMERAL _0))) v2) v0) ((real_pow (vector_norm v2)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v0)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm v1)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v0 , v1))) (g01 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (distance (v2 , v1))) (g12 t))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v0 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) w))) = f))) = T)
T c= c==> * / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 f5 c? / c= / / cCOND c= b1 f0 cmk_simplex1 cvec cNUMERAL c_0 f1 f2 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f2 f0 * f3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add cdistance c, f1 f0 * f4 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 b0 cT
- |- (((\f. (f f)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
