N Reduction3.prebatch0
C |- (!f0. (!L. (!N. (!r. (!x. (((((((prebatch f0) L) N) r) x) (NUMERAL _0)) = NIL))))))
T c= cprebatch f0 f1 f2 f3 f4 cNUMERAL c_0 cNIL
D TRUTH
A |- T
T cT
D Seq2.take
A |- (!x. (!s. (!n. ((((take (SUC n)) ((CONS x) s)) = ((CONS x) ((take n) s))) /\ ((((take (NUMERAL _0)) s) = NIL) /\ (((take n) NIL) = NIL))))))
T c/\ c= ctake cSUC f0 cCONS f1 f2 cCONS f1 ctake f0 f2 c/\ c= ctake cNUMERAL c_0 f2 cNIL c= ctake f0 cNIL cNIL
D Seq.foldl
A |- (((((foldl f) z) ((CONS x) s)) = (((foldl f) ((f z) x)) s)) /\ ((((foldl f) z) NIL) = z))
T c/\ c= cfoldl f0 f1 cCONS f2 f3 cfoldl f0 * * f0 f1 f2 f3 c= cfoldl f0 f1 cNIL f1
D Reduction3.prebatch
A |- (!f0. (!L. (!N. (!r. (!x. (!i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))))))
T c= cprebatch f0 f1 f2 f3 f4 f5 cfoldl * part cdest_triple0_step f0 cNIL ctake f5 ccore_triple_v4 f1 f2 f3 f4
+ |- ((\f0. (!L. (!N. (!r. (!x. (!i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x)))))))))) f0)
T * / ! ! ! ! ! c= cprebatch b0 b1 b2 b3 b4 b5 cfoldl * part cdest_triple0_step b0 cNIL ctake b5 ccore_triple_v4 b1 b2 b3 b4 f0
+ |- (((!x. (!s. (!n. ((((take (SUC n)) ((CONS x) s)) = ((CONS x) ((take n) s))) /\ ((((take (NUMERAL _0)) s) = NIL) /\ (((take n) NIL) = NIL)))))) ==> ((\x. (!s. (!n. ((((take (SUC n)) ((CONS x) s)) = ((CONS x) ((take n) s))) /\ ((((take (NUMERAL _0)) s) = NIL) /\ (((take n) NIL) = NIL)))))) x)) = ((\x. (!s. (!n. ((((take (SUC n)) ((CONS x) s)) = ((CONS x) ((take n) s))) /\ ((((take (NUMERAL _0)) s) = NIL) /\ (((take n) NIL) = NIL)))))) x))
T c= c==> ! ! ! c/\ c= ctake cSUC b2 cCONS b0 b1 cCONS b0 ctake b2 b1 c/\ c= ctake cNUMERAL c_0 b1 cNIL c= ctake b2 cNIL cNIL * / ! ! c/\ c= ctake cSUC b2 cCONS b0 b1 cCONS b0 ctake b2 b1 c/\ c= ctake cNUMERAL c_0 b1 cNIL c= ctake b2 cNIL cNIL f0 * / ! ! c/\ c= ctake cSUC b2 cCONS b0 b1 cCONS b0 ctake b2 b1 c/\ c= ctake cNUMERAL c_0 b1 cNIL c= ctake b2 cNIL cNIL f0
- |- (((take (SUC n)) ((CONS x) s)) = ((CONS x) ((take n) s)))
T c= ctake cSUC f0 cCONS f1 f2 cCONS f1 ctake f0 f2
+ |- ((\s. (!n. ((((take (SUC n)) ((CONS x) s)) = ((CONS x) ((take n) s))) /\ ((((take (NUMERAL _0)) s) = NIL) /\ (((take n) NIL) = NIL))))) s)
T * / ! c/\ c= ctake cSUC b1 cCONS f0 b0 cCONS f0 ctake b1 b0 c/\ c= ctake cNUMERAL c_0 b0 cNIL c= ctake b1 cNIL cNIL f1
- |- ((\s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) s)
T * / ! c= cdest_triple0_step f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 crcons b0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 crcons b0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL crcons b0 cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE f3
+ |- ((!x. t) = t)
T c= ! f0 f0
- |- (((!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) ==> ((\s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) s)) = ((\s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) s))
T c= c==> ! ! c= cdest_triple0_step f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 crcons b0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 crcons b0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL crcons b0 cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE * / ! c= cdest_triple0_step f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 crcons b0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 crcons b0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL crcons b0 cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE f3 * / ! c= cdest_triple0_step f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 crcons b0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 crcons b0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL crcons b0 cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE f3
+ |- ((((foldl f) z) NIL) = z)
T c= cfoldl f0 f1 cNIL f1
- |- ((\f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) f)
T * / ! ! ! c= cdest_triple0_step b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cCONS cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 crcons b2 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 crcons b2 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL crcons b2 cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE f1
- |- ((((foldl f) z) ((CONS x) s)) = (((foldl f) ((f z) x)) s))
T c= cfoldl f0 f1 cCONS f2 f3 cfoldl f0 * * f0 f1 f2 f3
- |- (((!f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) ==> ((\f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) f)) = ((\f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) f))
T c= c==> ! ! ! ! c= cdest_triple0_step b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cCONS cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 crcons b2 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 crcons b2 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL crcons b2 cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE * / ! ! ! c= cdest_triple0_step b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cCONS cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 crcons b2 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 crcons b2 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL crcons b2 cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE f1 * / ! ! ! c= cdest_triple0_step b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cCONS cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 crcons b2 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 crcons b2 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL crcons b2 cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE f1
- |- ((\n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))) n)
T * / c= cdest_triple0_step f0 f1 c, f2 c, f3 b0 cLET / cLET_END cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b2 f2 crcons f1 cflatten cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f0 b2 f2 crcons f1 cflatten cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL crcons f1 cflatten cCONS b3 cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f0 b2 f2 cthe cLAST cLAST f1 cnseq b0 cNONE f4
- |- (((take n) NIL) = NIL)
T c= ctake f0 cNIL cNIL
+ |- (((take (NUMERAL _0)) s) = NIL)
T c= ctake cNUMERAL c_0 f0 cNIL
- |- ((\v. (!f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))))))) v)
T * / ! ! ! ! c= cdest_triple0_step b1 b3 c, b2 c, b0 b4 cLET / cLET_END cCOND c= cflatten b3 cNIL cCONS cflatten cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b6 b2 crcons b3 cflatten cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cCOND c= cnext_el b1 b6 b2 crcons b3 cflatten cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL crcons b3 cflatten cCONS b7 cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cMAP part cSOME cbetwn b1 b6 b2 cthe cLAST cLAST b3 cnseq b4 cNONE f0
+ |- (T = (!f0. (!L. (!N. (!r. (!x. (((((((prebatch f0) L) N) r) x) (NUMERAL _0)) = NIL)))))))
T c= cT ! ! ! ! ! c= cprebatch b0 b1 b2 b3 b4 cNUMERAL c_0 cNIL
+ |- (((!r. (!x. (!i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))) ==> ((\r. (!x. (!i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))) r)) = ((\r. (!x. (!i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))) r))
T c= c==> ! ! ! c= cprebatch f0 f1 f2 b0 b1 b2 cfoldl * part cdest_triple0_step f0 cNIL ctake b2 ccore_triple_v4 f1 f2 b0 b1 * / ! ! c= cprebatch f0 f1 f2 b0 b1 b2 cfoldl * part cdest_triple0_step f0 cNIL ctake b2 ccore_triple_v4 f1 f2 b0 b1 f3 * / ! ! c= cprebatch f0 f1 f2 b0 b1 b2 cfoldl * part cdest_triple0_step f0 cNIL ctake b2 ccore_triple_v4 f1 f2 b0 b1 f3
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((\L. (!N. (!r. (!x. (!i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))))) L)
T * / ! ! ! ! c= cprebatch f0 b0 b1 b2 b3 b4 cfoldl * part cdest_triple0_step f0 cNIL ctake b4 ccore_triple_v4 b0 b1 b2 b3 f1
- |- (((!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))) ==> ((\n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))) n)) = ((\n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))) n))
T c= c==> ! c= cdest_triple0_step f0 f1 c, f2 c, f3 b0 cLET / cLET_END cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b2 f2 crcons f1 cflatten cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f0 b2 f2 crcons f1 cflatten cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL crcons f1 cflatten cCONS b3 cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f0 b2 f2 cthe cLAST cLAST f1 cnseq b0 cNONE * / c= cdest_triple0_step f0 f1 c, f2 c, f3 b0 cLET / cLET_END cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b2 f2 crcons f1 cflatten cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f0 b2 f2 crcons f1 cflatten cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL crcons f1 cflatten cCONS b3 cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f0 b2 f2 cthe cLAST cLAST f1 cnseq b0 cNONE f4 * / c= cdest_triple0_step f0 f1 c, f2 c, f3 b0 cLET / cLET_END cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b2 f2 crcons f1 cflatten cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f0 b2 f2 crcons f1 cflatten cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL crcons f1 cflatten cCONS b3 cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f0 b2 f2 cthe cLAST cLAST f1 cnseq b0 cNONE f4
+ |- (((!i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))) ==> ((\i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))) i)) = ((\i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))) i))
T c= c==> ! c= cprebatch f0 f1 f2 f3 f4 b0 cfoldl * part cdest_triple0_step f0 cNIL ctake b0 ccore_triple_v4 f1 f2 f3 f4 * / c= cprebatch f0 f1 f2 f3 f4 b0 cfoldl * part cdest_triple0_step f0 cNIL ctake b0 ccore_triple_v4 f1 f2 f3 f4 f5 * / c= cprebatch f0 f1 f2 f3 f4 b0 cfoldl * part cdest_triple0_step f0 cNIL ctake b0 ccore_triple_v4 f1 f2 f3 f4 f5
+ |- (((!s. (!n. ((((take (SUC n)) ((CONS x) s)) = ((CONS x) ((take n) s))) /\ ((((take (NUMERAL _0)) s) = NIL) /\ (((take n) NIL) = NIL))))) ==> ((\s. (!n. ((((take (SUC n)) ((CONS x) s)) = ((CONS x) ((take n) s))) /\ ((((take (NUMERAL _0)) s) = NIL) /\ (((take n) NIL) = NIL))))) s)) = ((\s. (!n. ((((take (SUC n)) ((CONS x) s)) = ((CONS x) ((take n) s))) /\ ((((take (NUMERAL _0)) s) = NIL) /\ (((take n) NIL) = NIL))))) s))
T c= c==> ! ! c/\ c= ctake cSUC b1 cCONS f0 b0 cCONS f0 ctake b1 b0 c/\ c= ctake cNUMERAL c_0 b0 cNIL c= ctake b1 cNIL cNIL * / ! c/\ c= ctake cSUC b1 cCONS f0 b0 cCONS f0 ctake b1 b0 c/\ c= ctake cNUMERAL c_0 b0 cNIL c= ctake b1 cNIL cNIL f1 * / ! c/\ c= ctake cSUC b1 cCONS f0 b0 cCONS f0 ctake b1 b0 c/\ c= ctake cNUMERAL c_0 b0 cNIL c= ctake b1 cNIL cNIL f1
+ |- (((!n. ((((take (SUC n)) ((CONS x) s)) = ((CONS x) ((take n) s))) /\ ((((take (NUMERAL _0)) s) = NIL) /\ (((take n) NIL) = NIL)))) ==> ((\n. ((((take (SUC n)) ((CONS x) s)) = ((CONS x) ((take n) s))) /\ ((((take (NUMERAL _0)) s) = NIL) /\ (((take n) NIL) = NIL)))) n)) = ((\n. ((((take (SUC n)) ((CONS x) s)) = ((CONS x) ((take n) s))) /\ ((((take (NUMERAL _0)) s) = NIL) /\ (((take n) NIL) = NIL)))) n))
T c= c==> ! c/\ c= ctake cSUC b0 cCONS f0 f1 cCONS f0 ctake b0 f1 c/\ c= ctake cNUMERAL c_0 f1 cNIL c= ctake b0 cNIL cNIL * / c/\ c= ctake cSUC b0 cCONS f0 f1 cCONS f0 ctake b0 f1 c/\ c= ctake cNUMERAL c_0 f1 cNIL c= ctake b0 cNIL cNIL f2 * / c/\ c= ctake cSUC b0 cCONS f0 f1 cCONS f0 ctake b0 f1 c/\ c= ctake cNUMERAL c_0 f1 cNIL c= ctake b0 cNIL cNIL f2
+ |- (((!L. (!N. (!r. (!x. (!i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))))) ==> ((\L. (!N. (!r. (!x. (!i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))))) L))
T c= c==> ! ! ! ! ! c= cprebatch f0 b0 b1 b2 b3 b4 cfoldl * part cdest_triple0_step f0 cNIL ctake b4 ccore_triple_v4 b0 b1 b2 b3 * / ! ! ! ! c= cprebatch f0 b0 b1 b2 b3 b4 cfoldl * part cdest_triple0_step f0 cNIL ctake b4 ccore_triple_v4 b0 b1 b2 b3 f1 * / ! ! ! ! c= cprebatch f0 b0 b1 b2 b3 b4 cfoldl * part cdest_triple0_step f0 cNIL ctake b4 ccore_triple_v4 b0 b1 b2 b3 f1
- |- (((!v. (!f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))))))) ==> ((\v. (!f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))))))) v)) = ((\v. (!f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))))))) v))
T c= c==> ! ! ! ! ! c= cdest_triple0_step b1 b3 c, b2 c, b0 b4 cLET / cLET_END cCOND c= cflatten b3 cNIL cCONS cflatten cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b6 b2 crcons b3 cflatten cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cCOND c= cnext_el b1 b6 b2 crcons b3 cflatten cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL crcons b3 cflatten cCONS b7 cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cMAP part cSOME cbetwn b1 b6 b2 cthe cLAST cLAST b3 cnseq b4 cNONE * / ! ! ! ! c= cdest_triple0_step b1 b3 c, b2 c, b0 b4 cLET / cLET_END cCOND c= cflatten b3 cNIL cCONS cflatten cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b6 b2 crcons b3 cflatten cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cCOND c= cnext_el b1 b6 b2 crcons b3 cflatten cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL crcons b3 cflatten cCONS b7 cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cMAP part cSOME cbetwn b1 b6 b2 cthe cLAST cLAST b3 cnseq b4 cNONE f0 * / ! ! ! ! c= cdest_triple0_step b1 b3 c, b2 c, b0 b4 cLET / cLET_END cCOND c= cflatten b3 cNIL cCONS cflatten cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b6 b2 crcons b3 cflatten cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cCOND c= cnext_el b1 b6 b2 crcons b3 cflatten cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL crcons b3 cflatten cCONS b7 cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cMAP part cSOME cbetwn b1 b6 b2 cthe cLAST cLAST b3 cnseq b4 cNONE f0
- |- ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))
T c= cdest_triple0_step f0 f1 c, f2 c, f3 f4 cLET / cLET_END cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f2 crcons f1 cflatten cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f0 b1 f2 crcons f1 cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL crcons f1 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f0 b1 f2 cthe cLAST cLAST f1 cnseq f4 cNONE
- |- ((\u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))))) u)
T * / ! ! c= cdest_triple0_step f0 b1 c, b0 c, f1 b2 cLET / cLET_END cCOND c= cflatten b1 cNIL cCONS cflatten cCONS cCONS cSOME b0 cNIL cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b4 b0 crcons b1 cflatten cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL cCOND c= cnext_el f0 b4 b0 crcons b1 cflatten cCONS cCONS cSOME b0 cNIL cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL crcons b1 cflatten cCONS b5 cCONS cCONS cSOME b0 cNIL cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL cMAP part cSOME cbetwn f0 b4 b0 cthe cLAST cLAST b1 cnseq b2 cNONE f2
- |- (((!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))))) ==> ((\u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))))) u)) = ((\u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))))) u))
T c= c==> ! ! ! c= cdest_triple0_step f0 b1 c, b0 c, f1 b2 cLET / cLET_END cCOND c= cflatten b1 cNIL cCONS cflatten cCONS cCONS cSOME b0 cNIL cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b4 b0 crcons b1 cflatten cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL cCOND c= cnext_el f0 b4 b0 crcons b1 cflatten cCONS cCONS cSOME b0 cNIL cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL crcons b1 cflatten cCONS b5 cCONS cCONS cSOME b0 cNIL cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL cMAP part cSOME cbetwn f0 b4 b0 cthe cLAST cLAST b1 cnseq b2 cNONE * / ! ! c= cdest_triple0_step f0 b1 c, b0 c, f1 b2 cLET / cLET_END cCOND c= cflatten b1 cNIL cCONS cflatten cCONS cCONS cSOME b0 cNIL cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b4 b0 crcons b1 cflatten cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL cCOND c= cnext_el f0 b4 b0 crcons b1 cflatten cCONS cCONS cSOME b0 cNIL cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL crcons b1 cflatten cCONS b5 cCONS cCONS cSOME b0 cNIL cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL cMAP part cSOME cbetwn f0 b4 b0 cthe cLAST cLAST b1 cnseq b2 cNONE f2 * / ! ! c= cdest_triple0_step f0 b1 c, b0 c, f1 b2 cLET / cLET_END cCOND c= cflatten b1 cNIL cCONS cflatten cCONS cCONS cSOME b0 cNIL cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b4 b0 crcons b1 cflatten cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL cCOND c= cnext_el f0 b4 b0 crcons b1 cflatten cCONS cCONS cSOME b0 cNIL cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL crcons b1 cflatten cCONS b5 cCONS cCONS cSOME b0 cNIL cCONS b3 cCONS cCONS cSOME f1 cNIL cNIL cMAP part cSOME cbetwn f0 b4 b0 cthe cLAST cLAST b1 cnseq b2 cNONE f2
