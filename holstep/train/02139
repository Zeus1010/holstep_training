N Tame_list.good_facesAt_seed
C |- (!p. (!v. ((v IN (vertices_set2 (Seed p))) ==> (((facesAt (Seed p)) v) = ((FILTER (\f. ((MEM v) (FST f)))) (faces (Seed p)))))))
T c==> cIN f0 * part cvertices_set2 cSeed f1 c= cfacesAt cSeed f1 f0 cFILTER / cMEM f0 cFST b0 cfaces cSeed f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D IN_SET_OF_LIST
A |- (!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l))))
T c= cIN f0 * part cset_of_list f1 cMEM f0 f1
D Tame_defs.facesAt
A |- (!v. (!g. (((facesAt g) v) = ((EL v) (faceListAt g)))))
T c= cfacesAt f0 f1 cEL f1 cfaceListAt f0
D Tame_defs.graphl
A |- (!n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n))))
T c= cgraphl f0 cLET / cLET_END cLET / cLET_END cGraph b1 f0 cREPLICATE f0 b1 cREPLICATE f0 cNUMERAL c_0 cCONS c, b0 cT cCONS c, cREVERSE b0 cF cNIL cupt cNUMERAL c_0 f0
D Tame_defs.maxGon
A |- (!p. ((maxGon p) = (p + (NUMERAL (BIT1 (BIT1 _0))))))
T c= cmaxGon f0 c+ f0 cNUMERAL cBIT1 cBIT1 c_0
D Tame_defs.SEED
A |- (!p. ((Seed p) = (graphl (maxGon p))))
T c= cSeed f0 cgraphl cmaxGon f0
D Seq.all
A |- (!a. (!x. (!s'. ((((all a) NIL) = T) /\ (((all a) ((CONS x) s')) = ((a x) /\ ((all a) s')))))))
T c/\ c= call f0 cNIL cT c= call f0 cCONS f1 f2 c/\ * f0 f1 call f0 f2
D Seq.all_filterP
A |- (!a. (!s. ((((filter a) s) = s) = ((all a) s))))
T c= c= cfilter f0 f1 f1 call f0 f1
D Seq.mem_rev
A |- (!s. (!x. (((MEM x) (rev s)) = ((MEM x) s))))
T c= cMEM f0 crev f1 cMEM f0 f1
D Seq.mem_iota
A |- (!m. (!n. (!i. (((MEM i) ((iota m) n)) = ((m <= i) /\ (i < (m + n)))))))
T c= cMEM f0 ciota f1 f2 c/\ c<= f1 f0 c< f0 c+ f1 f2
D List_hypermap.elements_of_list
A |- (!L. ((elements_of_list L) = (set_of_list (list_of_elements L))))
T c= * part celements_of_list f0 * part cset_of_list clist_of_elements f0
D Tame_list.filter_FILTER
A |- (filter = FILTER)
T c= part cfilter part cFILTER
D Tame_list.faces_graph
A |- ((faces ((((Graph fs) n) f) h)) = fs)
T c= cfaces cGraph f0 f1 f2 f3 f0
D Tame_list.FACE_LIST_AT
A |- ((faceListAt ((((Graph fs) n) f) h)) = f)
T c= cfaceListAt cGraph f0 f1 f2 f3 f2
D Tame_list.upt0
A |- (!i. (((upt (NUMERAL _0)) i) = ((iota (NUMERAL _0)) i)))
T c= cupt cNUMERAL c_0 f0 ciota cNUMERAL c_0 f0
D Tame_list.REVERSE_rev
A |- (REVERSE = rev)
T c= part cREVERSE part crev
D Tame_list.EL_REPLICATE
A |- (!n. (!i. (!s. ((i < n) ==> (((EL i) ((REPLICATE n) s)) = s)))))
T c==> c< f0 f1 c= cEL f0 cREPLICATE f1 f2 f2
D Tame_list.list_of_elements_seed
A |- (!p. ((list_of_elements (fgraph (Seed p))) = (REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))))))
T c= clist_of_elements cfgraph cSeed f0 cREVERSE cupt cNUMERAL c_0 c+ f0 cNUMERAL cBIT1 cBIT1 c_0
D Tame_list.good_vertices_set2_seed
A |- (!p. ((vertices_set2 (Seed p)) = (elements_of_list (fgraph (Seed p)))))
T c= * part cvertices_set2 cSeed f0 * part celements_of_list cfgraph cSeed f0
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
- |- (((!g. ((vertices_set2 g) = (set_of_list (vertices_graph g)))) ==> ((\g. ((vertices_set2 g) = (set_of_list (vertices_graph g)))) g)) = ((\g. ((vertices_set2 g) = (set_of_list (vertices_graph g)))) g))
T c= c==> ! c= * part cvertices_set2 b0 * part cset_of_list cvertices_graph b0 * / c= * part cvertices_set2 b0 * part cset_of_list cvertices_graph b0 f0 * / c= * part cvertices_set2 b0 * part cset_of_list cvertices_graph b0 f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- (((!n. (!i. (((MEM i) ((iota m) n)) = ((m <= i) /\ (i < (m + n)))))) ==> ((\n. (!i. (((MEM i) ((iota m) n)) = ((m <= i) /\ (i < (m + n)))))) n)) = ((\n. (!i. (((MEM i) ((iota m) n)) = ((m <= i) /\ (i < (m + n)))))) n))
T c= c==> ! ! c= cMEM b1 ciota f0 b0 c/\ c<= f0 b1 c< b1 c+ f0 b0 * / ! c= cMEM b1 ciota f0 b0 c/\ c<= f0 b1 c< b1 c+ f0 b0 f1 * / ! c= cMEM b1 ciota f0 b0 c/\ c<= f0 b1 c< b1 c+ f0 b0 f1
+ |- (!p. (!v. ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> ((all (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))))
T c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 call / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
+ |- (((!l. ((x IN (set_of_list l)) = ((MEM x) l))) ==> ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l)) = ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l))
T c= c==> ! c= cIN f0 * part cset_of_list b0 cMEM f0 b0 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ |- (((!n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n)))) ==> ((\n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n)))) n)) = ((\n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n)))) n))
T c= c==> ! c= cgraphl b0 cLET / cLET_END cLET / cLET_END cGraph b2 b0 cREPLICATE b0 b2 cREPLICATE b0 cNUMERAL c_0 cCONS c, b1 cT cCONS c, cREVERSE b1 cF cNIL cupt cNUMERAL c_0 b0 * / c= cgraphl b0 cLET / cLET_END cLET / cLET_END cGraph b2 b0 cREPLICATE b0 b2 cREPLICATE b0 cNUMERAL c_0 cCONS c, b1 cT cCONS c, cREVERSE b1 cF cNIL cupt cNUMERAL c_0 b0 f0 * / c= cgraphl b0 cLET / cLET_END cLET / cLET_END cGraph b2 b0 cREPLICATE b0 b2 cREPLICATE b0 cNUMERAL c_0 cCONS c, b1 cT cCONS c, cREVERSE b1 cF cNIL cupt cNUMERAL c_0 b0 f0
+ |- (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((EL v) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((EL v) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = (p' ==> q'))))
T c==> c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= cEL f0 cREPLICATE c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL f3 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cEL f0 cREPLICATE c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> f2 f3
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (v < (p + (NUMERAL (BIT1 (BIT1 _0))))) |- (((EL v) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))
T c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cEL f0 cREPLICATE c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
+ |- (!p. (!v. ((((NUMERAL _0) <= v) /\ (v < ((NUMERAL _0) + (p + (NUMERAL (BIT1 (BIT1 _0))))))) ==> (((EL v) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))))))
T c==> c/\ c<= cNUMERAL c_0 f0 c< f0 c+ cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cEL f0 cREPLICATE c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
- (v < (p + (NUMERAL (BIT1 (BIT1 _0))))) |- (T = (v < (p + (NUMERAL (BIT1 (BIT1 _0))))))
T c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cT c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- (((!i. (!s. ((i < n) ==> (((EL i) ((REPLICATE n) s)) = s)))) ==> ((\i. (!s. ((i < n) ==> (((EL i) ((REPLICATE n) s)) = s)))) i)) = ((\i. (!s. ((i < n) ==> (((EL i) ((REPLICATE n) s)) = s)))) i))
T c= c==> ! ! c==> c< b0 f0 c= cEL b0 cREPLICATE f0 b1 b1 * / ! c==> c< b0 f0 c= cEL b0 cREPLICATE f0 b1 b1 f1 * / ! c==> c< b0 f0 c= cEL b0 cREPLICATE f0 b1 b1 f1
+ |- ((\x. (((MEM x) (rev s)) = ((MEM x) s))) x)
T * / c= cMEM b0 crev f0 cMEM b0 f0 f1
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!s. (!x. (((MEM x) (rev s)) = ((MEM x) s)))) ==> ((\s. (!x. (((MEM x) (rev s)) = ((MEM x) s)))) s)) = ((\s. (!x. (((MEM x) (rev s)) = ((MEM x) s)))) s))
T c= c==> ! ! c= cMEM b1 crev b0 cMEM b1 b0 * / ! c= cMEM b1 crev b0 cMEM b1 b0 f0 * / ! c= cMEM b1 crev b0 cMEM b1 b0 f0
+ |- ((!p. (!v. (((MEM v) ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) ==> (((facesAt (Seed p)) v) = ((FILTER (\f. ((MEM v) (FST f)))) (faces (Seed p))))))) = (!p. (!v. (((MEM v) (REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))))) ==> (((facesAt (Seed p)) v) = ((FILTER (\f. ((MEM v) (FST f)))) (faces (Seed p))))))))
T c= ! ! c==> cMEM b1 cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= cfacesAt cSeed b0 b1 cFILTER / cMEM b1 cFST b2 cfaces cSeed b0 ! ! c==> cMEM b1 cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= cfacesAt cSeed b0 b1 cFILTER / cMEM b1 cFST b2 cfaces cSeed b0
+ (v < (p + (NUMERAL (BIT1 (BIT1 _0))))) |- ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((EL v) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))))
T c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= c= cEL f0 cREPLICATE c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
+ |- ((!p. (!v. (((MEM v) ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) ==> (((facesAt ((((Graph ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))) (p + (NUMERAL (BIT1 (BIT1 _0))))) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) (NUMERAL _0)))) v) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))))) = (!p. (!v. (((MEM v) ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) ==> (((facesAt ((((Graph ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))) (p + (NUMERAL (BIT1 (BIT1 _0))))) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) (NUMERAL _0)))) v) = ((FILTER (\f. ((MEM v) (FST f)))) (faces ((((Graph ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))) (p + (NUMERAL (BIT1 (BIT1 _0))))) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) (NUMERAL _0))))))))))
T c= ! ! c==> cMEM b1 cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= cfacesAt cGraph cCONS c, cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cREPLICATE c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cREPLICATE c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 b1 cFILTER / cMEM b1 cFST b2 cCONS c, cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL ! ! c==> cMEM b1 cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= cfacesAt cGraph cCONS c, cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cREPLICATE c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cREPLICATE c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 b1 cFILTER / cMEM b1 cFST b2 cfaces cGraph cCONS c, cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cREPLICATE c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cREPLICATE c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
+ |- ((((NUMERAL _0) + n) = n) /\ ((NUMERAL _0) <= n))
T c/\ c= c+ cNUMERAL c_0 f0 f0 c<= cNUMERAL c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((EL v) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))))) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((EL v) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))))) = (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((EL v) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))))))
T c= c==> c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= c= cEL f0 cREPLICATE c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cEL f0 cREPLICATE c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cEL f0 cREPLICATE c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\p. ((list_of_elements (fgraph (Seed p))) = (REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))))) p)
T * / c= clist_of_elements cfgraph cSeed b0 cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((\s. ((((filter a) s) = s) = ((all a) s))) s)
T * / c= c= cfilter f0 b0 b0 call f0 b0 f1
+ |- (((!a. (!s. ((((filter a) s) = s) = ((all a) s)))) ==> ((\a. (!s. ((((filter a) s) = s) = ((all a) s)))) a)) = ((\a. (!s. ((((filter a) s) = s) = ((all a) s)))) a))
T c= c==> ! ! c= c= cfilter b0 b1 b1 call b0 b1 * / ! c= c= cfilter b0 b1 b1 call b0 b1 f0 * / ! c= c= cfilter b0 b1 b1 call b0 b1 f0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ |- ((!v. t) = t)
T c= ! f0 f0
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ |- (!p. (!v. ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))))))
T c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
+ |- (!p. (!v. (((MEM v) ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) ==> (((EL v) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))))))
T c==> cMEM f0 cupt cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cEL f0 cREPLICATE c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, cupt cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, cupt cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
+ |- (((!x. (!y. ((x = y) = (y = x)))) ==> ((\x. (!y. ((x = y) = (y = x)))) x)) = ((\x. (!y. ((x = y) = (y = x)))) x))
T c= c==> ! ! c= c= b0 b1 c= b1 b0 * / ! c= c= b0 b1 c= b1 b0 f0 * / ! c= c= b0 b1 c= b1 b0 f0
+ |- (((!p. ((list_of_elements (fgraph (Seed p))) = (REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((\p. ((list_of_elements (fgraph (Seed p))) = (REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))))) p)) = ((\p. ((list_of_elements (fgraph (Seed p))) = (REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))))) p))
T c= c==> ! c= clist_of_elements cfgraph cSeed b0 cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * / c= clist_of_elements cfgraph cSeed b0 cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 f0 * / c= clist_of_elements cfgraph cSeed b0 cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- (!p. (!v. ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))) = ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))))
T c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
+ |- (((!y. ((x = y) = (y = x))) ==> ((\y. ((x = y) = (y = x))) y)) = ((\y. ((x = y) = (y = x))) y))
T c= c==> ! c= c= f0 b0 c= b0 f0 * / c= c= f0 b0 c= b0 f0 f1 * / c= c= f0 b0 c= b0 f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\i. (!s. ((i < n) ==> (((EL i) ((REPLICATE n) s)) = s)))) i)
T * / ! c==> c< b0 f0 c= cEL b0 cREPLICATE f0 b1 b1 f1
- (((real_ge (real_of_int _10191783)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\s. ((i < n) ==> (((EL i) ((REPLICATE n) s)) = s))) s)
T * / c==> c< f0 f1 c= cEL f0 cREPLICATE f1 b0 b0 f2
+ |- ((!p. (!v. ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> ((MEM v) ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))))))) = (!p. (!v. ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> ((all (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))))))
T c= ! ! c==> c< b1 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cMEM b1 ciota cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 ! ! c==> c< b1 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 call / cMEM b1 cFST b2 cCONS c, ciota cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
+ |- (((!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) ==> ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x)) = ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x))
T c= c==> ! ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0
+ |- ((\s. (!x. (((MEM x) (rev s)) = ((MEM x) s)))) s)
T * / ! c= cMEM b1 crev b0 cMEM b1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((EL v) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))))
T c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cEL f0 cREPLICATE c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
- |- (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> q')))
T c==> c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL f2 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 f2
+ |- (((!p. ((maxGon p) = (p + (NUMERAL (BIT1 (BIT1 _0)))))) ==> ((\p. ((maxGon p) = (p + (NUMERAL (BIT1 (BIT1 _0)))))) p)) = ((\p. ((maxGon p) = (p + (NUMERAL (BIT1 (BIT1 _0)))))) p))
T c= c==> ! c= cmaxGon b0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * / c= cmaxGon b0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 f0 * / c= cmaxGon b0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((\v. (!g. (((facesAt g) v) = ((EL v) (faceListAt g))))) v)
T * / ! c= cfacesAt b1 b0 cEL b0 cfaceListAt b1 f0
+ |- ((\n. (!i. (((MEM i) ((iota m) n)) = ((m <= i) /\ (i < (m + n)))))) n)
T * / ! c= cMEM b1 ciota f0 b0 c/\ c<= f0 b1 c< b1 c+ f0 b0 f1
+ |- (!p. (!v. ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((NUMERAL _0) <= v) /\ (v < ((NUMERAL _0) + (p + (NUMERAL (BIT1 (BIT1 _0))))))))))
T c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL c_0 f0 c< f0 c+ cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((x = y) = (y = x))
T c= c= f0 f1 c= f1 f0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (((!v. (!g. (((facesAt g) v) = ((EL v) (faceListAt g))))) ==> ((\v. (!g. (((facesAt g) v) = ((EL v) (faceListAt g))))) v)) = ((\v. (!g. (((facesAt g) v) = ((EL v) (faceListAt g))))) v))
T c= c==> ! ! c= cfacesAt b1 b0 cEL b0 cfaceListAt b1 * / ! c= cfacesAt b1 b0 cEL b0 cfaceListAt b1 f0 * / ! c= cfacesAt b1 b0 cEL b0 cfaceListAt b1 f0
+ |- ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x)
T * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0
+ |- ((!p. (!v. (((MEM v) ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) ==> (((facesAt ((((Graph ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))) (p + (NUMERAL (BIT1 (BIT1 _0))))) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) (NUMERAL _0)))) v) = ((FILTER (\f. ((MEM v) (FST f)))) (faces ((((Graph ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))) (p + (NUMERAL (BIT1 (BIT1 _0))))) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) (NUMERAL _0))))))))) = (!p. (!v. (((MEM v) ((upt (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) ==> (((facesAt (Seed p)) v) = ((FILTER (\f. ((MEM v) (FST f)))) (faces (Seed p))))))))
T c= ! ! c==> cMEM b1 cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= cfacesAt cGraph cCONS c, cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cREPLICATE c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cREPLICATE c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 b1 cFILTER / cMEM b1 cFST b2 cfaces cGraph cCONS c, cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cREPLICATE c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cREPLICATE c+ b0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 ! ! c==> cMEM b1 cupt cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= cfacesAt cSeed b0 b1 cFILTER / cMEM b1 cFST b2 cfaces cSeed b0
+ |- ((\p'. (!q'. (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((EL v) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((EL v) ((REPLICATE (p + (NUMERAL (BIT1 (BIT1 _0))))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = (p' ==> q')))))) p')
T * / ! c==> c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c= cEL f0 cREPLICATE c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b2 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL b1 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cEL f0 cREPLICATE c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b2 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> b0 b1 f2
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (i < n) |- ((i < n) /\ (((EL i) ((REPLICATE n) s)) = s))
T c==> c< f0 f1 c/\ c< f0 f1 c= cEL f0 cREPLICATE f1 f2 f2
- |- ((\q'. (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = (p' ==> q'))))) q')
T * / c==> c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b1 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL b0 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b1 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> f2 b0 f3
+ |- (((!x. (!s'. ((((all a) NIL) = T) /\ (((all a) ((CONS x) s')) = ((a x) /\ ((all a) s')))))) ==> ((\x. (!s'. ((((all a) NIL) = T) /\ (((all a) ((CONS x) s')) = ((a x) /\ ((all a) s')))))) x)) = ((\x. (!s'. ((((all a) NIL) = T) /\ (((all a) ((CONS x) s')) = ((a x) /\ ((all a) s')))))) x))
T c= c==> ! ! c/\ c= call f0 cNIL cT c= call f0 cCONS b0 b1 c/\ * f0 b0 call f0 b1 * / ! c/\ c= call f0 cNIL cT c= call f0 cCONS b0 b1 c/\ * f0 b0 call f0 b1 f1 * / ! c/\ c= call f0 cNIL cT c= call f0 cCONS b0 b1 c/\ * f0 b0 call f0 b1 f1
+ |- ((\n. ((graphl n) = ((LET (\vs. (LET_END ((LET (\fs. (LET_END ((((Graph fs) n) ((REPLICATE n) fs)) ((REPLICATE n) (NUMERAL _0)))))) ((CONS (vs , T)) ((CONS ((REVERSE vs) , F)) NIL)))))) ((upt (NUMERAL _0)) n)))) n)
T * / c= cgraphl b0 cLET / cLET_END cLET / cLET_END cGraph b2 b0 cREPLICATE b0 b2 cREPLICATE b0 cNUMERAL c_0 cCONS c, b1 cT cCONS c, cREVERSE b1 cF cNIL cupt cNUMERAL c_0 b0 f0
+ |- (T = (!p. (!v. ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((NUMERAL _0) <= v) /\ (v < ((NUMERAL _0) + (p + (NUMERAL (BIT1 (BIT1 _0)))))))))))
T c= cT ! ! c==> c< b1 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL c_0 b1 c< b1 c+ cNUMERAL c_0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\y. ((x = y) = (y = x))) y)
T * / c= c= f0 b0 c= b0 f0 f1
- |- (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))))
T c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!p'. (!q'. (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b2 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL b1 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b2 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> b0 b1 * / ! c==> c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b2 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL b1 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b2 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> b0 b1 f2 * / ! c==> c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b2 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL b1 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b2 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> b0 b1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = (v < (p + (NUMERAL (BIT1 (BIT1 _0)))))) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> q')))) = (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> q'))))
T c= c==> c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL f2 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL f2 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge (real_of_int _10191783)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10191783)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((vertices_graph g) = ((upt (NUMERAL _0)) (countVertices g)))
T c= cvertices_graph f0 cupt cNUMERAL c_0 ccountVertices f0
- (((real_ge (real_of_int _10191783)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10191783)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10191783))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10191783))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((\p'. (!q'. (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = (p' ==> q')))))) p')
T * / ! c==> c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b2 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL b1 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b2 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> b0 b1 f2
- |- ((vertices_set2 g) = (set_of_list (vertices_graph g)))
T c= * part cvertices_set2 f0 * part cset_of_list cvertices_graph f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!g. ((vertices_graph g) = ((upt (NUMERAL _0)) (countVertices g)))) ==> ((\g. ((vertices_graph g) = ((upt (NUMERAL _0)) (countVertices g)))) g)) = ((\g. ((vertices_graph g) = ((upt (NUMERAL _0)) (countVertices g)))) g))
T c= c==> ! c= cvertices_graph b0 cupt cNUMERAL c_0 ccountVertices b0 * / c= cvertices_graph b0 cupt cNUMERAL c_0 ccountVertices b0 f0 * / c= cvertices_graph b0 cupt cNUMERAL c_0 ccountVertices b0 f0
- |- ((\g. ((vertices_graph g) = ((upt (NUMERAL _0)) (countVertices g)))) g)
T * / c= cvertices_graph b0 cupt cNUMERAL c_0 ccountVertices b0 f0
- (((real_ge (real_of_int _10191783)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))))
T c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = (p' ==> q'))))
T c==> c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL f3 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> f2 f3
- (((real_ge (real_of_int _10191783)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10191783))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (v < (p + (NUMERAL (BIT1 (BIT1 _0))))) |- ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = T)
T c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT
- |- ((((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))))) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))))) = (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))))))
T c= c==> c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
- (((real_ge (real_of_int _10191783)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((\f. (f f)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((\g. ((vertices_set2 g) = (set_of_list (vertices_graph g)))) g)
T * / c= * part cvertices_set2 b0 * part cset_of_list cvertices_graph b0 f0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10191783)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10191783))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10191783)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- (v < (p + (NUMERAL (BIT1 (BIT1 _0))))) |- ((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))))
T c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b0 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!q'. (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = (p' ==> q'))))) ==> ((\q'. (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = (p' ==> q'))))) q')) = ((\q'. (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) = p') ==> ((p' ==> ((((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)))) = q')) ==> (((v < (p + (NUMERAL (BIT1 (BIT1 _0))))) ==> (((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL)) = ((FILTER (\f. ((MEM v) (FST f)))) ((CONS (((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0))))) , T)) ((CONS ((REVERSE ((iota (NUMERAL _0)) (p + (NUMERAL (BIT1 (BIT1 _0)))))) , F)) NIL))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b1 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL b0 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b1 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> f2 b0 * / c==> c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b1 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL b0 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b1 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> f2 b0 f3 * / c==> c= c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b1 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL b0 c= c==> c< f0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 c= cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL cFILTER / cMEM f0 cFST b1 cCONS c, ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cT cCONS c, cREVERSE ciota cNUMERAL c_0 c+ f1 cNUMERAL cBIT1 cBIT1 c_0 cF cNIL c==> f2 b0 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
