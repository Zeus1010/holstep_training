N VSUM_PARTIAL_SUC
C |- (!f. (!g. (!m. (!n. (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))))))
T c= cvsum * * part c.. f0 f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D NOT_LT
A |- (!m. (!n. ((~ (m < n)) = (n <= m))))
T c= c~ c< f0 f1 c<= f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D VSUM_CLAUSES_NUMSEG
A |- ((!m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) /\ (!m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))))
T c/\ ! c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 ! ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0
D VSUM_TRIV_NUMSEG
A |- (!f. (!m. (!n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0)))))))
T c==> c< f0 f1 c= cvsum * * part c.. f1 f0 f2 cvec cNUMERAL c_0
+ ((~ (m < n)) = (n <= m)) |- ((n <= m) = (~ (m < n)))
T c==> c= c~ c< f0 f1 c<= f1 f0 c= c<= f1 f0 c~ c< f0 f1
- |- ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
- |- (((!n. (((BIT0 n) + _0) = (BIT0 n))) ==> ((\n. (((BIT0 n) + _0) = (BIT0 n))) n)) = ((\n. (((BIT0 n) + _0) = (BIT0 n))) n))
T c= c==> ! c= c+ cBIT0 b0 c_0 cBIT0 b0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0
+ |- ((n <= m) = (~ (m < n)))
T c= c<= f0 f1 c~ c< f1 f0
+ |- (((real_mul (f (NUMERAL _0))) ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) = ((real_sub ((real_sub ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i)))) ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i))))
T c= creal_mul * f0 cNUMERAL c_0 creal_sub c$ * f1 cNUMERAL cBIT1 c_0 f2 c$ * f1 cNUMERAL c_0 f2 creal_sub creal_sub creal_mul * f0 cNUMERAL cBIT1 c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 creal_mul * f0 cNUMERAL c_0 c$ * f1 cNUMERAL c_0 f2 creal_mul creal_sub * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2
- |- (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))
T c= cEXP cBIT0 f0 cBIT0 f1 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
+ ((n < m) = (~ (m <= n))) |- ((~ (m <= n)) = (n < m))
T c==> c= c< f0 f1 c~ c<= f1 f0 c= c~ c<= f1 f0 c< f0 f1
- |- (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) ==> ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m)) = ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
- |- ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 n) * _0) = _0)) ==> ((\n. (((BIT1 n) * _0) = _0)) n)) = ((\n. (((BIT1 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT1 b0 c_0 c_0 * / c= c* cBIT1 b0 c_0 c_0 f0 * / c= c* cBIT1 b0 c_0 c_0 f0
+ (~ (m <= (SUC n))) |- ((m <= (SUC n)) = F)
T c==> c~ c<= f0 cSUC f1 c= c<= f0 cSUC f1 cF
+ |- ((~ ((int_le (int_of_num m)) (int_of_num (NUMERAL _0)))) \/ (((int_of_num m) = (int_of_num (NUMERAL _0))) \/ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0))))))
T c\/ c~ cint_le cint_of_num f0 cint_of_num cNUMERAL c_0 c\/ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvec cNUMERAL c_0
- |- (((BIT0 m) = (BIT1 n)) = F)
T c= c= cBIT0 f0 cBIT1 f1 cF
- |- (((!n. (((BIT0 n) * _0) = _0)) ==> ((\n. (((BIT0 n) * _0) = _0)) n)) = ((\n. (((BIT0 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT0 b0 c_0 c_0 * / c= c* cBIT0 b0 c_0 c_0 f0 * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((!n. ((BIT1 n) > _0)) ==> ((\n. ((BIT1 n) > _0)) n)) = ((\n. ((BIT1 n) > _0)) n))
T c= c==> ! c> cBIT1 b0 c_0 * / c> cBIT1 b0 c_0 f0 * / c> cBIT1 b0 c_0 f0
- |- (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))
T c= c+ cBIT0 f0 cBIT1 f1 cBIT1 c+ f0 f1
+ (~ (((real_add ((real_sub ((real_sub ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) ((real_mul (f m)) ((g m) $ i)))) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f m)) ((g m) $ i)))) ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) |- ((~ (((real_add ((real_sub ((real_sub ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) ((real_mul (f m)) ((g m) $ i)))) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f m)) ((g m) $ i)))) ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) /\ F)
T c==> c~ c= creal_add creal_sub creal_sub creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 creal_add c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 c/\ c~ c= creal_add creal_sub creal_sub creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 creal_add c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 cF
- |- ((SUC _0) = (BIT1 _0))
T c= cSUC c_0 cBIT1 c_0
- |- (((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
- |- ((_0 <= (BIT0 n)) = T)
T c= c<= c_0 cBIT0 f0 cT
- |- (((BIT1 m) = (BIT0 n)) = F)
T c= c= cBIT1 f0 cBIT0 f1 cF
+ (m <= (NUMERAL _0)) |- (((m = (NUMERAL _0)) ==> (((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))) /\ ((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))))
T c==> c<= f0 cNUMERAL c_0 c/\ c==> c= f0 cNUMERAL c_0 c= c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (f (NUMERAL _0))) ((vector_sub (g (NUMERAL (BIT1 _0)))) (g (NUMERAL _0)))) $ i) = (((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f (NUMERAL _0))) (g (NUMERAL _0))))) ((% ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) (g (NUMERAL (BIT1 _0))))) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% * f1 cNUMERAL c_0 cvector_sub * f2 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 f0 c$ cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 cNUMERAL c_0 * f2 cNUMERAL c_0 c% creal_sub * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 cNUMERAL cBIT1 c_0 f0 cT
- |- ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))
T c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ F |- (F /\ (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) (vec (NUMERAL _0)))))
T c==> cF c/\ cF c= cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvec cNUMERAL c_0
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _157614))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((PRE _0) = _0) /\ ((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) /\ (!n. ((PRE (BIT1 n)) = (BIT0 n)))))
T c/\ c= cPRE c_0 c_0 c/\ ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 ! c= cPRE cBIT1 b0 cBIT0 b0
- |- (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))
T c= c* cBIT0 f0 cBIT0 f1 cBIT0 cBIT0 c* f0 f1
- |- ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))
T c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT1 m) < (BIT0 n)) = (m < n))
T c= c< cBIT1 f0 cBIT0 f1 c< f0 f1
- |- ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
- |- ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))
T c= cEXP c_0 cBIT0 f0 c* cEXP c_0 f0 cEXP c_0 f0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vector_sub ((vector_sub ((% (f (SUC n))) (g (SUC n)))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k))))))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) $ i) = (((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k)))))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n)))))) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvector_sub cvector_sub c% * f1 cSUC f2 * f3 cSUC f2 c% * f1 f4 * f3 f4 cvsum * * part c.. f4 f2 / c% creal_sub * f1 cSUC b0 * f1 b0 * f3 cSUC b0 c% * f1 cSUC f2 cvector_sub * f3 cSUC cSUC f2 * f3 cSUC f2 f0 c$ cvector_sub cvector_sub c% * f1 cSUC cSUC f2 * f3 cSUC cSUC f2 c% * f1 f4 * f3 f4 cvector_add cvsum * * part c.. f4 f2 / c% creal_sub * f1 cSUC b0 * f1 b0 * f3 cSUC b0 c% creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 * f3 cSUC cSUC f2 f0 cT
- (~ (m = (NUMERAL _0))) |- (((~ ((NUMERAL _0) = m)) ==> (((NUMERAL _0) = m) = F)) = (((NUMERAL _0) = m) = F))
T c==> c~ c= f0 cNUMERAL c_0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
+ |- (((!t'. (!e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c<= f0 f1 f2 c==> c==> f2 c= cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b2 cNUMERAL cBIT1 c_0 * f3 b2 * f4 c+ b2 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b2 cNUMERAL cBIT1 c_0 * f3 b2 * f4 c+ b2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 * / ! c==> c= c<= f0 f1 f2 c==> c==> f2 c= cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b2 cNUMERAL cBIT1 c_0 * f3 b2 * f4 c+ b2 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b2 cNUMERAL cBIT1 c_0 * f3 b2 * f4 c+ b2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f5 * / ! c==> c= c<= f0 f1 f2 c==> c==> f2 c= cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b2 cNUMERAL cBIT1 c_0 * f3 b2 * f4 c+ b2 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b2 cNUMERAL cBIT1 c_0 * f3 b2 * f4 c+ b2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f5
- |- (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))
T c= cEXP cNUMERAL f0 cNUMERAL f1 cNUMERAL cEXP f0 f1
- |- (((!n. ((SUC (BIT0 n)) = (BIT1 n))) ==> ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)) = ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n))
T c= c==> ! c= cSUC cBIT0 b0 cBIT1 b0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
- |- ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F)))
T c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!n. ((ODD (BIT0 n)) = F)) ==> ((\n. ((ODD (BIT0 n)) = F)) n)) = ((\n. ((ODD (BIT0 n)) = F)) n))
T c= c==> ! c= cODD cBIT0 b0 cF * / c= cODD cBIT0 b0 cF f0 * / c= cODD cBIT0 b0 cF f0
+ (~ (m <= (NUMERAL _0))) |- (T = ((NUMERAL _0) < m))
T c==> c~ c<= f0 cNUMERAL c_0 c= cT c< cNUMERAL c_0 f0
+ |- (((!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) ==> ((\n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) n)) = ((\n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) n))
T c= c==> ! c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 * / c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 f2 * / c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 f2
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
- |- ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
- |- (((!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) ==> ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n)) = ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
- |- (((!n. ((_0 * (BIT0 n)) = _0)) ==> ((\n. ((_0 * (BIT0 n)) = _0)) n)) = ((\n. ((_0 * (BIT0 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT0 b0 c_0 * / c= c* c_0 cBIT0 b0 c_0 f0 * / c= c* c_0 cBIT0 b0 c_0 f0
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
- (~ (m <= (NUMERAL _0))) |- ((((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))) = (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))
T c==> c~ c<= f0 cNUMERAL c_0 c= c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvec cNUMERAL c_0
- |- (((!n. ((EVEN (BIT1 n)) = F)) ==> ((\n. ((EVEN (BIT1 n)) = F)) n)) = ((\n. ((EVEN (BIT1 n)) = F)) n))
T c= c==> ! c= cEVEN cBIT1 b0 cF * / c= cEVEN cBIT1 b0 cF f0 * / c= cEVEN cBIT1 b0 cF f0
- |- (((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
+ |- ((\m. (!n. ((n <= m) = (~ (m < n))))) m)
T * / ! c= c<= b1 b0 c~ c< b0 b1 f0
- |- ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)
T * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
- |- ((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) /\ (!m. (!n. ((m + (SUC n)) = (SUC (m + n))))))
T c/\ ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 ! ! c= c+ b0 cSUC b1 cSUC c+ b0 b1
+ |- ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n)))
T c= c<= f0 cSUC f1 c\/ c= f0 cSUC f1 c<= f0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_mul (f (NUMERAL _0))) ((lambdai. ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) $ i)) ((lambdai. ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i))) $ i))) $ i)) ((lambdai. ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul * f1 cNUMERAL c_0 c$ clambda / creal_sub c$ * f2 cNUMERAL cBIT1 c_0 b1 c$ * f2 cNUMERAL c_0 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cNUMERAL cBIT1 c_0 c$ * f2 cNUMERAL cBIT1 c_0 b1 b1 c$ clambda / creal_mul * f1 cNUMERAL c_0 c$ * f2 cNUMERAL c_0 b1 b1 b0 c$ clambda / creal_mul creal_sub * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 c$ * f2 cNUMERAL cBIT1 c_0 b1 b0 f0
+ |- ((\m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) m)
T * / ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 f1
- |- ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)
T * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
- (n < m) |- ((n < m) /\ (((vsum (m .. n)) f) = (vec (NUMERAL _0))))
T c==> c< f0 f1 c/\ c< f0 f1 c= cvsum * * part c.. f1 f0 f2 cvec cNUMERAL c_0
- |- ((\n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) n)
T * / c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 f0
- |- ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))
T c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))))
T c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((int_le (int_of_num (NUMERAL _0))) _157594) ==> ((int_lt _157594) ((int_add _157594) (int_of_num (NUMERAL (BIT1 _0))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 cint_lt f0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- |- ((_0 < _0) = F)
T c= c< c_0 c_0 cF
- |- (((!n. (((BIT1 n) < _0) = F)) ==> ((\n. (((BIT1 n) < _0) = F)) n)) = ((\n. (((BIT1 n) < _0) = F)) n))
T c= c==> ! c= c< cBIT1 b0 c_0 cF * / c= c< cBIT1 b0 c_0 cF f0 * / c= c< cBIT1 b0 c_0 cF f0
- |- ((_0 + (BIT0 n)) = (BIT0 n))
T c= c+ c_0 cBIT0 f0 cBIT0 f0
- |- ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))
T c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157594)) /\ ((real_le ((real_add (real_of_int _157594)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157594))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157594)) /\ ((real_le ((real_add (real_of_int _157594)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157594))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157594)) /\ ((real_le ((real_add (real_of_int _157594)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157594)))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
- |- ((\n. ((BIT0 n) >= _0)) n)
T * / c>= cBIT0 b0 c_0 f0
- |- (((BIT1 n) - _0) = (BIT1 n))
T c= c- cBIT1 f0 c_0 cBIT1 f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157614)) /\ (((real_le (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ ((((real_le ((real_add (real_of_int _157614)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157614)) /\ (((real_le (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ ((((real_le ((real_add (real_of_int _157614)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 cF
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _157594)) /\ ((real_le ((real_add (real_of_int _157594)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157594))) = (~ (((int_le (int_of_num (NUMERAL _0))) _157594) ==> ((int_lt _157594) ((int_add _157594) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 cint_lt f0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- |- (((!n. ((_0 - (BIT0 n)) = _0)) ==> ((\n. ((_0 - (BIT0 n)) = _0)) n)) = ((\n. ((_0 - (BIT0 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT0 b0 c_0 * / c= c- c_0 cBIT0 b0 c_0 f0 * / c= c- c_0 cBIT0 b0 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) ==> ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)) = ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n))
T c= c==> ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
- |- ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)
T * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))
T c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 n) <= _0) = F)) ==> ((\n. (((BIT1 n) <= _0) = F)) n)) = ((\n. (((BIT1 n) <= _0) = F)) n))
T c= c==> ! c= c<= cBIT1 b0 c_0 cF * / c= c<= cBIT1 b0 c_0 cF f0 * / c= c<= cBIT1 b0 c_0 cF f0
- |- ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
+ |- (((!n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0))))) ==> ((\n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0))))) n)) = ((\n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0))))) n))
T c= c==> ! c==> c< b0 f0 c= cvsum * * part c.. f0 b0 f1 cvec cNUMERAL c_0 * / c==> c< b0 f0 c= cvsum * * part c.. f0 b0 f1 cvec cNUMERAL c_0 f2 * / c==> c< b0 f0 c= cvsum * * part c.. f0 b0 f1 cvec cNUMERAL c_0 f2
- |- ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))
T c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((\n. (~ (_0 >= (BIT1 n)))) n)
T * / c~ c>= c_0 cBIT1 b0 f0
- |- (((!n. ((_0 + (BIT0 n)) = (BIT0 n))) ==> ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)) = ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n))
T c= c==> ! c= c+ c_0 cBIT0 b0 cBIT0 b0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- |- (((!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) ==> ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)) = ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
- |- (((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) ==> ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)) = ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT0 b1 cF * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0 * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
- (m <= (SUC n)) |- (F = ((SUC n) < m))
T c==> c<= f0 cSUC f1 c= cF c< cSUC f1 f0
- |- (((!n. (((NUMERAL _0) + n) = n)) ==> ((\n. (((NUMERAL _0) + n) = n)) n)) = ((\n. (((NUMERAL _0) + n) = n)) n))
T c= c==> ! c= c+ cNUMERAL c_0 b0 b0 * / c= c+ cNUMERAL c_0 b0 b0 f0 * / c= c+ cNUMERAL c_0 b0 b0 f0
- |- ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)
T * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
+ |- ((((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (SUC n))) ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) = (((m <= (SUC n)) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))))) /\ ((~ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))))
T c= c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 cSUC f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 cSUC f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c==> c~ c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvec cNUMERAL c_0
- |- ((SUC (BIT1 n)) = (BIT0 (SUC n)))
T c= cSUC cBIT1 f0 cBIT0 cSUC f0
+ |- (((real_add (real_of_num (NUMERAL _0))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f (SUC n))) ((g (SUC n)) $ i)))) ((real_add (real_of_num (NUMERAL _0))) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))
T c= creal_add creal_of_num cNUMERAL c_0 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_add creal_of_num cNUMERAL c_0 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3
- |- (((BIT1 m) < (BIT1 n)) = (m < n))
T c= c< cBIT1 f0 cBIT1 f1 c< f0 f1
- (~ (m <= (SUC n))) |- ((((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))) = (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))
T c==> c~ c<= f0 cSUC f1 c= c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvec cNUMERAL c_0
+ |- (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))
T c= cvsum * * part c.. f0 cSUC f1 f2 cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2
+ |- (((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))) = (vec (NUMERAL _0)))
T c= cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)
T * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
- |- (((!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- ((NUMERAL (NUMERAL _0)) = (NUMERAL _0))
T c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!n. ((PRE (BIT1 n)) = (BIT0 n))) ==> ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n)) = ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n))
T c= c==> ! c= cPRE cBIT1 b0 cBIT0 b0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ |- (((!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) ==> ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)) = ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n))
T c= c==> ! c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
- |- (((BIT1 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT1 f0 cBIT1 f1 c<= f0 f1
+ (m <= n) |- ((m <= n) /\ (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c==> c<= f0 f1 c/\ c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0
- |- (((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) ==> ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)) = ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157614)) /\ (((real_le (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ ((((real_le ((real_add (real_of_int _157614)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157614)) /\ (((real_le (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ ((((real_le ((real_add (real_of_int _157614)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157614)) /\ (((real_le (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ ((((real_le ((real_add (real_of_int _157614)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0))))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0
+ |- ((n < m) = (~ (m <= n)))
T c= c< f0 f1 c~ c<= f1 f0
+ (~ (m <= (NUMERAL _0))) |- ((NUMERAL _0) < m)
T c==> c~ c<= f0 cNUMERAL c_0 c< cNUMERAL c_0 f0
+ |- (F ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) (vec (NUMERAL _0)))))
T c==> cF c= cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvec cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((EVEN _0) = T) /\ ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F))))
T c/\ c= cEVEN c_0 cT c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- (T = ((m <= (NUMERAL _0)) ==> ((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))
T c= cT c==> c<= f0 cNUMERAL c_0 c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvec cNUMERAL c_0
- |- ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1
+ |- (((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))) = ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND F) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c= c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 c_0 c% * f0 f2 * f1 f2 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f0 f2 * f1 f2 cCOND cF c% creal_sub * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ T |- (T /\ (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))))
T c==> cT c/\ cT c= cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0
+ (~ (((real_add (real_of_num (NUMERAL _0))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f (SUC n))) ((g (SUC n)) $ i)))) ((real_add (real_of_num (NUMERAL _0))) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) |- ((~ (((real_add (real_of_num (NUMERAL _0))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f (SUC n))) ((g (SUC n)) $ i)))) ((real_add (real_of_num (NUMERAL _0))) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) /\ F)
T c==> c~ c= creal_add creal_of_num cNUMERAL c_0 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_add creal_of_num cNUMERAL c_0 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 c/\ c~ c= creal_add creal_of_num cNUMERAL c_0 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_add creal_of_num cNUMERAL c_0 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 cF
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ((lambdai. ((real_mul (f (SUC n))) ((lambdai. ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i)) ((lambdai. ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) $ i))) $ i)) ((lambdai. ((real_add ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ((lambdai. ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vec (NUMERAL _0))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) $ i) = (((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add (vec (NUMERAL _0))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n)))))) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_of_num cNUMERAL c_0 b0 c$ clambda / creal_mul * f1 cSUC f2 c$ clambda / creal_sub c$ * f3 cSUC cSUC f2 b1 c$ * f3 cSUC f2 b1 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cSUC cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 c$ clambda / creal_mul * f1 cSUC f2 c$ * f3 cSUC f2 b1 b1 b0 c$ clambda / creal_add c$ clambda / creal_of_num cNUMERAL c_0 b1 c$ clambda / creal_mul creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvec cNUMERAL c_0 c% * f1 cSUC f2 cvector_sub * f3 cSUC cSUC f2 * f3 cSUC f2 f0 c$ cvector_sub cvector_sub c% * f1 cSUC cSUC f2 * f3 cSUC cSUC f2 c% * f1 cSUC f2 * f3 cSUC f2 cvector_add cvec cNUMERAL c_0 c% creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 * f3 cSUC cSUC f2 f0
- |- (((NUMERAL n) > (NUMERAL m)) = (n > m))
T c= c> cNUMERAL f0 cNUMERAL f1 c> f0 f1
- |- ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))
T c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (n < (SUC n))
T c< f0 cSUC f0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) $ i)) ((lambdai. ((real_mul (f m)) ((g m) $ i))) $ i))) $ i)) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) $ i)) ((lambdai. ((real_mul (f (SUC n))) ((lambdai. ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i)) ((lambdai. ((real_mul (f m)) ((g m) $ i))) $ i))) $ i)) ((lambdai. ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((lambdai. ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vector_sub ((vector_sub ((% (f (SUC n))) (g (SUC n)))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k))))))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) $ i) = (((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k)))))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n)))))) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cSUC f2 c$ * f3 cSUC f2 b1 b1 c$ clambda / creal_mul * f1 f4 c$ * f3 f4 b1 b1 b1 c$ cvsum * * part c.. f4 f2 / clambda / creal_mul creal_sub * f1 cSUC b1 * f1 b1 c$ * f3 cSUC b1 b2 b1 b0 c$ clambda / creal_mul * f1 cSUC f2 c$ clambda / creal_sub c$ * f3 cSUC cSUC f2 b1 c$ * f3 cSUC f2 b1 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cSUC cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 c$ clambda / creal_mul * f1 f4 c$ * f3 f4 b1 b1 b0 c$ clambda / creal_add c$ cvsum * * part c.. f4 f2 / clambda / creal_mul creal_sub * f1 cSUC b1 * f1 b1 c$ * f3 cSUC b1 b2 b1 c$ clambda / creal_mul creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvector_sub cvector_sub c% * f1 cSUC f2 * f3 cSUC f2 c% * f1 f4 * f3 f4 cvsum * * part c.. f4 f2 / c% creal_sub * f1 cSUC b0 * f1 b0 * f3 cSUC b0 c% * f1 cSUC f2 cvector_sub * f3 cSUC cSUC f2 * f3 cSUC f2 f0 c$ cvector_sub cvector_sub c% * f1 cSUC cSUC f2 * f3 cSUC cSUC f2 c% * f1 f4 * f3 f4 cvector_add cvsum * * part c.. f4 f2 / c% creal_sub * f1 cSUC b0 * f1 b0 * f3 cSUC b0 c% creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 * f3 cSUC cSUC f2 f0
- |- (((BIT0 m) < (BIT0 n)) = (m < n))
T c= c< cBIT0 f0 cBIT0 f1 c< f0 f1
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))
T c= cPRE cNUMERAL f0 cNUMERAL cPRE f0
- |- (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))
T c= c+ cBIT1 f0 cBIT1 f1 cBIT0 cSUC c+ f0 f1
- |- (((!n. ((_0 EXP (BIT1 n)) = _0)) ==> ((\n. ((_0 EXP (BIT1 n)) = _0)) n)) = ((\n. ((_0 EXP (BIT1 n)) = _0)) n))
T c= c==> ! c= cEXP c_0 cBIT1 b0 c_0 * / c= cEXP c_0 cBIT1 b0 c_0 f0 * / c= cEXP c_0 cBIT1 b0 c_0 f0
- |- ((!i. t) = t)
T c= ! f0 f0
+ |- ((~ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))
T c==> c~ c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvec cNUMERAL c_0
- |- ((_0 >= (BIT0 n)) = (_0 >= n))
T c= c>= c_0 cBIT0 f0 c>= c_0 f0
+ |- (((((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (NUMERAL _0))) ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) /\ (!n. ((((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (SUC n))) ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))))) ==> (!n. (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))))
T c==> c/\ c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cCOND c<= f0 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 ! c==> c= cvsum * * part c.. f0 b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 b0 cvector_sub cvector_sub c% * f1 c+ b0 cNUMERAL cBIT1 c_0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 cSUC b0 cvector_sub cvector_sub c% * f1 c+ cSUC b0 cNUMERAL cBIT1 c_0 * f2 c+ cSUC b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cSUC b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 ! c= cvsum * * part c.. f0 b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 b0 cvector_sub cvector_sub c% * f1 c+ b0 cNUMERAL cBIT1 c_0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (((!m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) ==> ((\m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) m)) = ((\m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) m))
T c= c==> ! ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 * / ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 f1 * / ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 f1
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (f (NUMERAL _0))) ((vector_sub (g (NUMERAL (BIT1 _0)))) (g (NUMERAL _0)))) $ i) = (((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f (NUMERAL _0))) (g (NUMERAL _0))))) ((% ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) (g (NUMERAL (BIT1 _0))))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% * f1 cNUMERAL c_0 cvector_sub * f2 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 f0 c$ cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 cNUMERAL c_0 * f2 cNUMERAL c_0 c% creal_sub * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 cNUMERAL cBIT1 c_0 f0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ((lambdai. ((real_mul (f (SUC n))) ((lambdai. ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i)) ((lambdai. ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) $ i))) $ i)) ((lambdai. ((real_add ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ((lambdai. ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_of_num cNUMERAL c_0 b0 c$ clambda / creal_mul * f1 cSUC f2 c$ clambda / creal_sub c$ * f3 cSUC cSUC f2 b1 c$ * f3 cSUC f2 b1 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cSUC cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 c$ clambda / creal_mul * f1 cSUC f2 c$ * f3 cSUC f2 b1 b1 b0 c$ clambda / creal_add c$ clambda / creal_of_num cNUMERAL c_0 b1 c$ clambda / creal_mul creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 b0 f0
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
- (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))))
T c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT0 n) - _0) = (BIT0 n))
T c= c- cBIT0 f0 c_0 cBIT0 f0
+ (~ (m = (NUMERAL _0))), (m <= (NUMERAL _0)) |- ((~ (m = (NUMERAL _0))) /\ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c==> c~ c= f0 cNUMERAL c_0 c==> c<= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (((vector_add ((vector_sub ((vector_sub ((% (f (SUC n))) (g (SUC n)))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k))))))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k)))))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n)))))))
T c= cvector_add cvector_sub cvector_sub c% * f0 cSUC f1 * f2 cSUC f1 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 cSUC b0 * f0 b0 * f2 cSUC b0 c% * f0 cSUC f1 cvector_sub * f2 cSUC cSUC f1 * f2 cSUC f1 cvector_sub cvector_sub c% * f0 cSUC cSUC f1 * f2 cSUC cSUC f1 c% * f0 f3 * f2 f3 cvector_add cvsum * * part c.. f3 f1 / c% creal_sub * f0 cSUC b0 * f0 b0 * f2 cSUC b0 c% creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 * f2 cSUC cSUC f1
- |- (((!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) ==> ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)) = ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
- |- ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT1 n) <= _0) = F)
T c= c<= cBIT1 f0 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))
T c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)
T * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vector_sub ((vector_sub ((% (f (SUC n))) (g (SUC n)))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k))))))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) $ i) = (((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k)))))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n)))))) $ i)))) = (((vector_add ((vector_sub ((vector_sub ((% (f (SUC n))) (g (SUC n)))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k))))))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k)))))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n))))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add cvector_sub cvector_sub c% * f0 cSUC f1 * f2 cSUC f1 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 cSUC b1 * f0 b1 * f2 cSUC b1 c% * f0 cSUC f1 cvector_sub * f2 cSUC cSUC f1 * f2 cSUC f1 b0 c$ cvector_sub cvector_sub c% * f0 cSUC cSUC f1 * f2 cSUC cSUC f1 c% * f0 f3 * f2 f3 cvector_add cvsum * * part c.. f3 f1 / c% creal_sub * f0 cSUC b1 * f0 b1 * f2 cSUC b1 c% creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 * f2 cSUC cSUC f1 b0 c= cvector_add cvector_sub cvector_sub c% * f0 cSUC f1 * f2 cSUC f1 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 cSUC b0 * f0 b0 * f2 cSUC b0 c% * f0 cSUC f1 cvector_sub * f2 cSUC cSUC f1 * f2 cSUC f1 cvector_sub cvector_sub c% * f0 cSUC cSUC f1 * f2 cSUC cSUC f1 c% * f0 f3 * f2 f3 cvector_add cvsum * * part c.. f3 f1 / c% creal_sub * f0 cSUC b0 * f0 b0 * f2 cSUC b0 c% creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 * f2 cSUC cSUC f1
- |- ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)
T * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
- |- ((\n. ((EVEN (BIT0 n)) = T)) n)
T * / c= cEVEN cBIT0 b0 cT f0
- |- ((_0 + _0) = _0)
T c= c+ c_0 c_0 c_0
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num n)) ==> ((int_lt (int_of_num n)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0)))))) = ((int_lt (int_of_num n)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 cint_lt cint_of_num f0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_lt cint_of_num f0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
- |- (((!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) ==> ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)) = ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n))
T c= c==> ! c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
+ |- ((((m <= (NUMERAL _0)) ==> (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))))) /\ ((~ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))) = (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (NUMERAL _0))) ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))))
T c= c/\ c==> c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c==> c~ c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cCOND c<= f0 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))
T c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((_0 * (BIT0 n)) = _0)
T c= c* c_0 cBIT0 f0 c_0
- |- (((!n. (((BIT0 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- (((BIT0 n) >= (BIT0 m)) = (n >= m))
T c= c>= cBIT0 f0 cBIT0 f1 c>= f0 f1
- |- (((BIT0 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT1 f1 c<= f0 f1
- |- ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- |- (((!n. ((_0 * (BIT1 n)) = _0)) ==> ((\n. ((_0 * (BIT1 n)) = _0)) n)) = ((\n. ((_0 * (BIT1 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT1 b0 c_0 * / c= c* c_0 cBIT1 b0 c_0 f0 * / c= c* c_0 cBIT1 b0 c_0 f0
- |- ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m)
T * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0
+ ((((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) ==> F), ((((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) \/ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0))))))))) |- F
T c==> c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 cF
- |- ((EVEN (BIT1 n)) = F)
T c= cEVEN cBIT1 f0 cF
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((vector_add (((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0))))))))
T c= cvector_add cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f1 cSUC f0 cvector_sub * f2 c+ cSUC f0 cNUMERAL cBIT1 c_0 * f2 cSUC f0 cvector_sub cvector_sub c% * f1 c+ cSUC f0 cNUMERAL cBIT1 c_0 * f2 c+ cSUC f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvector_add cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f1 c+ cSUC f0 cNUMERAL cBIT1 c_0 * f1 cSUC f0 * f2 c+ cSUC f0 cNUMERAL cBIT1 c_0
- |- ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)
T * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
- |- ((PRE _0) = _0)
T c= cPRE c_0 c_0
- |- ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n)
T * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((\n. ((BIT1 n) > _0)) n)
T * / c> cBIT1 b0 c_0 f0
- |- (((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) ==> ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0
+ |- ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND F) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) (vec (NUMERAL _0)))) (vec (NUMERAL _0))))
T c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cF cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvec cNUMERAL c_0 cvec cNUMERAL c_0
- |- (((!n. ((BIT1 n) >= _0)) ==> ((\n. ((BIT1 n) >= _0)) n)) = ((\n. ((BIT1 n) >= _0)) n))
T c= c==> ! c>= cBIT1 b0 c_0 * / c>= cBIT1 b0 c_0 f0 * / c>= cBIT1 b0 c_0 f0
- |- (((!n. (((BIT1 n) > (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
+ (m <= n) |- ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND T) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))
T c==> c<= f0 f1 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cT cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_0 > (BIT0 n)) = F)
T c= c> c_0 cBIT0 f0 cF
+ |- ((\e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f4 b0 f5
- |- (((!n. (((BIT1 n) - _0) = (BIT1 n))) ==> ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)) = ((\n. (((BIT1 n) - _0) = (BIT1 n))) n))
T c= c==> ! c= c- cBIT1 b0 c_0 cBIT1 b0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) ==> ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)) = ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- (~ (m = (NUMERAL _0))) |- (~ ((NUMERAL _0) = m))
T c==> c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL c_0 f0
- |- ((EVEN _0) = T)
T c= cEVEN c_0 cT
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) ==> ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)) = ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m))
T c= c==> ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _157614)) /\ (((real_le (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ ((((real_le ((real_add (real_of_int _157614)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _157614) ==> ((~ ((int_le _157614) (int_of_num (NUMERAL _0)))) \/ ((_157614 = (int_of_num (NUMERAL _0))) \/ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c~ cint_le f0 cint_of_num cNUMERAL c_0 c\/ c= f0 cint_of_num cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0
- |- ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))
T c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157594)) /\ ((real_le ((real_add (real_of_int _157594)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157594))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157594)) /\ ((real_le ((real_add (real_of_int _157594)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157594))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
- |- ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
- |- (((!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) ==> ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0
- |- (((!n. (((BIT0 n) > _0) = (n > _0))) ==> ((\n. (((BIT0 n) > _0) = (n > _0))) n)) = ((\n. (((BIT0 n) > _0) = (n > _0))) n))
T c= c==> ! c= c> cBIT0 b0 c_0 c> b0 c_0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0
- |- ((_0 = (BIT1 n)) = F)
T c= c= c_0 cBIT1 f0 cF
- |- (((!n. (~ (_0 > (BIT0 n)))) ==> ((\n. (~ (_0 > (BIT0 n)))) n)) = ((\n. (~ (_0 > (BIT0 n)))) n))
T c= c==> ! c~ c> c_0 cBIT0 b0 * / c~ c> c_0 cBIT0 b0 f0 * / c~ c> c_0 cBIT0 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b2 cNUMERAL cBIT1 c_0 * f2 b2 * f3 c+ b2 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b2 cNUMERAL cBIT1 c_0 * f2 b2 * f3 c+ b2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f4
- |- ((\n. (((NUMERAL _0) + n) = n)) n)
T * / c= c+ cNUMERAL c_0 b0 b0 f0
+ |- (((% (f (NUMERAL _0))) ((vector_sub (g (NUMERAL (BIT1 _0)))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f (NUMERAL _0))) (g (NUMERAL _0))))) ((% ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) (g (NUMERAL (BIT1 _0))))))
T c= c% * f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 cvector_sub cvector_sub c% * f0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 c_0 c% * f0 cNUMERAL c_0 * f1 cNUMERAL c_0 c% creal_sub * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0
+ |- (((real_add ((real_sub ((real_sub ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) ((real_mul (f m)) ((g m) $ i)))) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f m)) ((g m) $ i)))) ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))
T c= creal_add creal_sub creal_sub creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 creal_add c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3
- |- ((SUC (BIT0 n)) = (BIT1 n))
T c= cSUC cBIT0 f0 cBIT1 f0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157594)) /\ ((real_le ((real_add (real_of_int _157594)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157594))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- ((((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 cF
+ |- (((T ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))))) ==> (((~ T) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND T) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) e')))) = (((~ T) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND T) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) e'))))
T c= c==> c==> cT c= cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c==> c==> c~ cT c= cvec cNUMERAL c_0 f4 c= cCOND c<= f3 f1 cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cT cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ cT c= cvec cNUMERAL c_0 f4 c= cCOND c<= f3 f1 cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cT cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 f4
- |- ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)
T * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
- |- ((\n. ((_0 = (BIT1 n)) = F)) n)
T * / c= c= c_0 cBIT1 b0 cF f0
- |- ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)
T * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) ==> ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)) = ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m))
T c= c==> ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- ((~ F) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ cF c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
- |- ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))
T c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((\n. ((BIT1 n) >= _0)) n)
T * / c>= cBIT1 b0 c_0 f0
- |- ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)
T * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
- |- (((BIT0 n) > (BIT0 m)) = (n > m))
T c= c> cBIT0 f0 cBIT0 f1 c> f0 f1
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num m)) ==> ((~ ((int_le (int_of_num m)) (int_of_num (NUMERAL _0)))) \/ (((int_of_num m) = (int_of_num (NUMERAL _0))) \/ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0))))))) = ((~ ((int_le (int_of_num m)) (int_of_num (NUMERAL _0)))) \/ (((int_of_num m) = (int_of_num (NUMERAL _0))) \/ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c~ cint_le cint_of_num f0 cint_of_num cNUMERAL c_0 c\/ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvec cNUMERAL c_0 c\/ c~ cint_le cint_of_num f0 cint_of_num cNUMERAL c_0 c\/ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvec cNUMERAL c_0
- |- ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)
T * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) |- (((m <= (SUC n)) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))))) /\ ((~ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0)))))
T c==> c= cvsum * * part c.. f0 f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 cSUC f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c==> c~ c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvec cNUMERAL c_0
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))) /\ (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) /\ ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))) /\ (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))))
T c/\ c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 c/\ c/\ ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0
- |- ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n)
T * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_add ((real_sub ((real_sub ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) ((real_mul (f m)) ((g m) $ i)))) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f m)) ((g m) $ i)))) ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i))))) = (((lambdai. ((real_add ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) $ i)) ((lambdai. ((real_mul (f m)) ((g m) $ i))) $ i))) $ i)) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) $ i)) ((lambdai. ((real_mul (f (SUC n))) ((lambdai. ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i)) ((lambdai. ((real_mul (f m)) ((g m) $ i))) $ i))) $ i)) ((lambdai. ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((lambdai. ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_add creal_sub creal_sub creal_mul * f1 cSUC f2 c$ * f3 cSUC f2 f0 creal_mul * f1 f4 c$ * f3 f4 f0 c$ cvsum * * part c.. f4 f2 / clambda / creal_mul creal_sub * f1 cSUC b0 * f1 b0 c$ * f3 cSUC b0 b1 f0 creal_mul * f1 cSUC f2 creal_sub c$ * f3 cSUC cSUC f2 f0 c$ * f3 cSUC f2 f0 creal_sub creal_sub creal_mul * f1 cSUC cSUC f2 c$ * f3 cSUC cSUC f2 f0 creal_mul * f1 f4 c$ * f3 f4 f0 creal_add c$ cvsum * * part c.. f4 f2 / clambda / creal_mul creal_sub * f1 cSUC b0 * f1 b0 c$ * f3 cSUC b0 b1 f0 creal_mul creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 c$ * f3 cSUC cSUC f2 f0 c= c$ clambda / creal_add c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cSUC f2 c$ * f3 cSUC f2 b1 b1 c$ clambda / creal_mul * f1 f4 c$ * f3 f4 b1 b1 b1 c$ cvsum * * part c.. f4 f2 / clambda / creal_mul creal_sub * f1 cSUC b1 * f1 b1 c$ * f3 cSUC b1 b2 b1 b0 c$ clambda / creal_mul * f1 cSUC f2 c$ clambda / creal_sub c$ * f3 cSUC cSUC f2 b1 c$ * f3 cSUC f2 b1 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cSUC cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 c$ clambda / creal_mul * f1 f4 c$ * f3 f4 b1 b1 b0 c$ clambda / creal_add c$ cvsum * * part c.. f4 f2 / clambda / creal_mul creal_sub * f1 cSUC b1 * f1 b1 c$ * f3 cSUC b1 b2 b1 c$ clambda / creal_mul creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 b0 f0
- |- (((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) ==> ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m)) = ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT1 b1 cF * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0 * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0
- T |- (T = T)
T c==> cT c= cT cT
- |- (((ODD _0) = F) /\ ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T))))
T c/\ c= cODD c_0 cF c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
- |- (((!n. (((BIT1 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
+ |- (((!n. ((n < m) = (~ (m <= n)))) ==> ((\n. ((n < m) = (~ (m <= n)))) n)) = ((\n. ((n < m) = (~ (m <= n)))) n))
T c= c==> ! c= c< b0 f0 c~ c<= f0 b0 * / c= c< b0 f0 c~ c<= f0 b0 f1 * / c= c< b0 f0 c~ c<= f0 b0 f1
+ |- (((!f. (!m. (!n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0))))))) ==> ((\f. (!m. (!n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0))))))) f)) = ((\f. (!m. (!n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0))))))) f))
T c= c==> ! ! ! c==> c< b2 b1 c= cvsum * * part c.. b1 b2 b0 cvec cNUMERAL c_0 * / ! ! c==> c< b2 b1 c= cvsum * * part c.. b1 b2 b0 cvec cNUMERAL c_0 f0 * / ! ! c==> c< b2 b1 c= cvsum * * part c.. b1 b2 b0 cvec cNUMERAL c_0 f0
- |- ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))
T c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ |- ((!g. (!m. (!n. (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))))) = T)
T c= ! ! ! c= cvsum * * part c.. b1 b2 / c% * f0 b3 cvector_sub * b0 c+ b3 cNUMERAL cBIT1 c_0 * b0 b3 cCOND c<= b1 b2 cvector_sub cvector_sub c% * f0 c+ b2 cNUMERAL cBIT1 c_0 * b0 c+ b2 cNUMERAL cBIT1 c_0 c% * f0 b1 * b0 b1 cvsum * * part c.. b1 b2 / c% creal_sub * f0 c+ b3 cNUMERAL cBIT1 c_0 * f0 b3 * b0 c+ b3 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT
- |- (((~ (_0 >= (BIT1 n))) ==> ((_0 >= (BIT1 n)) = F)) = ((_0 >= (BIT1 n)) = F))
T c= c==> c~ c>= c_0 cBIT1 f0 c= c>= c_0 cBIT1 f0 cF c= c>= c_0 cBIT1 f0 cF
- |- ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))
T c= cSUC cNUMERAL f0 cNUMERAL cSUC f0
- |- (((BIT0 n) >= _0) = T)
T c= c>= cBIT0 f0 c_0 cT
- |- ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))
T c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((!n. (((BIT1 n) = _0) = F)) ==> ((\n. (((BIT1 n) = _0) = F)) n)) = ((\n. (((BIT1 n) = _0) = F)) n))
T c= c==> ! c= c= cBIT1 b0 c_0 cF * / c= c= cBIT1 b0 c_0 cF f0 * / c= c= cBIT1 b0 c_0 cF f0
- |- ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))
T c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- ((real_neg ((real_sub ((real_add ((real_sub ((real_sub ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) ((real_mul (f m)) ((g m) $ i)))) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i))))) ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f m)) ((g m) $ i)))) ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_sub creal_sub creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 creal_add c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_of_num cNUMERAL c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) |- ((((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) /\ (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (SUC n))) ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))))
T c==> c= cvsum * * part c.. f0 f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvsum * * part c.. f0 f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 cSUC f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((((~ F) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND F) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) (vec (NUMERAL _0)))) (vec (NUMERAL _0))))) = ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND F) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))
T c= c==> c==> c~ cF c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cF cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cF cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvec cNUMERAL c_0 cvec cNUMERAL c_0
- (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) ==> ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)) = ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n))
T c= c==> ! c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
+ |- (((!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))) ==> ((\m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))) m)) = ((\m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))) m))
T c= c==> ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1 * / ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1 f0 * / ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1 f0
- |- (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))))))
T c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- ((((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 cF
- |- (((!n. (((BIT0 n) = _0) = (n = _0))) ==> ((\n. (((BIT0 n) = _0) = (n = _0))) n)) = ((\n. (((BIT0 n) = _0) = (n = _0))) n))
T c= c==> ! c= c= cBIT0 b0 c_0 c= b0 c_0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
- |- (((BIT0 n) > (BIT1 m)) = (n > m))
T c= c> cBIT0 f0 cBIT1 f1 c> f0 f1
- |- ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)
T * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
+ |- (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))))
T c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- ((\n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- (((!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) ==> ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
- |- (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))
T c= c+ cBIT0 f0 cBIT0 f1 cBIT0 c+ f0 f1
+ |- (((!n. ((_0 + (BIT1 n)) = (BIT1 n))) ==> ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n)) = ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n))
T c= c==> ! c= c+ c_0 cBIT1 b0 cBIT1 b0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0
- |- ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)
T * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))
T c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)
T * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
+ |- ((((m <= (SUC n)) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))))) /\ ((~ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))) = (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (SUC n))) ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))))
T c= c/\ c==> c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 cSUC f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c==> c~ c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 cSUC f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)) = ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
+ |- (((m <= (NUMERAL _0)) ==> (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))))) /\ ((~ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0)))))
T c/\ c==> c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c==> c~ c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvec cNUMERAL c_0
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- (((!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) ==> ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)) = ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n))
T c= c==> ! c= cSUC cBIT1 b0 cBIT0 cSUC b0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
+ |- ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f1 c= cvec cNUMERAL c_0 f5 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f4 f5
- (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (m = (NUMERAL _0))) |- (((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))) = ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND F) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c==> c~ c= f0 cNUMERAL c_0 c= c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND cF c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))))
T c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))
T c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((!n. (((BIT0 m) < (BIT0 n)) = (m < n))) ==> ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((\n. (((BIT0 n) = _0) = (n = _0))) n)
T * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m)
T * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- |- (((NUMERAL n) >= (NUMERAL m)) = (n >= m))
T c= c>= cNUMERAL f0 cNUMERAL f1 c>= f0 f1
- |- (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))
T c= c- cBIT0 f0 cBIT0 f1 cBIT0 c- f0 f1
- |- (((!n. (((BIT1 m) = (BIT0 n)) = F)) ==> ((\n. (((BIT1 m) = (BIT0 n)) = F)) n)) = ((\n. (((BIT1 m) = (BIT0 n)) = F)) n))
T c= c==> ! c= c= cBIT1 f0 cBIT0 b0 cF * / c= c= cBIT1 f0 cBIT0 b0 cF f1 * / c= c= cBIT1 f0 cBIT0 b0 cF f1
+ (m = (SUC n)) |- ((m = (SUC n)) /\ (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c==> c= f0 cSUC f1 c/\ c= f0 cSUC f1 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0
- |- ((\n. ((_0 EXP (BIT1 n)) = _0)) n)
T * / c= cEXP c_0 cBIT1 b0 c_0 f0
- |- (((!n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 EXP (BIT1 n)) = _0)
T c= cEXP c_0 cBIT1 f0 c_0
+ |- (((((COND (m = (NUMERAL _0))) ((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0))))) (vec (NUMERAL _0))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))) = (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))))
T c= c= cCOND c= f0 cNUMERAL c_0 c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0
+ |- (((!m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) ==> ((\m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) m)) = ((\m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) m))
T c= c==> ! c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 * / c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 f0 * / c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 f0
- |- ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))
T c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- (((int_lt (int_of_num n)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0))))) = (n < (SUC n)))
T c= cint_lt cint_of_num f0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c< f0 cSUC f0
+ (m = (NUMERAL _0)) |- ((((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))) = (((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND T) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c==> c= f0 cNUMERAL c_0 c= c= c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND cT c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))
T c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)
T * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))
T c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0
- |- ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n)
T * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1
- |- ((\n. ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))) n)
T * / c= cPRE cNUMERAL b0 cNUMERAL cPRE b0 f0
- |- (((!n. ((_0 <= (BIT0 n)) = T)) ==> ((\n. ((_0 <= (BIT0 n)) = T)) n)) = ((\n. ((_0 <= (BIT0 n)) = T)) n))
T c= c==> ! c= c<= c_0 cBIT0 b0 cT * / c= c<= c_0 cBIT0 b0 cT f0 * / c= c<= c_0 cBIT0 b0 cT f0
- |- (((!n. ((_0 < (BIT0 n)) = (_0 < n))) ==> ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)) = ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n))
T c= c==> ! c= c< c_0 cBIT0 b0 c< c_0 b0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
- (m <= (NUMERAL _0)) |- (F = ((NUMERAL _0) < m))
T c==> c<= f0 cNUMERAL c_0 c= cF c< cNUMERAL c_0 f0
- |- (((BIT1 n) = _0) = F)
T c= c= cBIT1 f0 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))
T c= c- cBIT0 f0 cBIT1 f1 cPRE cBIT0 c- f0 f1
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))
T c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- (m = (NUMERAL _0)) |- ((NUMERAL _0) = m)
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
- |- ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m)
T * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0
- |- ((_0 < (BIT0 n)) = (_0 < n))
T c= c< c_0 cBIT0 f0 c< c_0 f0
- |- ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)
T * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ (~ (m = (NUMERAL _0))) |- ((m = (NUMERAL _0)) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cF
- |- (((!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) ==> ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n)) = ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n))
T c= c==> ! c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1 * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1
- |- ((\m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) m)
T * / ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 f0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157614)) /\ (((real_le (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ ((((real_le ((real_add (real_of_int _157614)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0
- |- (((BIT0 n) + _0) = (BIT0 n))
T c= c+ cBIT0 f0 c_0 cBIT0 f0
+ |- ((\n. ((n < m) = (~ (m <= n)))) n)
T * / c= c< b0 f0 c~ c<= f0 b0 f1
- |- ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n)
T * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1
+ (m = (NUMERAL _0)) |- ((m = (NUMERAL _0)) = T)
T c==> c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cT
- |- (((BIT1 n) > _0) = T)
T c= c> cBIT1 f0 c_0 cT
- |- ((\n. ((_0 <= (BIT1 n)) = T)) n)
T * / c= c<= c_0 cBIT1 b0 cT f0
+ |- ((((((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (NUMERAL _0))) ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) /\ (!n. ((((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (SUC n))) ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))))) ==> (!n. (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))))) = (!n. (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))))
T c= c==> c/\ c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cCOND c<= f0 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 ! c==> c= cvsum * * part c.. f0 b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 b0 cvector_sub cvector_sub c% * f1 c+ b0 cNUMERAL cBIT1 c_0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 cSUC b0 cvector_sub cvector_sub c% * f1 c+ cSUC b0 cNUMERAL cBIT1 c_0 * f2 c+ cSUC b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cSUC b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 ! c= cvsum * * part c.. f0 b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 b0 cvector_sub cvector_sub c% * f1 c+ b0 cNUMERAL cBIT1 c_0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 ! c= cvsum * * part c.. f0 b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 b0 cvector_sub cvector_sub c% * f1 c+ b0 cNUMERAL cBIT1 c_0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (m <= (NUMERAL _0)) |- ((m <= (NUMERAL _0)) /\ (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))))
T c==> c<= f0 cNUMERAL c_0 c/\ c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0
- |- (((!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((\n. (((BIT1 n) < _0) = F)) n)
T * / c= c< cBIT1 b0 c_0 cF f0
- |- (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n))))))
T c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
+ |- ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))
T c= c<= f0 f1 cint_le cint_of_num f0 cint_of_num f1
- |- ((\n. ((_0 >= (BIT0 n)) = (_0 >= n))) n)
T * / c= c>= c_0 cBIT0 b0 c>= c_0 b0 f0
+ |- (((!n. (((SUC m) + n) = (SUC (m + n)))) ==> ((\n. (((SUC m) + n) = (SUC (m + n)))) n)) = ((\n. (((SUC m) + n) = (SUC (m + n)))) n))
T c= c==> ! c= c+ cSUC f0 b0 cSUC c+ f0 b0 * / c= c+ cSUC f0 b0 cSUC c+ f0 b0 f1 * / c= c+ cSUC f0 b0 cSUC c+ f0 b0 f1
- |- ((\n. (((BIT1 n) * _0) = _0)) n)
T * / c= c* cBIT1 b0 c_0 c_0 f0
- |- ((_0 - _0) = _0)
T c= c- c_0 c_0 c_0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) m)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ |- ((F ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ F) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND F) t') e'))))
T c==> c==> cF c= cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ cF c= cvec cNUMERAL c_0 f4 c= cCOND c<= cSUC f1 f1 cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cF f3 f4
+ |- ((\f. (!m. (!n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0))))))) f)
T * / ! ! c==> c< b2 b1 c= cvsum * * part c.. b1 b2 b0 cvec cNUMERAL c_0 f0
- |- (((!n. ((_0 = (BIT1 n)) = F)) ==> ((\n. ((_0 = (BIT1 n)) = F)) n)) = ((\n. ((_0 = (BIT1 n)) = F)) n))
T c= c==> ! c= c= c_0 cBIT1 b0 cF * / c= c= c_0 cBIT1 b0 cF f0 * / c= c= c_0 cBIT1 b0 cF f0
- |- (((!n. (((BIT1 m) = (BIT1 n)) = (m = n))) ==> ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n)) = ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n))
T c= c==> ! c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1
- |- ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157614)) /\ (((real_le (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ ((((real_le ((real_add (real_of_int _157614)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))))) |- ((((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) \/ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0
+ |- ((((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (NUMERAL _0))) ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) = (((m <= (NUMERAL _0)) ==> (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))))) /\ ((~ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))))
T c= c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cCOND c<= f0 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c==> c~ c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvec cNUMERAL c_0
+ |- ((\m. (!n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0)))))) m)
T * / ! c==> c< b1 b0 c= cvsum * * part c.. b0 b1 f0 cvec cNUMERAL c_0 f1
+ |- ((((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 cF
+ (~ (m = (NUMERAL _0))), (m <= (NUMERAL _0)) |- ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0))))
T c==> c~ c= f0 cNUMERAL c_0 c==> c<= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvec cNUMERAL c_0
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- |- (((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) ==> ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)) = ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m))
T c= c==> ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0 * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
- |- ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)
T * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
- |- (((!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) ==> ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n)) = ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
+ |- (((m = (SUC n)) \/ (m <= n)) ==> (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0
- |- ((_0 EXP _0) = (BIT1 _0))
T c= cEXP c_0 c_0 cBIT1 c_0
+ |- (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))
T c= cvsum * * part c.. f0 cNUMERAL c_0 f1 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0
- |- ((\m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- |- (((!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) ==> ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n)) = ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1 * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1
- |- (((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)
T * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- |- ((\m. ((m + (NUMERAL _0)) = m)) m)
T * / c= c+ b0 cNUMERAL c_0 b0 f0
- |- ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ |- ((m = (SUC n)) ==> (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c==> c= f0 cSUC f1 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _157614))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((\n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) n)
T * / c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 f2
- |- (((!n. (~ (_0 >= (BIT1 n)))) ==> ((\n. (~ (_0 >= (BIT1 n)))) n)) = ((\n. (~ (_0 >= (BIT1 n)))) n))
T c= c==> ! c~ c>= c_0 cBIT1 b0 * / c~ c>= c_0 cBIT1 b0 f0 * / c~ c>= c_0 cBIT1 b0 f0
+ |- (((!m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) ==> ((\m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) m)) = ((\m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) m))
T c= c==> ! c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 * / c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 f1 * / c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 f1
+ (~ (m = (NUMERAL _0))), (m <= (NUMERAL _0)) |- ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND F) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c~ c= f0 cNUMERAL c_0 c==> c<= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND cF c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. ((m + (NUMERAL _0)) = m)) ==> ((\m. ((m + (NUMERAL _0)) = m)) m)) = ((\m. ((m + (NUMERAL _0)) = m)) m))
T c= c==> ! c= c+ b0 cNUMERAL c_0 b0 * / c= c+ b0 cNUMERAL c_0 b0 f0 * / c= c+ b0 cNUMERAL c_0 b0 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))))
T c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))
T c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- (((vector_add (vec (NUMERAL _0))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add (vec (NUMERAL _0))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n)))))))
T c= cvector_add cvec cNUMERAL c_0 c% * f0 cSUC f1 cvector_sub * f2 cSUC cSUC f1 * f2 cSUC f1 cvector_sub cvector_sub c% * f0 cSUC cSUC f1 * f2 cSUC cSUC f1 c% * f0 cSUC f1 * f2 cSUC f1 cvector_add cvec cNUMERAL c_0 c% creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 * f2 cSUC cSUC f1
- |- ((\n. ((ODD (BIT0 n)) = F)) n)
T * / c= cODD cBIT0 b0 cF f0
- |- ((_0 - (BIT1 n)) = _0)
T c= c- c_0 cBIT1 f0 c_0
- |- (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))
T c= c* cBIT0 f0 cBIT1 f1 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 f1
- |- ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))
T c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- ((\n. ((m + (SUC n)) = (SUC (m + n)))) n)
T * / c= c+ f0 cSUC b0 cSUC c+ f0 b0 f1
- |- ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)
T * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
- |- (((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) ==> ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m)) = ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m))
T c= c==> ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0 * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0
- |- ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T)))
T c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
- |- (((!n. ((EVEN (NUMERAL n)) = (EVEN n))) ==> ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n)) = ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n))
T c= c==> ! c= cEVEN cNUMERAL b0 cEVEN b0 * / c= cEVEN cNUMERAL b0 cEVEN b0 f0 * / c= cEVEN cNUMERAL b0 cEVEN b0 f0
- |- ((\n. ((ODD (BIT1 n)) = T)) n)
T * / c= cODD cBIT1 b0 cT f0
+ |- ((\m. (!n. ((n < m) = (~ (m <= n))))) m)
T * / ! c= c< b1 b0 c~ c<= b0 b1 f0
- |- ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n)
T * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157594)) /\ ((real_le ((real_add (real_of_int _157594)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157594))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ |- ((\m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) m)
T * / c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 f1
- |- ((_0 = _0) = T)
T c= c= c_0 c_0 cT
- |- ((\n. (((BIT0 n) * _0) = _0)) n)
T * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((BIT1 n) >= (BIT1 m)) = (n >= m))
T c= c>= cBIT1 f0 cBIT1 f1 c>= f0 f1
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) ==> ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)) = ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n))
T c= c==> ! c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1 * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
+ (m <= n) |- ((((m <= n) = T) ==> ((T ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ T) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND T) t') e'))))) = ((T ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ T) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND T) t') e')))))
T c==> c<= f0 f1 c= c==> c= c<= f0 f1 cT c==> c==> cT c= cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ cT c= cvec cNUMERAL c_0 f5 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cT f4 f5 c==> c==> cT c= cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ cT c= cvec cNUMERAL c_0 f5 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cT f4 f5
- |- ((\m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) m)
T * / ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 f0
- F |- (F = T)
T c==> cF c= cF cT
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) m)) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) m))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) n)
T * / c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 f1
+ (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))), (m <= (SUC n)) |- ((m <= (SUC n)) /\ (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))))
T c==> c= cvsum * * part c.. f0 f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c<= f0 cSUC f1 c/\ c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 cSUC f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _157614) ==> ((~ ((int_le _157614) (int_of_num (NUMERAL _0)))) \/ ((_157614 = (int_of_num (NUMERAL _0))) \/ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c~ cint_le f0 cint_of_num cNUMERAL c_0 c\/ c= f0 cint_of_num cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0
- |- ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n)
T * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 * (BIT1 n)) = _0)
T c= c* c_0 cBIT1 f0 c_0
+ |- (((~ F) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND F) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) (vec (NUMERAL _0)))) e')))
T c==> c==> c~ cF c= cvec cNUMERAL c_0 f0 c= cCOND c<= cSUC f1 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 cSUC f1 * f3 cSUC f1 cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cF cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 cSUC f1 * f3 cSUC f1 cvec cNUMERAL c_0 f0
+ (~ (m <= (SUC n))) |- ((((SUC n) < m) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0)))) = (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))
T c==> c~ c<= f0 cSUC f1 c= c==> c< cSUC f1 f0 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvec cNUMERAL c_0
- |- ((_0 = (BIT0 n)) = (_0 = n))
T c= c= c_0 cBIT0 f0 c= c_0 f0
- |- ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)
T * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- (((m <= (NUMERAL _0)) ==> ((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))) = T)
T c= c==> c<= f0 cNUMERAL c_0 c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvec cNUMERAL c_0 cT
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157614)) /\ (((real_le (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ ((((real_le ((real_add (real_of_int _157614)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 cF
+ |- ((real_neg ((real_sub ((real_mul (f (NUMERAL _0))) ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i)))) ((real_sub ((real_sub ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i)))) ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul * f0 cNUMERAL c_0 creal_sub c$ * f1 cNUMERAL cBIT1 c_0 f2 c$ * f1 cNUMERAL c_0 f2 creal_sub creal_sub creal_mul * f0 cNUMERAL cBIT1 c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 creal_mul * f0 cNUMERAL c_0 c$ * f1 cNUMERAL c_0 f2 creal_mul creal_sub * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL c_0
+ |- ((((vector_add (vec (NUMERAL _0))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add (vec (NUMERAL _0))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))) = (((vector_add (((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c= c= cvector_add cvec cNUMERAL c_0 c% * f0 cSUC f1 cvector_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 cvector_sub cvector_sub c% * f0 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvector_add cvec cNUMERAL c_0 c% creal_sub * f0 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f0 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 c= cvector_add cCOND c<= cSUC f1 f1 cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f0 cSUC f1 cvector_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 cvector_sub cvector_sub c% * f0 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvector_add cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f0 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f0 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((\t'. (!e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c<= f0 f1 f2 c==> c==> f2 c= cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b2 cNUMERAL cBIT1 c_0 * f3 b2 * f4 c+ b2 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b2 cNUMERAL cBIT1 c_0 * f3 b2 * f4 c+ b2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f5
- |- ((\m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) m)
T * / ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
- |- ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))
T c= cEXP cBIT0 f0 cBIT1 f1 c* cBIT0 f0 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
- |- ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))))))
T c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))
T c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) |- (((~ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0)))) = (((m <= (SUC n)) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))))) /\ ((~ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))))
T c==> c= cvsum * * part c.. f0 f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= c==> c~ c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvec cNUMERAL c_0 c/\ c==> c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 cSUC f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c==> c~ c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvec cNUMERAL c_0
- |- (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))
T c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- (((BIT1 m) = (BIT1 n)) = (m = n))
T c= c= cBIT1 f0 cBIT1 f1 c= f0 f1
- |- ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))))
T c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!n. ((EVEN (BIT0 n)) = T)) ==> ((\n. ((EVEN (BIT0 n)) = T)) n)) = ((\n. ((EVEN (BIT0 n)) = T)) n))
T c= c==> ! c= cEVEN cBIT0 b0 cT * / c= cEVEN cBIT0 b0 cT f0 * / c= cEVEN cBIT0 b0 cT f0
- |- (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) ==> ((\m. (!n. (((SUC m) + n) = (SUC (m + n))))) m)) = ((\m. (!n. (((SUC m) + n) = (SUC (m + n))))) m))
T c= c==> ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 * / ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 f0 * / ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 f0
- |- (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))
T c= c- cBIT1 f0 cBIT1 f1 cBIT0 c- f0 f1
- |- ((\n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) n)
T * / c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 f0
+ (~ (m <= (NUMERAL _0))) |- ((((NUMERAL _0) < m) ==> (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0)))) = (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))
T c==> c~ c<= f0 cNUMERAL c_0 c= c==> c< cNUMERAL c_0 f0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvec cNUMERAL c_0
- |- ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))
T c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))
T c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n)
T * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1
+ |- ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))
T c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((_0 >= (BIT1 n)) = F)
T c= c>= c_0 cBIT1 f0 cF
- |- (((!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) ==> ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n)) = ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n))
T c= c==> ! c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1 * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ |- ((real_neg ((real_sub ((real_add (real_of_num (NUMERAL _0))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i))))) ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f (SUC n))) ((g (SUC n)) $ i)))) ((real_add (real_of_num (NUMERAL _0))) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_of_num cNUMERAL c_0 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_add creal_of_num cNUMERAL c_0 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_of_num cNUMERAL c_0
+ (m <= (NUMERAL _0)) |- ((((COND (m = (NUMERAL _0))) ((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0))))) (vec (NUMERAL _0))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c<= f0 cNUMERAL c_0 c= cCOND c= f0 cNUMERAL c_0 c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (m = (NUMERAL _0)) |- ((m = (NUMERAL _0)) /\ (((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c==> c= f0 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((~ (((real_add ((real_sub ((real_sub ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) ((real_mul (f m)) ((g m) $ i)))) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f m)) ((g m) $ i)))) ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) ==> F)
T c==> c~ c= creal_add creal_sub creal_sub creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 creal_add c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 cF
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (f (NUMERAL _0))) ((vector_sub (g (NUMERAL (BIT1 _0)))) (g (NUMERAL _0)))) $ i) = (((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f (NUMERAL _0))) (g (NUMERAL _0))))) ((% ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) (g (NUMERAL (BIT1 _0))))) $ i)))) = (((% (f (NUMERAL _0))) ((vector_sub (g (NUMERAL (BIT1 _0)))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f (NUMERAL _0))) (g (NUMERAL _0))))) ((% ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) (g (NUMERAL (BIT1 _0)))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% * f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 b0 c$ cvector_sub cvector_sub c% * f0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 c_0 c% * f0 cNUMERAL c_0 * f1 cNUMERAL c_0 c% creal_sub * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0 b0 c= c% * f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 cvector_sub cvector_sub c% * f0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL cBIT1 c_0 c% * f0 cNUMERAL c_0 * f1 cNUMERAL c_0 c% creal_sub * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 * f1 cNUMERAL cBIT1 c_0
+ |- ((int_lt (int_of_num n)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0)))))
T cint_lt cint_of_num f0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
+ ((n <= m) = (~ (m < n))) |- ((~ (m < n)) = (n <= m))
T c==> c= c<= f0 f1 c~ c< f1 f0 c= c~ c< f1 f0 c<= f0 f1
+ |- (((!m. (!n. ((n <= m) = (~ (m < n))))) ==> ((\m. (!n. ((n <= m) = (~ (m < n))))) m)) = ((\m. (!n. ((n <= m) = (~ (m < n))))) m))
T c= c==> ! ! c= c<= b1 b0 c~ c< b0 b1 * / ! c= c<= b1 b0 c~ c< b0 b1 f0 * / ! c= c<= b1 b0 c~ c< b0 b1 f0
+ |- ((((vector_add (vec (NUMERAL _0))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add (vec (NUMERAL _0))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n))))))) = (((vector_add (vec (NUMERAL _0))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add (vec (NUMERAL _0))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c= c= cvector_add cvec cNUMERAL c_0 c% * f0 cSUC f1 cvector_sub * f2 cSUC cSUC f1 * f2 cSUC f1 cvector_sub cvector_sub c% * f0 cSUC cSUC f1 * f2 cSUC cSUC f1 c% * f0 cSUC f1 * f2 cSUC f1 cvector_add cvec cNUMERAL c_0 c% creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 * f2 cSUC cSUC f1 c= cvector_add cvec cNUMERAL c_0 c% * f0 cSUC f1 cvector_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 cvector_sub cvector_sub c% * f0 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvector_add cvec cNUMERAL c_0 c% creal_sub * f0 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f0 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ |- ((((vector_add ((vector_sub ((vector_sub ((% (f (SUC n))) (g (SUC n)))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k))))))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k)))))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n))))))) = (((vector_add ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c= c= cvector_add cvector_sub cvector_sub c% * f0 cSUC f1 * f2 cSUC f1 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 cSUC b0 * f0 b0 * f2 cSUC b0 c% * f0 cSUC f1 cvector_sub * f2 cSUC cSUC f1 * f2 cSUC f1 cvector_sub cvector_sub c% * f0 cSUC cSUC f1 * f2 cSUC cSUC f1 c% * f0 f3 * f2 f3 cvector_add cvsum * * part c.. f3 f1 / c% creal_sub * f0 cSUC b0 * f0 b0 * f2 cSUC b0 c% creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 * f2 cSUC cSUC f1 c= cvector_add cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 cvector_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 cvector_sub cvector_sub c% * f0 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvector_add cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f0 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f0 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ (~ (m <= (SUC n))) |- ((SUC n) < m)
T c==> c~ c<= f0 cSUC f1 c< cSUC f1 f0
+ (~ (m <= (NUMERAL _0))) |- ((m <= (NUMERAL _0)) = F)
T c==> c~ c<= f0 cNUMERAL c_0 c= c<= f0 cNUMERAL c_0 cF
+ |- (((!m. (!n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0)))))) ==> ((\m. (!n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0)))))) m)) = ((\m. (!n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0)))))) m))
T c= c==> ! ! c==> c< b1 b0 c= cvsum * * part c.. b0 b1 f0 cvec cNUMERAL c_0 * / ! c==> c< b1 b0 c= cvsum * * part c.. b0 b1 f0 cvec cNUMERAL c_0 f1 * / ! c==> c< b1 b0 c= cvsum * * part c.. b0 b1 f0 cvec cNUMERAL c_0 f1
+ |- ((\n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n)))) n)
T * / c= c<= f0 cSUC b0 c\/ c= f0 cSUC b0 c<= f0 b0 f1
+ |- (((~ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0)))) = (((m <= (NUMERAL _0)) ==> (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))))) /\ ((~ (m <= (NUMERAL _0))) ==> (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))))
T c= c==> c~ c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvec cNUMERAL c_0 c/\ c==> c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c==> c~ c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvec cNUMERAL c_0
+ |- ((n < (SUC n)) = T)
T c= c< f0 cSUC f0 cT
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (T ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))))
T c==> cT c= cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0
+ |- (((vector_add (vec (NUMERAL _0))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add (vec (NUMERAL _0))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0))))))))
T c= cvector_add cvec cNUMERAL c_0 c% * f0 cSUC f1 cvector_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 cvector_sub cvector_sub c% * f0 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvector_add cvec cNUMERAL c_0 c% creal_sub * f0 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f0 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _157614))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((\n. ((n < m) ==> (((vsum (m .. n)) f) = (vec (NUMERAL _0))))) n)
T * / c==> c< b0 f0 c= cvsum * * part c.. f0 b0 f1 cvec cNUMERAL c_0 f2
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (m = (NUMERAL _0)) |- ((((% (f (NUMERAL _0))) ((vector_sub (g (NUMERAL (BIT1 _0)))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f (NUMERAL _0))) (g (NUMERAL _0))))) ((% ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) (g (NUMERAL (BIT1 _0)))))) = (((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND T) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c==> c= f0 cNUMERAL c_0 c= c= c% * f1 cNUMERAL c_0 cvector_sub * f2 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 cNUMERAL c_0 * f2 cNUMERAL c_0 c% creal_sub * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 cNUMERAL cBIT1 c_0 c= c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND cT c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (!n. ((((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (SUC n))) ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))))
T c==> c= cvsum * * part c.. f0 f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 cSUC f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vec (NUMERAL _0))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) $ i) = (((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add (vec (NUMERAL _0))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n)))))) $ i)))) = (((vector_add (vec (NUMERAL _0))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add (vec (NUMERAL _0))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n))))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add cvec cNUMERAL c_0 c% * f0 cSUC f1 cvector_sub * f2 cSUC cSUC f1 * f2 cSUC f1 b0 c$ cvector_sub cvector_sub c% * f0 cSUC cSUC f1 * f2 cSUC cSUC f1 c% * f0 cSUC f1 * f2 cSUC f1 cvector_add cvec cNUMERAL c_0 c% creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 * f2 cSUC cSUC f1 b0 c= cvector_add cvec cNUMERAL c_0 c% * f0 cSUC f1 cvector_sub * f2 cSUC cSUC f1 * f2 cSUC f1 cvector_sub cvector_sub c% * f0 cSUC cSUC f1 * f2 cSUC cSUC f1 c% * f0 cSUC f1 * f2 cSUC f1 cvector_add cvec cNUMERAL c_0 c% creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 * f2 cSUC cSUC f1
+ |- (((real_le (real_of_num m)) (real_neg (real_of_num n))) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= creal_le creal_of_num f0 creal_neg creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
+ |- (((((COND (m = (NUMERAL _0))) ((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0))))) (vec (NUMERAL _0))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))) = (((m = (NUMERAL _0)) ==> (((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))) /\ ((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))))
T c= c= cCOND c= f0 cNUMERAL c_0 c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c= f0 cNUMERAL c_0 c= c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_add ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ((lambdai. ((real_mul (f (SUC n))) ((lambdai. ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i)) ((lambdai. ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) $ i))) $ i)) ((lambdai. ((real_add ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ((lambdai. ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_of_num cNUMERAL c_0 b0 c$ clambda / creal_mul * f1 cSUC f2 c$ clambda / creal_sub c$ * f3 cSUC cSUC f2 b1 c$ * f3 cSUC f2 b1 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cSUC cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 c$ clambda / creal_mul * f1 cSUC f2 c$ * f3 cSUC f2 b1 b1 b0 c$ clambda / creal_add c$ clambda / creal_of_num cNUMERAL c_0 b1 c$ clambda / creal_mul creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 b0 f0
+ ((~ (m <= n)) = (n < m)) |- ((n < m) = (~ (m <= n)))
T c==> c= c~ c<= f0 f1 c< f1 f0 c= c< f1 f0 c~ c<= f0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_mul (f (NUMERAL _0))) ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) = ((real_sub ((real_sub ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i)))) ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i)))) = (((lambdai. ((real_mul (f (NUMERAL _0))) ((lambdai. ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) $ i)) ((lambdai. ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i))) $ i))) $ i)) ((lambdai. ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_mul * f1 cNUMERAL c_0 creal_sub c$ * f2 cNUMERAL cBIT1 c_0 f0 c$ * f2 cNUMERAL c_0 f0 creal_sub creal_sub creal_mul * f1 cNUMERAL cBIT1 c_0 c$ * f2 cNUMERAL cBIT1 c_0 f0 creal_mul * f1 cNUMERAL c_0 c$ * f2 cNUMERAL c_0 f0 creal_mul creal_sub * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 c$ * f2 cNUMERAL cBIT1 c_0 f0 c= c$ clambda / creal_mul * f1 cNUMERAL c_0 c$ clambda / creal_sub c$ * f2 cNUMERAL cBIT1 c_0 b1 c$ * f2 cNUMERAL c_0 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cNUMERAL cBIT1 c_0 c$ * f2 cNUMERAL cBIT1 c_0 b1 b1 c$ clambda / creal_mul * f1 cNUMERAL c_0 c$ * f2 cNUMERAL c_0 b1 b1 b0 c$ clambda / creal_mul creal_sub * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 c$ * f2 cNUMERAL cBIT1 c_0 b1 b0 f0
+ |- (((!m. (!n. ((n < m) = (~ (m <= n))))) ==> ((\m. (!n. ((n < m) = (~ (m <= n))))) m)) = ((\m. (!n. ((n < m) = (~ (m <= n))))) m))
T c= c==> ! ! c= c< b1 b0 c~ c<= b0 b1 * / ! c= c< b1 b0 c~ c<= b0 b1 f0 * / ! c= c< b1 b0 c~ c<= b0 b1 f0
+ (~ (((real_add (real_of_num (NUMERAL _0))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f (SUC n))) ((g (SUC n)) $ i)))) ((real_add (real_of_num (NUMERAL _0))) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_of_num cNUMERAL c_0 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_add creal_of_num cNUMERAL c_0 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((~ (m <= (SUC n))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))
T c==> c~ c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvec cNUMERAL c_0
+ |- (((int_le (int_of_num (NUMERAL _0))) _157614) ==> ((~ ((int_le _157614) (int_of_num (NUMERAL _0)))) \/ ((_157614 = (int_of_num (NUMERAL _0))) \/ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c~ cint_le f0 cint_of_num cNUMERAL c_0 c\/ c= f0 cint_of_num cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0))))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0
+ |- ((_0 + (BIT1 n)) = (BIT1 n))
T c= c+ c_0 cBIT1 f0 cBIT1 f0
+ |- (((vector_add ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0))))))))
T c= cvector_add cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 cvector_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 cvector_sub cvector_sub c% * f0 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f0 f3 * f2 f3 cvector_add cvsum * * part c.. f3 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f0 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f0 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _157594) ==> ((int_lt _157594) ((int_add _157594) (int_of_num (NUMERAL (BIT1 _0))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 cint_lt f0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))
T c= c+ cNUMERAL f0 cNUMERAL f1 cNUMERAL c+ f0 f1
+ (~ (m = (NUMERAL _0))), (m <= (NUMERAL _0)) |- ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c~ c= f0 cNUMERAL c_0 c==> c<= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((\e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= c<= f0 f1 f2 c==> c==> f2 c= cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b1 cNUMERAL cBIT1 c_0 * f3 b1 * f4 c+ b1 cNUMERAL cBIT1 c_0 f5 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b0 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b1 cNUMERAL cBIT1 c_0 * f3 b1 * f4 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f5 b0 f6
+ |- ((((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 cF
+ |- ((~ T) = F)
T c= c~ cT cF
+ |- ((m + (NUMERAL (BIT1 _0))) = (SUC m))
T c= c+ f0 cNUMERAL cBIT1 c_0 cSUC f0
+ |- (((~ ((int_le (int_of_num m)) (int_of_num (NUMERAL _0)))) \/ (((int_of_num m) = (int_of_num (NUMERAL _0))) \/ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))) = ((m <= (NUMERAL _0)) ==> ((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))
T c= c\/ c~ cint_le cint_of_num f0 cint_of_num cNUMERAL c_0 c\/ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvec cNUMERAL c_0 c==> c<= f0 cNUMERAL c_0 c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvec cNUMERAL c_0
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((!m. (!n. (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))))) = T)
T c= ! ! c= cvsum * * part c.. b0 b1 / c% * f0 b2 cvector_sub * f1 c+ b2 cNUMERAL cBIT1 c_0 * f1 b2 cCOND c<= b0 b1 cvector_sub cvector_sub c% * f0 c+ b1 cNUMERAL cBIT1 c_0 * f1 c+ b1 cNUMERAL cBIT1 c_0 c% * f0 b0 * f1 b0 cvsum * * part c.. b0 b1 / c% creal_sub * f0 c+ b2 cNUMERAL cBIT1 c_0 * f0 b2 * f1 c+ b2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0))))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0
+ |- ((\m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) m)
T * / c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 f0
+ |- (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c<= f0 f1 f2 c==> c==> f2 c= cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 * f4 c+ b0 cNUMERAL cBIT1 c_0 f5 c==> c==> c~ f2 c= cvec cNUMERAL c_0 f6 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 * f4 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f5 f6
+ |- (((((SUC n) <= n) = F) ==> ((F ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ F) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND F) t') e'))))) = ((F ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ F) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND F) t') e')))))
T c= c==> c= c<= cSUC f0 f0 cF c==> c==> cF c= cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ cF c= cvec cNUMERAL c_0 f4 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cF f3 f4 c==> c==> cF c= cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ cF c= cvec cNUMERAL c_0 f4 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cF f3 f4
+ |- ((((~ (((real_mul (f (NUMERAL _0))) ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) = ((real_sub ((real_sub ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i)))) ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i))))) ==> F) ==> (((real_mul (f (NUMERAL _0))) ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) = ((real_sub ((real_sub ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i)))) ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i))))) = (((real_mul (f (NUMERAL _0))) ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) = ((real_sub ((real_sub ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i)))) ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i)))))
T c= c==> c==> c~ c= creal_mul * f0 cNUMERAL c_0 creal_sub c$ * f1 cNUMERAL cBIT1 c_0 f2 c$ * f1 cNUMERAL c_0 f2 creal_sub creal_sub creal_mul * f0 cNUMERAL cBIT1 c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 creal_mul * f0 cNUMERAL c_0 c$ * f1 cNUMERAL c_0 f2 creal_mul creal_sub * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 cF c= creal_mul * f0 cNUMERAL c_0 creal_sub c$ * f1 cNUMERAL cBIT1 c_0 f2 c$ * f1 cNUMERAL c_0 f2 creal_sub creal_sub creal_mul * f0 cNUMERAL cBIT1 c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 creal_mul * f0 cNUMERAL c_0 c$ * f1 cNUMERAL c_0 f2 creal_mul creal_sub * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 c= creal_mul * f0 cNUMERAL c_0 creal_sub c$ * f1 cNUMERAL cBIT1 c_0 f2 c$ * f1 cNUMERAL c_0 f2 creal_sub creal_sub creal_mul * f0 cNUMERAL cBIT1 c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 creal_mul * f0 cNUMERAL c_0 c$ * f1 cNUMERAL c_0 f2 creal_mul creal_sub * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2
+ ((((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) \/ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0))))))))) |- F
T c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 cF
+ (m <= (NUMERAL _0)) |- ((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))
T c==> c<= f0 cNUMERAL c_0 c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvec cNUMERAL c_0
+ |- ((\m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))) m)
T * / ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1 f0
+ |- ((\n. (((SUC m) + n) = (SUC (m + n)))) n)
T * / c= c+ cSUC f0 b0 cSUC c+ f0 b0 f1
+ (m = (NUMERAL _0)) |- (((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND T) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c= f0 cNUMERAL c_0 c= c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND cT c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n)
T * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0
+ ((m <= n) ==> (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0))))))))), ((m = (SUC n)) \/ (m <= n)) |- (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0))))))))
T c==> c==> c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ |- ((\m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) m)
T * / ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 f0
+ ((m + (NUMERAL (BIT1 _0))) = (SUC m)) |- ((SUC m) = (m + (NUMERAL (BIT1 _0))))
T c==> c= c+ f0 cNUMERAL cBIT1 c_0 cSUC f0 c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _157594)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (~ (((real_mul (f (NUMERAL _0))) ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) = ((real_sub ((real_sub ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i)))) ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i))))) |- ((~ (((real_mul (f (NUMERAL _0))) ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) = ((real_sub ((real_sub ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i)))) ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i))))) /\ F)
T c==> c~ c= creal_mul * f0 cNUMERAL c_0 creal_sub c$ * f1 cNUMERAL cBIT1 c_0 f2 c$ * f1 cNUMERAL c_0 f2 creal_sub creal_sub creal_mul * f0 cNUMERAL cBIT1 c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 creal_mul * f0 cNUMERAL c_0 c$ * f1 cNUMERAL c_0 f2 creal_mul creal_sub * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 c/\ c~ c= creal_mul * f0 cNUMERAL c_0 creal_sub c$ * f1 cNUMERAL cBIT1 c_0 f2 c$ * f1 cNUMERAL c_0 f2 creal_sub creal_sub creal_mul * f0 cNUMERAL cBIT1 c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 creal_mul * f0 cNUMERAL c_0 c$ * f1 cNUMERAL c_0 f2 creal_mul creal_sub * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 cF
+ |- (((((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (SUC n))) ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))) = T)
T c= c==> c= cvsum * * part c.. f0 f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 cSUC f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul (f (NUMERAL _0))) ((lambdai. ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) $ i)) ((lambdai. ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i))) $ i))) $ i)) ((lambdai. ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul * f1 cNUMERAL c_0 c$ clambda / creal_sub c$ * f2 cNUMERAL cBIT1 c_0 b1 c$ * f2 cNUMERAL c_0 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cNUMERAL cBIT1 c_0 c$ * f2 cNUMERAL cBIT1 c_0 b1 b1 c$ clambda / creal_mul * f1 cNUMERAL c_0 c$ * f2 cNUMERAL c_0 b1 b1 b0 c$ clambda / creal_mul creal_sub * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 c$ * f2 cNUMERAL cBIT1 c_0 b1 b0 f0
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (((((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c= c==> c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) |- ((m <= (SUC n)) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))))
T c==> c= cvsum * * part c.. f0 f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 cSUC f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0
+ |- (((!g'. (!t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c<= cSUC f0 f0 b0 c==> c==> b0 c= cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b3 cNUMERAL cBIT1 c_0 * f1 b3 * f2 c+ b3 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b3 cNUMERAL cBIT1 c_0 * f1 b3 * f2 c+ b3 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c<= cSUC f0 f0 b0 c==> c==> b0 c= cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b3 cNUMERAL cBIT1 c_0 * f1 b3 * f2 c+ b3 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b3 cNUMERAL cBIT1 c_0 * f1 b3 * f2 c+ b3 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3 * / ! ! c==> c= c<= cSUC f0 f0 b0 c==> c==> b0 c= cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b3 cNUMERAL cBIT1 c_0 * f1 b3 * f2 c+ b3 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b3 cNUMERAL cBIT1 c_0 * f1 b3 * f2 c+ b3 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3
+ |- ((~ F) = T)
T c= c~ cF cT
+ |- ((m = (NUMERAL _0)) ==> (((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c==> c= f0 cNUMERAL c_0 c= c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((!t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b2 cNUMERAL cBIT1 c_0 * f2 b2 * f3 c+ b2 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b2 cNUMERAL cBIT1 c_0 * f2 b2 * f3 c+ b2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 * / ! c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b2 cNUMERAL cBIT1 c_0 * f2 b2 * f3 c+ b2 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b2 cNUMERAL cBIT1 c_0 * f2 b2 * f3 c+ b2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f4 * / ! c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b2 cNUMERAL cBIT1 c_0 * f2 b2 * f3 c+ b2 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b2 cNUMERAL cBIT1 c_0 * f2 b2 * f3 c+ b2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f4
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vec (NUMERAL _0))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) $ i) = (((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add (vec (NUMERAL _0))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n)))))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvec cNUMERAL c_0 c% * f1 cSUC f2 cvector_sub * f3 cSUC cSUC f2 * f3 cSUC f2 f0 c$ cvector_sub cvector_sub c% * f1 cSUC cSUC f2 * f3 cSUC cSUC f2 c% * f1 cSUC f2 * f3 cSUC f2 cvector_add cvec cNUMERAL c_0 c% creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 * f3 cSUC cSUC f2 f0
+ (~ (m <= (SUC n))) |- ((~ (m <= (SUC n))) /\ (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))
T c==> c~ c<= f0 cSUC f1 c/\ c~ c<= f0 cSUC f1 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvec cNUMERAL c_0
+ (m <= (SUC n)) |- (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0))))))))
T c==> c<= f0 cSUC f1 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vector_sub ((vector_sub ((% (f (SUC n))) (g (SUC n)))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k))))))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) $ i) = (((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (SUC k))) (f k))) (g (SUC k)))))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n)))))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvector_sub cvector_sub c% * f1 cSUC f2 * f3 cSUC f2 c% * f1 f4 * f3 f4 cvsum * * part c.. f4 f2 / c% creal_sub * f1 cSUC b0 * f1 b0 * f3 cSUC b0 c% * f1 cSUC f2 cvector_sub * f3 cSUC cSUC f2 * f3 cSUC f2 f0 c$ cvector_sub cvector_sub c% * f1 cSUC cSUC f2 * f3 cSUC cSUC f2 c% * f1 f4 * f3 f4 cvector_add cvsum * * part c.. f4 f2 / c% creal_sub * f1 cSUC b0 * f1 b0 * f3 cSUC b0 c% creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 * f3 cSUC cSUC f2 f0
+ |- ((~ (((real_mul (f (NUMERAL _0))) ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) = ((real_sub ((real_sub ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i)))) ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i))))) ==> F)
T c==> c~ c= creal_mul * f0 cNUMERAL c_0 creal_sub c$ * f1 cNUMERAL cBIT1 c_0 f2 c$ * f1 cNUMERAL c_0 f2 creal_sub creal_sub creal_mul * f0 cNUMERAL cBIT1 c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 creal_mul * f0 cNUMERAL c_0 c$ * f1 cNUMERAL c_0 f2 creal_mul creal_sub * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 cF
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul (f (NUMERAL _0))) ((lambdai. ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) $ i)) ((lambdai. ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i))) $ i))) $ i)) ((lambdai. ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (f (NUMERAL _0))) ((vector_sub (g (NUMERAL (BIT1 _0)))) (g (NUMERAL _0)))) $ i) = (((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f (NUMERAL _0))) (g (NUMERAL _0))))) ((% ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) (g (NUMERAL (BIT1 _0))))) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul * f1 cNUMERAL c_0 c$ clambda / creal_sub c$ * f2 cNUMERAL cBIT1 c_0 b1 c$ * f2 cNUMERAL c_0 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cNUMERAL cBIT1 c_0 c$ * f2 cNUMERAL cBIT1 c_0 b1 b1 c$ clambda / creal_mul * f1 cNUMERAL c_0 c$ * f2 cNUMERAL c_0 b1 b1 b0 c$ clambda / creal_mul creal_sub * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 c$ * f2 cNUMERAL cBIT1 c_0 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% * f1 cNUMERAL c_0 cvector_sub * f2 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 f0 c$ cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 cNUMERAL c_0 * f2 cNUMERAL c_0 c% creal_sub * f1 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 cNUMERAL cBIT1 c_0 f0
+ (~ (m <= (SUC n))) |- (T = ((SUC n) < m))
T c==> c~ c<= f0 cSUC f1 c= cT c< cSUC f1 f0
+ (m <= (SUC n)) |- ((((m = (SUC n)) \/ (m <= n)) ==> (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0))))))))) = (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c==> c<= f0 cSUC f1 c= c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ |- ((\m. (!n. (((SUC m) + n) = (SUC (m + n))))) m)
T * / ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_add (real_of_num (NUMERAL _0))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f (SUC n))) ((g (SUC n)) $ i)))) ((real_add (real_of_num (NUMERAL _0))) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i))))) = (((lambdai. ((real_add ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ((lambdai. ((real_mul (f (SUC n))) ((lambdai. ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i)) ((lambdai. ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) $ i))) $ i)) ((lambdai. ((real_add ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ((lambdai. ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_add creal_of_num cNUMERAL c_0 creal_mul * f1 cSUC f2 creal_sub c$ * f3 cSUC cSUC f2 f0 c$ * f3 cSUC f2 f0 creal_sub creal_sub creal_mul * f1 cSUC cSUC f2 c$ * f3 cSUC cSUC f2 f0 creal_mul * f1 cSUC f2 c$ * f3 cSUC f2 f0 creal_add creal_of_num cNUMERAL c_0 creal_mul creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 c$ * f3 cSUC cSUC f2 f0 c= c$ clambda / creal_add c$ clambda / creal_of_num cNUMERAL c_0 b0 c$ clambda / creal_mul * f1 cSUC f2 c$ clambda / creal_sub c$ * f3 cSUC cSUC f2 b1 c$ * f3 cSUC f2 b1 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cSUC cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 c$ clambda / creal_mul * f1 cSUC f2 c$ * f3 cSUC f2 b1 b1 b0 c$ clambda / creal_add c$ clambda / creal_of_num cNUMERAL c_0 b1 c$ clambda / creal_mul creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 b0 f0
+ (m <= (SUC n)) |- ((m <= (SUC n)) = T)
T c==> c<= f0 cSUC f1 c= c<= f0 cSUC f1 cT
+ |- (((!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n)))) ==> ((\n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n)))) n)) = ((\n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n)))) n))
T c= c==> ! c= c<= f0 cSUC b0 c\/ c= f0 cSUC b0 c<= f0 b0 * / c= c<= f0 cSUC b0 c\/ c= f0 cSUC b0 c<= f0 b0 f1 * / c= c<= f0 cSUC b0 c\/ c= f0 cSUC b0 c<= f0 b0 f1
+ |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157594)) /\ ((real_le ((real_add (real_of_int _157594)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157594))))) |- (((real_ge (real_of_int _157594)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((m <= n) ==> (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c==> c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ |- (((!g'. (!t'. (!e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c<= f0 f1 b0 c==> c==> b0 c= cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b3 cNUMERAL cBIT1 c_0 * f2 b3 * f3 c+ b3 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b3 cNUMERAL cBIT1 c_0 * f2 b3 * f3 c+ b3 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c<= f0 f1 b0 c==> c==> b0 c= cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b3 cNUMERAL cBIT1 c_0 * f2 b3 * f3 c+ b3 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b3 cNUMERAL cBIT1 c_0 * f2 b3 * f3 c+ b3 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f4 * / ! ! c==> c= c<= f0 f1 b0 c==> c==> b0 c= cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b3 cNUMERAL cBIT1 c_0 * f2 b3 * f3 c+ b3 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b3 cNUMERAL cBIT1 c_0 * f2 b3 * f3 c+ b3 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f4
+ (m <= n) |- (((~ T) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND T) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) e')))
T c==> c<= f0 f1 c==> c==> c~ cT c= cvec cNUMERAL c_0 f2 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 * f4 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cT cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 * f4 c+ b0 cNUMERAL cBIT1 c_0 f2
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) $ i)) ((lambdai. ((real_mul (f m)) ((g m) $ i))) $ i))) $ i)) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) $ i)) ((lambdai. ((real_mul (f (SUC n))) ((lambdai. ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i)) ((lambdai. ((real_mul (f m)) ((g m) $ i))) $ i))) $ i)) ((lambdai. ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((lambdai. ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cSUC f2 c$ * f3 cSUC f2 b1 b1 c$ clambda / creal_mul * f1 f4 c$ * f3 f4 b1 b1 b1 c$ cvsum * * part c.. f4 f2 / clambda / creal_mul creal_sub * f1 cSUC b1 * f1 b1 c$ * f3 cSUC b1 b2 b1 b0 c$ clambda / creal_mul * f1 cSUC f2 c$ clambda / creal_sub c$ * f3 cSUC cSUC f2 b1 c$ * f3 cSUC f2 b1 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cSUC cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 c$ clambda / creal_mul * f1 f4 c$ * f3 f4 b1 b1 b0 c$ clambda / creal_add c$ cvsum * * part c.. f4 f2 / clambda / creal_mul creal_sub * f1 cSUC b1 * f1 b1 c$ * f3 cSUC b1 b2 b1 c$ clambda / creal_mul creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 b0 f0
+ (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))), (m <= (SUC n)) |- ((((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))) = (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))))
T c==> c= cvsum * * part c.. f0 f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c<= f0 cSUC f1 c= c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c= cvsum * * part c.. f0 cSUC f1 / c% * f2 b0 cvector_sub * f3 c+ b0 cNUMERAL cBIT1 c_0 * f3 b0 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 cSUC f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0
+ |- ((~ T) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ cT c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ (~ (((real_add ((real_sub ((real_sub ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) ((real_mul (f m)) ((g m) $ i)))) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f m)) ((g m) $ i)))) ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_sub creal_sub creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 creal_add c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (~ T) |- ((~ T) /\ ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ cT c/\ c~ cT c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ (~ (((real_mul (f (NUMERAL _0))) ((real_sub ((g (NUMERAL (BIT1 _0))) $ i)) ((g (NUMERAL _0)) $ i))) = ((real_sub ((real_sub ((real_mul (f (NUMERAL (BIT1 _0)))) ((g (NUMERAL (BIT1 _0))) $ i))) ((real_mul (f (NUMERAL _0))) ((g (NUMERAL _0)) $ i)))) ((real_mul ((real_sub (f (NUMERAL (BIT1 _0)))) (f (NUMERAL _0)))) ((g (NUMERAL (BIT1 _0))) $ i))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul * f0 cNUMERAL c_0 creal_sub c$ * f1 cNUMERAL cBIT1 c_0 f2 c$ * f1 cNUMERAL c_0 f2 creal_sub creal_sub creal_mul * f0 cNUMERAL cBIT1 c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 creal_mul * f0 cNUMERAL c_0 c$ * f1 cNUMERAL c_0 f2 creal_mul creal_sub * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL c_0 c$ * f1 cNUMERAL cBIT1 c_0 f2 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((SUC m) = (m + (NUMERAL (BIT1 _0)))) |- ((m + (NUMERAL (BIT1 _0))) = (SUC m))
T c==> c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0 c= c+ f0 cNUMERAL cBIT1 c_0 cSUC f0
+ |- (((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) ==> ((\m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) m)) = ((\m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) m))
T c= c==> ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 * / ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 f0 * / ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 f0
+ (m = (SUC n)) |- ((((vector_add (((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))) = (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c==> c= f0 cSUC f1 c= c= cvector_add cCOND c<= cSUC f1 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 cSUC f1 * f3 cSUC f1 cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 cSUC f1 * f3 cSUC f1 cvector_add cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_add ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) $ i)) ((lambdai. ((real_mul (f m)) ((g m) $ i))) $ i))) $ i)) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) $ i)) ((lambdai. ((real_mul (f (SUC n))) ((lambdai. ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_sub ((lambdai. ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i)) ((lambdai. ((real_mul (f m)) ((g m) $ i))) $ i))) $ i)) ((lambdai. ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((lambdai. ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cSUC f2 c$ * f3 cSUC f2 b1 b1 c$ clambda / creal_mul * f1 f4 c$ * f3 f4 b1 b1 b1 c$ cvsum * * part c.. f4 f2 / clambda / creal_mul creal_sub * f1 cSUC b1 * f1 b1 c$ * f3 cSUC b1 b2 b1 b0 c$ clambda / creal_mul * f1 cSUC f2 c$ clambda / creal_sub c$ * f3 cSUC cSUC f2 b1 c$ * f3 cSUC f2 b1 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_sub c$ clambda / creal_mul * f1 cSUC cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 c$ clambda / creal_mul * f1 f4 c$ * f3 f4 b1 b1 b0 c$ clambda / creal_add c$ cvsum * * part c.. f4 f2 / clambda / creal_mul creal_sub * f1 cSUC b1 * f1 b1 c$ * f3 cSUC b1 b2 b1 c$ clambda / creal_mul creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 c$ * f3 cSUC cSUC f2 b1 b1 b0 f0
+ (~ F) |- ((~ F) /\ ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ cF c/\ c~ cF c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ |- ((\g'. (!t'. (!e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c<= f0 f1 b0 c==> c==> b0 c= cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b3 cNUMERAL cBIT1 c_0 * f2 b3 * f3 c+ b3 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b3 cNUMERAL cBIT1 c_0 * f2 b3 * f3 c+ b3 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f4
+ |- ((((~ (((real_add (real_of_num (NUMERAL _0))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f (SUC n))) ((g (SUC n)) $ i)))) ((real_add (real_of_num (NUMERAL _0))) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) ==> F) ==> (((real_add (real_of_num (NUMERAL _0))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f (SUC n))) ((g (SUC n)) $ i)))) ((real_add (real_of_num (NUMERAL _0))) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) = (((real_add (real_of_num (NUMERAL _0))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f (SUC n))) ((g (SUC n)) $ i)))) ((real_add (real_of_num (NUMERAL _0))) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i))))))
T c= c==> c==> c~ c= creal_add creal_of_num cNUMERAL c_0 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_add creal_of_num cNUMERAL c_0 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 cF c= creal_add creal_of_num cNUMERAL c_0 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_add creal_of_num cNUMERAL c_0 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 c= creal_add creal_of_num cNUMERAL c_0 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_add creal_of_num cNUMERAL c_0 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3
+ |- ((\g'. (!t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c<= cSUC f0 f0 b0 c==> c==> b0 c= cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b3 cNUMERAL cBIT1 c_0 * f1 b3 * f2 c+ b3 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f1 c+ f0 cNUMERAL cBIT1 c_0 * f2 c+ f0 cNUMERAL cBIT1 c_0 c% * f1 cSUC f0 * f2 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b3 cNUMERAL cBIT1 c_0 * f1 b3 * f2 c+ b3 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vec (NUMERAL _0))) ((% (f (SUC n))) ((vector_sub (g (SUC (SUC n)))) (g (SUC n))))) $ i) = (((vector_sub ((vector_sub ((% (f (SUC (SUC n)))) (g (SUC (SUC n))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add (vec (NUMERAL _0))) ((% ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) (g (SUC (SUC n)))))) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvec cNUMERAL c_0 c% * f1 cSUC f2 cvector_sub * f3 cSUC cSUC f2 * f3 cSUC f2 f0 c$ cvector_sub cvector_sub c% * f1 cSUC cSUC f2 * f3 cSUC cSUC f2 c% * f1 cSUC f2 * f3 cSUC f2 cvector_add cvec cNUMERAL c_0 c% creal_sub * f1 cSUC cSUC f2 * f1 cSUC f2 * f3 cSUC cSUC f2 f0 cT
+ (m <= n) |- ((T ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ T) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND T) t') e'))))
T c==> c<= f0 f1 c==> c==> cT c= cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ cT c= cvec cNUMERAL c_0 f5 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cT f4 f5
+ |- (((!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f4 b0 * / c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f4 b0 f5 * / c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c<= cSUC f0 f0 cvector_sub cvector_sub c% * f2 c+ f0 cNUMERAL cBIT1 c_0 * f3 c+ f0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f0 * f3 cSUC f0 cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f4 b0 f5
+ |- (((!n. ((n <= m) = (~ (m < n)))) ==> ((\n. ((n <= m) = (~ (m < n)))) n)) = ((\n. ((n <= m) = (~ (m < n)))) n))
T c= c==> ! c= c<= b0 f0 c~ c< f0 b0 * / c= c<= b0 f0 c~ c< f0 b0 f1 * / c= c<= b0 f0 c~ c< f0 b0 f1
+ |- ((((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (NUMERAL _0))) ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) /\ (!n. ((((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (SUC n))) ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))))))
T c/\ c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cCOND c<= f0 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 ! c==> c= cvsum * * part c.. f0 b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 b0 cvector_sub cvector_sub c% * f1 c+ b0 cNUMERAL cBIT1 c_0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 cSUC b0 cvector_sub cvector_sub c% * f1 c+ cSUC b0 cNUMERAL cBIT1 c_0 * f2 c+ cSUC b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cSUC b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((((m = (NUMERAL _0)) ==> (((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))) /\ ((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))) = ((((COND (m = (NUMERAL _0))) ((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0))))) (vec (NUMERAL _0))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c= c/\ c==> c= f0 cNUMERAL c_0 c= c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cCOND c= f0 cNUMERAL c_0 c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (m = (NUMERAL _0)) |- ((((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND T) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))) = (((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c==> c= f0 cNUMERAL c_0 c= c= c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND cT c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (m = (SUC n)) |- ((((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))) = (((vector_add (((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vector_add ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c==> c= f0 cSUC f1 c= c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c= cvector_add cCOND c<= cSUC f1 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 cSUC f1 * f3 cSUC f1 cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 cSUC f1 * f3 cSUC f1 cvector_add cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- ((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((m <= (NUMERAL _0)) ==> (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))))
T c==> c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0
+ |- ((((~ T) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND T) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))) = ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND T) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))))
T c= c==> c==> c~ cT c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cT cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cT cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (m <= n) |- ((((vector_add ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))) = (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c==> c<= f0 f1 c= c= cvector_add cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ |- (((F ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) (vec (NUMERAL _0))))) ==> (((~ F) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND F) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) (vec (NUMERAL _0)))) e')))) = (((~ F) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((SUC n) <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) ((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND F) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f (SUC n))) (g (SUC n))))) (vec (NUMERAL _0)))) e'))))
T c= c==> c==> cF c= cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvec cNUMERAL c_0 c==> c==> c~ cF c= cvec cNUMERAL c_0 f3 c= cCOND c<= cSUC f1 f1 cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cF cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvec cNUMERAL c_0 f3 c==> c==> c~ cF c= cvec cNUMERAL c_0 f3 c= cCOND c<= cSUC f1 f1 cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvsum * * part c.. cSUC f1 f1 / c% creal_sub * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cF cvector_sub cvector_sub c% * f0 c+ f1 cNUMERAL cBIT1 c_0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c% * f0 cSUC f1 * f2 cSUC f1 cvec cNUMERAL c_0 f3
+ (((real_ge (real_of_int _157614)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (~ ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f (NUMERAL (BIT1 _0)))) (g (NUMERAL (BIT1 _0))))) ((% (f m)) (g m)))) (vec (NUMERAL _0)))))))) |- (((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157614))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _157614)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 cNUMERAL cBIT1 c_0 * f2 cNUMERAL cBIT1 c_0 c% * f1 f3 * f2 f3 cvec cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ |- (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))) = (((m = (NUMERAL _0)) ==> (((% (f (NUMERAL _0))) ((vector_sub (g ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g (NUMERAL _0)))) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))) /\ ((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))))
T c= c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c= f0 cNUMERAL c_0 c= c% * f1 cNUMERAL c_0 cvector_sub * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((!n. ((((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (SUC n))) ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))))) = ((((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (NUMERAL _0))) ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) /\ (!n. ((((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ==> (((vsum (m .. (SUC n))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (SUC n))) ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (SUC n))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))))))
T c= ! c==> c= cvsum * * part c.. f0 b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 b0 cvector_sub cvector_sub c% * f1 c+ b0 cNUMERAL cBIT1 c_0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 cSUC b0 cvector_sub cvector_sub c% * f1 c+ cSUC b0 cNUMERAL cBIT1 c_0 * f2 c+ cSUC b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cSUC b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cCOND c<= f0 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 ! c==> c= cvsum * * part c.. f0 b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 b0 cvector_sub cvector_sub c% * f1 c+ b0 cNUMERAL cBIT1 c_0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 cSUC b0 cvector_sub cvector_sub c% * f1 c+ cSUC b0 cNUMERAL cBIT1 c_0 * f2 c+ cSUC b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cSUC b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((~ (((real_add (real_of_num (NUMERAL _0))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f (SUC n))) ((g (SUC n)) $ i)))) ((real_add (real_of_num (NUMERAL _0))) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) ==> F)
T c==> c~ c= creal_add creal_of_num cNUMERAL c_0 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_add creal_of_num cNUMERAL c_0 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 cF
+ |- (((n < (SUC n)) ==> (((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))) = (vec (NUMERAL _0)))) = (((vsum ((SUC n) .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))) = (vec (NUMERAL _0))))
T c= c==> c< f0 cSUC f0 c= cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. cSUC f0 f0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (m <= (NUMERAL _0)) |- ((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c==> c<= f0 cNUMERAL c_0 c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (m <= n) |- ((m <= n) = T)
T c==> c<= f0 f1 c= c<= f0 f1 cT
+ ((m = (SUC n)) \/ (m <= n)) |- (((m = (SUC n)) \/ (m <= n)) /\ (((vector_add (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0)))) ((% (f (SUC n))) ((vector_sub (g ((SUC n) + (NUMERAL (BIT1 _0))))) (g (SUC n))))) = ((vector_sub ((vector_sub ((% (f ((SUC n) + (NUMERAL (BIT1 _0))))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vector_add ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) ((% ((real_sub (f ((SUC n) + (NUMERAL (BIT1 _0))))) (f (SUC n)))) (g ((SUC n) + (NUMERAL (BIT1 _0)))))))))
T c==> c\/ c= f0 cSUC f1 c<= f0 f1 c/\ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub cvector_sub c% * f2 c+ f1 cNUMERAL cBIT1 c_0 * f3 c+ f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c% * f2 cSUC f1 cvector_sub * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 cSUC f1 cvector_sub cvector_sub c% * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 c% * f2 f0 * f3 f0 cvector_add cvsum * * part c.. f0 f1 / c% creal_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 * f3 c+ b0 cNUMERAL cBIT1 c_0 c% creal_sub * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 * f2 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ |- (((!e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0)))))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c<= f0 f1 f2 c==> c==> f2 c= cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b1 cNUMERAL cBIT1 c_0 * f3 b1 * f4 c+ b1 cNUMERAL cBIT1 c_0 f5 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b0 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b1 cNUMERAL cBIT1 c_0 * f3 b1 * f4 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f5 b0 * / c==> c= c<= f0 f1 f2 c==> c==> f2 c= cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b1 cNUMERAL cBIT1 c_0 * f3 b1 * f4 c+ b1 cNUMERAL cBIT1 c_0 f5 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b0 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b1 cNUMERAL cBIT1 c_0 * f3 b1 * f4 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f5 b0 f6 * / c==> c= c<= f0 f1 f2 c==> c==> f2 c= cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b1 cNUMERAL cBIT1 c_0 * f3 b1 * f4 c+ b1 cNUMERAL cBIT1 c_0 f5 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b0 c= cCOND c<= f0 f1 cvector_sub cvector_sub c% * f3 c+ f1 cNUMERAL cBIT1 c_0 * f4 c+ f1 cNUMERAL cBIT1 c_0 c% * f3 f0 * f4 f0 cvsum * * part c.. f0 f1 / c% creal_sub * f3 c+ b1 cNUMERAL cBIT1 c_0 * f3 b1 * f4 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f5 b0 f6
+ |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
+ (m <= (SUC n)) |- ((m = (SUC n)) \/ (m <= n))
T c==> c<= f0 cSUC f1 c\/ c= f0 cSUC f1 c<= f0 f1
+ |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
+ |- ((\n. ((n <= m) = (~ (m < n)))) n)
T * / c= c<= b0 f0 c~ c< f0 b0 f1
+ |- (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= (NUMERAL _0))) ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. (NUMERAL _0))) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))
T c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cCOND c<= f0 cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 cNUMERAL c_0 / c% creal_sub * f1 c+ b0 cNUMERAL cBIT1 c_0 * f1 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((((COND T) t1) t2) = t1)
T c= cCOND cT f0 f1 f0
+ |- ((((~ (((real_add ((real_sub ((real_sub ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) ((real_mul (f m)) ((g m) $ i)))) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f m)) ((g m) $ i)))) ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) ==> F) ==> (((real_add ((real_sub ((real_sub ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) ((real_mul (f m)) ((g m) $ i)))) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f m)) ((g m) $ i)))) ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i)))))) = (((real_add ((real_sub ((real_sub ((real_mul (f (SUC n))) ((g (SUC n)) $ i))) ((real_mul (f m)) ((g m) $ i)))) (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i))) ((real_mul (f (SUC n))) ((real_sub ((g (SUC (SUC n))) $ i)) ((g (SUC n)) $ i)))) = ((real_sub ((real_sub ((real_mul (f (SUC (SUC n)))) ((g (SUC (SUC n))) $ i))) ((real_mul (f m)) ((g m) $ i)))) ((real_add (((vsum (m .. n)) (\k. (lambdai. ((real_mul ((real_sub (f (SUC k))) (f k))) ((g (SUC k)) $ i))))) $ i)) ((real_mul ((real_sub (f (SUC (SUC n)))) (f (SUC n)))) ((g (SUC (SUC n))) $ i))))))
T c= c==> c==> c~ c= creal_add creal_sub creal_sub creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 creal_add c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 cF c= creal_add creal_sub creal_sub creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 creal_add c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3 c= creal_add creal_sub creal_sub creal_mul * f0 cSUC f1 c$ * f2 cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul * f0 cSUC f1 creal_sub c$ * f2 cSUC cSUC f1 f3 c$ * f2 cSUC f1 f3 creal_sub creal_sub creal_mul * f0 cSUC cSUC f1 c$ * f2 cSUC cSUC f1 f3 creal_mul * f0 f4 c$ * f2 f4 f3 creal_add c$ cvsum * * part c.. f4 f1 / clambda / creal_mul creal_sub * f0 cSUC b0 * f0 b0 c$ * f2 cSUC b0 b1 f3 creal_mul creal_sub * f0 cSUC cSUC f1 * f0 cSUC f1 c$ * f2 cSUC cSUC f1 f3
+ (~ (m <= (NUMERAL _0))) |- ((~ (m <= (NUMERAL _0))) /\ (((vsum (m .. (NUMERAL _0))) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (vec (NUMERAL _0))))
T c==> c~ c<= f0 cNUMERAL c_0 c/\ c~ c<= f0 cNUMERAL c_0 c= cvsum * * part c.. f0 cNUMERAL c_0 / c% * f1 b0 cvector_sub * f2 c+ b0 cNUMERAL cBIT1 c_0 * f2 b0 cvec cNUMERAL c_0
+ (~ (m = (NUMERAL _0))) |- (((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND F) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))) = ((vec (NUMERAL _0)) = ((vector_sub ((vector_sub ((% (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) (((COND (m = (NUMERAL _0))) ((% ((real_sub (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (f (NUMERAL _0)))) (g ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c==> c~ c= f0 cNUMERAL c_0 c= c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND cF c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 cvector_sub cvector_sub c% * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cCOND c= f0 cNUMERAL c_0 c% creal_sub * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f1 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((!n. (((vsum (m .. n)) (\k. ((% (f k)) ((vector_sub (g (k + (NUMERAL (BIT1 _0))))) (g k))))) = (((COND (m <= n)) ((vector_sub ((vector_sub ((% (f (n + (NUMERAL (BIT1 _0))))) (g (n + (NUMERAL (BIT1 _0)))))) ((% (f m)) (g m)))) ((vsum (m .. n)) (\k. ((% ((real_sub (f (k + (NUMERAL (BIT1 _0))))) (f k))) (g (k + (NUMERAL (BIT1 _0))))))))) (vec (NUMERAL _0))))) = T)
T c= ! c= cvsum * * part c.. f0 b0 / c% * f1 b1 cvector_sub * f2 c+ b1 cNUMERAL cBIT1 c_0 * f2 b1 cCOND c<= f0 b0 cvector_sub cvector_sub c% * f1 c+ b0 cNUMERAL cBIT1 c_0 * f2 c+ b0 cNUMERAL cBIT1 c_0 c% * f1 f0 * f2 f0 cvsum * * part c.. f0 b0 / c% creal_sub * f1 c+ b1 cNUMERAL cBIT1 c_0 * f1 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT
