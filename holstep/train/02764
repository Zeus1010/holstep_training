N Local_lemmas.CONV0_AFF_GT_EQ
C |- (((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY)))))) ==> (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))))
T c==> c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D DISJOINT
A |- (!s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))))
T c= cDISJOINT f0 f1 c= * * part cINTER f0 f1 part cEMPTY
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D SUBSET_ANTISYM_EQ
A |- (!s. (!t. (((s SUBSET t) /\ (t SUBSET s)) = (s = t))))
T c= c/\ cSUBSET f0 f1 cSUBSET f1 f0 c= f0 f1
D INSERT_COMM
A |- (!x. (!y. (!s. ((x INSERT (y INSERT s)) = (y INSERT (x INSERT s))))))
T c= * * part cINSERT f0 * * part cINSERT f1 f2 * * part cINSERT f1 * * part cINSERT f0 f2
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D AFF_GT_2_1
A |- (!x. (!v. (!w. (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((% t3) w)))))))))) y)))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1
D AFF_GT_MONO_LEFT
A |- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t))))))
T c==> cSUBSET f0 f1 cSUBSET * * part caff_gt f0 f2 * * part caff_gt f1 f2
D Trigonometry2.AFF2
A |- (!u. (!v. ((aff (u INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5314. (?x. (((SETSPEC GEN%PVAR%5314) (?t. (x = ((vector_add ((% t) u)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) v))))) x)))))))
T c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c= b1 cvector_add c% b2 f0 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 f1 b1
D Fan.th3a
A |- (!x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
D Planarity.POINT_IN_LINE1
A |- (!x. (!y. (y IN (aff (x INSERT (y INSERT EMPTY))))))
T cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
D Planarity.AFF_GT_3_1
A |- (!x. (!v. (!u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y))))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 cvector_add c% b3 f1 cvector_add c% b4 f2 c% b5 f3 b1
D Local_lemmas.IN_CONV0_IMP_AFF_EQ
A |- ((a IN (conv0 (x INSERT (y INSERT EMPTY)))) ==> ((aff (x INSERT (y INSERT EMPTY))) = (aff (x INSERT (a INSERT EMPTY)))))
T c==> cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
D Local_lemmas.IN_CONV0_IMP_COLL_ENDS_AFF
A |- ((x IN (conv0 (a INSERT (b INSERT EMPTY)))) ==> ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))))
T c==> cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
- |- ((!x''. ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x''))) = ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ (!x'. ((aff (a INSERT (x INSERT EMPTY))) x'))))
T c= ! c\/ c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 c\/ c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) |- F
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (((!x'. (((~ (x' = a)) \/ (~ (x' = v))) /\ ((~ (x' = x)) \/ (~ (x' = v))))) ==> ((\x'. (((~ (x' = a)) \/ (~ (x' = v))) /\ ((~ (x' = x)) \/ (~ (x' = v))))) _3984206)) = ((\x'. (((~ (x' = a)) \/ (~ (x' = v))) /\ ((~ (x' = x)) \/ (~ (x' = v))))) _3984206))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c= c==> ! c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 f4 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 f4
- (x' = a) |- ((((aff (a INSERT (b INSERT EMPTY))) _3984207) \/ (~ ((aff (a INSERT (x INSERT EMPTY))) _3984207))) = (((aff (a INSERT (b INSERT EMPTY))) _3984207) \/ (~ ((aff (a INSERT (x INSERT EMPTY))) _3984207))))
T c==> c= f0 f1 c= c\/ caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 c\/ caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((~ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
- |- ((!v. (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) = T)
T c= ! c==> c/\ ! c~ c/\ c\/ c= b1 f0 c= b1 f1 c= b1 b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b1 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 cconv0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f1 ! c==> c\/ c= b1 f1 c= b1 f0 c\/ c= b1 f1 c\/ c= b1 f0 c= b1 f2 cT
- |- ((!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) ==> (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))))
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (x IN (conv0 (a INSERT (b INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ (((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))) /\ (x IN (conv0 (a INSERT (b INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c= creal_add f3 creal_add f4 creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% f5 f1 c% f6 f7 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f7
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) |- (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) /\ ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))
T c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c/\ c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
- (x' = a) |- ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) = (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))))
T c==> c= f0 f1 c= c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY
+ ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> ((((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- (x' = a) |- ((~ (x' = b)) = (~ (a = b)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
- (x' = x) |- (((~ ((aff (a INSERT (b INSERT EMPTY))) _3984205)) \/ ((aff (a INSERT (x INSERT EMPTY))) _3984205)) = ((~ ((aff (a INSERT (b INSERT EMPTY))) _3984205)) \/ ((aff (a INSERT (x INSERT EMPTY))) _3984205)))
T c==> c= f0 f1 c= c\/ c~ caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c\/ c~ caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4
+ |- ((((!x'. ((x' IN ((a INSERT (x INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY))) /\ (!x'. ((x' IN ((b INSERT (x INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY)))) ==> (!x'. ((x' IN ((x INSERT (a INSERT (b INSERT EMPTY))) INTER (v INSERT EMPTY))) = (x' IN EMPTY)))) = ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) /\ ((DISJOINT (b INSERT (x INSERT EMPTY))) (v INSERT EMPTY))) ==> ((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))))
T c= c==> c/\ ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY ! c= cIN b0 * * part cINTER * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY ! c= cIN b0 * * part cINTER * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) /\ (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c/\ c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3
- (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) |- ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) = T)
T c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c= c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 cT
+ |- (((!x. (!y. (!s. ((x INSERT (y INSERT s)) = (y INSERT (x INSERT s)))))) ==> ((\x. (!y. (!s. ((x INSERT (y INSERT s)) = (y INSERT (x INSERT s)))))) x)) = ((\x. (!y. (!s. ((x INSERT (y INSERT s)) = (y INSERT (x INSERT s)))))) x))
T c= c==> ! ! ! c= * * part cINSERT b0 * * part cINSERT b1 b2 * * part cINSERT b1 * * part cINSERT b0 b2 * / ! ! c= * * part cINSERT b0 * * part cINSERT b1 b2 * * part cINSERT b1 * * part cINSERT b0 b2 f0 * / ! ! c= * * part cINSERT b0 * * part cINSERT b1 b2 * * part cINSERT b1 * * part cINSERT b0 b2 f0
+ ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ F), (x' = a), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f1 c= b0 f2 c= b0 f3 ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f3 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f4 c= f0 f3 c/\ c~ cF cF
- |- ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = p') ==> ((p' ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))) = (p' ==> q'))))
T c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f4 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 f5 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f4 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 c==> f3 f5
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))))) x)
T * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY f0
- |- ((~ (a = a)) ==> (a = a))
T c==> c~ c= f0 f0 c= f0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul t3) ((real_add ((real_mul t) (a $ i))) ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))))) ((real_mul t4) (v $ i))))) = ((real_add ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) ((real_add ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) ((real_mul t4) (v $ i))))) = (((lambdai. ((real_add ((lambdai. ((real_mul t1) (x $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t2) (a $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t3) ((lambdai. ((real_add ((lambdai. ((real_mul t) (a $ i))) $ i)) ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))) $ i))) $ i))) $ i)) ((lambdai. ((real_mul t4) (v $ i))) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) $ i)) ((lambdai. ((real_mul t4) (v $ i))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_add creal_mul f1 c$ f2 f0 creal_add creal_mul f3 c$ f4 f0 creal_add creal_mul f5 creal_add creal_mul f6 c$ f4 f0 creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f2 f0 creal_mul f7 c$ f8 f0 creal_add creal_mul creal_add f1 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f2 f0 creal_add creal_mul creal_add f3 creal_mul f5 f6 c$ f4 f0 creal_mul f7 c$ f8 f0 c= c$ clambda / creal_add c$ clambda / creal_mul f1 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul f3 c$ f4 b1 b1 c$ clambda / creal_add c$ clambda / creal_mul f5 c$ clambda / creal_add c$ clambda / creal_mul f6 c$ f4 b1 b1 c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f2 b1 b1 b1 b1 c$ clambda / creal_mul f7 c$ f8 b1 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_add f1 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul creal_add f3 creal_mul f5 f6 c$ f4 b1 b1 c$ clambda / creal_mul f7 c$ f8 b1 b1 b0 f0
+ |- ((\x. (!v. (!w. (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((% t3) w)))))))))) y))))))))) x)
T * / ! ! c==> cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c= * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ c= creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b4 cvector_add c% b5 b0 cvector_add c% b6 b1 c% b7 b2 b4 f0
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- ((~ (_3984206 = a)) \/ (~ (_3984206 = v)))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c\/ c~ c= f4 f0 c~ c= f4 f2
+ |- (((!u. (!v. ((aff (u INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5314. (?x. (((SETSPEC GEN%PVAR%5314) (?t. (x = ((vector_add ((% t) u)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) v))))) x))))))) ==> ((\u. (!v. ((aff (u INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5314. (?x. (((SETSPEC GEN%PVAR%5314) (?t. (x = ((vector_add ((% t) u)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) v))))) x))))))) u)) = ((\u. (!v. ((aff (u INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5314. (?x. (((SETSPEC GEN%PVAR%5314) (?t. (x = ((vector_add ((% t) u)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) v))))) x))))))) u))
T c= c==> ! ! c= * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c= b3 cvector_add c% b4 b0 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b1 b3 * / ! c= * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c= b3 cvector_add c% b4 b0 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b1 b3 f0 * / ! c= * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c= b3 cvector_add c% b4 b0 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b1 b3 f0
- (_3984351 = _3984353), (_3984352 = _3984354) |- (((conv0 _3984353) _3984354) \/ (~ ((conv0 _3984351) _3984352)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cconv0 f1 f3 c~ cconv0 f0 f2
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (!x'. (((~ (x' = a)) /\ (~ (x' = x))) \/ (~ (x' = v))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= b0 f2
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_add ((lambdai. ((real_mul t1) (x $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t2) (a $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t3) ((lambdai. ((real_add ((lambdai. ((real_mul t) (a $ i))) $ i)) ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))) $ i))) $ i))) $ i)) ((lambdai. ((real_mul t4) (v $ i))) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) $ i)) ((lambdai. ((real_mul t4) (v $ i))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul f1 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul f3 c$ f4 b1 b1 c$ clambda / creal_add c$ clambda / creal_mul f5 c$ clambda / creal_add c$ clambda / creal_mul f6 c$ f4 b1 b1 c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f2 b1 b1 b1 b1 c$ clambda / creal_mul f7 c$ f8 b1 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_add f1 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul creal_add f3 creal_mul f5 f6 c$ f4 b1 b1 c$ clambda / creal_mul f7 c$ f8 b1 b1 b0 f0
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) |- ((x' = x) ==> F)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f4 f1 cF
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- (s SUBSET s') |- ((!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))
T c==> cSUBSET f0 f1 c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 cSUBSET * * part caff_gt f0 f2 * * part caff_gt f1 f2
- |- ((!x''. (((~ (x'' = b)) /\ (~ (x'' = x))) \/ (~ (x' = v)))) = ((!x'. ((~ (x' = b)) /\ (~ (x' = x)))) \/ (~ (x' = v))))
T c= ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= f2 f3 c\/ ! c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= f2 f3
- |- (((!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) ==> (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t))))))) = (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))))
T c= c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((((\t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) t1) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))) = T)
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> * / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f4 f5 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f4 cT
+ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) |- ((~ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) = (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))))
T c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((!c. (!b. (!a. (((a /\ b) ==> c) = (a ==> (b ==> c)))))) = ((!b. (!a. (((a /\ b) ==> T) = (a ==> (b ==> T))))) /\ (!b. (!a. (((a /\ b) ==> F) = (a ==> (b ==> F)))))))
T c= ! ! ! c= c==> c/\ b2 b1 b0 c==> b2 c==> b1 b0 c/\ ! ! c= c==> c/\ b1 b0 cT c==> b1 c==> b0 cT ! ! c= c==> c/\ b1 b0 cF c==> b1 c==> b0 cF
- (~ F), (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = a) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c/\ c~ cF cF
- |- (((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) = ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY))) ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = q')) ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> q')))) = ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = q')) ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> q'))))
T c= c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 f4 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c==> c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 f4 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4
- (~ F), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cF cF
- (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) |- ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) /\ ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))
T c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c/\ c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4
- |- ((!a. (!x. (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v))))))) = T)
T c= ! ! c==> c/\ ! c~ c/\ c\/ c= b2 b0 c= b2 b1 c= b2 f0 ! c~ c/\ c\/ c= b2 f1 c= b2 b1 c= b2 f0 ! c~ c/\ c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f1 c= b2 f0 cT
- (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))
T c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c==> c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4
+ ((\t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))) t2) |- (((?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))) = (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> * / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f0 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 f6 c= c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f0 creal_add f6 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 cvector_add c% f6 f3 cvector_add c% b0 f4 c% b1 f5 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% b0 f2 cvector_add c% b1 f3 c% b2 f5 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% b0 f2 cvector_add c% b1 f3 c% b2 f5
+ |- ((\q'. (((x' IN ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) = p') ==> ((p' ==> ((x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((x' IN ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) ==> (x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY f5 c==> c==> f5 c= cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= c==> cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> f5 b0 f6
- |- ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> ((!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))) = (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3 ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3
+ |- (((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((!b. (!a. (!x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))))) ==> ((\b. (!a. (!x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))))) b)) = ((\b. (!a. (!x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))))) b))
T c= c==> ! ! ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b4 b1 c= b4 b2 c= b4 b3 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccollinear * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c= caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b4 cconv0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b4 b1 c= b4 b2 c= b4 b3 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccollinear * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c= caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b4 cconv0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b4 b1 c= b4 b2 c= b4 b3 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccollinear * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c= caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b4 cconv0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- (?t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))), (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- ((?t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) /\ (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c? / c= f0 cvector_add c% b0 f1 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 c==> c= creal_add f3 creal_add f4 creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c/\ c? / c= f0 cvector_add c% b0 f1 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f3 f2 cvector_add c% f4 f1 cvector_add c% f5 f0 c% f6 f7 cvector_add c% b0 f2 cvector_add c% b1 f1 c% b2 f7
- (_3984351 = _3984353), (_3984352 = _3984354) |- (((((conv0 _3984351) _3984352) = ((conv0 _3984353) _3984354)) ==> (((conv0 _3984353) _3984354) \/ (~ ((conv0 _3984351) _3984352)))) = (((conv0 _3984353) _3984354) \/ (~ ((conv0 _3984351) _3984352))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cconv0 f0 f2 cconv0 f1 f3 c\/ cconv0 f1 f3 c~ cconv0 f0 f2 c\/ cconv0 f1 f3 c~ cconv0 f0 f2
- |- ((~ (_3984352 = _3984354)) \/ ((~ (_3984351 = _3984353)) \/ (((conv0 _3984353) _3984354) \/ (~ ((conv0 _3984351) _3984352)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cconv0 f3 f1 c~ cconv0 f2 f0
- (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = a) |- (~ (a = b))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c~ c= f2 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F), (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) |- ((((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) /\ ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))
T c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c/\ c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF
+ |- ((!a. (((a /\ F) ==> T) = (a ==> (F ==> T)))) = ((((T /\ F) ==> T) = (T ==> (F ==> T))) /\ (((F /\ F) ==> T) = (F ==> (F ==> T)))))
T c= ! c= c==> c/\ b0 cF cT c==> b0 c==> cF cT c/\ c= c==> c/\ cT cF cT c==> cT c==> cF cT c= c==> c/\ cF cF cT c==> cF c==> cF cT
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((!x''. (((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x'')))) = (((aff (a INSERT (b INSERT EMPTY))) x') \/ (!x'. (~ ((aff (a INSERT (x INSERT EMPTY))) x')))))
T c= ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ |- (((!y. (y IN (aff (x INSERT (y INSERT EMPTY))))) ==> ((\y. (y IN (aff (x INSERT (y INSERT EMPTY))))) y)) = ((\y. (y IN (aff (x INSERT (y INSERT EMPTY))))) y))
T c= c==> ! cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
- |- (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F) = (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b)))))))
T c= c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3
- |- ((!x''. ((~ ((aff (a INSERT (b INSERT EMPTY))) x'')) \/ ((aff (a INSERT (x INSERT EMPTY))) x'))) = ((!x'. (~ ((aff (a INSERT (b INSERT EMPTY))) x'))) \/ ((aff (a INSERT (x INSERT EMPTY))) x')))
T c= ! c\/ c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c\/ ! c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3
- ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) /\ ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2
+ |- ((((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t4)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t4) v)))))) = ((\t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t3') v))))))) t4))
T c= c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= creal_add creal_add f1 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 creal_add creal_add f4 creal_mul f2 f3 f0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f5 cvector_add c% f4 f6 cvector_add c% f2 cvector_add c% f3 f6 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c% f0 f7 cvector_add c% creal_add f1 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 cvector_add c% creal_add f4 creal_mul f2 f3 f6 c% f0 f7 * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_add f1 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 creal_add creal_add f4 creal_mul f2 f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f5 cvector_add c% f4 f6 cvector_add c% f2 cvector_add c% f3 f6 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c% f0 f7 cvector_add c% creal_add f1 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 cvector_add c% creal_add f4 creal_mul f2 f3 f6 c% b0 f7 f0
- |- ((\q'. ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) = p') ==> ((p' ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = q')) ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = (p' ==> q'))))) q')
T * / c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f2 cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f2 cvector_add c% b3 f0 c% b4 f3 b0 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f2 cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f2 cvector_add c% b3 f0 c% b4 f3 c==> f4 b0 f5
+ (((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((DISJOINT (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((?t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))) = ((b IN (aff (a INSERT (x INSERT EMPTY)))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))))
T c= c==> c? / c= f0 cvector_add c% b0 f1 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f3 f2 cvector_add c% f4 f1 cvector_add c% f5 f0 c% f6 f7 cvector_add c% b0 f2 cvector_add c% b1 f1 c% b2 f7 c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f3 f2 cvector_add c% f4 f1 cvector_add c% f5 f0 c% f6 f7 cvector_add c% b0 f2 cvector_add c% b1 f1 c% b2 f7
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))), ((\t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))) t3) |- (((\t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))) t3) /\ (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f3 creal_add f4 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% b0 f1 c% b1 f6 f7 c/\ * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f3 creal_add f4 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% b0 f1 c% b1 f6 f7 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f6
- |- ((((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) ==> (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF
+ |- (((!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) ==> ((\s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) s)) = ((\s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) s))
T c= c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 * / ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 f0 * / ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 f0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- ((!b. (!a. (!x. (!v. (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b)))))))))) = (!b. (!a. (!x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))))))
T c= ! ! ! ! c==> c/\ ! c~ c/\ c\/ c= b4 b1 c= b4 b2 c= b4 b3 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccollinear * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c= caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b4 cconv0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 ! ! ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b4 b1 c= b4 b2 c= b4 b3 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccollinear * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c= caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b4 cconv0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF
+ |- ((\p'. (!q'. ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) = p') ==> ((p' ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = q')) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = (p' ==> q')))))) p')
T * / ! c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c==> b0 c= c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> b0 b1 f4
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) t) |- (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))
T c==> * / c= f0 cvector_add c% b0 f1 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 f3 c= f0 cvector_add c% f3 f1 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f2
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
- |- ((\v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)) v)
T * / c==> c~ c==> c/\ ! c~ c/\ c\/ c= b1 f0 c= b1 f1 c= b1 b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b1 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 cconv0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f1 ! c==> c\/ c= b1 f1 c= b1 f0 c\/ c= b1 f1 c\/ c= b1 f0 c= b1 f2 cF f3
- (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))) |- ((\t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1) ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2') a)) ((% t3') v)))))))) = (\t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1) ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1) x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))
T c==> c= f0 cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 c= / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f1 f2 cvector_add c% b0 f4 c% b1 f8 / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 cvector_add c% f1 f2 cvector_add c% b0 f4 c% b1 f8
+ |- (((a /\ b) ==> c) = (a ==> (b ==> c)))
T c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- ((\x'. ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x'))) _3984208)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 * / c\/ c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f4
- |- ((\x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) x)
T * / c==> c~ c==> c/\ ! c~ c/\ c\/ c= b1 f0 c= b1 b0 c= b1 f1 ! c~ c/\ c\/ c= b1 f2 c= b1 b0 c= b1 f1 ! c~ c/\ c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f2 c= b1 f1 cF f3
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- ((b IN (aff (a INSERT (x INSERT EMPTY)))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> cIN f4 * part caff * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f6 cvector_add c% f1 f5 cvector_add c% f2 f4 c% f3 f7 cvector_add c% b0 f6 cvector_add c% b1 f5 c% b2 f7
- (~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) |- ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) /\ F)
T c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c/\ c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF
+ |- ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = p') ==> ((p' ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))) = (p' ==> q'))))
T c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f5 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> f3 f5
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (!t2. (((\t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))) t2) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> * / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f3 creal_add b1 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f3 f2 cvector_add c% b1 f0 cvector_add c% b1 f1 c% b2 f5 b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f5
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) |- (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c~ c/\ c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 c= f4 f2
- (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))
T c==> c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f0 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> c= * part caff * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% b0 f2 cvector_add c% b1 f3 c% b2 f5
- |- ((\p'. (!q'. ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) = p') ==> ((p' ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = q')) ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c==> b0 c= c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ c= creal_add b3 creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f2 cvector_add c% b4 f0 cvector_add c% b5 f1 c% b6 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f2 cvector_add c% b4 f0 c% b5 f3 b1 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ c= creal_add b3 creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f2 cvector_add c% b4 f0 cvector_add c% b5 f1 c% b6 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f2 cvector_add c% b4 f0 c% b5 f3 c==> b0 b1 f4
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- (T = ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c= cT c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- ((v = v) = ((v = v) /\ (v = v)))
T c= c= f0 f0 c/\ c= f0 f0 c= f0 f0
- (~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) |- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) /\ F)
T c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 c/\ c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- ((!i. t) = t)
T c= ! f0 f0
+ |- (((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul t3) ((real_add ((real_mul t) (a $ i))) ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))))) ((real_mul t4) (v $ i))))) = ((real_add ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) ((real_add ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) ((real_mul t4) (v $ i)))))
T c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul f3 c$ f4 f2 creal_add creal_mul f5 creal_add creal_mul f6 c$ f4 f2 creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_mul f7 c$ f8 f2 creal_add creal_mul creal_add f0 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_add creal_mul creal_add f3 creal_mul f5 f6 c$ f4 f2 creal_mul f7 c$ f8 f2
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = q')) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> q')))
T c==> c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 f5 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 f5
- (_3984352 = _3984354) |- ((_3984352 = _3984354) /\ ((~ (_3984351 = _3984353)) \/ (((conv0 _3984353) _3984354) \/ (~ ((conv0 _3984351) _3984352)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cconv0 f3 f1 c~ cconv0 f2 f0
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- ((\t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))) ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 * / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 cvector_add c% f6 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f4 c% f3 f7 cvector_add c% b0 f4 cvector_add c% b1 f5 c% b2 f7 creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6
+ |- (((!u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y)))))))) ==> ((\u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y)))))))) u)) = ((\u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y)))))))) u))
T c= c==> ! ! c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ c= creal_add b4 creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 f0 cvector_add c% b5 f1 cvector_add c% b6 b0 c% b7 b1 b3 * / ! c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ c= creal_add b4 creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 f0 cvector_add c% b5 f1 cvector_add c% b6 b0 c% b7 b1 b3 f2 * / ! c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ c= creal_add b4 creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 f0 cvector_add c% b5 f1 cvector_add c% b6 b0 c% b7 b1 b3 f2
- ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) |- (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) /\ ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))
T c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c/\ c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF
+ |- (((!x. (!v. (!u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y)))))))))) ==> ((\x. (!v. (!u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y)))))))))) x)) = ((\x. (!v. (!u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y)))))))))) x))
T c= c==> ! ! ! ! c==> cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c= * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * part cGSPEC / c? / cSETSPEC b4 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b9 c/\ c= creal_add b6 creal_add b7 creal_add b8 b9 creal_of_num cNUMERAL cBIT1 c_0 c= b5 cvector_add c% b6 b0 cvector_add c% b7 b1 cvector_add c% b8 b2 c% b9 b3 b5 * / ! ! ! c==> cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c= * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * part cGSPEC / c? / cSETSPEC b4 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b9 c/\ c= creal_add b6 creal_add b7 creal_add b8 b9 creal_of_num cNUMERAL cBIT1 c_0 c= b5 cvector_add c% b6 b0 cvector_add c% b7 b1 cvector_add c% b8 b2 c% b9 b3 b5 f0 * / ! ! ! c==> cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c= * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * part cGSPEC / c? / cSETSPEC b4 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b9 c/\ c= creal_add b6 creal_add b7 creal_add b8 b9 creal_of_num cNUMERAL cBIT1 c_0 c= b5 cvector_add c% b6 b0 cvector_add c% b7 b1 cvector_add c% b8 b2 c% b9 b3 b5 f0
+ |- (((!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y))))))) ==> ((\w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y))))))) w)) = ((\w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y))))))) w))
T c= c==> ! c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ c= creal_add b3 creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 cvector_add c% b4 f1 cvector_add c% b5 f2 c% b6 b0 b2 * / c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ c= creal_add b3 creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 cvector_add c% b4 f1 cvector_add c% b5 f2 c% b6 b0 b2 f3 * / c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ c= creal_add b3 creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 cvector_add c% b4 f1 cvector_add c% b5 f2 c% b6 b0 b2 f3
- (x' = a), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (F = F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= f0 f4 c= cF cF
+ |- (((!x'. ((x' IN ((a INSERT (x INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. ((x' IN (aff (a INSERT (b INSERT EMPTY)))) = (x' IN (aff (a INSERT (x INSERT EMPTY)))))) /\ (x IN (conv0 (a INSERT (b INSERT EMPTY)))))))) ==> (!x'. ((x' IN (x INSERT (a INSERT EMPTY))) ==> (x' IN (x INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> c/\ ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cIN b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ |- ((\p'. (!q'. (((b IN (aff (a INSERT (b INSERT EMPTY)))) = p') ==> ((p' ==> ((((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 c==> c==> b0 c= cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> b0 b1 f4
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) /\ (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- (((!x. (((\t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) x) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))) ==> ((?t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))) = ((?t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c= c==> ! c==> * / c= f4 cvector_add c% b1 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f6 b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f6 cvector_add c% f1 f5 cvector_add c% f2 f4 c% f3 f7 cvector_add c% b1 f6 cvector_add c% b2 f5 c% b3 f7 c==> c? / c= f4 cvector_add c% b0 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f6 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f6 cvector_add c% f1 f5 cvector_add c% f2 f4 c% f3 f7 cvector_add c% b0 f6 cvector_add c% b1 f5 c% b2 f7 c==> c? / c= f4 cvector_add c% b0 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f6 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f6 cvector_add c% f1 f5 cvector_add c% f2 f4 c% f3 f7 cvector_add c% b0 f6 cvector_add c% b1 f5 c% b2 f7
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v))))) = T)
T c= c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cT
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (x IN (conv0 (a INSERT (b INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((((x INSERT (a INSERT EMPTY)) SUBSET (x INSERT (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))) = (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((F = t) = (~ t))
T c= c= cF f0 c~ f0
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) |- (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) /\ (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c/\ c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- ((b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c= f4 cvector_add c% f5 f6 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f7 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f7 cvector_add c% f1 f6 cvector_add c% f2 f4 c% f3 f8 cvector_add c% b0 f7 cvector_add c% b1 f6 c% b2 f8
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c\/ c= f4 f1 c= f4 f0 c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3
+ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (b INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (((x' = a) \/ (x' = b)) ==> F)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> c/\ c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 c= f4 f2 c==> c\/ c= f4 f0 c= f4 f3 cF
- |- (((!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)) ==> ((\v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)) v)) = ((\v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)) v))
T c= c==> ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b1 f0 c= b1 f1 c= b1 b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b1 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 cconv0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f1 ! c==> c\/ c= b1 f1 c= b1 f0 c\/ c= b1 f1 c\/ c= b1 f0 c= b1 f2 cF * / c==> c~ c==> c/\ ! c~ c/\ c\/ c= b1 f0 c= b1 f1 c= b1 b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b1 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 cconv0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f1 ! c==> c\/ c= b1 f1 c= b1 f0 c\/ c= b1 f1 c\/ c= b1 f0 c= b1 f2 cF f3 * / c==> c~ c==> c/\ ! c~ c/\ c\/ c= b1 f0 c= b1 f1 c= b1 b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b1 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 cconv0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f1 ! c==> c\/ c= b1 f1 c= b1 f0 c\/ c= b1 f1 c\/ c= b1 f0 c= b1 f2 cF f3
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((((~ (((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul t3) ((real_add ((real_mul t) (a $ i))) ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))))) ((real_mul t4) (v $ i))))) = ((real_add ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) ((real_add ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) ((real_mul t4) (v $ i)))))) ==> F) ==> (((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul t3) ((real_add ((real_mul t) (a $ i))) ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))))) ((real_mul t4) (v $ i))))) = ((real_add ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) ((real_add ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) ((real_mul t4) (v $ i)))))) = (((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul t3) ((real_add ((real_mul t) (a $ i))) ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))))) ((real_mul t4) (v $ i))))) = ((real_add ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) ((real_add ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) ((real_mul t4) (v $ i))))))
T c= c==> c==> c~ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul f3 c$ f4 f2 creal_add creal_mul f5 creal_add creal_mul f6 c$ f4 f2 creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_mul f7 c$ f8 f2 creal_add creal_mul creal_add f0 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_add creal_mul creal_add f3 creal_mul f5 f6 c$ f4 f2 creal_mul f7 c$ f8 f2 cF c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul f3 c$ f4 f2 creal_add creal_mul f5 creal_add creal_mul f6 c$ f4 f2 creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_mul f7 c$ f8 f2 creal_add creal_mul creal_add f0 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_add creal_mul creal_add f3 creal_mul f5 f6 c$ f4 f2 creal_mul f7 c$ f8 f2 c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul f3 c$ f4 f2 creal_add creal_mul f5 creal_add creal_mul f6 c$ f4 f2 creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_mul f7 c$ f8 f2 creal_add creal_mul creal_add f0 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_add creal_mul creal_add f3 creal_mul f5 f6 c$ f4 f2 creal_mul f7 c$ f8 f2
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?t. t) = t)
T c= c? / f0 f0
+ |- ((?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% t2') a)) ((% t3') v)))))))) = ((\t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))) ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))))
T c= c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add creal_add f0 creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f3 cvector_add c% f4 f5 cvector_add c% f1 cvector_add c% f2 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c% f6 f7 cvector_add c% creal_add f0 creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 cvector_add c% b0 f5 c% b1 f7 * / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f3 cvector_add c% f4 f5 cvector_add c% f1 cvector_add c% f2 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c% f6 f7 cvector_add c% b0 f3 cvector_add c% b1 f5 c% b2 f7 creal_add f0 creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2
+ |- ((x IN (conv0 (a INSERT (b INSERT EMPTY)))) = ((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))))
T c= cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c/\ c= creal_add f4 creal_add f5 creal_add f6 f3 creal_of_num cNUMERAL cBIT1 c_0 c= f7 cvector_add c% f4 f2 cvector_add c% f5 f0 cvector_add c% f6 f1 c% f3 f8 c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f7 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f8
- (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) |- ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (collinear (a INSERT (x INSERT (v INSERT EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (x' = a), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (((_3984127 = v) /\ (_3984127 = v)) ==> F)
T c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f1 c= b0 f2 c= b0 f3 ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f3 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f4 c= f0 f3 c==> c/\ c= f5 f3 c= f5 f3 cF
- |- ((_3984348 = _3984350) ==> ((~ (_3984347 = _3984349)) \/ (((aff _3984349) _3984350) \/ (~ ((aff _3984347) _3984348)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ caff f3 f1 c~ caff f2 f0
- ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\v. (!w. (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((% t3) w)))))))))) y)))))))) v)
T * / ! c==> cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ c= creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 f0 cvector_add c% b5 b0 c% b6 b1 b3 f1
+ ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- ((((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) /\ F)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> c/\ c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 c= f4 f2 c/\ c/\ c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 c= f4 f2 cF
- ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) |- ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) ==> (collinear (a INSERT (x INSERT (v INSERT EMPTY)))))
T c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!q'. (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) = p') ==> ((p' ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = q')) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = (p' ==> q'))))) ==> ((\q'. (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) = p') ==> ((p' ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = q')) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = (p' ==> q'))))) q')) = ((\q'. (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) = p') ==> ((p' ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = q')) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 cvector_add c% b3 f3 c% b4 f4 f5 c==> c==> f5 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 c% b3 f4 b0 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 cvector_add c% b3 f3 c% b4 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 c% b3 f4 c==> f5 b0 * / c==> c= c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 cvector_add c% b3 f3 c% b4 f4 f5 c==> c==> f5 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 c% b3 f4 b0 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 cvector_add c% b3 f3 c% b4 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 c% b3 f4 c==> f5 b0 f6 * / c==> c= c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 cvector_add c% b3 f3 c% b4 f4 f5 c==> c==> f5 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 c% b3 f4 b0 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 cvector_add c% b3 f3 c% b4 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 c% b3 f4 c==> f5 b0 f6
+ |- ((\u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y)))))))) u)
T * / ! c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ c= creal_add b4 creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 f0 cvector_add c% b5 f1 cvector_add c% b6 b0 c% b7 b1 b3 f2
- (_3984348 = _3984350) |- ((_3984348 = _3984350) /\ ((~ (_3984347 = _3984349)) \/ (((aff _3984349) _3984350) \/ (~ ((aff _3984347) _3984348)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ caff f3 f1 c~ caff f2 f0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b)))))) = T)
T c= c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cT
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- (((!t. ((s = t) = ((s SUBSET t) /\ (t SUBSET s)))) ==> ((\t. ((s = t) = ((s SUBSET t) /\ (t SUBSET s)))) t)) = ((\t. ((s = t) = ((s SUBSET t) /\ (t SUBSET s)))) t))
T c= c==> ! c= c= f0 b0 c/\ cSUBSET f0 b0 cSUBSET b0 f0 * / c= c= f0 b0 c/\ cSUBSET f0 b0 cSUBSET b0 f0 f1 * / c= c= f0 b0 c/\ cSUBSET f0 b0 cSUBSET b0 f0 f1
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) |- ((~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v))) = T)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c= c~ c/\ c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 c= f4 f2 cT
+ |- ((!a. (((a /\ F) ==> F) = (a ==> (F ==> F)))) = ((((T /\ F) ==> F) = (T ==> (F ==> F))) /\ (((F /\ F) ==> F) = (F ==> (F ==> F)))))
T c= ! c= c==> c/\ b0 cF cF c==> b0 c==> cF cF c/\ c= c==> c/\ cT cF cF c==> cT c==> cF cF c= c==> c/\ cF cF cF c==> cF c==> cF cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x' = x), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- ((x' = x) /\ F)
T c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f3 ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f3 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f4 c= f0 f3 c/\ c= f0 f1 cF
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x')))) /\ (!x'. ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x')))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c/\ c/\ ! c\/ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c\/ c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1
+ |- (((((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) /\ (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))))
T c= c/\ cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((\c. (!b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))) c)
T * / ! ! c==> c~ c= c==> c/\ b2 b1 b0 c==> b2 c==> b1 b0 cF f0
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ ((((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) \/ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (~ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))))) /\ (((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x')))) /\ (!x'. ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x')))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c\/ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ ! c\/ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c\/ c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1
+ ((\t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))) t3) |- (((?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))) = (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f0 creal_add f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 cvector_add c% b0 f5 c% b1 f6 f7 c= c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 creal_add f1 creal_add f7 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 cvector_add c% f7 f5 c% b0 f6 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f6 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f6
+ |- ((~ (((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul t3) ((real_add ((real_mul t) (a $ i))) ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))))) ((real_mul t4) (v $ i))))) = ((real_add ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) ((real_add ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) ((real_mul t4) (v $ i)))))) ==> F)
T c==> c~ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul f3 c$ f4 f2 creal_add creal_mul f5 creal_add creal_mul f6 c$ f4 f2 creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_mul f7 c$ f8 f2 creal_add creal_mul creal_add f0 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_add creal_mul creal_add f3 creal_mul f5 f6 c$ f4 f2 creal_mul f7 c$ f8 f2 cF
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (((\t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) t1) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f4 f5 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f4
+ |- (((!x'. ((x' IN ((a INSERT (x INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY))) /\ (!x'. ((x' IN ((b INSERT (x INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY)))) ==> (!x'. ((x' IN ((x INSERT (a INSERT (b INSERT EMPTY))) INTER (v INSERT EMPTY))) = (x' IN EMPTY))))
T c==> c/\ ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY ! c= cIN b0 * * part cINTER * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY ! c= cIN b0 * * part cINTER * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((\q'. ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = p') ==> ((p' ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))) = (p' ==> q'))))) q')
T * / c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> f3 b0 f5
- (~ F), (x' = b), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f2 c= b0 f3 c= b0 f4 ! c~ c/\ c\/ c= b0 f1 c= b0 f3 c= b0 f4 c==> c/\ c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c= f0 f4 c/\ c~ cF cF
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((!p'. (!q'. ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) = p') ==> ((p' ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = q')) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) = p') ==> ((p' ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = q')) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) = p') ==> ((p' ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = q')) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c==> b0 c= c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> b0 b1 * / ! c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c==> b0 c= c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> b0 b1 f4 * / ! c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c==> b0 c= c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> b0 b1 f4
- (x' = a) |- (((conv0 (a INSERT (b INSERT EMPTY))) x) = ((conv0 (a INSERT (b INSERT EMPTY))) x))
T c==> c= f0 f1 c= cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% t2') a)) ((% t3') v))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 cvector_add c% f4 f6 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 c% f3 f7 cvector_add c% creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 cvector_add c% b0 f6 c% b1 f7
- ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) y)))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f2 b1
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c/\ c= creal_add f4 creal_add f5 creal_add f6 f3 creal_of_num cNUMERAL cBIT1 c_0 c= f7 cvector_add c% f4 f2 cvector_add c% f5 f0 cvector_add c% f6 f1 c% f3 f8 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f7 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f8
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), ((x' = a) ==> F), ((x' = x) \/ (x' = a)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c==> c= f0 f2 cF c==> c\/ c= f0 f1 c= f0 f2 cF
+ ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> ((((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))) = (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 c= c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 c= c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3
- ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = a) |- (~ (a = a))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c~ c= f2 f2
+ |- ((x' IN (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) y))))) = (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f3 b1 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f3
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))) |- ((~ (x' = a)) /\ (~ (x' = b)))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f3
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4), ((\t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) t) |- (((\t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) t) /\ (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> * / c= f4 cvector_add c% b0 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f6 f7 c/\ * / c= f4 cvector_add c% b0 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f6 f7 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f6 cvector_add c% f1 f5 cvector_add c% f2 f4 c% f3 f8 cvector_add c% b0 f6 cvector_add c% b1 f5 c% b2 f8
+ |- (((!q'. ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = p') ==> ((p' ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))) = (p' ==> q'))))) ==> ((\q'. ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = p') ==> ((p' ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))) = (p' ==> q'))))) q')) = ((\q'. ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = p') ==> ((p' ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> f3 b0 * / c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> f3 b0 f5 * / c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> f3 b0 f5
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (((!x. (((\t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))) x) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))) ==> ((?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))) = ((?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> ! c==> * / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add f3 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f3 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f5 b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f5 c==> c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f3 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f3 f2 cvector_add c% b0 f0 cvector_add c% b1 f1 c% b2 f5 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f5 c==> c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f3 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f3 f2 cvector_add c% b0 f0 cvector_add c% b1 f1 c% b2 f5 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f5
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f4
- |- ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))) = (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))))
T c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2
- (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))) /\ (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f0 creal_add f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 cvector_add c% b0 f5 c% b1 f6 c==> c= * part caff * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part caff * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c==> cIN f5 * part caff * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f0 creal_add f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 cvector_add c% b0 f5 c% b1 f6 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f6
- (x' = a), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (((~ (_3984127 = x)) \/ (~ (_3984127 = v))) = ((~ (_3984127 = x)) \/ (~ (_3984127 = v))))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= f0 f4 c= c\/ c~ c= f5 f2 c~ c= f5 f4 c\/ c~ c= f5 f2 c~ c= f5 f4
- (~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) |- F
T c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))) |- ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))) |- (~ (x' = x))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ c= f0 f1
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))) |- (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (x' = b), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (((_3984130 = v) /\ (_3984130 = v)) ==> F)
T c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f2 c= b0 f3 c= b0 f4 ! c~ c/\ c\/ c= b0 f1 c= b0 f3 c= b0 f4 c==> c/\ c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c= f0 f4 c==> c/\ c= f5 f4 c= f5 f4 cF
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- ((\t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t3') v))))))) t4)
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_add creal_add f1 creal_mul f2 f4 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 cvector_add c% f4 f6 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 c% f3 f7 cvector_add c% creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 cvector_add c% creal_add f1 creal_mul f2 f4 f6 c% b0 f7 f3
+ ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (x' = b), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (((~ (_3984130 = b)) \/ (~ (_3984130 = v))) = ((~ (_3984130 = v)) \/ (~ (_3984130 = v))))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= f0 f4 c= c\/ c~ c= f5 f1 c~ c= f5 f4 c\/ c~ c= f5 f4 c~ c= f5 f4
+ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)), ((x' = x) ==> F), (((x' = a) \/ (x' = b)) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c= f0 f4 c==> c==> c= f0 f1 cF c==> c==> c\/ c= f0 f2 c= f0 f3 cF cF
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), (((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (~ (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) ==> F), ((x' = x) \/ (x' = a)) |- F
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF c==> c\/ c= f4 f1 c= f4 f0 cF
+ (((s SUBSET t) /\ (t SUBSET s)) = (s = t)) |- ((s = t) = ((s SUBSET t) /\ (t SUBSET s)))
T c==> c= c/\ cSUBSET f0 f1 cSUBSET f1 f0 c= f0 f1 c= c= f0 f1 c/\ cSUBSET f0 f1 cSUBSET f1 f0
- ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F), (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) |- (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) /\ ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))
T c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c/\ c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- ((((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) \/ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (~ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))))) /\ (((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x')))) /\ (!x'. ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x')))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x)))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c/\ c\/ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ ! c\/ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c\/ c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1
- |- (((!v. (!b. (!a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))))) ==> ((\v. (!b. (!a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))))) v)) = ((\v. (!b. (!a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))))) v))
T c= c==> ! ! ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b4 b2 c= b4 b3 c= b4 b0 ! c~ c/\ c\/ c= b4 b1 c= b4 b3 c= b4 b0 ! c~ c/\ c\/ c= b4 b3 c\/ c= b4 b2 c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b4 b2 c= b4 b3 c= b4 b0 ! c~ c/\ c\/ c= b4 b1 c= b4 b3 c= b4 b0 ! c~ c/\ c\/ c= b4 b3 c\/ c= b4 b2 c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b4 b2 c= b4 b3 c= b4 b0 ! c~ c/\ c\/ c= b4 b1 c= b4 b3 c= b4 b0 ! c~ c/\ c\/ c= b4 b3 c\/ c= b4 b2 c= b4 b1 c= b4 b0 cF f0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((!b. ((F ==> b) ==> (F = (F /\ b)))) = (((F ==> T) ==> (F = (F /\ T))) /\ ((F ==> F) ==> (F = (F /\ F)))))
T c= ! c==> c==> cF b0 c= cF c/\ cF b0 c/\ c==> c==> cF cT c= cF c/\ cF cT c==> c==> cF cF c= cF c/\ cF cF
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x')))) /\ (!x'. ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x'))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c/\ ! c\/ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c\/ c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
- |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) |- (!x'. (((~ (x' = a)) \/ (~ (x' = v))) /\ ((~ (x' = x)) \/ (~ (x' = v)))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ ((s = t) = ((s SUBSET t) /\ (t SUBSET s))) |- (((s SUBSET t) /\ (t SUBSET s)) = (s = t))
T c==> c= c= f0 f1 c/\ cSUBSET f0 f1 cSUBSET f1 f0 c= c/\ cSUBSET f0 f1 cSUBSET f1 f0 c= f0 f1
+ (x' = b), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- ((~ (_3984130 = v)) \/ (~ (_3984130 = v)))
T c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f2 c= b0 f3 c= b0 f4 ! c~ c/\ c\/ c= b0 f1 c= b0 f3 c= b0 f4 c==> c/\ c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c= f0 f4 c\/ c~ c= f5 f4 c~ c= f5 f4
+ |- ((((x IN (conv0 (a INSERT (b INSERT EMPTY)))) ==> ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) ==> ((x IN (conv0 (a INSERT (b INSERT EMPTY)))) = ((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))))) = ((x IN (conv0 (a INSERT (b INSERT EMPTY)))) = ((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))))))
T c= c==> c==> cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ |- ((x' IN (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))))) y))))) = (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f1 cvector_add c% b3 f2 cvector_add c% b4 f3 c% b5 f4 b1 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4
+ |- (T = (b IN (aff (a INSERT (b INSERT EMPTY)))))
T c= cT cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F) |- ((((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))
T c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF
+ |- ((!x'. ((((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x')))) = ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x')))) /\ (!x'. ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x')))))
T c= ! c/\ c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b0 c\/ c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b0 c/\ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY b0
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))), (s SUBSET s') |- (((aff_gt s) t) SUBSET ((aff_gt s') t))
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 c==> cSUBSET f0 f1 cSUBSET * * part caff_gt f0 f2 * * part caff_gt f1 f2
+ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))))) = ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2
- |- ((\a. (!x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)))) a)
T * / ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b3 b0 c= b3 b1 c= b3 b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c= caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 cconv0 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- |- ((((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) ==> (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))
T c==> c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (x IN (conv0 (a INSERT (b INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ (((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))) /\ (x IN (conv0 (a INSERT (b INSERT EMPTY)))))))) ==> ((x INSERT (a INSERT EMPTY)) SUBSET (x INSERT (a INSERT (b INSERT EMPTY))))) = ((x INSERT (a INSERT EMPTY)) SUBSET (x INSERT (a INSERT (b INSERT EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ |- ((\s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) s)
T * / ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 f0
- (~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) |- ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) /\ F)
T c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 c/\ c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (x' = b), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- F
T c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f2 c= b0 f3 c= b0 f4 ! c~ c/\ c\/ c= b0 f1 c= b0 f3 c= b0 f4 c==> c/\ c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c= f0 f4 cF
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY))), (x IN (conv0 (a INSERT (b INSERT EMPTY)))) |- (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))) |- (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) |- (((!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t))))) ==> ((\s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t))))) s')) = ((\s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t))))) s'))
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 c= c==> ! ! c==> cSUBSET f0 b0 cSUBSET * * part caff_gt f0 b1 * * part caff_gt b0 b1 * / ! c==> cSUBSET f0 b0 cSUBSET * * part caff_gt f0 b1 * * part caff_gt b0 b1 f1 * / ! c==> cSUBSET f0 b0 cSUBSET * * part caff_gt f0 b1 * * part caff_gt b0 b1 f1
+ ((((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY))))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)))), (((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY))))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) |- (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))
T c==> c/\ c/\ c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c/\ c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ ((\t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))) t4) |- (((((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))) = (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% b0 f7 f8 c= c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f8 c/\ c= creal_add f0 creal_add f1 creal_add f2 f8 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% f8 f7 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f4 cvector_add c% b1 f5 c% b2 f7 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f4 cvector_add c% b1 f5 c% b2 f7
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x'. ((P x') \/ Q)) = ((!x'. (P x')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- ((((((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY))))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))) = (((((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY))))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) /\ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY)))))) ==> (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))))
T c= c==> c/\ c/\ c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c/\ c/\ c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))) |- ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3
- (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))
T c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% b0 f7 c==> c= * part caff * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * part caff * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c==> cIN f6 * part caff * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f4 cvector_add c% b1 f5 c% b2 f7
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (x IN (conv0 (a INSERT (b INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY
+ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (b INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v))))) = (((!x'. ((x' IN ((a INSERT (x INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY))) /\ (!x'. ((x' IN ((b INSERT (x INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY)))) ==> (!x'. ((x' IN ((x INSERT (a INSERT (b INSERT EMPTY))) INTER (v INSERT EMPTY))) = (x' IN EMPTY)))))
T c= c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 c==> c/\ ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY ! c= cIN b0 * * part cINTER * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY ! c= cIN b0 * * part cINTER * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F), (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- (T = (!c. (!b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))))
T c= cT ! ! ! c==> c~ c= c==> c/\ b2 b1 b0 c==> b2 c==> b1 b0 cF
- |- ((!b. (!a. (!x. (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))))) = T)
T c= ! ! ! c==> c/\ ! c~ c/\ c\/ c= b3 b1 c= b3 b2 c= b3 f0 ! c~ c/\ c\/ c= b3 b0 c= b3 b2 c= b3 f0 ! c~ c/\ c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 c= b3 f0 cT
+ (~ (((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul t3) ((real_add ((real_mul t) (a $ i))) ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))))) ((real_mul t4) (v $ i))))) = ((real_add ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) ((real_add ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) ((real_mul t4) (v $ i)))))) |- ((~ (((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul t3) ((real_add ((real_mul t) (a $ i))) ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))))) ((real_mul t4) (v $ i))))) = ((real_add ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) ((real_add ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) ((real_mul t4) (v $ i)))))) /\ F)
T c==> c~ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul f3 c$ f4 f2 creal_add creal_mul f5 creal_add creal_mul f6 c$ f4 f2 creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_mul f7 c$ f8 f2 creal_add creal_mul creal_add f0 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_add creal_mul creal_add f3 creal_mul f5 f6 c$ f4 f2 creal_mul f7 c$ f8 f2 c/\ c~ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul f3 c$ f4 f2 creal_add creal_mul f5 creal_add creal_mul f6 c$ f4 f2 creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_mul f7 c$ f8 f2 creal_add creal_mul creal_add f0 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_add creal_mul creal_add f3 creal_mul f5 f6 c$ f4 f2 creal_mul f7 c$ f8 f2 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) ==> ((\a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) a)) = ((\a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) a))
T c= c==> ! c==> c~ c= c==> c/\ b0 f0 f1 c==> b0 c==> f0 f1 cF * / c==> c~ c= c==> c/\ b0 f0 f1 c==> b0 c==> f0 f1 cF f2 * / c==> c~ c= c==> c/\ b0 f0 f1 c==> b0 c==> f0 f1 cF f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (!t1. (((\t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) t1) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> * / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b1 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f4 b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f4
- ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) |- ((((x' IN ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) = (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))))) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> ((x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((x' IN ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) ==> (x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> q')))) = (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> ((x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((x' IN ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) ==> (x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> q'))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> c= cIN f4 * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f3 c==> c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f3 c= cIN f4 * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f5 c= c==> cIN f4 * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY cIN f4 * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f3 f5 c==> c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f3 c= cIN f4 * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f5 c= c==> cIN f4 * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY cIN f4 * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f3 f5
- |- ((\b. (!a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)))) b)
T * / ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b3 b1 c= b3 b2 c= b3 f0 ! c~ c/\ c\/ c= b3 b0 c= b3 b2 c= b3 f0 ! c~ c/\ c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 c= b3 f0 cF f1
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)), ((x' = a) \/ (x' = b)) |- (((x' = a) \/ (x' = b)) /\ F)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> c/\ c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 c= f4 f2 c==> c\/ c= f4 f0 c= f4 f3 c/\ c\/ c= f4 f0 c= f4 f3 cF
+ (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) /\ ((x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))
T c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c= cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4
- ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> ((((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> q')))
T c==> c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f4
+ (~ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t4)) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((~ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t4)) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c~ c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_add creal_add f1 creal_mul f2 f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_add creal_add f1 creal_mul f2 f4 f3 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))), ((real_lt (real_of_num (NUMERAL _0))) t4), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c/\ c= creal_add f3 creal_add f4 creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= f7 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% f5 f1 c% f6 f8 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f7 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f8
- (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))) |- ((\t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add _3984366) ((real_add t2) t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% _3984366) x)) ((vector_add ((% t2) a)) ((% t3') v))))))) = (\t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add _3984366) ((real_add t2) t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% _3984366) x)) ((vector_add ((% t2) a)) ((% t3') v))))))))
T c==> c= f0 cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 c= / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f9 creal_add f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f9 f2 cvector_add c% f3 f4 c% b0 f8 / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f9 creal_add f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 cvector_add c% f9 f2 cvector_add c% f3 f4 c% b0 f8
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- (((\t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) t) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> * / c= f4 cvector_add c% b0 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f6 f7 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f6 cvector_add c% f1 f5 cvector_add c% f2 f4 c% f3 f8 cvector_add c% b0 f6 cvector_add c% b1 f5 c% b2 f8
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- (((a = a) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ |- ((s = t) = ((s SUBSET t) /\ (t SUBSET s)))
T c= c= f0 f1 c/\ cSUBSET f0 f1 cSUBSET f1 f0
+ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY))), (((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY))))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) |- (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c/\ c/\ cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY
- (~ F), (x' = x), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f3 ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f3 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f4 c= f0 f3 c/\ c~ cF cF
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (((!x'. ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x'))) ==> ((\x'. ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x'))) _3984208)) = ((\x'. ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x'))) _3984208))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c= c==> ! c\/ c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * / c\/ c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f4 * / c\/ c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f4
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) |- (((!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))) ==> ((\t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))) t)) = ((\t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))) t))
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 c= c==> ! c==> cSUBSET f0 f1 cSUBSET * * part caff_gt f0 b0 * * part caff_gt f1 b0 * / c==> cSUBSET f0 f1 cSUBSET * * part caff_gt f0 b0 * * part caff_gt f1 b0 f2 * / c==> cSUBSET f0 f1 cSUBSET * * part caff_gt f0 b0 * * part caff_gt f1 b0 f2
- |- (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))
T c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF
+ |- ((\q'. ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) = p') ==> ((p' ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = q')) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = (p' ==> q'))))) q')
T * / c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> f4 b0 f5
+ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (x IN (conv0 (a INSERT (b INSERT EMPTY)))) |- (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ (((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))) /\ (x IN (conv0 (a INSERT (b INSERT EMPTY))))))
T c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY))), (((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY))))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))), ((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY))))) |- (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c/\ c/\ cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = x) |- ((x' = x) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f1 c/\ c= f0 f1 cF
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- ((!x'. (((~ (x' = a)) /\ (~ (x' = x))) \/ (~ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ ((((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) \/ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (~ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))))) /\ (((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x')))) /\ (!x'. ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x')))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x)))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c/\ ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c\/ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ ! c\/ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c\/ c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1
- |- (((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY))) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))) = (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> q')))) = ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))) = (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> q'))))
T c= c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 f4 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c==> c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 f4 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)), (((x' = a) \/ (x' = b)) ==> F) |- F
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> c/\ c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 c= f4 f2 c==> c==> c\/ c= f4 f0 c= f4 f3 cF cF
- ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))))) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))) = (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))))) = ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))) = (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))))))
T c= c==> c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2
- |- ((((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) = ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))
T c= c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
+ |- (((b IN (aff (a INSERT (b INSERT EMPTY)))) = p') ==> ((p' ==> ((((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = (p' ==> q'))))
T c==> c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f2 c==> c==> f2 c= cSUBSET * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY f5 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> f2 f5
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), ((x' = x) \/ (x' = a)) |- (((x' = x) \/ (x' = a)) /\ ((x' = x) \/ ((x' = a) \/ (x' = b))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c\/ c= f4 f1 c= f4 f0 c/\ c\/ c= f4 f1 c= f4 f0 c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3
+ |- ((\x. (!v. (!u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y)))))))))) x)
T * / ! ! ! c==> cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c= * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * part cGSPEC / c? / cSETSPEC b4 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b9 c/\ c= creal_add b6 creal_add b7 creal_add b8 b9 creal_of_num cNUMERAL cBIT1 c_0 c= b5 cvector_add c% b6 b0 cvector_add c% b7 b1 cvector_add c% b8 b2 c% b9 b3 b5 f0
- |- ((!x''. (((~ (x' = b)) /\ (~ (x' = x))) \/ (~ (x'' = v)))) = (((~ (x' = b)) /\ (~ (x' = x))) \/ (!x'. (~ (x' = v)))))
T c= ! c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= b0 f3 c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c= b0 f3
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (x IN (conv0 (a INSERT (b INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((x INSERT (a INSERT EMPTY)) SUBSET (x INSERT (a INSERT (b INSERT EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) t) |- (((b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))) = (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> * / c= f0 cvector_add c% b0 f1 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 f3 c= c==> c= f0 cvector_add c% f3 f1 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f4 f2 cvector_add c% f5 f1 cvector_add c% f6 f0 c% f7 f8 cvector_add c% b0 f2 cvector_add c% b1 f1 c% b2 f8 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f4 f2 cvector_add c% f5 f1 cvector_add c% f6 f0 c% f7 f8 cvector_add c% b0 f2 cvector_add c% b1 f1 c% b2 f8
+ |- ((((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b)))))) = (((!x'. ((x' IN ((a INSERT (x INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. ((x' IN (aff (a INSERT (b INSERT EMPTY)))) = (x' IN (aff (a INSERT (x INSERT EMPTY)))))) /\ (x IN (conv0 (a INSERT (b INSERT EMPTY)))))))) ==> (!x'. ((x' IN (x INSERT (a INSERT EMPTY))) ==> (x' IN (x INSERT (a INSERT (b INSERT EMPTY))))))))
T c= c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c==> c/\ ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cIN b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ |- (((!x. (!y. (y IN (aff (x INSERT (y INSERT EMPTY)))))) ==> ((\x. (!y. (y IN (aff (x INSERT (y INSERT EMPTY)))))) x)) = ((\x. (!y. (y IN (aff (x INSERT (y INSERT EMPTY)))))) x))
T c= c==> ! ! cIN b1 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! cIN b1 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! cIN b1 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ (x' = b), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (b = v)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= f0 f4 c= f1 f4
+ |- (((x' IN ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) = p') ==> ((p' ==> ((x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((x' IN ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) ==> (x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = (p' ==> q'))))
T c==> c= cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY f5 c==> c==> f5 c= cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY f6 c= c==> cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> f5 f6
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) \/ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (~ (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c\/ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\b. ((a ==> b) ==> (a = (a /\ b)))) b)
T * / c==> c==> f0 b0 c= f0 c/\ f0 b0 f1
+ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((((DISJOINT (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) ==> (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) y)))))) = (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) y))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f2 b1 c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f2 b1
- (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))) /\ (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f0 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> c= * part caff * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f0 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% b0 f2 cvector_add c% b1 f3 c% b2 f5
+ |- (((!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))) ==> ((\u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))) u)) = ((\u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))) u))
T c= c==> ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY f2 * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY f2
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) |- (~ (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F), (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)) |- (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F) /\ ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))
T c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c/\ c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- ((conv0 (a INSERT (b INSERT EMPTY))) x)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1
- (x' = a) |- ((collinear (b INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))
T c==> c= f0 f1 c= ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY))) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY))))) = ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((~ ((x' = x) \/ ((x' = a) \/ (x' = b)))) ==> F) = ((x' = x) \/ ((x' = a) \/ (x' = b))))
T c= c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 cF c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3
- (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) |- ((((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) /\ (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))
T c==> c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c/\ c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
+ |- ((\v. (!u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y))))))))) v)
T * / ! ! c==> cDISJOINT * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b8 c/\ c= creal_add b5 creal_add b6 creal_add b7 b8 creal_of_num cNUMERAL cBIT1 c_0 c= b4 cvector_add c% b5 f0 cvector_add c% b6 b0 cvector_add c% b7 b1 c% b8 b2 b4 f1
+ |- (((((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY))))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) /\ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY)))))) ==> (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))))
T c==> c/\ c/\ c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = x) |- ((x = x) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f1 c==> c= f1 f1 cF
- |- ((_3984357 = _3984359) ==> ((~ (_3984358 = _3984360)) \/ ((_3984357 INSERT _3984358) = (_3984359 INSERT _3984360))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_3984358 = _3984360), (_3984357 = _3984359) |- ((_3984358 = _3984360) /\ ((_3984357 INSERT _3984358) = (_3984359 INSERT _3984360)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
+ |- (((!x. (!v. (!w. (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((% t3) w)))))))))) y))))))))) ==> ((\x. (!v. (!w. (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((% t3) w)))))))))) y))))))))) x)) = ((\x. (!v. (!w. (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((% t3) w)))))))))) y))))))))) x))
T c= c==> ! ! ! c==> cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c= * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ c= creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b4 cvector_add c% b5 b0 cvector_add c% b6 b1 c% b7 b2 b4 * / ! ! c==> cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c= * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ c= creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b4 cvector_add c% b5 b0 cvector_add c% b6 b1 c% b7 b2 b4 f0 * / ! ! c==> cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c= * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b7 c/\ c= creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b4 cvector_add c% b5 b0 cvector_add c% b6 b1 c% b7 b2 b4 f0
+ |- (((!c. (!b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))) ==> ((\c. (!b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))) c)) = ((\c. (!b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))) c))
T c= c==> ! ! ! c==> c~ c= c==> c/\ b2 b1 b0 c==> b2 c==> b1 b0 cF * / ! ! c==> c~ c= c==> c/\ b2 b1 b0 c==> b2 c==> b1 b0 cF f0 * / ! ! c==> c~ c= c==> c/\ b2 b1 b0 c==> b2 c==> b1 b0 cF f0
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) |- ((\t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))) t)
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 * / c==> cSUBSET f0 f1 cSUBSET * * part caff_gt f0 b0 * * part caff_gt f1 b0 f2
+ |- (((!p'. (!q'. ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = p') ==> ((p' ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = p') ==> ((p' ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = p') ==> ((p' ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> b0 b1 * / ! c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> b0 b1 f4 * / ! c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> b0 b1 f4
+ ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (((\t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))) t4) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f3 creal_add f4 creal_add f5 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f6 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% f5 f1 c% b0 f7 f8 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f6 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f7
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((\s. (!t. ((s = t) = ((s SUBSET t) /\ (t SUBSET s))))) s)
T * / ! c= c= b0 b1 c/\ cSUBSET b0 b1 cSUBSET b1 b0 f0
- (x' = a), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f1 c= b0 f2 c= b0 f3 ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f3 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f4 c= f0 f3 c==> c~ cF cF
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), ((x' = x) \/ (x' = a)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c/\ ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f4 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ c= ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ ! c= caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f2 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> c\/ c= f0 f1 c= f0 f2 cF
+ |- ((a ==> b) ==> (a = (a /\ b)))
T c==> c==> f0 f1 c= f0 c/\ f0 f1
- |- ((\p'. (!q'. (((b IN (aff (a INSERT (b INSERT EMPTY)))) = p') ==> ((p' ==> ((!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 c==> c==> b0 c= ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ c= creal_add b3 creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f2 cvector_add c% b4 f1 cvector_add c% b5 f0 c% b6 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f2 cvector_add c% b4 f1 c% b5 f3 b1 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ c= creal_add b3 creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f2 cvector_add c% b4 f1 cvector_add c% b5 f0 c% b6 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f2 cvector_add c% b4 f1 c% b5 f3 c==> b0 b1 f4
- ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F) |- (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F) /\ ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))
T c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c/\ c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))) |- (~ (x' = a))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ c= f0 f2
- (x' = x), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (((~ (_3984125 = a)) \/ (~ (_3984125 = v))) = ((~ (_3984125 = a)) \/ (~ (_3984125 = v))))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c= f0 f4 c= c\/ c~ c= f5 f2 c~ c= f5 f4 c\/ c~ c= f5 f2 c~ c= f5 f4
- |- (((!p'. (!q'. (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) = p') ==> ((p' ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = q')) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) = p') ==> ((p' ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = q')) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) = p') ==> ((p' ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = q')) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 cvector_add c% b4 f3 c% b5 f4 b0 c==> c==> b0 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f4 b1 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 cvector_add c% b4 f3 c% b5 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f4 c==> b0 b1 * / ! c==> c= c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 cvector_add c% b4 f3 c% b5 f4 b0 c==> c==> b0 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f4 b1 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 cvector_add c% b4 f3 c% b5 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f4 c==> b0 b1 f5 * / ! c==> c= c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 cvector_add c% b4 f3 c% b5 f4 b0 c==> c==> b0 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f4 b1 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 cvector_add c% b4 f3 c% b5 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f4 c==> b0 b1 f5
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) |- ((x' = a) ==> F)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f4 f0 cF
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- ((\x'. (((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x')))) _3984207)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 * / c\/ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f4
+ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) |- (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) ==> F) = F)
T c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF cF
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (b INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f3 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f3 f2 cvector_add c% b0 f0 cvector_add c% b1 f1 c% b2 f5 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f5
- (x' = b), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (((~ (_3984129 = a)) \/ (~ (_3984129 = v))) = ((~ (_3984129 = a)) \/ (~ (_3984129 = v))))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= f0 f4 c= c\/ c~ c= f5 f3 c~ c= f5 f4 c\/ c~ c= f5 f3 c~ c= f5 f4
+ ((\t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) t1) |- (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))
T c==> * / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 f5 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f5 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f5 f1 cvector_add c% b0 f2 cvector_add c% b1 f3 c% b2 f4
- ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) |- ((!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t))))) = T)
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 c= ! ! c==> cSUBSET f0 b0 cSUBSET * * part caff_gt f0 b1 * * part caff_gt b0 b1 cT
+ |- ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) = p') ==> ((p' ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = q')) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = (p' ==> q'))))
T c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f5 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> f4 f5
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))), (s SUBSET s') |- ((s SUBSET s') /\ (((aff_gt s) t) SUBSET ((aff_gt s') t)))
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 c==> cSUBSET f0 f1 c/\ cSUBSET f0 f1 cSUBSET * * part caff_gt f0 f2 * * part caff_gt f1 f2
- |- (((((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) ==> (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))) = (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF
+ |- ((((!x'. ((x' IN ((a INSERT (x INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x' IN EMPTY))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. ((x' IN (aff (a INSERT (b INSERT EMPTY)))) = (x' IN (aff (a INSERT (x INSERT EMPTY)))))) /\ (x IN (conv0 (a INSERT (b INSERT EMPTY)))))))) ==> (!x'. ((x' IN (x INSERT (a INSERT EMPTY))) ==> (x' IN (x INSERT (a INSERT (b INSERT EMPTY))))))) = ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ (((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))) /\ (x IN (conv0 (a INSERT (b INSERT EMPTY)))))))) ==> ((x INSERT (a INSERT EMPTY)) SUBSET (x INSERT (a INSERT (b INSERT EMPTY))))))
T c= c==> c/\ ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cIN b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((~ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((DISJOINT (b INSERT (x INSERT EMPTY))) (v INSERT EMPTY))) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY
+ |- ((real_neg ((real_sub ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul t3) ((real_add ((real_mul t) (a $ i))) ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))))) ((real_mul t4) (v $ i)))))) ((real_add ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) ((real_add ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) ((real_mul t4) (v $ i)))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul f3 c$ f4 f2 creal_add creal_mul f5 creal_add creal_mul f6 c$ f4 f2 creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_mul f7 c$ f8 f2 creal_add creal_mul creal_add f0 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_add creal_mul creal_add f3 creal_mul f5 f6 c$ f4 f2 creal_mul f7 c$ f8 f2 creal_of_num cNUMERAL c_0
+ |- (((!b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))) ==> ((\b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))) b)) = ((\b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))) b))
T c= c==> ! ! c==> c~ c= c==> c/\ b1 b0 f0 c==> b1 c==> b0 f0 cF * / ! c==> c~ c= c==> c/\ b1 b0 f0 c==> b1 c==> b0 f0 cF f1 * / ! c==> c~ c= c==> c/\ b1 b0 f0 c==> b1 c==> b0 f0 cF f1
+ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))) |- ((\t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add _3984366) ((real_add _3984368) t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% _3984366) x)) ((vector_add ((% _3984368) a)) ((% t3') v))))))) = (\t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add _3984366) ((real_add _3984368) t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% _3984366) x)) ((vector_add ((% _3984368) a)) ((% t3') v))))))))
T c==> c= f0 cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 c= / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f9 creal_add f10 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f9 f2 cvector_add c% f10 f4 c% b0 f8 / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f9 creal_add f10 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 cvector_add c% f9 f2 cvector_add c% f10 f4 c% b0 f8
+ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY))), (x IN (conv0 (a INSERT (b INSERT EMPTY)))) |- (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))
T c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- ((b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x))) /\ (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f4 cvector_add c% f5 f6 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f7 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c/\ c= f4 cvector_add c% f5 f6 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f7 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f7 cvector_add c% f1 f6 cvector_add c% f2 f4 c% f3 f8 cvector_add c% b0 f7 cvector_add c% b1 f6 c% b2 f8
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_mul t1) (x $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t2) (a $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t3) ((lambdai. ((real_add ((lambdai. ((real_mul t) (a $ i))) $ i)) ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))) $ i))) $ i))) $ i)) ((lambdai. ((real_mul t4) (v $ i))) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) $ i)) ((lambdai. ((real_mul t4) (v $ i))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul f1 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul f3 c$ f4 b1 b1 c$ clambda / creal_add c$ clambda / creal_mul f5 c$ clambda / creal_add c$ clambda / creal_mul f6 c$ f4 b1 b1 c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f2 b1 b1 b1 b1 c$ clambda / creal_mul f7 c$ f8 b1 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_add f1 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul creal_add f3 creal_mul f5 f6 c$ f4 b1 b1 c$ clambda / creal_mul f7 c$ f8 b1 b1 b0 f0
- |- (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))
T c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
- |- ((~ (_3984357 = _3984359)) \/ ((~ (_3984358 = _3984360)) \/ ((_3984357 INSERT _3984358) = (_3984359 INSERT _3984360))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (~ (((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul t3) ((real_add ((real_mul t) (a $ i))) ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))))) ((real_mul t4) (v $ i))))) = ((real_add ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) ((real_add ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) ((real_mul t4) (v $ i)))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul f3 c$ f4 f2 creal_add creal_mul f5 creal_add creal_mul f6 c$ f4 f2 creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_mul f7 c$ f8 f2 creal_add creal_mul creal_add f0 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f1 f2 creal_add creal_mul creal_add f3 creal_mul f5 f6 c$ f4 f2 creal_mul f7 c$ f8 f2 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!a. (!b. ((a ==> b) ==> (a = (a /\ b))))) ==> ((\a. (!b. ((a ==> b) ==> (a = (a /\ b))))) a)) = ((\a. (!b. ((a ==> b) ==> (a = (a /\ b))))) a))
T c= c==> ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 * / ! c==> c==> b0 b1 c= b0 c/\ b0 b1 f0 * / ! c==> c==> b0 b1 c= b0 c/\ b0 b1 f0
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f3 creal_add f4 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% b0 f1 c% b1 f6 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f6
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!s. (!t. ((s = t) = ((s SUBSET t) /\ (t SUBSET s))))) ==> ((\s. (!t. ((s = t) = ((s SUBSET t) /\ (t SUBSET s))))) s)) = ((\s. (!t. ((s = t) = ((s SUBSET t) /\ (t SUBSET s))))) s))
T c= c==> ! ! c= c= b0 b1 c/\ cSUBSET b0 b1 cSUBSET b1 b0 * / ! c= c= b0 b1 c/\ cSUBSET b0 b1 cSUBSET b1 b0 f0 * / ! c= c= b0 b1 c/\ cSUBSET b0 b1 cSUBSET b1 b0 f0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) $ i) = (((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t4) v))) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 cvector_add c% f6 f4 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f7 f8 f0 c$ cvector_add c% creal_add f1 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 cvector_add c% creal_add f3 creal_mul f5 f6 f4 c% f7 f8 f0 cT
- (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((b IN (aff (a INSERT (b INSERT EMPTY)))) /\ ((!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))) = (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3 ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3
+ |- ((((a IN (conv0 (x INSERT (y INSERT EMPTY)))) ==> ((aff (x INSERT (y INSERT EMPTY))) = (aff (x INSERT (a INSERT EMPTY))))) ==> ((a IN (conv0 (x INSERT (y INSERT EMPTY)))) = ((a IN (conv0 (x INSERT (y INSERT EMPTY)))) /\ ((aff (x INSERT (y INSERT EMPTY))) = (aff (x INSERT (a INSERT EMPTY))))))) = ((a IN (conv0 (x INSERT (y INSERT EMPTY)))) = ((a IN (conv0 (x INSERT (y INSERT EMPTY)))) /\ ((aff (x INSERT (y INSERT EMPTY))) = (aff (x INSERT (a INSERT EMPTY)))))))
T c= c==> c==> cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) |- ((((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))
T c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF
+ |- ((((v = v) /\ (v = v)) ==> F) = F)
T c= c==> c/\ c= f0 f0 c= f0 f0 cF cF
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F), (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- ((\q'. (((b IN (aff (a INSERT (b INSERT EMPTY)))) = p') ==> ((p' ==> ((((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f2 c==> c==> f2 c= cSUBSET * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> f2 b0 f5
- |- ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))))
T c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY
- (_3984347 = _3984349), (_3984348 = _3984350) |- (((((aff _3984347) _3984348) = ((aff _3984349) _3984350)) ==> (((aff _3984349) _3984350) \/ (~ ((aff _3984347) _3984348)))) = (((aff _3984349) _3984350) \/ (~ ((aff _3984347) _3984348))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= caff f0 f2 caff f1 f3 c\/ caff f1 f3 c~ caff f0 f2 c\/ caff f1 f3 c~ caff f0 f2
+ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> ((x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))) ==> (((x' IN ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) ==> (x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = (((x' IN ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) ==> (x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f1 cvector_add c% b1 f0 cvector_add c% b2 f4 c% b3 f2 c= cIN f3 * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f1 cvector_add c% b1 f0 c% b2 f2 c= c==> cIN f3 * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f1 cvector_add c% b1 f0 cvector_add c% b2 f4 c% b3 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f1 cvector_add c% b1 f0 c% b2 f2 c= c==> cIN f3 * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f1 cvector_add c% b1 f0 cvector_add c% b2 f4 c% b3 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f1 cvector_add c% b1 f0 c% b2 f2
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t3') v)))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_add creal_add f1 creal_mul f2 f4 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 cvector_add c% f4 f6 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 c% f3 f7 cvector_add c% creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 cvector_add c% creal_add f1 creal_mul f2 f4 f6 c% b0 f7
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = a) |- ((a = a) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c==> c= f2 f2 cF
+ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))) |- ((?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))) = (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= f0 cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 cvector_add c% b0 f2 cvector_add c% b1 f4 c% b2 f8 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f2 cvector_add c% b1 f4 c% b2 f8
- (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((b IN (aff (a INSERT (b INSERT EMPTY)))) = T)
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cT
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (x IN (conv0 (a INSERT (b INSERT EMPTY)))) |- (((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))) /\ (x IN (conv0 (a INSERT (b INSERT EMPTY)))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f2 * part cconv0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f2 * part cconv0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) $ i) = (((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t4) v))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 cvector_add c% f6 f4 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f7 f8 f0 c$ cvector_add c% creal_add f1 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 cvector_add c% creal_add f3 creal_mul f5 f6 f4 c% f7 f8 f0
+ |- (((!s. ((x INSERT (y INSERT s)) = (y INSERT (x INSERT s)))) ==> ((\s. ((x INSERT (y INSERT s)) = (y INSERT (x INSERT s)))) s)) = ((\s. ((x INSERT (y INSERT s)) = (y INSERT (x INSERT s)))) s))
T c= c==> ! c= * * part cINSERT f0 * * part cINSERT f1 b0 * * part cINSERT f1 * * part cINSERT f0 b0 * / c= * * part cINSERT f0 * * part cINSERT f1 b0 * * part cINSERT f1 * * part cINSERT f0 b0 f2 * / c= * * part cINSERT f0 * * part cINSERT f1 b0 * * part cINSERT f1 * * part cINSERT f0 b0 f2
+ |- ((?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t3') v))))))) = ((\t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% t2') a)) ((% t3') v)))))))) ((real_add t2) ((real_mul t3) t))))
T c= c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_add f0 creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_add f3 creal_mul f1 f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f4 cvector_add c% f3 f5 cvector_add c% f1 cvector_add c% f2 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 c% f6 f7 cvector_add c% creal_add f0 creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 cvector_add c% creal_add f3 creal_mul f1 f2 f5 c% b0 f7 * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add creal_add f0 creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f4 cvector_add c% f3 f5 cvector_add c% f1 cvector_add c% f2 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 c% f6 f7 cvector_add c% creal_add f0 creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 cvector_add c% b0 f5 c% b1 f7 creal_add f3 creal_mul f1 f2
- (x' = b) |- (F = F)
T c==> c= f0 f1 c= cF cF
- (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) |- ((((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) /\ (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c/\ c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF
- (x' = x) |- (((conv0 (a INSERT (b INSERT EMPTY))) x) = ((conv0 (a INSERT (b INSERT EMPTY))) x))
T c==> c= f0 f1 c= cconv0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 cconv0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1
+ ((\t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) t1) |- (((?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))) = (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> * / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 f5 c= c==> c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f5 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f5 f1 cvector_add c% b0 f2 cvector_add c% b1 f3 c% b2 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4
+ ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2
- ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F), (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) |- ((((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) /\ ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))
T c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c/\ c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
+ (b IN (aff (a INSERT (b INSERT EMPTY)))), ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((b IN (aff (a INSERT (b INSERT EMPTY)))) /\ ((((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3
+ |- ((v = v) /\ (v = v))
T c/\ c= f0 f0 c= f0 f0
- (x' = a), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (((~ (_3984128 = b)) \/ (~ (_3984128 = v))) = ((~ (_3984128 = b)) \/ (~ (_3984128 = v))))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c= f0 f4 c= c\/ c~ c= f5 f3 c~ c= f5 f4 c\/ c~ c= f5 f3 c~ c= f5 f4
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (!x'. (((~ (x' = a)) \/ (~ (x' = v))) /\ ((~ (x' = x)) \/ (~ (x' = v)))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2
+ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (T = ((DISJOINT (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cT cDISJOINT * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = a) |- ((x' = a) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c/\ c= f0 f2 cF
+ |- (((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY))) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))) = (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> q')))) = ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))) = (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> q'))))
T c= c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c==> c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((x' = x) \/ (x' = a)) |- F
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c\/ c= f4 f1 c= f4 f0 cF
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- ((\x'. (((~ (x' = a)) \/ (~ (x' = v))) /\ ((~ (x' = x)) \/ (~ (x' = v))))) _3984206)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 f4
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> ((!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> q')))
T c==> c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3 f4 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3 c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f4
- |- ((\q'. (((b IN (aff (a INSERT (b INSERT EMPTY)))) = p') ==> ((p' ==> ((!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f2 c==> c==> f2 c= ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f3 cvector_add c% b3 f1 cvector_add c% b4 f0 c% b5 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f3 cvector_add c% b3 f1 c% b4 f4 b0 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f3 cvector_add c% b3 f1 cvector_add c% b4 f0 c% b5 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f3 cvector_add c% b3 f1 c% b4 f4 c==> f2 b0 f5
- ((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) |- (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 cvector_add c% b3 f1 cvector_add c% b4 f2 c% b5 f3 b1
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (!x'. ((~ ((aff (a INSERT (b INSERT EMPTY))) x')) \/ ((aff (a INSERT (x INSERT EMPTY))) x')))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c\/ c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) |- (((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t))) = T)
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 c= c==> cSUBSET f0 f1 cSUBSET * * part caff_gt f0 f2 * * part caff_gt f1 f2 cT
+ |- ((y IN (aff (x INSERT (y INSERT EMPTY)))) = T)
T c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cT
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (x IN (conv0 (a INSERT (b INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = ((((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) /\ (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY
+ ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (x IN (conv0 (a INSERT (b INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), ((x' = x) \/ (x' = a)) |- ((~ ((x' = x) \/ ((x' = a) \/ (x' = b)))) ==> F)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c\/ c= f4 f1 c= f4 f0 c==> c~ c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 cF
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) |- ((!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) /\ (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))))
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 c/\ ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) |- (!x'. (((~ (x' = a)) /\ (~ (x' = x))) \/ (~ (x' = v))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= b0 f2
- |- ((((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) = ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))
T c= c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (~ (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))), ((x' = x) \/ (x' = a)) |- (((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (~ (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c\/ c= f0 f1 c= f0 f2 c/\ c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cF
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- ((?t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> c? / c= f4 cvector_add c% b0 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f6 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f6 cvector_add c% f1 f5 cvector_add c% f2 f4 c% f3 f7 cvector_add c% b0 f6 cvector_add c% b1 f5 c% b2 f7
+ |- ((\w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y))))))) w)
T * / c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ c= creal_add b3 creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 cvector_add c% b4 f1 cvector_add c% b5 f2 c% b6 b0 b2 f3
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) |- ((!x'. (((~ (x' = a)) /\ (~ (x' = x))) \/ (~ (x' = v)))) /\ (!x'. (((~ (x' = b)) /\ (~ (x' = x))) \/ (~ (x' = v)))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c/\ ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f1 c~ c= b0 f2
- |- (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))
T c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF
- (x' = x), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (F = F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c= f0 f4 c= cF cF
- |- ((!a. (!x. (!v. (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))))) = T)
T c= ! ! ! c==> c/\ ! c~ c/\ c\/ c= b3 b0 c= b3 b1 c= b3 b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c= caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 cconv0 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cT
+ |- ((\p'. (!q'. (((x' IN ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) = p') ==> ((p' ==> ((x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((x' IN ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) ==> (x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c==> c==> b0 c= cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY b1 c= c==> cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY cIN f0 * * part caff_gt * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> b0 b1 f5
- |- ((\b. (!a. (!x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))))) b)
T * / ! ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b4 b1 c= b4 b2 c= b4 b3 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccollinear * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c= caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b4 cconv0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
+ ((real_lt (real_of_num (NUMERAL _0))) t4) |- (((((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t4)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t4) v))))) = (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t4)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t4) v)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= c/\ c= creal_add creal_add f1 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 creal_add creal_add f4 creal_mul f2 f3 f0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f5 cvector_add c% f4 f6 cvector_add c% f2 cvector_add c% f3 f6 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c% f0 f7 cvector_add c% creal_add f1 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 cvector_add c% creal_add f4 creal_mul f2 f3 f6 c% f0 f7 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= creal_add creal_add f1 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 creal_add creal_add f4 creal_mul f2 f3 f0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f5 cvector_add c% f4 f6 cvector_add c% f2 cvector_add c% f3 f6 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c% f0 f7 cvector_add c% creal_add f1 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 cvector_add c% creal_add f4 creal_mul f2 f3 f6 c% f0 f7
+ |- (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2
+ ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) |- ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))))) y)))))) = (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))))) y))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f2 cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 f3 b1 c= * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f2 cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 f3 b1
- (~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) |- ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) /\ F)
T c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 c/\ c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
- (x' = x) |- ((collinear (b INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))
T c==> c= f0 f1 c= ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- |- ((~ (_3984355 = _3984356)) \/ ((collinear _3984356) \/ (~ (collinear _3984355))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) |- ((~ F) ==> F)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cF cF
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- ((x' = b) ==> F)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> c/\ c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 c= f4 f2 c==> c= f4 f3 cF
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- ((((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b)))) = T)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c= c==> c\/ c= f4 f1 c= f4 f0 c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 cT
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (((\t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))) t3) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f3 creal_add f4 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% b0 f1 c% b1 f6 f7 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f6
- |- (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3
- (_3984347 = _3984349), (_3984348 = _3984350) |- ((_3984347 = _3984349) /\ (((aff _3984349) _3984350) \/ (~ ((aff _3984347) _3984348))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ caff f1 f3 c~ caff f0 f2
- |- (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))), ((\t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))) t4) |- (((\t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))) t4) /\ (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f3 creal_add f4 creal_add f5 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f6 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% f5 f1 c% b0 f7 f8 c/\ * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f3 creal_add f4 creal_add f5 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f6 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% f5 f1 c% b0 f7 f8 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f6 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f7
+ ((\t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))) t4) |- (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))
T c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% b0 f7 f8 c/\ creal_lt creal_of_num cNUMERAL c_0 f8 c/\ c= creal_add f0 creal_add f1 creal_add f2 f8 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% f8 f7
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((!x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))))) ==> ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))))) x)) = ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))))) x))
T c= c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY f0 * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY f0
+ |- ((!b. ((T ==> b) ==> (T = (T /\ b)))) = (((T ==> T) ==> (T = (T /\ T))) /\ ((T ==> F) ==> (T = (T /\ F)))))
T c= ! c==> c==> cT b0 c= cT c/\ cT b0 c/\ c==> c==> cT cT c= cT c/\ cT cT c==> c==> cT cF c= cT c/\ cT cF
- (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = x) |- (~ (x = a))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f1 c~ c= f1 f2
- (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))) /\ (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% b0 f7 c==> c= * part caff * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * part caff * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c==> cIN f6 * part caff * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% b0 f7 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f4 cvector_add c% b1 f5 c% b2 f7
+ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (x IN (conv0 (a INSERT (b INSERT EMPTY)))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) /\ (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) = ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY))) ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = q')) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> q')))) = ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = q')) ==> ((((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))) = (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> q'))))
T c= c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c==> c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f2 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x' = x), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (x = v)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c= f0 f4 c= f1 f4
- |- ((\a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))) a)
T * / ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b2 b0 c= b2 b1 c= b2 f0 ! c~ c/\ c\/ c= b2 f1 c= b2 b1 c= b2 f0 ! c~ c/\ c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f1 c= b2 f0 cF f2
- (~ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) |- ((collinear (b INSERT (x INSERT (v INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- |- ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) = p') ==> ((p' ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = q')) ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = (p' ==> q'))))
T c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 f5 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 c==> f4 f5
- (_3984357 = _3984359) |- ((_3984358 = _3984360) ==> ((_3984357 INSERT _3984358) = (_3984359 INSERT _3984360)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- (((((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) /\ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY)))))) ==> (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))) = (((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY)))))) ==> (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))))
T c= c==> c/\ c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) $ i) = (((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t4) v))) $ i)))) = (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t4) v)))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add c% f0 f1 cvector_add c% f2 f3 cvector_add c% f4 cvector_add c% f5 f3 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f6 f7 b0 c$ cvector_add c% creal_add f0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 cvector_add c% creal_add f2 creal_mul f4 f5 f3 c% f6 f7 b0 c= cvector_add c% f0 f1 cvector_add c% f2 f3 cvector_add c% f4 cvector_add c% f5 f3 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f6 f7 cvector_add c% creal_add f0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 cvector_add c% creal_add f2 creal_mul f4 f5 f3 c% f6 f7
+ |- (((((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY))))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))))
T c==> c/\ c/\ c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ (x' = a), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) |- ((x' = a) /\ F)
T c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f1 c= b0 f2 c= b0 f3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c= caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY b0 caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconv0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f2 c==> c/\ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f0 f1 cF
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- ((~ (_3984206 = x)) \/ (~ (_3984206 = v)))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c\/ c~ c= f4 f1 c~ c= f4 f2
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) |- ((!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))) = T)
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 c= ! c==> cSUBSET f0 f1 cSUBSET * * part caff_gt f0 b0 * * part caff_gt f1 b0 cT
- (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))) |- ((\t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1) ((real_add _3984364) t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% _3984364) a)) ((% t3') v))))))) = (\t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1) ((real_add _3984364) t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1) x)) ((vector_add ((% _3984364) a)) ((% t3') v))))))))
T c==> c= f0 cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 c= / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f1 creal_add f9 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f1 f2 cvector_add c% f9 f4 c% b0 f8 / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f1 creal_add f9 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 cvector_add c% f1 f2 cvector_add c% f9 f4 c% b0 f8
- |- ((\q'. ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = p') ==> ((p' ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))) = (p' ==> q'))))) q')
T * / c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f1 cvector_add c% b3 f0 cvector_add c% b4 f4 c% b5 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f2 b0 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f1 cvector_add c% b3 f0 cvector_add c% b4 f4 c% b5 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f2 c==> f3 b0 f5
+ |- ((\y. (y IN (aff (x INSERT (y INSERT EMPTY))))) y)
T * / cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ |- ((!a. (((a /\ T) ==> F) = (a ==> (T ==> F)))) = ((((T /\ T) ==> F) = (T ==> (T ==> F))) /\ (((F /\ T) ==> F) = (F ==> (T ==> F)))))
T c= ! c= c==> c/\ b0 cT cF c==> b0 c==> cT cF c/\ c= c==> c/\ cT cT cF c==> cT c==> cT cF c= c==> c/\ cF cT cF c==> cF c==> cT cF
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- ((x' = x) ==> F)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> c/\ c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 c= f4 f2 c==> c= f4 f1 cF
- |- ((!x'. (P \/ (Q x'))) = (P \/ (!x'. (Q x'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
- |- ((!x. (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) = T)
T c= ! c==> c/\ ! c~ c/\ c\/ c= b1 f0 c= b1 b0 c= b1 f1 ! c~ c/\ c\/ c= b1 f2 c= b1 b0 c= b1 f1 ! c~ c/\ c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f2 c= b1 f1 cT
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)
T * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))), ((real_lt (real_of_num (NUMERAL _0))) t4), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c/\ c= creal_add f4 creal_add f5 creal_add f6 f3 creal_of_num cNUMERAL cBIT1 c_0 c= f7 cvector_add c% f4 f2 cvector_add c% f5 f0 cvector_add c% f6 f1 c% f3 f8 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f7 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f8
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((((\t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))) t3) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))) = T)
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f3 creal_add f4 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% b0 f1 c% b1 f6 f7 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f6 cT
+ ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x' = a) |- ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (a INSERT (x INSERT (v INSERT EMPTY)))))
T c==> c= f0 f1 c= ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (x' = x), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- F
T c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f3 ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f3 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f4 c= f0 f3 cF
+ ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) |- (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> ((x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((x' IN ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))) ==> (x' IN ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> q')))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f3 c= cIN f4 * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f5 c= c==> cIN f4 * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY cIN f4 * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f3 f5
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), ((~ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((DISJOINT (b INSERT (x INSERT EMPTY))) (v INSERT EMPTY))), ((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) |- ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY
- ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) |- (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ |- ((((((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY))))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) /\ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY)))))) ==> (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))) = ((((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) /\ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY)))))) ==> (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))))
T c= c==> c/\ c/\ c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c/\ c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((F /\ t) = F)
T c= c/\ cF f0 cF
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) |- (T = ((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= cT cDISJOINT * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY
+ ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY)))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) |- ((((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))
T c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
+ |- ((\v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY))))) v)
T * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f1
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (((aff (a INSERT (b INSERT EMPTY))) _3984207) \/ (~ ((aff (a INSERT (x INSERT EMPTY))) _3984207)))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c\/ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (((!x. (((\t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))) x) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))) ==> ((?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))) = ((?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> ! c==> * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f3 creal_add f4 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% b1 f1 c% b2 f6 b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f6 c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f3 creal_add f4 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% b0 f1 c% b1 f6 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f6 c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f3 creal_add f4 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% b0 f1 c% b1 f6 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f6
+ |- (((!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) ==> ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)) = ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t))
T c= c==> ! c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
- |- (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))
T c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3 c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (!t3. (((\t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))) t3) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f3 creal_add f4 creal_add b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% b1 f1 c% b1 f6 b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f6
+ |- ((\b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))) b)
T * / ! c==> c~ c= c==> c/\ b1 b0 f0 c==> b1 c==> b0 f0 cF f1
- (~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) |- F
T c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF
- (_3984351 = _3984353), (_3984352 = _3984354) |- ((_3984351 = _3984353) /\ (((conv0 _3984353) _3984354) \/ (~ ((conv0 _3984351) _3984352))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cconv0 f1 f3 c~ cconv0 f0 f2
- |- ((_3984355 = _3984356) ==> ((collinear _3984356) \/ (~ (collinear _3984355))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t4)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t4) v))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c/\ c= creal_add creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_add creal_add f1 creal_mul f2 f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 cvector_add c% f4 f6 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 c% f3 f7 cvector_add c% creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 cvector_add c% creal_add f1 creal_mul f2 f4 f6 c% f3 f7
+ (x' = x), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (((_3984125 = v) /\ (_3984125 = v)) ==> F)
T c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f3 ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f3 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f4 c= f0 f3 c==> c/\ c= f5 f3 c= f5 f3 cF
- |- ((\p'. (!q'. ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) = p') ==> ((p' ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ c= creal_add b3 creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f1 cvector_add c% b4 f0 cvector_add c% b5 f3 c% b6 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f1 cvector_add c% b4 f0 c% b5 f2 b1 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b6 c/\ c= creal_add b3 creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f1 cvector_add c% b4 f0 cvector_add c% b5 f3 c% b6 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f1 cvector_add c% b4 f0 c% b5 f2 c==> b0 b1 f4
+ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))) |- ((\t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))) = (\t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= f0 cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 c= / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f2 cvector_add c% b1 f4 c% b2 f8 / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 cvector_add c% b0 f2 cvector_add c% b1 f4 c% b2 f8
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((x' = x) \/ (x' = a)) |- (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ F)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c\/ c= f4 f1 c= f4 f0 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ |- (((!q'. (((b IN (aff (a INSERT (b INSERT EMPTY)))) = p') ==> ((p' ==> ((((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = (p' ==> q'))))) ==> ((\q'. (((b IN (aff (a INSERT (b INSERT EMPTY)))) = p') ==> ((p' ==> ((((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = (p' ==> q'))))) q')) = ((\q'. (((b IN (aff (a INSERT (b INSERT EMPTY)))) = p') ==> ((p' ==> ((((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) SUBSET ((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f2 c==> c==> f2 c= cSUBSET * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> f2 b0 * / c==> c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f2 c==> c==> f2 c= cSUBSET * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> f2 b0 f5 * / c==> c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f2 c==> c==> f2 c= cSUBSET * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_gt * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c==> f2 b0 f5
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))), ((real_lt (real_of_num (NUMERAL _0))) t4), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c= creal_add f3 creal_add f4 creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f7 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% f5 f1 c% f6 f8 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f7 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f8
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((real_neg ((real_sub ((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t4))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= creal_neg creal_sub creal_add creal_add f0 creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_add f3 creal_mul f1 f2 f4 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f4 creal_of_num cNUMERAL cBIT1 c_0
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (((!x. (((\t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) x) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))) ==> ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))) = ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> ! c==> * / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f4 b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f4 c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f4 c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f4
+ |- ((~ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t4)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)
T c==> c~ c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_add creal_add f1 creal_mul f2 f4 f3 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((~ T) = F)
T c= c~ cT cF
- (x' = x), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f3 ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f3 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f4 c= f0 f3 c==> c~ cF cF
- (x' = x), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (((~ (_3984126 = b)) \/ (~ (_3984126 = v))) = ((~ (_3984126 = b)) \/ (~ (_3984126 = v))))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c= f0 f4 c= c\/ c~ c= f5 f3 c~ c= f5 f4 c\/ c~ c= f5 f3 c~ c= f5 f4
+ ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) |- (((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))))) y)))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f2 cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 f3 b1
- |- (((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))) = (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c= c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), ((x' = x) \/ (x' = a)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c\/ c= f0 f1 c= f0 f2 cF
- (~ F), (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = x) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f1 c/\ c~ cF cF
+ |- (((!v. (!u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y))))))))) ==> ((\v. (!u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y))))))))) v)) = ((\v. (!u. (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5612. (?y. (((SETSPEC GEN%PVAR%5612) (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))) y))))))))) v))
T c= c==> ! ! ! c==> cDISJOINT * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b8 c/\ c= creal_add b5 creal_add b6 creal_add b7 b8 creal_of_num cNUMERAL cBIT1 c_0 c= b4 cvector_add c% b5 f0 cvector_add c% b6 b0 cvector_add c% b7 b1 c% b8 b2 b4 * / ! ! c==> cDISJOINT * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b8 c/\ c= creal_add b5 creal_add b6 creal_add b7 b8 creal_of_num cNUMERAL cBIT1 c_0 c= b4 cvector_add c% b5 f0 cvector_add c% b6 b0 cvector_add c% b7 b1 c% b8 b2 b4 f1 * / ! ! c==> cDISJOINT * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * part cGSPEC / c? / cSETSPEC b3 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b8 c/\ c= creal_add b5 creal_add b6 creal_add b7 b8 creal_of_num cNUMERAL cBIT1 c_0 c= b4 cvector_add c% b5 f0 cvector_add c% b6 b0 cvector_add c% b7 b1 c% b8 b2 b4 f1
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))), ((\t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))) t2) |- (((\t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))) t2) /\ (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f3 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f3 f2 cvector_add c% b0 f0 cvector_add c% b1 f1 c% b2 f5 f6 c/\ * / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f3 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f3 f2 cvector_add c% b0 f0 cvector_add c% b1 f1 c% b2 f5 f6 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f5
- |- (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))
T c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4
- |- ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = q')) ==> ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))))) = (((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) ==> q')))
T c==> c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 f4 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 cvector_add c% b3 f3 c% b4 f2 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f1 cvector_add c% b2 f0 c% b3 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4
- (_3984347 = _3984349), (_3984348 = _3984350) |- (((aff _3984349) _3984350) \/ (~ ((aff _3984347) _3984348)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ caff f1 f3 c~ caff f0 f2
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- ((x' = a) ==> F)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> c/\ c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 c= f4 f2 c==> c= f4 f0 cF
+ |- ((\t. ((s = t) = ((s SUBSET t) /\ (t SUBSET s)))) t)
T * / c= c= f0 b0 c/\ cSUBSET f0 b0 cSUBSET b0 f0 f1
+ |- ((((DISJOINT (a INSERT (x INSERT EMPTY))) (v INSERT EMPTY)) /\ ((DISJOINT (b INSERT (x INSERT EMPTY))) (v INSERT EMPTY))) ==> ((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY)))
T c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))), ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) /\ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))), ((x' = a) ==> F), ((x' = x) \/ (x' = a)) |- F
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c==> c= f4 f0 cF c==> c\/ c= f4 f1 c= f4 f0 cF
+ |- ((\u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))) u)
T * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY f2
- |- (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F) = (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v))))))
T c= c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2 cF c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 c= b0 f2
- |- (((!x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))) ==> ((\x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))) x)) = ((\x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))) x))
T c= c==> ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b2 f0 c= b2 b0 c= b2 b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 cconv0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF * / ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b2 f0 c= b2 b0 c= b2 b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 cconv0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2 * / ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b2 f0 c= b2 b0 c= b2 b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 cconv0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
+ |- ((((x IN (conv0 (a INSERT (b INSERT EMPTY)))) /\ ((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY)))))) /\ (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY)))))) ==> (((aff_gt (x INSERT (a INSERT EMPTY))) (v INSERT EMPTY)) = ((aff_gt (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))))
T c==> c/\ c/\ cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- |- ((\v. (!b. (!a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))))) v)
T * / ! ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b4 b2 c= b4 b3 c= b4 b0 ! c~ c/\ c\/ c= b4 b1 c= b4 b3 c= b4 b0 ! c~ c/\ c\/ c= b4 b3 c\/ c= b4 b2 c= b4 b1 c= b4 b0 cF f0
+ |- ((((~ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t4)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) ==> ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t4)) = (real_of_num (NUMERAL (BIT1 _0)))))) = ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t4)) = (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c==> c~ c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_add creal_add f1 creal_mul f2 f4 f3 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_add creal_add f1 creal_mul f2 f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_add creal_add f1 creal_mul f2 f4 f3 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!b. (!a. (((a /\ b) ==> T) = (a ==> (b ==> T))))) = ((!a. (((a /\ T) ==> T) = (a ==> (T ==> T)))) /\ (!a. (((a /\ F) ==> T) = (a ==> (F ==> T))))))
T c= ! ! c= c==> c/\ b1 b0 cT c==> b1 c==> b0 cT c/\ ! c= c==> c/\ b0 cT cT c==> b0 c==> cT cT ! c= c==> c/\ b0 cF cT c==> b0 c==> cF cT
+ ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) |- ((((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) ==> F)
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> c/\ c\/ c= f4 f1 c\/ c= f4 f0 c= f4 f3 c= f4 f2 cF
+ (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x))) |- ((?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))) = (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= f0 cvector_add c% f1 f2 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f3 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f4 f3 cvector_add c% f5 f2 cvector_add c% f6 cvector_add c% f1 f2 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f3 c% f7 f8 cvector_add c% b0 f3 cvector_add c% b1 f2 c% b2 f8 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f4 f3 cvector_add c% f5 f2 cvector_add c% f6 f0 c% f7 f8 cvector_add c% b0 f3 cvector_add c% b1 f2 c% b2 f8
+ |- ((\s. ((x INSERT (y INSERT s)) = (y INSERT (x INSERT s)))) s)
T * / c= * * part cINSERT f0 * * part cINSERT f1 b0 * * part cINSERT f1 * * part cINSERT f0 b0 f2
+ (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))) |- ((x' = x) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f1 cF
+ (x' = a) |- ((~ (x' = a)) = (~ (a = a)))
T c==> c= f0 f1 c= c~ c= f0 f1 c~ c= f1 f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ |- (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) = ((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t4) v))))
T c= cvector_add c% f0 f1 cvector_add c% f2 f3 cvector_add c% f4 cvector_add c% f5 f3 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f6 f7 cvector_add c% creal_add f0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 cvector_add c% creal_add f2 creal_mul f4 f5 f3 c% f6 f7
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))), ((\t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) t1) |- (((\t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) t1) /\ (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f4 f5 c/\ * / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f4 f5 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f4
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- (!t. (((\t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) t) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 ! c==> * / c= f4 cvector_add c% b1 f5 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f6 b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f0 f6 cvector_add c% f1 f5 cvector_add c% f2 f4 c% f3 f7 cvector_add c% b1 f6 cvector_add c% b2 f5 c% b3 f7
- |- ((((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))
T c= c==> c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t))))) s')
T * / ! c==> cSUBSET f0 b0 cSUBSET * * part caff_gt f0 b1 * * part caff_gt b0 b1 f1
+ |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) = (!a. (!b. ((a ==> b) ==> (a = (a /\ b))))))
T c= c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1
- (x' = x) |- ((((aff (a INSERT (b INSERT EMPTY))) _3984204) \/ (~ ((aff (a INSERT (x INSERT EMPTY))) _3984204))) = (((aff (a INSERT (b INSERT EMPTY))) _3984204) \/ (~ ((aff (a INSERT (x INSERT EMPTY))) _3984204))))
T c==> c= f0 f1 c= c\/ caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c~ caff * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c\/ caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c~ caff * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4
- ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))) |- ((\t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add _3984366) ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% _3984366) x)) ((vector_add ((% t2') a)) ((% t3') v)))))))) = (\t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add _3984366) ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% _3984366) x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))
T c==> c= f0 cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 c= / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f9 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f9 f2 cvector_add c% b0 f4 c% b1 f8 / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f9 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 cvector_add c% f9 f2 cvector_add c% b0 f4 c% b1 f8
+ ((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) |- ((DISJOINT (x INSERT (a INSERT (b INSERT EMPTY)))) (v INSERT EMPTY))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_mul t1) (x $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t2) (a $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t3) ((lambdai. ((real_add ((lambdai. ((real_mul t) (a $ i))) $ i)) ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) (x $ i))) $ i))) $ i))) $ i)) ((lambdai. ((real_mul t4) (v $ i))) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) (x $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add t2) ((real_mul t3) t))) (a $ i))) $ i)) ((lambdai. ((real_mul t4) (v $ i))) $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))) ((% t4) v)))) $ i) = (((vector_add ((% ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) x)) ((vector_add ((% ((real_add t2) ((real_mul t3) t))) a)) ((% t4) v))) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul f1 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul f3 c$ f4 b1 b1 c$ clambda / creal_add c$ clambda / creal_mul f5 c$ clambda / creal_add c$ clambda / creal_mul f6 c$ f4 b1 b1 c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f2 b1 b1 b1 b1 c$ clambda / creal_mul f7 c$ f8 b1 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_add f1 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul creal_add f3 creal_mul f5 f6 c$ f4 b1 b1 c$ clambda / creal_mul f7 c$ f8 b1 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 cvector_add c% f6 f4 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f7 f8 f0 c$ cvector_add c% creal_add f1 creal_mul f5 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 cvector_add c% creal_add f3 creal_mul f5 f6 f4 c% f7 f8 f0
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f3 creal_add f4 creal_add f5 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f6 cvector_add c% f3 f2 cvector_add c% f4 f0 cvector_add c% f5 f1 c% b0 f7 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f6 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f7
- (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = x) |- ((~ F) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f1 c==> c~ cF cF
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) |- ((\s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) s)
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 * / ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 f0
- (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))) |- ((\t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1) ((real_add t2) t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3') v))))))) = (\t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1) ((real_add t2) t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3') v))))))))
T c==> c= f0 cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 c= / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f1 creal_add f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f1 f2 cvector_add c% f3 f4 c% b0 f8 / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f1 creal_add f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 cvector_add c% f1 f2 cvector_add c% f3 f4 c% b0 f8
+ |- ((!a. (((a /\ T) ==> T) = (a ==> (T ==> T)))) = ((((T /\ T) ==> T) = (T ==> (T ==> T))) /\ (((F /\ T) ==> T) = (F ==> (T ==> T)))))
T c= ! c= c==> c/\ b0 cT cT c==> b0 c==> cT cT c/\ c= c==> c/\ cT cT cT c==> cT c==> cT cT c= c==> c/\ cF cT cT c==> cF c==> cT cT
+ |- (((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_add ((real_add t1) ((real_mul t3) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)))) ((real_add ((real_add t2) ((real_mul t3) t))) t4)) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add f0 creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_add creal_add f1 creal_mul f2 f4 f3 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!b. (!a. (((a /\ b) ==> F) = (a ==> (b ==> F))))) = ((!a. (((a /\ T) ==> F) = (a ==> (T ==> F)))) /\ (!a. (((a /\ F) ==> F) = (a ==> (F ==> F))))))
T c= ! ! c= c==> c/\ b1 b0 cF c==> b1 c==> b0 cF c/\ ! c= c==> c/\ b0 cT cF c==> b0 c==> cT cF ! c= c==> c/\ b0 cF cF c==> b0 c==> cF cF
+ |- (((!w. (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((% t3) w)))))))))) y))))))) ==> ((\w. (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((% t3) w)))))))))) y))))))) w)) = ((\w. (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) ==> (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((% t3) w)))))))))) y))))))) w))
T c= c==> ! c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 b0 b2 * / c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 b0 b2 f2 * / c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 b0 b2 f2
+ ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((((\t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))) t2) ==> (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))) = T)
T c==> c= * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> * / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add f3 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f3 f2 cvector_add c% b0 f0 cvector_add c% b1 f1 c% b2 f5 f6 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f2 cvector_add c% b1 f0 c% b2 f5 cT
- (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = a) |- ((~ F) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c==> c~ cF cF
- (x' = a) |- (((~ (_3984206 = x)) \/ (~ (_3984206 = v))) = ((~ (_3984206 = x)) \/ (~ (_3984206 = v))))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 c~ c= f2 f4 c\/ c~ c= f2 f3 c~ c= f2 f4
- (_3984355 = _3984356) |- ((((collinear _3984355) = (collinear _3984356)) ==> ((collinear _3984356) \/ (~ (collinear _3984355)))) = ((collinear _3984356) \/ (~ (collinear _3984355))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
- |- ((~ (_3984348 = _3984350)) \/ ((~ (_3984347 = _3984349)) \/ (((aff _3984349) _3984350) \/ (~ ((aff _3984347) _3984348)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ caff f3 f1 c~ caff f2 f0
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (!x'. (((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x'))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c\/ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
- |- ((\x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))) x)
T * / ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b2 f0 c= b2 b0 c= b2 b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 cconv0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
- |- ((!x. (!v. (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b)))))))) = T)
T c= ! ! c==> c/\ ! c~ c/\ c\/ c= b2 f0 c= b2 b0 c= b2 b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 cconv0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cT
- |- ((!v. (!b. (!a. (!x. (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v))))))))) = (!v. (!b. (!a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))))))
T c= ! ! ! ! c==> c/\ ! c~ c/\ c\/ c= b4 b2 c= b4 b3 c= b4 b0 ! c~ c/\ c\/ c= b4 b1 c= b4 b3 c= b4 b0 ! c~ c/\ c\/ c= b4 b3 c\/ c= b4 b2 c= b4 b1 c= b4 b0 ! ! ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b4 b2 c= b4 b3 c= b4 b0 ! c~ c/\ c\/ c= b4 b1 c= b4 b3 c= b4 b0 ! c~ c/\ c\/ c= b4 b3 c\/ c= b4 b2 c= b4 b1 c= b4 b0 cF
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) = p') ==> ((p' ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = q')) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = (p' ==> q'))))
T c==> c= c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 f5 c==> c==> f5 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 f6 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c==> f5 f6
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x')))) ==> ((\x'. (((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x')))) _3984207)) = ((\x'. (((aff (a INSERT (b INSERT EMPTY))) x') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x')))) _3984207))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c= c==> ! c\/ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * / c\/ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f4 * / c\/ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f4
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))
T c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add f0 creal_add f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 cvector_add c% b0 f5 c% b1 f6 c==> c= * part caff * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part caff * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c==> cIN f5 * part caff * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f6
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- (((((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) ==> (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))) = (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))
T c= c==> c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x' = b), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (((~ (_3984129 = x)) \/ (~ (_3984129 = v))) = ((~ (_3984129 = x)) \/ (~ (_3984129 = v))))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= f0 f4 c= c\/ c~ c= f5 f2 c~ c= f5 f4 c\/ c~ c= f5 f2 c~ c= f5 f4
- (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))) |- (~ (x' = b))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ c= f0 f3
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- ((~ ((aff (a INSERT (b INSERT EMPTY))) _3984208)) \/ ((aff (a INSERT (x INSERT EMPTY))) _3984208))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c\/ c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)) = ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F))
T c= c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF
- (x' = a) |- (((~ ((aff (a INSERT (b INSERT EMPTY))) _3984208)) \/ ((aff (a INSERT (x INSERT EMPTY))) _3984208)) = ((~ ((aff (a INSERT (b INSERT EMPTY))) _3984208)) \/ ((aff (a INSERT (x INSERT EMPTY))) _3984208)))
T c==> c= f0 f1 c= c\/ c~ caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 c\/ c~ caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3
- (_3984352 = _3984354) |- ((_3984351 = _3984353) ==> (((conv0 _3984353) _3984354) \/ (~ ((conv0 _3984351) _3984352))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cconv0 f3 f1 c~ cconv0 f2 f0
- (_3984357 = _3984359) |- ((_3984357 = _3984359) /\ ((~ (_3984358 = _3984360)) \/ ((_3984357 INSERT _3984358) = (_3984359 INSERT _3984360))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- (((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = x) |- (~ (x = b))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f1 c~ c= f1 f3
- |- ((\q'. (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) = p') ==> ((p' ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = q')) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = (p' ==> q'))))) q')
T * / c==> c= c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 cvector_add c% b3 f3 c% b4 f4 f5 c==> c==> f5 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 c% b3 f4 b0 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 cvector_add c% b3 f3 c% b4 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 cvector_add c% b2 f2 c% b3 f4 c==> f5 b0 f6
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((!a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))) ==> ((\a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))) a)) = ((\a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F))) a))
T c= c==> ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b2 b0 c= b2 b1 c= b2 f0 ! c~ c/\ c\/ c= b2 f1 c= b2 b1 c= b2 f0 ! c~ c/\ c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f1 c= b2 f0 cF * / ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b2 b0 c= b2 b1 c= b2 f0 ! c~ c/\ c\/ c= b2 f1 c= b2 b1 c= b2 f0 ! c~ c/\ c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f1 c= b2 f0 cF f2 * / ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b2 b0 c= b2 b1 c= b2 f0 ! c~ c/\ c\/ c= b2 f1 c= b2 b1 c= b2 f0 ! c~ c/\ c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f1 c= b2 f0 cF f2
- |- ((_3984352 = _3984354) ==> ((~ (_3984351 = _3984353)) \/ (((conv0 _3984353) _3984354) \/ (~ ((conv0 _3984351) _3984352)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cconv0 f3 f1 c~ cconv0 f2 f0
- |- (((b IN (aff (a INSERT (b INSERT EMPTY)))) = p') ==> ((p' ==> ((!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = (p' ==> q'))))
T c==> c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f2 c==> c==> f2 c= ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f3 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f3 cvector_add c% b2 f1 c% b3 f4 f5 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f3 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f3 cvector_add c% b2 f1 c% b3 f4 c==> f2 f5
- ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F), (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) |- (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) /\ ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))
T c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c/\ c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((!b. (!a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)))) ==> ((\b. (!a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)))) b)) = ((\b. (!a. (!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)))) b))
T c= c==> ! ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b3 b1 c= b3 b2 c= b3 f0 ! c~ c/\ c\/ c= b3 b0 c= b3 b2 c= b3 f0 ! c~ c/\ c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b3 b1 c= b3 b2 c= b3 f0 ! c~ c/\ c\/ c= b3 b0 c= b3 b2 c= b3 f0 ! c~ c/\ c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b3 b1 c= b3 b2 c= b3 f0 ! c~ c/\ c\/ c= b3 b0 c= b3 b2 c= b3 f0 ! c~ c/\ c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 c= b3 f0 cF f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x' = b), ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ ! c~ c/\ c\/ c= b0 f2 c= b0 f3 c= b0 f4 ! c~ c/\ c\/ c= b0 f1 c= b0 f3 c= b0 f4 c==> c/\ c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c= f0 f4 c==> c~ cF cF
- ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) |- (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5103. (?y. (((SETSPEC GEN%PVAR%5103) (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((% t3) w)))))))))) y))))))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f2 b1
- (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))), ((aff (a INSERT (b INSERT EMPTY))) = (aff (a INSERT (x INSERT EMPTY)))), (b IN (aff (a INSERT (b INSERT EMPTY)))) |- ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) /\ (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v))))))))))
T c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c==> c= * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part caff * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c==> cIN f3 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x' = b), (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)) |- (F = F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c= f0 f4 c= cF cF
- (?t. (b = ((vector_add ((% t) a)) ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) x)))), (((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t4) |- (?t1'. (?t2'. (?t3'. (((real_lt (real_of_num (NUMERAL _0))) t3') /\ ((((real_add t1') ((real_add t2') t3')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))) = ((vector_add ((% t1') x)) ((vector_add ((% t2') a)) ((% t3') v)))))))))
T c==> c? / c= f0 cvector_add c% b0 f1 c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f2 c==> c= creal_add f3 creal_add f4 creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% f3 f2 cvector_add c% f4 f1 cvector_add c% f5 f0 c% f6 f7 cvector_add c% b0 f2 cvector_add c% b1 f1 c% b2 f7
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))), (s SUBSET s') |- ((!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) /\ (((aff_gt s) t) SUBSET ((aff_gt s') t)))
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 c==> cSUBSET f0 f1 c/\ ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 cSUBSET * * part caff_gt f0 f2 * * part caff_gt f1 f2
- |- ((!x''. (((aff (a INSERT (b INSERT EMPTY))) x'') \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x')))) = ((!x'. ((aff (a INSERT (b INSERT EMPTY))) x')) \/ (~ ((aff (a INSERT (x INSERT EMPTY))) x'))))
T c= ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c\/ ! caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3
- |- (((!a. (!x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)))) ==> ((\a. (!x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)))) a)) = ((\a. (!x. (!v. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)))) a))
T c= c==> ! ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b3 b0 c= b3 b1 c= b3 b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c= caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 cconv0 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b3 b0 c= b3 b1 c= b3 b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c= caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 cconv0 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b3 b0 c= b3 b1 c= b3 b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c= caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 cconv0 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- (x' = x) |- ((~ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) = (~ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))))
T c==> c= f0 f1 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- |- ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = q')) ==> ((((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))))) = (((DISJOINT (a INSERT (b INSERT (x INSERT EMPTY)))) (v INSERT EMPTY)) ==> q')))
T c==> c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 f4 c= c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 cvector_add c% b3 f1 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f0 c% b3 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4
- (~ (a = a)) |- ((~ (a = a)) /\ (a = a))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) |- (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 ! ! c==> cSUBSET f0 b0 cSUBSET * * part caff_gt f0 b1 * * part caff_gt b0 b1
- |- ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))
T c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4
- |- ((((b IN (aff (a INSERT (b INSERT EMPTY)))) = (b IN (aff (a INSERT (b INSERT EMPTY))))) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> ((!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> q')))) = (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> ((!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))))) = q')) ==> (((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> (!x'. ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))))) = ((b IN (aff (a INSERT (b INSERT EMPTY)))) ==> q'))))
T c= c==> c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c==> c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3 f4 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3 c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f4 c==> c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3 f4 c= c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 cvector_add c% b3 f0 c% b4 f3 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f2 cvector_add c% b2 f1 c% b3 f3 c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f4
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (_3984355 = _3984356) |- ((_3984355 = _3984356) /\ ((collinear _3984356) \/ (~ (collinear _3984355))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) = (?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v)))))))))))) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = q')) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> q')))) = (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = q')) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = ((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> q'))))
T c= c==> c= c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c==> c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 f5 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 f5 c==> c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 f5 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f4 c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 f5
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) |- ((\s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t))))) s')
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 * / ! c==> cSUBSET f0 b0 cSUBSET * * part caff_gt f0 b1 * * part caff_gt b0 b1 f1
- (_3984348 = _3984350) |- ((_3984347 = _3984349) ==> (((aff _3984349) _3984350) \/ (~ ((aff _3984347) _3984348))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ caff f3 f1 c~ caff f2 f0
- |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) = ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c= c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (x' = a) |- ((~ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) = (~ (collinear (b INSERT (x INSERT (v INSERT EMPTY))))))
T c==> c= f0 f1 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((\p'. (!q'. (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) = p') ==> ((p' ==> ((?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v))))))))) = q')) ==> (((?t1. (?t2. (?t3. (?t4. (((real_lt (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((vector_add ((% t3) b)) ((% t4) v))))))))))) ==> (?t1. (?t2. (?t3. (((real_lt (real_of_num (NUMERAL _0))) t3) /\ ((((real_add t1) ((real_add t2) t3)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((vector_add ((% t2) a)) ((% t3) v)))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 cvector_add c% b4 f3 c% b5 f4 b0 c==> c==> b0 c= c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f4 b1 c= c==> c? / c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 cvector_add c% b4 f3 c% b5 f4 c? / c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f4 c==> b0 b1 f5
- ((((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t1)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t3)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t4)) (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add t1) ((real_add t2) ((real_add t3) ((real_add t4) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_add f3 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) |- (((~ (_3984206 = a)) \/ (~ (_3984206 = v))) /\ ((~ (_3984206 = x)) \/ (~ (_3984206 = v))))
T c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c/\ c\/ c~ c= f4 f0 c~ c= f4 f2 c\/ c~ c= f4 f1 c~ c= f4 f2
- (~ ((x' = x) \/ ((x' = a) \/ (x' = b)))), (x' = a) |- (~ (a = x))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c~ c= f2 f1
- (x IN (conv0 (a INSERT (b INSERT EMPTY)))) |- ((x IN (conv0 (a INSERT (b INSERT EMPTY)))) = T)
T c==> cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * part cconv0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) |- (T = (~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cT c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) ==> ((\x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) x)) = ((\x. ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ (!x'. (~ (((x' = b) \/ (x' = x)) /\ (x' = v))))) ==> (!x'. (~ (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ (x' = v)))))) ==> F)) x))
T c= c==> ! c==> c~ c==> c/\ ! c~ c/\ c\/ c= b1 f0 c= b1 b0 c= b1 f1 ! c~ c/\ c\/ c= b1 f2 c= b1 b0 c= b1 f1 ! c~ c/\ c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f2 c= b1 f1 cF * / c==> c~ c==> c/\ ! c~ c/\ c\/ c= b1 f0 c= b1 b0 c= b1 f1 ! c~ c/\ c\/ c= b1 f2 c= b1 b0 c= b1 f1 ! c~ c/\ c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f2 c= b1 f1 cF f3 * / c==> c~ c==> c/\ ! c~ c/\ c\/ c= b1 f0 c= b1 b0 c= b1 f1 ! c~ c/\ c\/ c= b1 f2 c= b1 b0 c= b1 f1 ! c~ c/\ c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f2 c= b1 f1 cF f3
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- (x' = a) |- (((~ (_3984206 = a)) \/ (~ (_3984206 = v))) = ((~ (_3984206 = a)) \/ (~ (_3984206 = v))))
T c==> c= f0 f1 c= c\/ c~ c= f2 f1 c~ c= f2 f3 c\/ c~ c= f2 f1 c~ c= f2 f3
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!s'. (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t)))))) |- (!t. ((s SUBSET s') ==> (((aff_gt s) t) SUBSET ((aff_gt s') t))))
T c==> ! ! ! c==> cSUBSET b0 b1 cSUBSET * * part caff_gt b0 b2 * * part caff_gt b1 b2 ! c==> cSUBSET f0 f1 cSUBSET * * part caff_gt f0 b0 * * part caff_gt f1 b0
- |- ((((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)) ==> (((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (((!x'. (~ (((x' = a) \/ (x' = x)) /\ (x' = v)))) /\ ((~ (collinear (a INSERT (x INSERT (v INSERT EMPTY))))) /\ (((collinear (a INSERT (x INSERT (v INSERT EMPTY)))) = (collinear (b INSERT (x INSERT (v INSERT EMPTY))))) /\ ((!x'. (((aff (a INSERT (b INSERT EMPTY))) x') = ((aff (a INSERT (x INSERT EMPTY))) x'))) /\ ((conv0 (a INSERT (b INSERT EMPTY))) x))))) ==> (!x'. (((x' = x) \/ (x' = a)) ==> ((x' = x) \/ ((x' = a) \/ (x' = b))))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF c==> c~ c==> c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c= caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cconv0 * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 ! c==> c\/ c= b0 f1 c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f0 c= b0 f3 cF
