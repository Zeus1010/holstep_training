N Aq1.all_uniq_betwn_node
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ (((find_face L) x) = f))))))) ==> ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) y) z))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c= cfind_face f0 f3 f6 call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 cbetwn f6 f4 f5
D TRUTH
A |- T
T cT
D Seq.mapP
A |- (!f. (!s. (!y. (((MEM y) ((map f) s)) = (?x. (((MEM x) s) /\ (y = (f x))))))))
T c= cMEM f0 cmap f1 f2 c? / c/\ cMEM b0 f2 c= f0 * f1 b0
D List_hypermap.dart_in_face
A |- (!d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))))
T c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_list.betwn_mem
A |- (!f. (!u. (!v. (!w. (((MEM w) (((betwn f) u) v)) ==> ((MEM w) f))))))
T c==> cMEM f0 cbetwn f1 f2 f3 cMEM f0 f1
D Aq1.all_uniq_node1
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0
D Aq1.all_uniq_mem
A |- (((!a. (((MEM a) r) ==> ((MEM a) s))) /\ ((all uniq) s)) ==> ((all uniq) r))
T c==> c/\ ! c==> cMEM b0 f0 cMEM b0 f1 call part cuniq f1 call part cuniq f0
+ (good_list L), (((find_face L) x) = f), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))) |- (((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))) /\ (((MEM d) (((betwn f) y) z)) ==> ((a = ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))) ==> (((MEM d) f) ==> ((MEM d) (list_of_darts L))))))
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c/\ call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cMEM f3 cbetwn f2 f4 f5 c==> c= f6 cmap / cPOWER * part cn_list f0 b0 f3 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c==> cMEM f3 f2 cMEM f3 clist_of_darts f0
+ |- ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d)
T * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0
+ |- ((\f. (!u. (!v. (!w. (((MEM w) (((betwn f) u) v)) ==> ((MEM w) f)))))) f)
T * / ! ! ! c==> cMEM b3 cbetwn b0 b1 b2 cMEM b3 b0 f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) y) z)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 cbetwn f6 f3 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x') (((betwn f) y) z)), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x) |- ((a = ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))) ==> (((MEM d) f) ==> ((MEM d) (list_of_darts L))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f7 c==> c= cfind_face f0 f4 f8 c==> cMEM f2 cbetwn f8 f5 f7 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cmarked_list f0 f6 f1 f4 c==> c= f9 cmap / cPOWER * part cn_list f0 b0 f3 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c==> cMEM f3 f8 cMEM f3 clist_of_darts f0
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x) |- ((!a. ((?x. (((MEM x) (((betwn f) y) z)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) ==> (?x. (((MEM x) (list_of_darts L)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))))) /\ ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cmarked_list f0 f4 f1 f2 c/\ ! c==> c? / c/\ cMEM b1 cbetwn f6 f3 f5 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 c? / c/\ cMEM b1 clist_of_darts f0 c= b0 cmap / cPOWER * part cn_list f0 b2 b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST b1 cflatten f0 call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM x') (((betwn f) y) z)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L))))))), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x) |- ((((MEM x') (((betwn f) y) z)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L))))))) /\ (?x. (((MEM x) (list_of_darts L)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> c/\ cMEM f7 cbetwn f6 f3 f5 c= f8 cmap / cPOWER * part cn_list f0 b0 f7 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f7 cflatten f0 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cmarked_list f0 f4 f1 f2 c/\ c/\ cMEM f7 cbetwn f6 f3 f5 c= f8 cmap / cPOWER * part cn_list f0 b0 f7 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f7 cflatten f0 c? / c/\ cMEM b0 clist_of_darts f0 c= f8 cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0
+ (~ ((final_list L) r)), (good_list L) |- ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) ==> ((((((l'z L) N) r) x) = z) ==> ((((find_face L) x) = f) ==> (((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))) ==> (((MEM d) (((betwn f) y) z)) ==> ((a = ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))) ==> (((MEM d) f) ==> ((MEM d) (list_of_darts L))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c/\ c~ cfinal_list f0 f1 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cMEM f7 cbetwn f6 f3 f5 c==> c= f8 cmap / cPOWER * part cn_list f0 b0 f7 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f7 cflatten f0 c==> cMEM f7 f6 cMEM f7 clist_of_darts f0
+ |- ((((MEM x') (list_of_darts L)) /\ (((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L))))) = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L))))))) = ((\x. (((MEM x) (list_of_darts L)) /\ (((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L))))) = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) x'))
T c= c/\ cMEM f0 clist_of_darts f1 c= cmap / cPOWER * part cn_list f1 b0 f0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f0 cflatten f1 cmap / cPOWER * part cn_list f1 b0 f0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f0 cflatten f1 * / c/\ cMEM b0 clist_of_darts f1 c= cmap / cPOWER * part cn_list f1 b1 f0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f0 cflatten f1 cmap / cPOWER * part cn_list f1 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f1 f0
+ |- ((\r. ((?s. ((!a. (((MEM a) r) ==> ((MEM a) s))) /\ ((all uniq) s))) ==> ((all uniq) r))) r)
T * / c==> c? / c/\ ! c==> cMEM b2 b0 cMEM b2 b1 call part cuniq b1 call part cuniq b0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (a = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM x') (((betwn f) y) z)), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x) |- ((?d. (x' = d)) ==> ((MEM x') (list_of_darts L)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= f6 cmap / cPOWER * part cn_list f0 b0 f7 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f7 cflatten f0 c==> c= cfind_face f0 f2 f8 c==> cMEM f7 cbetwn f8 f3 f5 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cmarked_list f0 f4 f1 f2 c==> c? / c= f7 b0 cMEM f7 clist_of_darts f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (a = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM x') (((betwn f) y) z)), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x) |- (((!x. (((\d. (x' = d)) x) ==> ((MEM x') (list_of_darts L)))) ==> ((?d. (x' = d)) ==> ((MEM x') (list_of_darts L)))) = ((?d. (x' = d)) ==> ((MEM x') (list_of_darts L))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= f6 cmap / cPOWER * part cn_list f0 b0 f7 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f7 cflatten f0 c==> c= cfind_face f0 f2 f8 c==> cMEM f7 cbetwn f8 f3 f5 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cmarked_list f0 f4 f1 f2 c= c==> ! c==> * / c= f7 b1 b0 cMEM f7 clist_of_darts f0 c==> c? / c= f7 b0 cMEM f7 clist_of_darts f0 c==> c? / c= f7 b0 cMEM f7 clist_of_darts f0
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))))))) N)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 call part cuniq cmap / cmap / cPOWER * part cn_list f0 b3 b3 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b3 cFST b3 cflatten f0 clist_of_darts f0 f1
+ |- (((!x. (((\s. ((!a. (((MEM a) r) ==> ((MEM a) s))) /\ ((all uniq) s))) x) ==> ((!s. (!r. (((!a. (((MEM a) r) ==> ((MEM a) s))) /\ ((all uniq) s)) ==> ((all uniq) r)))) ==> ((all uniq) r)))) ==> ((?s. ((!a. (((MEM a) r) ==> ((MEM a) s))) /\ ((all uniq) s))) ==> ((!s. (!r. (((!a. (((MEM a) r) ==> ((MEM a) s))) /\ ((all uniq) s)) ==> ((all uniq) r)))) ==> ((all uniq) r)))) = ((?s. ((!a. (((MEM a) r) ==> ((MEM a) s))) /\ ((all uniq) s))) ==> ((!s. (!r. (((!a. (((MEM a) r) ==> ((MEM a) s))) /\ ((all uniq) s)) ==> ((all uniq) r)))) ==> ((all uniq) r))))
T c= c==> ! c==> * / c/\ ! c==> cMEM b2 f0 cMEM b2 b1 call part cuniq b1 b0 c==> ! ! c==> c/\ ! c==> cMEM b3 b2 cMEM b3 b1 call part cuniq b1 call part cuniq b2 call part cuniq f0 c==> c? / c/\ ! c==> cMEM b1 f0 cMEM b1 b0 call part cuniq b0 c==> ! ! c==> c/\ ! c==> cMEM b2 b1 cMEM b2 b0 call part cuniq b0 call part cuniq b1 call part cuniq f0 c==> c? / c/\ ! c==> cMEM b1 f0 cMEM b1 b0 call part cuniq b0 c==> ! ! c==> c/\ ! c==> cMEM b2 b1 cMEM b2 b0 call part cuniq b0 call part cuniq b1 call part cuniq f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (a = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM x') (((betwn f) y) z)), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x) |- ((MEM x') (list_of_darts L))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= f6 cmap / cPOWER * part cn_list f0 b0 f7 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f7 cflatten f0 c==> c= cfind_face f0 f2 f8 c==> cMEM f7 cbetwn f8 f3 f5 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cmarked_list f0 f4 f1 f2 cMEM f7 clist_of_darts f0
+ (!s. (!r. (((!a. (((MEM a) r) ==> ((MEM a) s))) /\ ((all uniq) s)) ==> ((all uniq) r)))) |- (((?s. ((!a. (((MEM a) r) ==> ((MEM a) s))) /\ ((all uniq) s))) ==> ((all uniq) r)) = T)
T c==> ! ! c==> c/\ ! c==> cMEM b2 b1 cMEM b2 b0 call part cuniq b0 call part cuniq b1 c= c==> c? / c/\ ! c==> cMEM b1 f0 cMEM b1 b0 call part cuniq b0 call part cuniq f0 cT
+ (good_list L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ (((find_face L) x) = f)))))) |- ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (((betwn f) y) z)))
T c==> cgood_list f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c= cfind_face f0 f3 f6 call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 cbetwn f6 f4 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x) |- ((((MEM x') (((betwn f) y) z)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L))))))) ==> (?x. (((MEM x) (list_of_darts L)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cmarked_list f0 f4 f1 f2 c==> c/\ cMEM f7 cbetwn f6 f3 f5 c= f8 cmap / cPOWER * part cn_list f0 b0 f7 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f7 cflatten f0 c? / c/\ cMEM b0 clist_of_darts f0 c= f8 cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (a = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM x') (((betwn f) y) z)), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x) |- ((x' = d) /\ ((MEM x') (list_of_darts L)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f7 c==> c= f8 cmap / cPOWER * part cn_list f0 b0 f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c==> c= cfind_face f0 f4 f9 c==> cMEM f2 cbetwn f9 f5 f7 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cmarked_list f0 f6 f1 f4 c/\ c= f2 f3 cMEM f2 clist_of_darts f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x), ((\x. (((MEM x) (((betwn f) y) z)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) x') |- (((\x. (((MEM x) (((betwn f) y) z)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) x') /\ (?x. (((MEM x) (list_of_darts L)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cmarked_list f0 f4 f1 f2 c==> * / c/\ cMEM b0 cbetwn f6 f3 f5 c= f7 cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 f8 c/\ * / c/\ cMEM b0 cbetwn f6 f3 f5 c= f7 cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 f8 c? / c/\ cMEM b0 clist_of_darts f0 c= f7 cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (a = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM x') (((betwn f) y) z)), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x), ((\d. (x' = d)) d) |- (((\d. (x' = d)) d) /\ ((MEM x') (list_of_darts L)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= f6 cmap / cPOWER * part cn_list f0 b0 f7 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f7 cflatten f0 c==> c= cfind_face f0 f2 f8 c==> cMEM f7 cbetwn f8 f3 f5 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cmarked_list f0 f4 f1 f2 c==> * / c= f7 b0 f9 c/\ * / c= f7 b0 f9 cMEM f7 clist_of_darts f0
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) d2))) ==> (((find_face L) d) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) d2))) ==> (((find_face L) d) = ((find_face L) d2))))) x)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) d2))) ==> (((find_face L) d) = ((find_face L) d2))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
+ |- (!s. (((\s. ((!a. (((MEM a) r) ==> ((MEM a) s))) /\ ((all uniq) s))) s) ==> ((!s. (!r. (((!a. (((MEM a) r) ==> ((MEM a) s))) /\ ((all uniq) s)) ==> ((all uniq) r)))) ==> ((all uniq) r))))
T c==> * / c/\ ! c==> cMEM b1 f0 cMEM b1 b0 call part cuniq b0 f1 c==> ! ! c==> c/\ ! c==> cMEM b2 b1 cMEM b2 b0 call part cuniq b0 call part cuniq b1 call part cuniq f0
- (?x. (((MEM x) (((betwn f) y) z)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x) |- (?x. (((MEM x) (list_of_darts L)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))))
T c==> c? / c/\ cMEM b0 cbetwn f0 f1 f2 c= f3 cmap / cPOWER * part cn_list f4 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f4 c==> c~ cfinal_list f4 f5 c==> cgood_list f4 c==> cgood_list_nodes f4 c==> c= cl'y f4 f5 f6 f1 c==> c= cl'z f4 f7 f5 f6 f2 c==> c= cfind_face f4 f6 f0 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f4 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f4 clist_of_darts f4 c==> cmarked_list f4 f7 f5 f6 c? / c/\ cMEM b0 clist_of_darts f4 c= f3 cmap / cPOWER * part cn_list f4 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f4
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!d. t) = t)
T c= ! f0 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
- |- (!d. (((\d. (x' = d)) d) ==> (?d. (x' = d))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
- |- ((?x. t) = t)
T c= c? / f0 f0
- ((all (\l. (~ (l = NIL)))) L) |- (((all (\l. (~ (l = NIL)))) L) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
- ((MEM d) (((betwn f) y) z)) |- (((MEM d) (((betwn f) y) z)) = T)
T c==> cMEM f0 cbetwn f1 f2 f3 c= cMEM f0 cbetwn f1 f2 f3 cT
- |- ((x' = d) = ((\d. (x' = d)) d))
T c= c= f0 f1 * / c= f0 b0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (a = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM d) f), ((MEM x') (((betwn f) y) z)), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x) |- (((MEM d) f) /\ ((MEM d) (list_of_darts L)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f7 c==> c= f8 cmap / cPOWER * part cn_list f0 b0 f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c==> c= cfind_face f0 f4 f9 c==> cMEM f3 f9 c==> cMEM f2 cbetwn f9 f5 f7 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f3 f9 cMEM f3 clist_of_darts f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (a = ((map (\i. (((POWER (n_list L)) i) x'))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x')))) (flatten L)))))), (((find_face L) x) = f), ((MEM d) f), ((MEM x') (((betwn f) y) z)), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x) |- ((MEM d) (list_of_darts L))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f7 c==> c= f8 cmap / cPOWER * part cn_list f0 b0 f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c==> c= cfind_face f0 f4 f9 c==> cMEM f3 f9 c==> cMEM f2 cbetwn f9 f5 f7 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f0 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f0 clist_of_darts f0 c==> cmarked_list f0 f6 f1 f4 cMEM f3 clist_of_darts f0
- |- ((?d. (x' = d)) ==> (?d. (x' = d)))
T c==> c? / c= f0 b0 c? / c= f0 b0
- ((\d. (x' = d)) d) |- (((x' = d) ==> (?d. (x' = d))) = (?d. (x' = d)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- (x' = d) |- ((x' = d) /\ (?d. (x' = d)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- ((\d. (x' = d)) d) |- (((\d. (x' = d)) d) /\ (?d. (x' = d)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- |- (((!x. (((\d. (x' = d)) x) ==> (?d. (x' = d)))) ==> ((?d. (x' = d)) ==> (?d. (x' = d)))) = ((?d. (x' = d)) ==> (?d. (x' = d))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((x' = d) ==> (?d. (x' = d)))
T c==> c= f0 f1 c? / c= f0 b0
- (x' = d) |- ((\d. (x' = d)) d)
T c==> c= f0 f1 * / c= f0 b0 f1
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((\d. (x' = d)) d) ==> (?d. (x' = d))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- (?x. (((MEM x) (((betwn f) y) z)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((all uniq) ((map (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L))))))) (list_of_darts L))), ((((marked_list L) N) r) x) |- ((?x. (((MEM x) (((betwn f) y) z)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))) /\ (?x. (((MEM x) (list_of_darts L)) /\ (a = ((map (\i. (((POWER (n_list L)) i) x))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST x)))) (flatten L)))))))))
T c==> c? / c/\ cMEM b0 cbetwn f0 f1 f2 c= f3 cmap / cPOWER * part cn_list f4 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f4 c==> c~ cfinal_list f4 f5 c==> cgood_list f4 c==> cgood_list_nodes f4 c==> c= cl'y f4 f5 f6 f1 c==> c= cl'z f4 f7 f5 f6 f2 c==> c= cfind_face f4 f6 f0 c==> call part cuniq cmap / cmap / cPOWER * part cn_list f4 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f4 clist_of_darts f4 c==> cmarked_list f4 f7 f5 f6 c/\ c? / c/\ cMEM b0 cbetwn f0 f1 f2 c= f3 cmap / cPOWER * part cn_list f4 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f4 c? / c/\ cMEM b0 clist_of_darts f4 c= f3 cmap / cPOWER * part cn_list f4 b1 b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST b0 cflatten f4
