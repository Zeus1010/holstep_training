N Hypermap.lemma_planar_index_on_nondegenerate
C |- (!H. (!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> (((((is_edge_split H) x) /\ (~ ((is_splitting_component H) x))) ==> (((real_add (planar_index H)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (planar_index ((edge_walkup H) x)))) /\ ((~ (((is_edge_split H) x) /\ (~ ((is_splitting_component H) x)))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))))))
T c==> c/\ cIN f0 * part cdart f1 cdart_nondegenerate f1 f0 c/\ c==> c/\ cis_edge_split f1 f0 c~ cis_splitting_component f1 f0 c= creal_add cplanar_index f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cplanar_index cedge_walkup f1 f0 c==> c~ c/\ cis_edge_split f1 f0 c~ cis_splitting_component f1 f0 c= cplanar_index f1 cplanar_index cedge_walkup f1 f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D Hypermap.hypermap_lemma
A |- (!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
D Hypermap.edge
A |- (!H. (!x. (((edge H) x) = ((orbit_map (edge_map H)) x))))
T c= * * part cedge f0 f1 * * part corbit_map * part cedge_map f0 f1
D Hypermap.lemma_inverse_maps_at_nondegenerate_dart
A |- (!H. (!x. (((dart_nondegenerate H) x) ==> ((~ (((inverse (edge_map H)) x) = x)) /\ ((~ (((inverse (node_map H)) x) = x)) /\ (~ (((inverse (face_map H)) x) = x)))))))
T c==> cdart_nondegenerate f0 f1 c/\ c~ c= cinverse * part cedge_map f0 f1 f1 c/\ c~ c= cinverse * part cnode_map f0 f1 f1 c~ c= cinverse * part cface_map f0 f1 f1
D Hypermap.is_edge_merge
A |- (!H. (!x. (((is_edge_merge H) x) = (((dart_nondegenerate H) x) /\ (~ (((node_map H) x) IN ((edge H) x)))))))
T c= cis_edge_merge f0 f1 c/\ cdart_nondegenerate f0 f1 c~ cIN cnode_map f0 f1 * * part cedge f0 f1
D Hypermap.is_edge_split
A |- (!H. (!x. (((is_edge_split H) x) = (((dart_nondegenerate H) x) /\ (((node_map H) x) IN ((edge H) x))))))
T c= cis_edge_split f0 f1 c/\ cdart_nondegenerate f0 f1 cIN cnode_map f0 f1 * * part cedge f0 f1
D Hypermap.lemma_inverse_in_orbit
A |- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (((inverse p) x) IN ((orbit_map p) x))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 cIN cinverse f1 f2 * * part corbit_map f1 f2
D Hypermap.planar_index
A |- (!H. ((planar_index H) = ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))))
T c= cplanar_index f0 creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0
D Hypermap.lemma_in_edge
A |- (!H. (!x. (!y. ((y IN ((edge H) x)) = (?j. (y = (((POWER (edge_map H)) j) x)))))))
T c= cIN f0 * * part cedge f1 f2 c? / c= f0 cPOWER * part cedge_map f1 b0 f2
D Hypermap.lemma_edge_merge
A |- (!H. (!x. (((x IN (dart H)) /\ ((is_edge_merge H) x)) ==> (((x INSERT EMPTY) UNION ((edge ((edge_walkup H) x)) ((node_map H) x))) = (((edge H) x) UNION ((edge H) ((node_map H) x)))))))
T c==> c/\ cIN f0 * part cdart f1 cis_edge_merge f1 f0 c= * * part cUNION * * part cINSERT f0 part cEMPTY * * part cedge cedge_walkup f1 f0 cnode_map f1 f0 * * part cUNION * * part cedge f1 f0 * * part cedge f1 cnode_map f1 f0
D Hypermap.lemma_powers_in_component
A |- (!H. (!x. (!j. (((((POWER (edge_map H)) j) x) IN ((comb_component H) x)) /\ (((((POWER (node_map H)) j) x) IN ((comb_component H) x)) /\ ((((POWER (face_map H)) j) x) IN ((comb_component H) x)))))))
T c/\ cIN cPOWER * part cedge_map f0 f1 f2 * * part ccomb_component f0 f2 c/\ cIN cPOWER * part cnode_map f0 f1 f2 * * part ccomb_component f0 f2 cIN cPOWER * part cface_map f0 f1 f2 * * part ccomb_component f0 f2
D Hypermap.lemma_component_identity
A |- (!H. (!x. (!y. ((y IN ((comb_component H) x)) ==> (((comb_component H) x) = ((comb_component H) y))))))
T c==> cIN f0 * * part ccomb_component f1 f2 c= * * part ccomb_component f1 f2 * * part ccomb_component f1 f0
D Hypermap.lemma_card_walkup_dart
A |- (!H. (!x. ((x IN (dart H)) ==> ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))))
T c==> cIN f0 * part cdart f1 c= cCARD * part cdart f1 c+ cCARD * part cdart cedge_walkup f1 f0 cNUMERAL cBIT1 c_0
D Hypermap.lemma_splitting_case_count_edges
A |- (!H. (!x. (((x IN (dart H)) /\ ((is_edge_split H) x)) ==> (((number_of_edges H) + (NUMERAL (BIT1 _0))) = (number_of_edges ((edge_walkup H) x))))))
T c==> c/\ cIN f0 * part cdart f1 cis_edge_split f1 f0 c= c+ cnumber_of_edges f1 cNUMERAL cBIT1 c_0 cnumber_of_edges cedge_walkup f1 f0
D Hypermap.lemma_merge_case_count_edges
A |- (!H. (!x. (((x IN (dart H)) /\ ((is_edge_merge H) x)) ==> ((number_of_edges H) = ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0)))))))
T c==> c/\ cIN f0 * part cdart f1 cis_edge_merge f1 f0 c= cnumber_of_edges f1 c+ cnumber_of_edges cedge_walkup f1 f0 cNUMERAL cBIT1 c_0
D Hypermap.lemma_walkup_count_nodes
A |- (!H. (!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_nodes H) = (number_of_nodes ((edge_walkup H) x))))))
T c==> c/\ cIN f0 * part cdart f1 cdart_nondegenerate f1 f0 c= cnumber_of_nodes f1 cnumber_of_nodes cedge_walkup f1 f0
D Hypermap.lemma_walkup_count_faces
A |- (!H. (!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_faces H) = (number_of_faces ((edge_walkup H) x))))))
T c==> c/\ cIN f0 * part cdart f1 cdart_nondegenerate f1 f0 c= cnumber_of_faces f1 cnumber_of_faces cedge_walkup f1 f0
D Hypermap.lemma_walkup_count_splitting_components
A |- (!H. (!x. (((x IN (dart H)) /\ (((dart_nondegenerate H) x) /\ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))) ==> (((number_of_components H) + (NUMERAL (BIT1 _0))) = (number_of_components ((edge_walkup H) x))))))
T c==> c/\ cIN f0 * part cdart f1 c/\ cdart_nondegenerate f1 f0 c~ c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= c+ cnumber_of_components f1 cNUMERAL cBIT1 c_0 cnumber_of_components cedge_walkup f1 f0
D Hypermap.lemma_walkup_count_not_splitting_components
A |- (!H. (!x. (((x IN (dart H)) /\ (((dart_nondegenerate H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((number_of_components H) = (number_of_components ((edge_walkup H) x))))))
T c==> c/\ cIN f0 * part cdart f1 c/\ cdart_nondegenerate f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= cnumber_of_components f1 cnumber_of_components cedge_walkup f1 f0
D Hypermap.is_splitting_component
A |- (!H. (!x. (((is_splitting_component H) x) = (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))))
T c= cis_splitting_component f0 f1 c~ c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
+ |- (((!x. (((is_splitting_component H) x) = (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))) ==> ((\x. (((is_splitting_component H) x) = (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))) x)) = ((\x. (((is_splitting_component H) x) = (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))) x))
T c= c==> ! c= cis_splitting_component f0 b0 c~ c= * * part ccomb_component cedge_walkup f0 b0 cnode_map f0 b0 * * part ccomb_component cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 * / c= cis_splitting_component f0 b0 c~ c= * * part ccomb_component cedge_walkup f0 b0 cnode_map f0 b0 * * part ccomb_component cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 f1 * / c= cis_splitting_component f0 b0 c~ c= * * part ccomb_component cedge_walkup f0 b0 cnode_map f0 b0 * * part ccomb_component cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 f1
- (((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) |- ((((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) /\ (((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)))
T c==> c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c/\ c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF
+ |- ((\x. (((FINITE (dart H)) /\ ((permutes (edge_map H)) (dart H))) ==> (((inverse (edge_map H)) x) IN ((orbit_map (edge_map H)) x)))) x)
T * / c==> c/\ cFINITE * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0 cIN cinverse * part cedge_map f0 b0 * * part corbit_map * part cedge_map f0 b0 f1
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- ((~ ((is_edge_split H) x)) ==> (((~ ((is_edge_split H) x)) \/ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c==> c~ cis_edge_split f1 f0 c==> c\/ c~ cis_edge_split f1 f0 c~ c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= cplanar_index f1 cplanar_index cedge_walkup f1 f0
+ (((inverse (edge_map H)) x) = (((POWER (edge_map ((edge_walkup H) x))) j) ((node_map H) x))) |- (((((POWER (edge_map ((edge_walkup H) x))) j) ((node_map H) x)) IN ((comb_component ((edge_walkup H) x)) ((node_map H) x))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))
T c==> c= cinverse * part cedge_map f0 f1 cPOWER * part cedge_map cedge_walkup f0 f1 f2 cnode_map f0 f1 c==> cIN cPOWER * part cedge_map cedge_walkup f0 f1 f2 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
+ |- ((\x. (((orbit_map (edge_map H)) x) = ((edge H) x))) x)
T * / c= * * part corbit_map * part cedge_map f0 b0 * * part cedge f0 b0 f1
+ |- ((\t. (t \/ (~ t))) (~ ((is_edge_split H) x)))
T * / c\/ b0 c~ b0 c~ cis_edge_split f0 f1
+ |- (((~ (((dart_nondegenerate H) x) /\ (((node_map H) x) IN ((edge H) x)))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))) = ((~ ((is_edge_split H) x)) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))))
T c= c==> c~ c/\ cdart_nondegenerate f0 f1 cIN cnode_map f0 f1 * * part cedge f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c==> c~ cis_edge_split f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- ((~ (((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) ((real_add (real_of_num (CARD (dart ((edge_walkup H) x))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add ((real_add (real_of_num (number_of_edges H))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add (real_of_num (number_of_components H))) (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F)
T c==> c~ c= creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_add creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_add creal_of_num cnumber_of_edges f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((\x. (((is_splitting_component H) x) = (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))) x)
T * / c= cis_splitting_component f0 b0 c~ c= * * part ccomb_component cedge_walkup f0 b0 cnode_map f0 b0 * * part ccomb_component cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 f1
- ((dart_nondegenerate H) x) |- (((~ (((inverse (face_map H)) x) = x)) ==> ((((inverse (face_map H)) x) = x) = F)) = ((((inverse (face_map H)) x) = x) = F))
T c==> cdart_nondegenerate f0 f1 c= c==> c~ c= cinverse * part cface_map f0 f1 f1 c= c= cinverse * part cface_map f0 f1 f1 cF c= c= cinverse * part cface_map f0 f1 f1 cF
+ |- ((\y. ((y IN ((comb_component H) x)) ==> (((comb_component H) x) = ((comb_component H) y)))) y)
T * / c==> cIN b0 * * part ccomb_component f0 f1 c= * * part ccomb_component f0 f1 * * part ccomb_component f0 b0 f2
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((\x. (!y. ((y IN ((comb_component H) x)) ==> (((comb_component H) x) = ((comb_component H) y))))) x)
T * / ! c==> cIN b1 * * part ccomb_component f0 b0 c= * * part ccomb_component f0 b0 * * part ccomb_component f0 b1 f1
+ |- (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> (((((is_edge_split H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))) ==> (((real_add (planar_index H)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (planar_index ((edge_walkup H) x)))) /\ ((~ (((is_edge_split H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))))
T c==> c/\ cIN f0 * part cdart f1 cdart_nondegenerate f1 f0 c/\ c==> c/\ cis_edge_split f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= creal_add cplanar_index f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cplanar_index cedge_walkup f1 f0 c==> c~ c/\ cis_edge_split f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= cplanar_index f1 cplanar_index cedge_walkup f1 f0
+ |- (((!m. (!n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n))))) ==> ((\m. (!n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n))))) m)) = ((\m. (!n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n))))) m))
T c= c==> ! ! c= creal_of_num c+ b0 b1 creal_add creal_of_num b0 creal_of_num b1 * / ! c= creal_of_num c+ b0 b1 creal_add creal_of_num b0 creal_of_num b1 f0 * / ! c= creal_of_num c+ b0 b1 creal_add creal_of_num b0 creal_of_num b1 f0
- |- ((\H. ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) H)
T * / c==> c~ c==> cedge b0 f0 cinverse * part cedge_map b0 f0 c\/ cedge b0 f0 cinverse * part cedge_map b0 f0 cedge b0 cnode_map b0 f0 cinverse * part cedge_map b0 f0 cF f1
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ (x IN (dart H)) |- ((((real_add (real_of_num ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = (((real_add (real_of_num ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))))
T c==> cIN f0 * part cdart f1 c= c= creal_add creal_of_num c+ cnumber_of_edges cedge_walkup f1 f0 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0 c= creal_add creal_of_num c+ cnumber_of_edges cedge_walkup f1 f0 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num c+ cCARD * part cdart cedge_walkup f1 f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0
+ (x IN (dart H)), ((is_edge_split H) x) |- ((((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = (((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))))
T c==> cIN f0 * part cdart f1 c==> cis_edge_split f1 f0 c= c= creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0 c= creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num c+ cnumber_of_edges f1 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- ((number_of_nodes H) = (number_of_nodes ((edge_walkup H) x)))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c= cnumber_of_nodes f1 cnumber_of_nodes cedge_walkup f1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- (((is_edge_merge H) x) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c==> cis_edge_merge f1 f0 c= cplanar_index f1 cplanar_index cedge_walkup f1 f0
+ |- ((~ (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) ((real_add (real_of_num (CARD (dart ((edge_walkup H) x))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add ((real_add (real_of_num (number_of_edges H))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))))) ==> F)
T c==> c~ c= creal_add creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_add creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_add creal_of_num cnumber_of_edges f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 cF
+ |- (((!n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n)))) ==> ((\n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n)))) n)) = ((\n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n)))) n))
T c= c==> ! c= creal_of_num c+ f0 b0 creal_add creal_of_num f0 creal_of_num b0 * / c= creal_of_num c+ f0 b0 creal_add creal_of_num f0 creal_of_num b0 f1 * / c= creal_of_num c+ f0 b0 creal_add creal_of_num f0 creal_of_num b0 f1
+ (~ ((is_edge_split H) x)) |- (((is_edge_split H) x) = F)
T c==> c~ cis_edge_split f0 f1 c= cis_edge_split f0 f1 cF
+ ((dart_nondegenerate H) x) |- (((~ (((inverse (edge_map H)) x) = x)) ==> ((((inverse (edge_map H)) x) = x) = F)) = ((((inverse (edge_map H)) x) = x) = F))
T c==> cdart_nondegenerate f0 f1 c= c==> c~ c= cinverse * part cedge_map f0 f1 f1 c= c= cinverse * part cedge_map f0 f1 f1 cF c= c= cinverse * part cedge_map f0 f1 f1 cF
+ |- (((!x. (((is_edge_merge H) x) = (((dart_nondegenerate H) x) /\ (~ (((node_map H) x) IN ((edge H) x)))))) ==> ((\x. (((is_edge_merge H) x) = (((dart_nondegenerate H) x) /\ (~ (((node_map H) x) IN ((edge H) x)))))) x)) = ((\x. (((is_edge_merge H) x) = (((dart_nondegenerate H) x) /\ (~ (((node_map H) x) IN ((edge H) x)))))) x))
T c= c==> ! c= cis_edge_merge f0 b0 c/\ cdart_nondegenerate f0 b0 c~ cIN cnode_map f0 b0 * * part cedge f0 b0 * / c= cis_edge_merge f0 b0 c/\ cdart_nondegenerate f0 b0 c~ cIN cnode_map f0 b0 * * part cedge f0 b0 f1 * / c= cis_edge_merge f0 b0 c/\ cdart_nondegenerate f0 b0 c~ cIN cnode_map f0 b0 * * part cedge f0 b0 f1
- |- (((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) = ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x)))))
T c= c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1
- (x = ((inverse (edge_map H)) x)) |- (((inverse (edge_map H)) x) = x)
T c==> c= f0 cinverse * part cedge_map f1 f0 c= cinverse * part cedge_map f1 f0 f0
+ |- (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))))
T c= creal_add creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num c+ cCARD * part cdart cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num c+ cnumber_of_edges f0 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0
+ |- (((!x'. (!j. (((((POWER (edge_map ((edge_walkup H) x))) j) x') IN ((comb_component ((edge_walkup H) x)) x')) /\ (((((POWER (node_map ((edge_walkup H) x))) j) x') IN ((comb_component ((edge_walkup H) x)) x')) /\ ((((POWER (face_map ((edge_walkup H) x))) j) x') IN ((comb_component ((edge_walkup H) x)) x')))))) ==> ((\x'. (!j. (((((POWER (edge_map ((edge_walkup H) x))) j) x') IN ((comb_component ((edge_walkup H) x)) x')) /\ (((((POWER (node_map ((edge_walkup H) x))) j) x') IN ((comb_component ((edge_walkup H) x)) x')) /\ ((((POWER (face_map ((edge_walkup H) x))) j) x') IN ((comb_component ((edge_walkup H) x)) x')))))) ((node_map H) x))) = ((\x'. (!j. (((((POWER (edge_map ((edge_walkup H) x))) j) x') IN ((comb_component ((edge_walkup H) x)) x')) /\ (((((POWER (node_map ((edge_walkup H) x))) j) x') IN ((comb_component ((edge_walkup H) x)) x')) /\ ((((POWER (face_map ((edge_walkup H) x))) j) x') IN ((comb_component ((edge_walkup H) x)) x')))))) ((node_map H) x)))
T c= c==> ! ! c/\ cIN cPOWER * part cedge_map cedge_walkup f0 f1 b1 b0 * * part ccomb_component cedge_walkup f0 f1 b0 c/\ cIN cPOWER * part cnode_map cedge_walkup f0 f1 b1 b0 * * part ccomb_component cedge_walkup f0 f1 b0 cIN cPOWER * part cface_map cedge_walkup f0 f1 b1 b0 * * part ccomb_component cedge_walkup f0 f1 b0 * / ! c/\ cIN cPOWER * part cedge_map cedge_walkup f0 f1 b1 b0 * * part ccomb_component cedge_walkup f0 f1 b0 c/\ cIN cPOWER * part cnode_map cedge_walkup f0 f1 b1 b0 * * part ccomb_component cedge_walkup f0 f1 b0 cIN cPOWER * part cface_map cedge_walkup f0 f1 b1 b0 * * part ccomb_component cedge_walkup f0 f1 b0 cnode_map f0 f1 * / ! c/\ cIN cPOWER * part cedge_map cedge_walkup f0 f1 b1 b0 * * part ccomb_component cedge_walkup f0 f1 b0 c/\ cIN cPOWER * part cnode_map cedge_walkup f0 f1 b1 b0 * * part ccomb_component cedge_walkup f0 f1 b0 cIN cPOWER * part cface_map cedge_walkup f0 f1 b1 b0 * * part ccomb_component cedge_walkup f0 f1 b0 cnode_map f0 f1
+ (((edge H) x) ((inverse (edge_map H)) x)) |- ((~ ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x)))) ==> F)
T c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c==> c~ c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF
+ |- (((!H. (!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_faces H) = (number_of_faces ((edge_walkup H) x)))))) ==> ((\H. (!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_faces H) = (number_of_faces ((edge_walkup H) x)))))) H)) = ((\H. (!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_faces H) = (number_of_faces ((edge_walkup H) x)))))) H))
T c= c==> ! ! c==> c/\ cIN b1 * part cdart b0 cdart_nondegenerate b0 b1 c= cnumber_of_faces b0 cnumber_of_faces cedge_walkup b0 b1 * / ! c==> c/\ cIN b1 * part cdart b0 cdart_nondegenerate b0 b1 c= cnumber_of_faces b0 cnumber_of_faces cedge_walkup b0 b1 f0 * / ! c==> c/\ cIN b1 * part cdart b0 cdart_nondegenerate b0 b1 c= cnumber_of_faces b0 cnumber_of_faces cedge_walkup b0 b1 f0
+ |- ((real_neg ((real_sub ((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) ((real_add (real_of_num (CARD (dart ((edge_walkup H) x))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add ((real_add (real_of_num (number_of_edges H))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_add creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_add creal_of_num cnumber_of_edges f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL c_0
+ |- ((\x. (((dart_nondegenerate H) x) ==> ((~ (((inverse (edge_map H)) x) = x)) /\ ((~ (((inverse (node_map H)) x) = x)) /\ (~ (((inverse (face_map H)) x) = x)))))) x)
T * / c==> cdart_nondegenerate f0 b0 c/\ c~ c= cinverse * part cedge_map f0 b0 b0 c/\ c~ c= cinverse * part cnode_map f0 b0 b0 c~ c= cinverse * part cface_map f0 b0 b0 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) ((real_add (real_of_num (CARD (dart ((edge_walkup H) x))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add ((real_add (real_of_num (number_of_edges H))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_add creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_add creal_of_num cnumber_of_edges f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (((x IN (dart H)) /\ ((is_edge_merge H) x)) ==> ((number_of_edges H) = ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0)))))) ==> ((\x. (((x IN (dart H)) /\ ((is_edge_merge H) x)) ==> ((number_of_edges H) = ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((x IN (dart H)) /\ ((is_edge_merge H) x)) ==> ((number_of_edges H) = ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0)))))) x))
T c= c==> ! c==> c/\ cIN b0 * part cdart f0 cis_edge_merge f0 b0 c= cnumber_of_edges f0 c+ cnumber_of_edges cedge_walkup f0 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cIN b0 * part cdart f0 cis_edge_merge f0 b0 c= cnumber_of_edges f0 c+ cnumber_of_edges cedge_walkup f0 b0 cNUMERAL cBIT1 c_0 f1 * / c==> c/\ cIN b0 * part cdart f0 cis_edge_merge f0 b0 c= cnumber_of_edges f0 c+ cnumber_of_edges cedge_walkup f0 b0 cNUMERAL cBIT1 c_0 f1
+ (x IN (dart H)), ((is_edge_merge H) x) |- ((((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = (((real_add (real_of_num ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))))
T c==> cIN f0 * part cdart f1 c==> cis_edge_merge f1 f0 c= c= creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0 c= creal_add creal_of_num c+ cnumber_of_edges cedge_walkup f1 f0 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), (x IN (dart H)), ((dart_nondegenerate H) x), ((is_edge_merge H) x) |- (((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x))))))))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c==> cis_edge_merge f0 f1 c= creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces cedge_walkup f0 f1 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\H. ((planar_index H) = ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))))) H)
T * / c= cplanar_index b0 creal_add creal_of_num cnumber_of_edges b0 creal_add creal_of_num cnumber_of_nodes b0 creal_sub creal_sub creal_of_num cnumber_of_faces b0 creal_of_num cCARD * part cdart b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components b0 f0
+ |- ((\H. (!x. (((orbit_map (edge_map H)) x) = ((edge H) x)))) H)
T * / ! c= * * part corbit_map * part cedge_map b0 b1 * * part cedge b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- ((((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
+ |- (((!H. (!x. ((x IN (dart H)) ==> ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))) ==> ((\H. (!x. ((x IN (dart H)) ==> ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))) H)) = ((\H. (!x. ((x IN (dart H)) ==> ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))) H))
T c= c==> ! ! c==> cIN b1 * part cdart b0 c= cCARD * part cdart b0 c+ cCARD * part cdart cedge_walkup b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> cIN b1 * part cdart b0 c= cCARD * part cdart b0 c+ cCARD * part cdart cedge_walkup b0 b1 cNUMERAL cBIT1 c_0 f0 * / ! c==> cIN b1 * part cdart b0 c= cCARD * part cdart b0 c+ cCARD * part cdart cedge_walkup b0 b1 cNUMERAL cBIT1 c_0 f0
+ |- ((((~ (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) ((real_add (real_of_num (CARD (dart ((edge_walkup H) x))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add ((real_add (real_of_num (number_of_edges H))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))))) ==> F) ==> (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) ((real_add (real_of_num (CARD (dart ((edge_walkup H) x))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add ((real_add (real_of_num (number_of_edges H))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))))) = (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) ((real_add (real_of_num (CARD (dart ((edge_walkup H) x))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add ((real_add (real_of_num (number_of_edges H))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))))
T c= c==> c==> c~ c= creal_add creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_add creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_add creal_of_num cnumber_of_edges f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 cF c= creal_add creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_add creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_add creal_of_num cnumber_of_edges f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 c= creal_add creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_add creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_add creal_of_num cnumber_of_edges f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!H. (!x. (((x IN (dart H)) /\ (((dart_nondegenerate H) x) /\ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))) ==> (((number_of_components H) + (NUMERAL (BIT1 _0))) = (number_of_components ((edge_walkup H) x)))))) ==> ((\H. (!x. (((x IN (dart H)) /\ (((dart_nondegenerate H) x) /\ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))) ==> (((number_of_components H) + (NUMERAL (BIT1 _0))) = (number_of_components ((edge_walkup H) x)))))) H)) = ((\H. (!x. (((x IN (dart H)) /\ (((dart_nondegenerate H) x) /\ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))) ==> (((number_of_components H) + (NUMERAL (BIT1 _0))) = (number_of_components ((edge_walkup H) x)))))) H))
T c= c==> ! ! c==> c/\ cIN b1 * part cdart b0 c/\ cdart_nondegenerate b0 b1 c~ c= * * part ccomb_component cedge_walkup b0 b1 cnode_map b0 b1 * * part ccomb_component cedge_walkup b0 b1 cinverse * part cedge_map b0 b1 c= c+ cnumber_of_components b0 cNUMERAL cBIT1 c_0 cnumber_of_components cedge_walkup b0 b1 * / ! c==> c/\ cIN b1 * part cdart b0 c/\ cdart_nondegenerate b0 b1 c~ c= * * part ccomb_component cedge_walkup b0 b1 cnode_map b0 b1 * * part ccomb_component cedge_walkup b0 b1 cinverse * part cedge_map b0 b1 c= c+ cnumber_of_components b0 cNUMERAL cBIT1 c_0 cnumber_of_components cedge_walkup b0 b1 f0 * / ! c==> c/\ cIN b1 * part cdart b0 c/\ cdart_nondegenerate b0 b1 c~ c= * * part ccomb_component cedge_walkup b0 b1 cnode_map b0 b1 * * part ccomb_component cedge_walkup b0 b1 cinverse * part cedge_map b0 b1 c= c+ cnumber_of_components b0 cNUMERAL cBIT1 c_0 cnumber_of_components cedge_walkup b0 b1 f0
+ (((inverse (edge_map H)) x) IN ((edge H) x)) |- (((((inverse (edge_map H)) x) IN (((edge H) x) UNION ((edge H) ((node_map H) x)))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))) = (((((inverse (edge_map H)) x) IN ((edge H) x)) ==> (((inverse (edge_map H)) x) IN (((edge H) x) UNION ((edge H) ((node_map H) x))))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))
T c==> cIN cinverse * part cedge_map f0 f1 * * part cedge f0 f1 c= c==> cIN cinverse * part cedge_map f0 f1 * * part cUNION * * part cedge f0 f1 * * part cedge f0 cnode_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> c==> cIN cinverse * part cedge_map f0 f1 * * part cedge f0 f1 cIN cinverse * part cedge_map f0 f1 * * part cUNION * * part cedge f0 f1 * * part cedge f0 cnode_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
- |- (((permutes (face_map H)) (dart H)) = T)
T c= cpermutes * part cface_map f0 * part cdart f0 cT
+ ((dart_nondegenerate H) x) |- (((~ (((node_map H) x) IN ((edge H) x))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))) = ((~ (((dart_nondegenerate H) x) /\ (((node_map H) x) IN ((edge H) x)))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))))
T c==> cdart_nondegenerate f0 f1 c= c==> c~ cIN cnode_map f0 f1 * * part cedge f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c==> c~ c/\ cdart_nondegenerate f0 f1 cIN cnode_map f0 f1 * * part cedge f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- ((number_of_faces ((edge_walkup H) x)) = (number_of_faces H))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c= cnumber_of_faces cedge_walkup f1 f0 cnumber_of_faces f1
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- ((x IN (dart H)) /\ ((dart_nondegenerate H) x))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c/\ cIN f0 * part cdart f1 cdart_nondegenerate f1 f0
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), (x IN (dart H)), ((dart_nondegenerate H) x), ((is_edge_split H) x) |- (((real_add (planar_index H)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (planar_index ((edge_walkup H) x)))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c==> cis_edge_split f0 f1 c= creal_add cplanar_index f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cplanar_index cedge_walkup f0 f1
+ |- (((!H. (!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_nodes H) = (number_of_nodes ((edge_walkup H) x)))))) ==> ((\H. (!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_nodes H) = (number_of_nodes ((edge_walkup H) x)))))) H)) = ((\H. (!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_nodes H) = (number_of_nodes ((edge_walkup H) x)))))) H))
T c= c==> ! ! c==> c/\ cIN b1 * part cdart b0 cdart_nondegenerate b0 b1 c= cnumber_of_nodes b0 cnumber_of_nodes cedge_walkup b0 b1 * / ! c==> c/\ cIN b1 * part cdart b0 cdart_nondegenerate b0 b1 c= cnumber_of_nodes b0 cnumber_of_nodes cedge_walkup b0 b1 f0 * / ! c==> c/\ cIN b1 * part cdart b0 cdart_nondegenerate b0 b1 c= cnumber_of_nodes b0 cnumber_of_nodes cedge_walkup b0 b1 f0
- |- ((permutes (node_map H)) (dart H))
T cpermutes * part cnode_map f0 * part cdart f0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (x IN (dart H)), ((is_edge_merge H) x) |- (((((inverse (edge_map H)) x) IN ((x INSERT EMPTY) UNION ((edge ((edge_walkup H) x)) ((node_map H) x)))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))) = ((((inverse (edge_map H)) x) IN (((edge H) x) UNION ((edge H) ((node_map H) x)))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))
T c==> cIN f0 * part cdart f1 c==> cis_edge_merge f1 f0 c= c==> cIN cinverse * part cedge_map f1 f0 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cedge cedge_walkup f1 f0 cnode_map f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c==> cIN cinverse * part cedge_map f1 f0 * * part cUNION * * part cedge f1 f0 * * part cedge f1 cnode_map f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), (x IN (dart H)), ((dart_nondegenerate H) x) |- ((x IN (dart H)) /\ (((dart_nondegenerate H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c/\ cIN f1 * part cdart f0 c/\ cdart_nondegenerate f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (x IN (dart H)), ((is_edge_split H) x) |- ((((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))))
T c==> cIN f0 * part cdart f1 c==> cis_edge_split f1 f0 c= c= creal_add creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num c+ cnumber_of_edges f1 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0 c= creal_add creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- ((~ (((dart_nondegenerate H) x) /\ (((node_map H) x) IN ((edge H) x)))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c==> c~ c/\ cdart_nondegenerate f1 f0 cIN cnode_map f1 f0 * * part cedge f1 f0 c= cplanar_index f1 cplanar_index cedge_walkup f1 f0
- |- ((!H. t) = t)
T c= ! f0 f0
+ (x IN (dart H)) |- ((((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))))
T c==> cIN f0 * part cdart f1 c= c= creal_add creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num c+ cnumber_of_edges f1 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0 c= creal_add creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num c+ cCARD * part cdart cedge_walkup f1 f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num c+ cnumber_of_edges f1 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0
- (~ ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x)))) |- (~ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x)))
T c==> c~ c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 c~ cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1
+ |- (((!H. (!x. (((is_edge_split H) x) = (((dart_nondegenerate H) x) /\ (((node_map H) x) IN ((edge H) x)))))) ==> ((\H. (!x. (((is_edge_split H) x) = (((dart_nondegenerate H) x) /\ (((node_map H) x) IN ((edge H) x)))))) H)) = ((\H. (!x. (((is_edge_split H) x) = (((dart_nondegenerate H) x) /\ (((node_map H) x) IN ((edge H) x)))))) H))
T c= c==> ! ! c= cis_edge_split b0 b1 c/\ cdart_nondegenerate b0 b1 cIN cnode_map b0 b1 * * part cedge b0 b1 * / ! c= cis_edge_split b0 b1 c/\ cdart_nondegenerate b0 b1 cIN cnode_map b0 b1 * * part cedge b0 b1 f0 * / ! c= cis_edge_split b0 b1 c/\ cdart_nondegenerate b0 b1 cIN cnode_map b0 b1 * * part cedge b0 b1 f0
+ |- (((!H. (!x. (((x IN (dart H)) /\ ((is_edge_merge H) x)) ==> (((x INSERT EMPTY) UNION ((edge ((edge_walkup H) x)) ((node_map H) x))) = (((edge H) x) UNION ((edge H) ((node_map H) x))))))) ==> ((\H. (!x. (((x IN (dart H)) /\ ((is_edge_merge H) x)) ==> (((x INSERT EMPTY) UNION ((edge ((edge_walkup H) x)) ((node_map H) x))) = (((edge H) x) UNION ((edge H) ((node_map H) x))))))) H)) = ((\H. (!x. (((x IN (dart H)) /\ ((is_edge_merge H) x)) ==> (((x INSERT EMPTY) UNION ((edge ((edge_walkup H) x)) ((node_map H) x))) = (((edge H) x) UNION ((edge H) ((node_map H) x))))))) H))
T c= c==> ! ! c==> c/\ cIN b1 * part cdart b0 cis_edge_merge b0 b1 c= * * part cUNION * * part cINSERT b1 part cEMPTY * * part cedge cedge_walkup b0 b1 cnode_map b0 b1 * * part cUNION * * part cedge b0 b1 * * part cedge b0 cnode_map b0 b1 * / ! c==> c/\ cIN b1 * part cdart b0 cis_edge_merge b0 b1 c= * * part cUNION * * part cINSERT b1 part cEMPTY * * part cedge cedge_walkup b0 b1 cnode_map b0 b1 * * part cUNION * * part cedge b0 b1 * * part cedge b0 cnode_map b0 b1 f0 * / ! c==> c/\ cIN b1 * part cdart b0 cis_edge_merge b0 b1 c= * * part cUNION * * part cINSERT b1 part cEMPTY * * part cedge cedge_walkup b0 b1 cnode_map b0 b1 * * part cUNION * * part cedge b0 b1 * * part cedge b0 cnode_map b0 b1 f0
+ |- ((\x. (((is_edge_merge H) x) = (((dart_nondegenerate H) x) /\ (~ (((node_map H) x) IN ((edge H) x)))))) x)
T * / c= cis_edge_merge f0 b0 c/\ cdart_nondegenerate f0 b0 c~ cIN cnode_map f0 b0 * * part cedge f0 b0 f1
+ |- (((!H. (!x. (((x IN (dart H)) /\ ((is_edge_merge H) x)) ==> ((number_of_edges H) = ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0))))))) ==> ((\H. (!x. (((x IN (dart H)) /\ ((is_edge_merge H) x)) ==> ((number_of_edges H) = ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0))))))) H)) = ((\H. (!x. (((x IN (dart H)) /\ ((is_edge_merge H) x)) ==> ((number_of_edges H) = ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0))))))) H))
T c= c==> ! ! c==> c/\ cIN b1 * part cdart b0 cis_edge_merge b0 b1 c= cnumber_of_edges b0 c+ cnumber_of_edges cedge_walkup b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cIN b1 * part cdart b0 cis_edge_merge b0 b1 c= cnumber_of_edges b0 c+ cnumber_of_edges cedge_walkup b0 b1 cNUMERAL cBIT1 c_0 f0 * / ! c==> c/\ cIN b1 * part cdart b0 cis_edge_merge b0 b1 c= cnumber_of_edges b0 c+ cnumber_of_edges cedge_walkup b0 b1 cNUMERAL cBIT1 c_0 f0
+ |- (((!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H)) = ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H))
T c= c==> ! c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0 * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0
+ |- (((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num ((number_of_components H) + (NUMERAL (BIT1 _0)))))))))
T c= creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num c+ cCARD * part cdart cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_of_num c+ cnumber_of_edges f0 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num c+ cnumber_of_components f0 cNUMERAL cBIT1 c_0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- ((((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_faces H) = (number_of_faces ((edge_walkup H) x)))) = ((number_of_faces H) = (number_of_faces ((edge_walkup H) x))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c= c==> c/\ cIN f0 * part cdart f1 cdart_nondegenerate f1 f0 c= cnumber_of_faces f1 cnumber_of_faces cedge_walkup f1 f0 c= cnumber_of_faces f1 cnumber_of_faces cedge_walkup f1 f0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (!x'. (!j. (((((POWER (edge_map ((edge_walkup H) x))) j) x') IN ((comb_component ((edge_walkup H) x)) x')) /\ (((((POWER (node_map ((edge_walkup H) x))) j) x') IN ((comb_component ((edge_walkup H) x)) x')) /\ ((((POWER (face_map ((edge_walkup H) x))) j) x') IN ((comb_component ((edge_walkup H) x)) x'))))))
T c/\ cIN cPOWER * part cedge_map cedge_walkup f0 f1 f2 f3 * * part ccomb_component cedge_walkup f0 f1 f3 c/\ cIN cPOWER * part cnode_map cedge_walkup f0 f1 f2 f3 * * part ccomb_component cedge_walkup f0 f1 f3 cIN cPOWER * part cface_map cedge_walkup f0 f1 f2 f3 * * part ccomb_component cedge_walkup f0 f1 f3
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), (x IN (dart H)), ((dart_nondegenerate H) x), ((is_edge_split H) x) |- (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x))))))))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c==> cis_edge_split f0 f1 c= creal_add creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1
+ |- (((permutes (edge_map H)) (dart H)) = T)
T c= cpermutes * part cedge_map f0 * part cdart f0 cT
+ (x IN (dart H)), ((dart_nondegenerate H) x), ((is_edge_merge H) x) |- (((T /\ T) ==> (((inverse (edge_map H)) x) IN ((orbit_map (edge_map H)) x))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c==> cis_edge_merge f1 f0 c==> c==> c/\ cT cT cIN cinverse * part cedge_map f1 f0 * * part corbit_map * part cedge_map f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0
+ |- (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))
T c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
+ |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ |- (((!x. (((orbit_map (edge_map H)) x) = ((edge H) x))) ==> ((\x. (((orbit_map (edge_map H)) x) = ((edge H) x))) x)) = ((\x. (((orbit_map (edge_map H)) x) = ((edge H) x))) x))
T c= c==> ! c= * * part corbit_map * part cedge_map f0 b0 * * part cedge f0 b0 * / c= * * part corbit_map * part cedge_map f0 b0 * * part cedge f0 b0 f1 * / c= * * part corbit_map * part cedge_map f0 b0 * * part cedge f0 b0 f1
- (~ (((edge H) x) ((inverse (edge_map H)) x))), (((edge H) x) ((inverse (edge_map H)) x)) |- ((~ (((edge H) x) ((inverse (edge_map H)) x))) /\ (((edge H) x) ((inverse (edge_map H)) x)))
T c==> c~ cedge f0 f1 cinverse * part cedge_map f0 f1 c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c/\ c~ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 f1 cinverse * part cedge_map f0 f1
- ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) |- ((((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F))
T c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes ((edge_walkup H) x)))) ((real_sub ((real_sub (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c= c= creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes cedge_walkup f0 f1 creal_sub creal_sub creal_of_num cnumber_of_faces cedge_walkup f0 f1 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?j. t) = t)
T c= c? / f0 f0
- (~ (~ ((is_edge_split H) x))), (x IN (dart H)), ((dart_nondegenerate H) x) |- ((~ (~ ((is_edge_split H) x))) /\ (((~ ((is_edge_split H) x)) \/ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))))
T c==> c~ c~ cis_edge_split f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c/\ c~ c~ cis_edge_split f0 f1 c==> c\/ c~ cis_edge_split f0 f1 c~ c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- ((((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = (((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c= c= creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces cedge_walkup f1 f0 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0 c= creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), (x IN (dart H)), ((dart_nondegenerate H) x) |- (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x))))))))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c= creal_add creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num c+ cnumber_of_edges f0 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1
+ |- (((!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t)))))) ==> ((\s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t)))))) s)) = ((\s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t)))))) s))
T c= c==> ! ! ! c= cIN b2 * * part cUNION b0 b1 c\/ cIN b2 b0 cIN b2 b1 * / ! ! c= cIN b2 * * part cUNION b0 b1 c\/ cIN b2 b0 cIN b2 b1 f0 * / ! ! c= cIN b2 * * part cUNION b0 b1 c\/ cIN b2 b0 cIN b2 b1 f0
- |- ((!H. ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) = T)
T c= ! c==> cedge b0 f0 cinverse * part cedge_map b0 f0 c\/ cedge b0 f0 cinverse * part cedge_map b0 f0 cedge b0 cnode_map b0 f0 cinverse * part cedge_map b0 f0 cT
- (((inverse (edge_map H)) x) IN ((comb_component ((edge_walkup H) x)) ((node_map H) x))) |- ((((inverse (edge_map H)) x) IN ((comb_component ((edge_walkup H) x)) ((node_map H) x))) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))
T c==> cIN cinverse * part cedge_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 c/\ cIN cinverse * part cedge_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
+ |- ((\H. (!x. (!j. (((((POWER (edge_map H)) j) x) IN ((comb_component H) x)) /\ (((((POWER (node_map H)) j) x) IN ((comb_component H) x)) /\ ((((POWER (face_map H)) j) x) IN ((comb_component H) x))))))) ((edge_walkup H) x))
T * / ! ! c/\ cIN cPOWER * part cedge_map b0 b2 b1 * * part ccomb_component b0 b1 c/\ cIN cPOWER * part cnode_map b0 b2 b1 * * part ccomb_component b0 b1 cIN cPOWER * part cface_map b0 b2 b1 * * part ccomb_component b0 b1 cedge_walkup f0 f1
+ (((is_edge_split H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))), (x IN (dart H)), ((dart_nondegenerate H) x) |- (((real_add (planar_index H)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (planar_index ((edge_walkup H) x)))
T c==> c/\ cis_edge_split f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c= creal_add cplanar_index f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cplanar_index cedge_walkup f0 f1
+ (x IN (dart H)), ((is_edge_merge H) x) |- (((((inverse (edge_map H)) x) IN (((edge H) x) UNION ((edge H) ((node_map H) x)))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))) = ((((inverse (edge_map H)) x) IN ((x INSERT EMPTY) UNION ((edge ((edge_walkup H) x)) ((node_map H) x)))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))
T c==> cIN f0 * part cdart f1 c==> cis_edge_merge f1 f0 c= c==> cIN cinverse * part cedge_map f1 f0 * * part cUNION * * part cedge f1 f0 * * part cedge f1 cnode_map f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c==> cIN cinverse * part cedge_map f1 f0 * * part cUNION * * part cINSERT f0 part cEMPTY * * part cedge cedge_walkup f1 f0 cnode_map f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0
+ |- ((real_neg ((real_sub ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) ((real_add (real_of_num (CARD (dart ((edge_walkup H) x))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) ((real_add ((real_add (real_of_num (number_of_edges H))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add (real_of_num (number_of_components H))) (real_of_num (NUMERAL (BIT1 _0)))))))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_add creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_add creal_of_num cnumber_of_edges f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((dart_nondegenerate H) x) |- (((~ (x = ((inverse (edge_map H)) x))) ==> ((x = ((inverse (edge_map H)) x)) = F)) = ((x = ((inverse (edge_map H)) x)) = F))
T c==> cdart_nondegenerate f0 f1 c= c==> c~ c= f1 cinverse * part cedge_map f0 f1 c= c= f1 cinverse * part cedge_map f0 f1 cF c= c= f1 cinverse * part cedge_map f0 f1 cF
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((~ (~ ((is_edge_split H) x))) ==> (((~ ((is_edge_split H) x)) \/ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))), ((~ ((is_edge_split H) x)) ==> (((~ ((is_edge_split H) x)) \/ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))) |- (((~ ((is_edge_split H) x)) \/ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> c==> c~ c~ cis_edge_split f0 f1 c==> c\/ c~ cis_edge_split f0 f1 c~ c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c==> c==> c~ cis_edge_split f0 f1 c==> c\/ c~ cis_edge_split f0 f1 c~ c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c==> c\/ c~ cis_edge_split f0 f1 c~ c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (((edge H) x) ((inverse (edge_map H)) x)) |- ((((edge H) x) ((inverse (edge_map H)) x)) /\ ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))
T c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c/\ cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1
+ (~ ((is_edge_split H) x)) |- (((planar_index H) = (planar_index ((edge_walkup H) x))) = (((~ ((is_edge_split H) x)) \/ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))))
T c==> c~ cis_edge_split f0 f1 c= c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c==> c\/ c~ cis_edge_split f0 f1 c~ c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- (((!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) ==> ((\t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) t2)) = ((\t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))) t2))
T c= c==> ! c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 * / c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 f1 * / c/\ c= c~ c/\ f0 b0 c\/ c~ f0 c~ b0 c= c~ c\/ f0 b0 c/\ c~ f0 c~ b0 f1
+ ((\j. (((inverse (edge_map H)) x) = (((POWER (edge_map ((edge_walkup H) x))) j) ((node_map H) x)))) j) |- (((inverse (edge_map H)) x) = (((POWER (edge_map ((edge_walkup H) x))) j) ((node_map H) x)))
T c==> * / c= cinverse * part cedge_map f0 f1 cPOWER * part cedge_map cedge_walkup f0 f1 b0 cnode_map f0 f1 f2 c= cinverse * part cedge_map f0 f1 cPOWER * part cedge_map cedge_walkup f0 f1 f2 cnode_map f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((x IN (dart H)) /\ ((dart_nondegenerate H) x)) |- (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) /\ (((((is_edge_split H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))) ==> (((real_add (planar_index H)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (planar_index ((edge_walkup H) x)))) /\ ((~ (((is_edge_split H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))))
T c==> c/\ cIN f0 * part cdart f1 cdart_nondegenerate f1 f0 c/\ c/\ cIN f0 * part cdart f1 cdart_nondegenerate f1 f0 c/\ c==> c/\ cis_edge_split f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= creal_add cplanar_index f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cplanar_index cedge_walkup f1 f0 c==> c~ c/\ cis_edge_split f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= cplanar_index f1 cplanar_index cedge_walkup f1 f0
+ |- ((\x. (((x IN (dart H)) /\ (((dart_nondegenerate H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((number_of_components H) = (number_of_components ((edge_walkup H) x))))) x)
T * / c==> c/\ cIN b0 * part cdart f0 c/\ cdart_nondegenerate f0 b0 c= * * part ccomb_component cedge_walkup f0 b0 cnode_map f0 b0 * * part ccomb_component cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 c= cnumber_of_components f0 cnumber_of_components cedge_walkup f0 b0 f1
+ (x IN (dart H)), ((is_edge_merge H) x) |- ((((real_add (real_of_num ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = (((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))))
T c==> cIN f0 * part cdart f1 c==> cis_edge_merge f1 f0 c= c= creal_add creal_of_num c+ cnumber_of_edges cedge_walkup f1 f0 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0 c= creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0
+ ((dart_nondegenerate H) x) |- ((((inverse (edge_map H)) x) = x) = F)
T c==> cdart_nondegenerate f0 f1 c= c= cinverse * part cedge_map f0 f1 f1 cF
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), (x IN (dart H)), ((dart_nondegenerate H) x) |- ((number_of_components H) = (number_of_components ((edge_walkup H) x)))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c= cnumber_of_components f0 cnumber_of_components cedge_walkup f0 f1
- |- ((real_of_num (NUMERAL (BIT1 _0))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n)))) n)
T * / c= creal_of_num c+ f0 b0 creal_add creal_of_num f0 creal_of_num b0 f1
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), (x IN (dart H)), ((dart_nondegenerate H) x) |- (((real_add (real_of_num ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x))))))))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c= creal_add creal_of_num c+ cnumber_of_edges cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1
+ |- (((((FINITE (dart H)) /\ ((permutes (edge_map H)) (dart H))) ==> (((inverse (edge_map H)) x) IN ((orbit_map (edge_map H)) x))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))) = (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))
T c= c==> c==> c/\ cFINITE * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0 cIN cinverse * part cedge_map f0 f1 * * part corbit_map * part cedge_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
+ |- ((\H. (!x. (((x IN (dart H)) /\ (((dart_nondegenerate H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((number_of_components H) = (number_of_components ((edge_walkup H) x)))))) H)
T * / ! c==> c/\ cIN b1 * part cdart b0 c/\ cdart_nondegenerate b0 b1 c= * * part ccomb_component cedge_walkup b0 b1 cnode_map b0 b1 * * part ccomb_component cedge_walkup b0 b1 cinverse * part cedge_map b0 b1 c= cnumber_of_components b0 cnumber_of_components cedge_walkup b0 b1 f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))), ((dart_nondegenerate H) x) |- (((dart_nondegenerate H) x) /\ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))
T c==> c~ c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cdart_nondegenerate f0 f1 c/\ cdart_nondegenerate f0 f1 c~ c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
+ ((dart_nondegenerate H) x) |- (((((inverse (edge_map H)) x) IN ((edge ((edge_walkup H) x)) ((node_map H) x))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))) = (((((inverse (edge_map H)) x) = x) \/ (((inverse (edge_map H)) x) IN ((edge ((edge_walkup H) x)) ((node_map H) x)))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))
T c==> cdart_nondegenerate f0 f1 c= c==> cIN cinverse * part cedge_map f0 f1 * * part cedge cedge_walkup f0 f1 cnode_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> c\/ c= cinverse * part cedge_map f0 f1 f1 cIN cinverse * part cedge_map f0 f1 * * part cedge cedge_walkup f0 f1 cnode_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ ((\j. (((inverse (edge_map H)) x) = (((POWER (edge_map ((edge_walkup H) x))) j) ((node_map H) x)))) j) |- (((\j. (((inverse (edge_map H)) x) = (((POWER (edge_map ((edge_walkup H) x))) j) ((node_map H) x)))) j) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))
T c==> * / c= cinverse * part cedge_map f0 f1 cPOWER * part cedge_map cedge_walkup f0 f1 b0 cnode_map f0 f1 f2 c/\ * / c= cinverse * part cedge_map f0 f1 cPOWER * part cedge_map cedge_walkup f0 f1 b0 cnode_map f0 f1 f2 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- (((~ (((is_edge_split H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))) = (((((is_edge_split H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))) ==> (((real_add (planar_index H)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (planar_index ((edge_walkup H) x)))) /\ ((~ (((is_edge_split H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c= c==> c~ c/\ cis_edge_split f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= cplanar_index f1 cplanar_index cedge_walkup f1 f0 c/\ c==> c/\ cis_edge_split f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= creal_add cplanar_index f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cplanar_index cedge_walkup f1 f0 c==> c~ c/\ cis_edge_split f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= cplanar_index f1 cplanar_index cedge_walkup f1 f0
+ |- ((\H. (!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_faces H) = (number_of_faces ((edge_walkup H) x)))))) H)
T * / ! c==> c/\ cIN b1 * part cdart b0 cdart_nondegenerate b0 b1 c= cnumber_of_faces b0 cnumber_of_faces cedge_walkup b0 b1 f0
+ (~ (((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) ((real_add (real_of_num (CARD (dart ((edge_walkup H) x))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add ((real_add (real_of_num (number_of_edges H))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add (real_of_num (number_of_components H))) (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_add creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_add creal_of_num cnumber_of_edges f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((((is_edge_merge H) x) = (((dart_nondegenerate H) x) /\ (~ (((node_map H) x) IN ((edge H) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))) = ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c= c==> c= cis_edge_merge f0 f1 c/\ cdart_nondegenerate f0 f1 c~ cIN cnode_map f0 f1 * * part cedge f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- (((!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))) ==> ((\t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))) t)) = ((\t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))) t))
T c= c==> ! ! c= cIN b1 * * part cUNION f0 b0 c\/ cIN b1 f0 cIN b1 b0 * / ! c= cIN b1 * * part cUNION f0 b0 c\/ cIN b1 f0 cIN b1 b0 f1 * / ! c= cIN b1 * * part cUNION f0 b0 c\/ cIN b1 f0 cIN b1 b0 f1
+ |- (FINITE (dart H))
T cFINITE * part cdart f0
- ((dart_nondegenerate H) x) |- (((~ (((inverse (node_map H)) x) = x)) ==> ((((inverse (node_map H)) x) = x) = F)) = ((((inverse (node_map H)) x) = x) = F))
T c==> cdart_nondegenerate f0 f1 c= c==> c~ c= cinverse * part cnode_map f0 f1 f1 c= c= cinverse * part cnode_map f0 f1 f1 cF c= c= cinverse * part cnode_map f0 f1 f1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((dart_nondegenerate H) x) |- (((dart_nondegenerate H) x) = T)
T c==> cdart_nondegenerate f0 f1 c= cdart_nondegenerate f0 f1 cT
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (~ ((is_edge_split H) x)))) = ((\t. (t \/ (~ t))) (~ ((is_edge_split H) x))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c~ cis_edge_split f0 f1 * / c\/ b0 c~ b0 c~ cis_edge_split f0 f1
+ |- (((!H. (!x. (((orbit_map (edge_map H)) x) = ((edge H) x)))) ==> ((\H. (!x. (((orbit_map (edge_map H)) x) = ((edge H) x)))) H)) = ((\H. (!x. (((orbit_map (edge_map H)) x) = ((edge H) x)))) H))
T c= c==> ! ! c= * * part corbit_map * part cedge_map b0 b1 * * part cedge b0 b1 * / ! c= * * part corbit_map * part cedge_map b0 b1 * * part cedge b0 b1 f0 * / ! c= * * part corbit_map * part cedge_map b0 b1 * * part cedge b0 b1 f0
+ |- ((((real_add ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) ((real_add (real_of_num (CARD (dart ((edge_walkup H) x))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) = (((real_add (real_of_num ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))))
T c= c= creal_add creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_add creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 c= creal_add creal_of_num c+ cnumber_of_edges cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num c+ cCARD * part cdart cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0
+ |- ((\x. (!y. ((y IN ((edge H) x)) = (?j. (y = (((POWER (edge_map H)) j) x)))))) x)
T * / ! c= cIN b1 * * part cedge f0 b0 c? / c= b1 cPOWER * part cedge_map f0 b2 b0 f1
+ (((inverse (edge_map H)) x) = (((POWER (edge_map ((edge_walkup H) x))) j) ((node_map H) x))) |- (((((inverse (edge_map H)) x) IN ((comb_component ((edge_walkup H) x)) ((node_map H) x))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))) = (((((POWER (edge_map ((edge_walkup H) x))) j) ((node_map H) x)) IN ((comb_component ((edge_walkup H) x)) ((node_map H) x))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))
T c==> c= cinverse * part cedge_map f0 f1 cPOWER * part cedge_map cedge_walkup f0 f1 f2 cnode_map f0 f1 c= c==> cIN cinverse * part cedge_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN cPOWER * part cedge_map cedge_walkup f0 f1 f2 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), (x IN (dart H)), ((dart_nondegenerate H) x) |- ((((real_add (real_of_num ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = (((real_add (real_of_num ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c= c= creal_add creal_of_num c+ cnumber_of_edges cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num c+ cCARD * part cdart cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1 c= creal_add creal_of_num c+ cnumber_of_edges cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num c+ cCARD * part cdart cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0
+ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))), (x IN (dart H)), ((dart_nondegenerate H) x) |- (((number_of_components H) + (NUMERAL (BIT1 _0))) = (number_of_components ((edge_walkup H) x)))
T c==> c~ c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c= c+ cnumber_of_components f0 cNUMERAL cBIT1 c_0 cnumber_of_components cedge_walkup f0 f1
+ (~ (((node_map H) x) IN ((edge H) x))), ((dart_nondegenerate H) x) |- ((((is_edge_merge H) x) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))) = ((((is_edge_merge H) x) = (((dart_nondegenerate H) x) /\ (~ (((node_map H) x) IN ((edge H) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))))
T c==> c~ cIN cnode_map f0 f1 * * part cedge f0 f1 c==> cdart_nondegenerate f0 f1 c= c==> cis_edge_merge f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c==> c= cis_edge_merge f0 f1 c/\ cdart_nondegenerate f0 f1 c~ cIN cnode_map f0 f1 * * part cedge f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ (x IN (dart H)), ((dart_nondegenerate H) x), ((is_edge_merge H) x) |- ((((inverse (edge_map H)) x) IN ((edge H) x)) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c==> cis_edge_merge f1 f0 c==> cIN cinverse * part cedge_map f1 f0 * * part cedge f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0
+ |- ((\t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))) t)
T * / ! c= cIN b1 * * part cUNION f0 b0 c\/ cIN b1 f0 cIN b1 b0 f1
+ |- ((\t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2)))))) t1)
T * / ! c/\ c= c~ c/\ b0 b1 c\/ c~ b0 c~ b1 c= c~ c\/ b0 b1 c/\ c~ b0 c~ b1 f0
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- ((((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes ((edge_walkup H) x)))) ((real_sub ((real_sub (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = (((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c= c= creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes cedge_walkup f1 f0 creal_sub creal_sub creal_of_num cnumber_of_faces cedge_walkup f1 f0 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0 c= creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces cedge_walkup f1 f0 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- ((~ (~ ((is_edge_split H) x))) ==> (((~ ((is_edge_split H) x)) \/ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c==> c~ c~ cis_edge_split f1 f0 c==> c\/ c~ cis_edge_split f1 f0 c~ c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= cplanar_index f1 cplanar_index cedge_walkup f1 f0
+ (~ (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) ((real_add (real_of_num (CARD (dart ((edge_walkup H) x))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add ((real_add (real_of_num (number_of_edges H))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))))) |- ((~ (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) ((real_add (real_of_num (CARD (dart ((edge_walkup H) x))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add ((real_add (real_of_num (number_of_edges H))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))))) /\ F)
T c==> c~ c= creal_add creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_add creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_add creal_of_num cnumber_of_edges f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 c/\ c~ c= creal_add creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_add creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_add creal_of_num cnumber_of_edges f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 cF
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- ((dart_nondegenerate H) x) |- ((x = ((inverse (face_map H)) x)) = F)
T c==> cdart_nondegenerate f0 f1 c= c= f1 cinverse * part cface_map f0 f1 cF
+ (x IN (dart H)) |- ((((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))))
T c==> cIN f0 * part cdart f1 c= c= creal_add creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num c+ cCARD * part cdart cedge_walkup f1 f0 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num c+ cnumber_of_edges f1 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0 c= creal_add creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num c+ cnumber_of_edges f1 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0
+ |- (((!x. (((FINITE (dart H)) /\ ((permutes (edge_map H)) (dart H))) ==> (((inverse (edge_map H)) x) IN ((orbit_map (edge_map H)) x)))) ==> ((\x. (((FINITE (dart H)) /\ ((permutes (edge_map H)) (dart H))) ==> (((inverse (edge_map H)) x) IN ((orbit_map (edge_map H)) x)))) x)) = ((\x. (((FINITE (dart H)) /\ ((permutes (edge_map H)) (dart H))) ==> (((inverse (edge_map H)) x) IN ((orbit_map (edge_map H)) x)))) x))
T c= c==> ! c==> c/\ cFINITE * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0 cIN cinverse * part cedge_map f0 b0 * * part corbit_map * part cedge_map f0 b0 * / c==> c/\ cFINITE * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0 cIN cinverse * part cedge_map f0 b0 * * part corbit_map * part cedge_map f0 b0 f1 * / c==> c/\ cFINITE * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0 cIN cinverse * part cedge_map f0 b0 * * part corbit_map * part cedge_map f0 b0 f1
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- ((((is_edge_split H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))) ==> (((real_add (planar_index H)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (planar_index ((edge_walkup H) x))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c==> c/\ cis_edge_split f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= creal_add cplanar_index f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cplanar_index cedge_walkup f1 f0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- ((dart_nondegenerate H) x) |- (~ (x = ((inverse (edge_map H)) x)))
T c==> cdart_nondegenerate f0 f1 c~ c= f1 cinverse * part cedge_map f0 f1
+ |- ((\H. (!x. (((dart_nondegenerate H) x) ==> ((~ (((inverse (edge_map H)) x) = x)) /\ ((~ (((inverse (node_map H)) x) = x)) /\ (~ (((inverse (face_map H)) x) = x))))))) H)
T * / ! c==> cdart_nondegenerate b0 b1 c/\ c~ c= cinverse * part cedge_map b0 b1 b1 c/\ c~ c= cinverse * part cnode_map b0 b1 b1 c~ c= cinverse * part cface_map b0 b1 b1 f0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (!H. ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F))) ==> ((\x. (!H. ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F))) x)) = ((\x. (!H. ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F))) x))
T c= c==> ! ! c==> c~ c==> cedge b1 b0 cinverse * part cedge_map b1 b0 c\/ cedge b1 b0 cinverse * part cedge_map b1 b0 cedge b1 cnode_map b1 b0 cinverse * part cedge_map b1 b0 cF * / ! c==> c~ c==> cedge b1 b0 cinverse * part cedge_map b1 b0 c\/ cedge b1 b0 cinverse * part cedge_map b1 b0 cedge b1 cnode_map b1 b0 cinverse * part cedge_map b1 b0 cF f0 * / ! c==> c~ c==> cedge b1 b0 cinverse * part cedge_map b1 b0 c\/ cedge b1 b0 cinverse * part cedge_map b1 b0 cedge b1 cnode_map b1 b0 cinverse * part cedge_map b1 b0 cF f0
- |- (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))
T c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_faces H) = (number_of_faces ((edge_walkup H) x))))) ==> ((\x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_faces H) = (number_of_faces ((edge_walkup H) x))))) x)) = ((\x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_faces H) = (number_of_faces ((edge_walkup H) x))))) x))
T c= c==> ! c==> c/\ cIN b0 * part cdart f0 cdart_nondegenerate f0 b0 c= cnumber_of_faces f0 cnumber_of_faces cedge_walkup f0 b0 * / c==> c/\ cIN b0 * part cdart f0 cdart_nondegenerate f0 b0 c= cnumber_of_faces f0 cnumber_of_faces cedge_walkup f0 b0 f1 * / c==> c/\ cIN b0 * part cdart f0 cdart_nondegenerate f0 b0 c= cnumber_of_faces f0 cnumber_of_faces cedge_walkup f0 b0 f1
+ (~ ((is_edge_split H) x)), (x IN (dart H)), ((dart_nondegenerate H) x) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> c~ cis_edge_split f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))), (x IN (dart H)), ((dart_nondegenerate H) x), ((is_edge_split H) x) |- (((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes ((edge_walkup H) x)))) ((real_sub ((real_sub (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x))))))))
T c==> c~ c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c==> cis_edge_split f0 f1 c= creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes cedge_walkup f0 f1 creal_sub creal_sub creal_of_num cnumber_of_faces cedge_walkup f0 f1 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (~ ((is_edge_split H) x))), (x IN (dart H)), ((dart_nondegenerate H) x) |- (((~ ((is_edge_split H) x)) \/ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> c~ c~ cis_edge_split f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c==> c\/ c~ cis_edge_split f0 f1 c~ c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))), (x IN (dart H)), ((dart_nondegenerate H) x) |- (((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x))))))))
T c==> c~ c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c= creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_of_num c+ cnumber_of_edges f0 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1
+ ((dart_nondegenerate H) x) |- (~ (((inverse (edge_map H)) x) = x))
T c==> cdart_nondegenerate f0 f1 c~ c= cinverse * part cedge_map f0 f1 f1
- ((dart_nondegenerate H) x) |- (((~ (x = ((inverse (face_map H)) x))) ==> ((x = ((inverse (face_map H)) x)) = F)) = ((x = ((inverse (face_map H)) x)) = F))
T c==> cdart_nondegenerate f0 f1 c= c==> c~ c= f1 cinverse * part cface_map f0 f1 c= c= f1 cinverse * part cface_map f0 f1 cF c= c= f1 cinverse * part cface_map f0 f1 cF
- |- ((((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) ==> (((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)))
T c==> c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), (x IN (dart H)), ((dart_nondegenerate H) x) |- (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x))))))))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c= creal_add creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num c+ cCARD * part cdart cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num c+ cnumber_of_edges f0 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((dart_nondegenerate H) x) |- (((~ (x = ((inverse (node_map H)) x))) ==> ((x = ((inverse (node_map H)) x)) = F)) = ((x = ((inverse (node_map H)) x)) = F))
T c==> cdart_nondegenerate f0 f1 c= c==> c~ c= f1 cinverse * part cnode_map f0 f1 c= c= f1 cinverse * part cnode_map f0 f1 cF c= c= f1 cinverse * part cnode_map f0 f1 cF
+ |- ((!x. (((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> (((((is_edge_split H) x) /\ (~ ((is_splitting_component H) x))) ==> (((real_add (planar_index H)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (planar_index ((edge_walkup H) x)))) /\ ((~ (((is_edge_split H) x) /\ (~ ((is_splitting_component H) x)))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))))) = T)
T c= ! c==> c/\ cIN b0 * part cdart f0 cdart_nondegenerate f0 b0 c/\ c==> c/\ cis_edge_split f0 b0 c~ cis_splitting_component f0 b0 c= creal_add cplanar_index f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cplanar_index cedge_walkup f0 b0 c==> c~ c/\ cis_edge_split f0 b0 c~ cis_splitting_component f0 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 b0 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x IN (dart H)), ((dart_nondegenerate H) x), ((is_edge_merge H) x) |- ((((inverse (edge_map H)) x) IN (((edge H) x) UNION ((edge H) ((node_map H) x)))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c==> cis_edge_merge f1 f0 c==> cIN cinverse * part cedge_map f1 f0 * * part cUNION * * part cedge f1 f0 * * part cedge f1 cnode_map f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- ((((x IN (dart H)) /\ ((dart_nondegenerate H) x)) ==> ((number_of_nodes H) = (number_of_nodes ((edge_walkup H) x)))) = ((number_of_nodes H) = (number_of_nodes ((edge_walkup H) x))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c= c==> c/\ cIN f0 * part cdart f1 cdart_nondegenerate f1 f0 c= cnumber_of_nodes f1 cnumber_of_nodes cedge_walkup f1 f0 c= cnumber_of_nodes f1 cnumber_of_nodes cedge_walkup f1 f0
- |- ((permutes (face_map H)) (dart H))
T cpermutes * part cface_map f0 * part cdart f0
- |- (T = ((~ (~ P)) = P))
T c= cT c= c~ c~ f0 f0
- ((dart_nondegenerate H) x) |- ((((inverse (face_map H)) x) = x) = F)
T c==> cdart_nondegenerate f0 f1 c= c= cinverse * part cface_map f0 f1 f1 cF
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (x IN (dart H)), (((inverse (edge_map H)) x) IN ((edge H) x)), ((dart_nondegenerate H) x), ((is_edge_merge H) x) |- (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))
T c==> cIN f0 * part cdart f1 c==> cIN cinverse * part cedge_map f1 f0 * * part cedge f1 f0 c==> cdart_nondegenerate f1 f0 c==> cis_edge_merge f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0
+ |- ((\y. ((y IN ((edge H) x)) = (?j. (y = (((POWER (edge_map H)) j) x))))) y)
T * / c= cIN b0 * * part cedge f0 f1 c? / c= b0 cPOWER * part cedge_map f0 b1 f1 f2
+ |- (!p. (!x. (((FINITE (dart H)) /\ ((permutes p) (dart H))) ==> (((inverse p) x) IN ((orbit_map p) x)))))
T c==> c/\ cFINITE * part cdart f0 cpermutes f1 * part cdart f0 cIN cinverse f1 f2 * * part corbit_map f1 f2
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((~ ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x)))) ==> F) = ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))
T c= c==> c~ c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1
+ (x IN (dart H)), ((is_edge_split H) x) |- ((((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = (((real_add ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))))
T c==> cIN f0 * part cdart f1 c==> cis_edge_split f1 f0 c= c= creal_add creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0 c= creal_add creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num c+ cnumber_of_edges f1 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((x IN (dart H)) /\ (((dart_nondegenerate H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((number_of_components H) = (number_of_components ((edge_walkup H) x))))) ==> ((\x. (((x IN (dart H)) /\ (((dart_nondegenerate H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((number_of_components H) = (number_of_components ((edge_walkup H) x))))) x)) = ((\x. (((x IN (dart H)) /\ (((dart_nondegenerate H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((number_of_components H) = (number_of_components ((edge_walkup H) x))))) x))
T c= c==> ! c==> c/\ cIN b0 * part cdart f0 c/\ cdart_nondegenerate f0 b0 c= * * part ccomb_component cedge_walkup f0 b0 cnode_map f0 b0 * * part ccomb_component cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 c= cnumber_of_components f0 cnumber_of_components cedge_walkup f0 b0 * / c==> c/\ cIN b0 * part cdart f0 c/\ cdart_nondegenerate f0 b0 c= * * part ccomb_component cedge_walkup f0 b0 cnode_map f0 b0 * * part ccomb_component cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 c= cnumber_of_components f0 cnumber_of_components cedge_walkup f0 b0 f1 * / c==> c/\ cIN b0 * part cdart f0 c/\ cdart_nondegenerate f0 b0 c= * * part ccomb_component cedge_walkup f0 b0 cnode_map f0 b0 * * part ccomb_component cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 c= cnumber_of_components f0 cnumber_of_components cedge_walkup f0 b0 f1
+ (x IN (dart H)), ((is_edge_split H) x) |- ((((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num ((number_of_edges H) + (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = (((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))))
T c==> cIN f0 * part cdart f1 c==> cis_edge_split f1 f0 c= c= creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num c+ cnumber_of_edges f1 cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0 c= creal_add creal_of_num cnumber_of_edges f1 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f1 creal_add creal_of_num cnumber_of_edges cedge_walkup f1 f0 creal_add creal_of_num cnumber_of_nodes f1 creal_sub creal_sub creal_of_num cnumber_of_faces f1 creal_of_num cCARD * part cdart cedge_walkup f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f1 f0
- |- (T = ((((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))))
T c= cT c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- ((dart_nondegenerate H) x) |- (~ (((inverse (face_map H)) x) = x))
T c==> cdart_nondegenerate f0 f1 c~ c= cinverse * part cface_map f0 f1 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ F), (~ ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x)))), (((edge H) x) ((inverse (edge_map H)) x)) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c/\ c~ cF cF
- ((dart_nondegenerate H) x) |- (~ (x = ((inverse (node_map H)) x)))
T c==> cdart_nondegenerate f0 f1 c~ c= f1 cinverse * part cnode_map f0 f1
- ((dart_nondegenerate H) x) |- ((x = ((inverse (edge_map H)) x)) = F)
T c==> cdart_nondegenerate f0 f1 c= c= f1 cinverse * part cedge_map f0 f1 cF
- |- ((!x. (!H. ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x)))))) = (!x. (!H. ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F))))
T c= ! ! c==> cedge b1 b0 cinverse * part cedge_map b1 b0 c\/ cedge b1 b0 cinverse * part cedge_map b1 b0 cedge b1 cnode_map b1 b0 cinverse * part cedge_map b1 b0 ! ! c==> c~ c==> cedge b1 b0 cinverse * part cedge_map b1 b0 c\/ cedge b1 b0 cinverse * part cedge_map b1 b0 cedge b1 cnode_map b1 b0 cinverse * part cedge_map b1 b0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((dart_nondegenerate H) x) |- ((((inverse (node_map H)) x) = x) = F)
T c==> cdart_nondegenerate f0 f1 c= c= cinverse * part cnode_map f0 f1 f1 cF
- |- (((permutes (node_map H)) (dart H)) = T)
T c= cpermutes * part cnode_map f0 * part cdart f0 cT
- (~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) |- F
T c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
- |- (((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x)))) = T)
T c= c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cT
- |- (((edge_map H) o ((node_map H) o (face_map H))) = I)
T c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- ((dart_nondegenerate H) x) |- (~ (x = ((inverse (face_map H)) x)))
T c==> cdart_nondegenerate f0 f1 c~ c= f1 cinverse * part cface_map f0 f1
- ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F), (((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) |- ((((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) /\ ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F))
T c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c/\ c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF
- |- (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))
T c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- (((inverse (edge_map H)) x) IN ((comb_component ((edge_walkup H) x)) ((node_map H) x))) |- (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))
T c==> cIN cinverse * part cedge_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F))
T c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((dart_nondegenerate H) x) |- (~ (((inverse (node_map H)) x) = x))
T c==> cdart_nondegenerate f0 f1 c~ c= cinverse * part cnode_map f0 f1 f1
- (x = ((inverse (face_map H)) x)) |- (((inverse (face_map H)) x) = x)
T c==> c= f0 cinverse * part cface_map f1 f0 c= cinverse * part cface_map f1 f0 f0
- ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F), (((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) |- (((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) /\ ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F))
T c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c/\ c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\x. (!H. ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F))) x)
T * / ! c==> c~ c==> cedge b1 b0 cinverse * part cedge_map b1 b0 c\/ cedge b1 b0 cinverse * part cedge_map b1 b0 cedge b1 cnode_map b1 b0 cinverse * part cedge_map b1 b0 cF f0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) ==> (((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F))) = (((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)))
T c= c==> c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) ==> ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) = ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F))
T c= c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((dart_nondegenerate H) x) |- ((~ (((inverse (node_map H)) x) = x)) /\ (~ (((inverse (face_map H)) x) = x)))
T c==> cdart_nondegenerate f0 f1 c/\ c~ c= cinverse * part cnode_map f0 f1 f1 c~ c= cinverse * part cface_map f0 f1 f1
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((inverse (node_map H)) x) = x) |- (x = ((inverse (node_map H)) x))
T c==> c= cinverse * part cnode_map f0 f1 f1 c= f1 cinverse * part cnode_map f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((inverse (face_map H)) x) = x) |- (x = ((inverse (face_map H)) x))
T c==> c= cinverse * part cface_map f0 f1 f1 c= f1 cinverse * part cface_map f0 f1
- ((dart_nondegenerate H) x) |- ((x = ((inverse (node_map H)) x)) = F)
T c==> cdart_nondegenerate f0 f1 c= c= f1 cinverse * part cnode_map f0 f1 cF
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) |- (((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F) /\ ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F))
T c==> c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c/\ c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF
- (((inverse (edge_map H)) x) IN ((comb_component ((edge_walkup H) x)) ((node_map H) x))) |- (((((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)))) = (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))
T c==> cIN cinverse * part cedge_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 c= c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
- (x = ((inverse (node_map H)) x)) |- (((inverse (node_map H)) x) = x)
T c==> c= f0 cinverse * part cnode_map f1 f0 c= cinverse * part cnode_map f1 f0 f0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!H. (P H)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (?j. (((inverse (edge_map H)) x) = (((POWER (edge_map ((edge_walkup H) x))) j) ((node_map H) x)))) |- ((?j. (((inverse (edge_map H)) x) = (((POWER (edge_map ((edge_walkup H) x))) j) ((node_map H) x)))) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))
T c==> c? / c= cinverse * part cedge_map f0 f1 cPOWER * part cedge_map cedge_walkup f0 f1 b0 cnode_map f0 f1 c/\ c? / c= cinverse * part cedge_map f0 f1 cPOWER * part cedge_map cedge_walkup f0 f1 b0 cnode_map f0 f1 c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (((edge H) x) ((inverse (edge_map H)) x)) |- ((~ (((edge H) x) ((inverse (edge_map H)) x))) ==> (((edge H) x) ((inverse (edge_map H)) x)))
T c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c==> c~ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 f1 cinverse * part cedge_map f0 f1
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x)))), (((edge H) x) ((inverse (edge_map H)) x)) |- ((~ F) ==> F)
T c==> c~ c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c==> c~ cF cF
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((inverse (edge_map H)) x) = x) |- (x = ((inverse (edge_map H)) x))
T c==> c= cinverse * part cedge_map f0 f1 f1 c= f1 cinverse * part cedge_map f0 f1
- |- (((!H. ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) ==> ((\H. ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) H)) = ((\H. ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) ==> F)) H))
T c= c==> ! c==> c~ c==> cedge b0 f0 cinverse * part cedge_map b0 f0 c\/ cedge b0 f0 cinverse * part cedge_map b0 f0 cedge b0 cnode_map b0 f0 cinverse * part cedge_map b0 f0 cF * / c==> c~ c==> cedge b0 f0 cinverse * part cedge_map b0 f0 c\/ cedge b0 f0 cinverse * part cedge_map b0 f0 cedge b0 cnode_map b0 f0 cinverse * part cedge_map b0 f0 cF f1 * / c==> c~ c==> cedge b0 f0 cinverse * part cedge_map b0 f0 c\/ cedge b0 f0 cinverse * part cedge_map b0 f0 cedge b0 cnode_map b0 f0 cinverse * part cedge_map b0 f0 cF f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) |- ((~ ((((edge H) x) ((inverse (edge_map H)) x)) ==> ((((edge H) x) ((inverse (edge_map H)) x)) \/ (((edge H) ((node_map H) x)) ((inverse (edge_map H)) x))))) /\ F)
T c==> c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 c/\ c~ c==> cedge f0 f1 cinverse * part cedge_map f0 f1 c\/ cedge f0 f1 cinverse * part cedge_map f0 f1 cedge f0 cnode_map f0 f1 cinverse * part cedge_map f0 f1 cF
- (x IN (dart H)) |- ((x IN (dart H)) = T)
T c==> cIN f0 * part cdart f1 c= cIN f0 * part cdart f1 cT
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
