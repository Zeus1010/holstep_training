N HAS_MEASURE_POS_LE
C |- (!m. (!s. (((has_measure s) m) ==> ((real_le (real_of_num (NUMERAL _0))) m))))
T c==> chas_measure f0 f1 creal_le creal_of_num cNUMERAL c_0 f1
D TRUTH
A |- T
T cT
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D ARITH_LE
A |- ((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) /\ (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))))
T c/\ ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
D REAL_POS
A |- (!n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n)))
T creal_le creal_of_num cNUMERAL c_0 creal_of_num f0
D IN_UNIV
A |- (!x. (x IN UNIV))
T cIN f0 part cUNIV
D DIMINDEX_1
A |- ((dimindex UNIV) = (NUMERAL (BIT1 _0)))
T c= cdimindex part cUNIV cNUMERAL cBIT1 c_0
D drop
A |- (!x. ((drop x) = (x $ (NUMERAL (BIT1 _0)))))
T c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0
D LIFT_DROP
A |- ((!x. ((lift (drop x)) = x)) /\ (!x. ((drop (lift x)) = x)))
T c/\ ! c= clift cdrop b0 b0 ! c= cdrop clift b0 b0
D DROP_VEC
A |- (!n. ((drop (vec n)) = (real_of_num n)))
T c= cdrop cvec f0 creal_of_num f0
D HAS_INTEGRAL_COMPONENT_POS
A |- (!f. (!s. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral f) i) s) /\ (!x. ((x IN s) ==> ((real_le (real_of_num (NUMERAL _0))) ((f x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral f1 f2 f3 ! c==> cIN b0 f3 creal_le creal_of_num cNUMERAL c_0 c$ * f1 b0 f0 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0
D HAS_MEASURE
A |- (!s. (!m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV))))
T c= chas_measure f0 f1 chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV
- |- ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
- |- (((!n. (((BIT0 n) + _0) = (BIT0 n))) ==> ((\n. (((BIT0 n) + _0) = (BIT0 n))) n)) = ((\n. (((BIT0 n) + _0) = (BIT0 n))) n))
T c= c==> ! c= c+ cBIT0 b0 c_0 cBIT0 b0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0
+ |- ((\s. (!m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV)))) s)
T * / ! c= chas_measure b0 b1 chas_integral / cCOND cIN b2 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b1 part cUNIV f0
+ |- ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))
T creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) |- (((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))) = T)
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 c= c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 f1 c/\ c<= f1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f1 creal_le creal_of_num cNUMERAL c_0 c$ f2 f1 cT
- |- (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))
T c= cEXP cBIT0 f0 cBIT0 f1 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
- |- (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) ==> ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m)) = ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0
- |- ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 n) * _0) = _0)) ==> ((\n. (((BIT1 n) * _0) = _0)) n)) = ((\n. (((BIT1 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT1 b0 c_0 c_0 * / c= c* cBIT1 b0 c_0 c_0 f0 * / c= c* cBIT1 b0 c_0 c_0 f0
- |- (((BIT0 m) = (BIT1 n)) = F)
T c= c= cBIT0 f0 cBIT1 f1 cF
- |- (((!n. (((BIT0 n) * _0) = _0)) ==> ((\n. (((BIT0 n) * _0) = _0)) n)) = ((\n. (((BIT0 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT0 b0 c_0 c_0 * / c= c* cBIT0 b0 c_0 c_0 f0 * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((!n. ((BIT1 n) > _0)) ==> ((\n. ((BIT1 n) > _0)) n)) = ((\n. ((BIT1 n) > _0)) n))
T c= c==> ! c> cBIT1 b0 c_0 * / c> cBIT1 b0 c_0 f0 * / c> cBIT1 b0 c_0 f0
- |- (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))
T c= c+ cBIT0 f0 cBIT1 f1 cBIT1 c+ f0 f1
- |- ((SUC _0) = (BIT1 _0))
T c= cSUC c_0 cBIT1 c_0
- |- (((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
- |- ((_0 <= (BIT0 n)) = T)
T c= c<= c_0 cBIT0 f0 cT
- |- (((BIT1 m) = (BIT0 n)) = F)
T c= c= cBIT1 f0 cBIT0 f1 cF
- |- ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))
T c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- (((PRE _0) = _0) /\ ((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) /\ (!n. ((PRE (BIT1 n)) = (BIT0 n)))))
T c/\ c= cPRE c_0 c_0 c/\ ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 ! c= cPRE cBIT1 b0 cBIT0 b0
- |- (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))
T c= c* cBIT0 f0 cBIT0 f1 cBIT0 cBIT0 c* f0 f1
- |- ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))
T c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((\x. (x IN UNIV)) x)
T * / cIN b0 part cUNIV f0
- |- (((BIT1 m) < (BIT0 n)) = (m < n))
T c= c< cBIT1 f0 cBIT0 f1 c< f0 f1
+ (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) /\ ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 f3 ! c==> cIN b0 f3 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 f3 ! c==> cIN b0 f3 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0
- |- ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
+ |- ((\k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))) k)
T * / c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f1 b1 ! c==> cIN b2 b1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 b0 creal_le creal_of_num cNUMERAL c_0 c$ f1 b0 f2
- |- (((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
- |- ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))
T c= cEXP c_0 cBIT0 f0 c* cEXP c_0 f0 cEXP c_0 f0
- |- (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))
T c= cEXP cNUMERAL f0 cNUMERAL f1 cNUMERAL cEXP f0 f1
- |- (((!n. ((SUC (BIT0 n)) = (BIT1 n))) ==> ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)) = ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n))
T c= c==> ! c= cSUC cBIT0 b0 cBIT1 b0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0
- |- ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F)))
T c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!n. ((ODD (BIT0 n)) = F)) ==> ((\n. ((ODD (BIT0 n)) = F)) n)) = ((\n. ((ODD (BIT0 n)) = F)) n))
T c= c==> ! c= cODD cBIT0 b0 cF * / c= cODD cBIT0 b0 cF f0 * / c= cODD cBIT0 b0 cF f0
- |- ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
- |- (((!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) ==> ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n)) = ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
- |- (((!n. ((_0 * (BIT0 n)) = _0)) ==> ((\n. ((_0 * (BIT0 n)) = _0)) n)) = ((\n. ((_0 * (BIT0 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT0 b0 c_0 * / c= c* c_0 cBIT0 b0 c_0 f0 * / c= c* c_0 cBIT0 b0 c_0 f0
- |- (((!n. ((EVEN (BIT1 n)) = F)) ==> ((\n. ((EVEN (BIT1 n)) = F)) n)) = ((\n. ((EVEN (BIT1 n)) = F)) n))
T c= c==> ! c= cEVEN cBIT1 b0 cF * / c= cEVEN cBIT1 b0 cF f0 * / c= cEVEN cBIT1 b0 cF f0
- |- (((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
- |- ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)
T * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
+ |- ((((x IN s) ==> ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) /\ ((~ (x IN s)) ==> ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))))) = ((real_le (real_of_num (NUMERAL _0))) ((((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) $ (NUMERAL (BIT1 _0)))))
T c= c/\ c==> cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c~ cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL c_0 c$ cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)
T * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
- |- ((\n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) n)
T * / c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 f0
- |- ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))
T c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))))
T c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((_0 < _0) = F)
T c= c< c_0 c_0 cF
- |- (((!n. (((BIT1 n) < _0) = F)) ==> ((\n. (((BIT1 n) < _0) = F)) n)) = ((\n. (((BIT1 n) < _0) = F)) n))
T c= c==> ! c= c< cBIT1 b0 c_0 cF * / c= c< cBIT1 b0 c_0 cF f0 * / c= c< cBIT1 b0 c_0 cF f0
- |- ((_0 + (BIT0 n)) = (BIT0 n))
T c= c+ c_0 cBIT0 f0 cBIT0 f0
- |- ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))
T c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((\n. ((BIT0 n) >= _0)) n)
T * / c>= cBIT0 b0 c_0 f0
- |- (((BIT1 n) - _0) = (BIT1 n))
T c= c- cBIT1 f0 c_0 cBIT1 f0
- |- (((!n. ((_0 - (BIT0 n)) = _0)) ==> ((\n. ((_0 - (BIT0 n)) = _0)) n)) = ((\n. ((_0 - (BIT0 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT0 b0 c_0 * / c= c- c_0 cBIT0 b0 c_0 f0 * / c= c- c_0 cBIT0 b0 c_0 f0
+ |- (((~ (x IN s)) ==> ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) = (((x IN s) ==> ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) /\ ((~ (x IN s)) ==> ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))))))
T c= c==> c~ cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c==> cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c~ cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) ==> ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)) = ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n))
T c= c==> ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
- |- ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)
T * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))
T c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 n) <= _0) = F)) ==> ((\n. (((BIT1 n) <= _0) = F)) n)) = ((\n. (((BIT1 n) <= _0) = F)) n))
T c= c==> ! c= c<= cBIT1 b0 c_0 cF * / c= c<= cBIT1 b0 c_0 cF f0 * / c= c<= cBIT1 b0 c_0 cF f0
- |- ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))), (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) |- ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) /\ ((real_le (real_of_num (NUMERAL _0))) (i $ k)))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c/\ c<= f1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 f3 ! c==> cIN b0 f3 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f1 c/\ ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 creal_le creal_of_num cNUMERAL c_0 c$ f2 f1
- |- ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))
T c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((\n. (~ (_0 >= (BIT1 n)))) n)
T * / c~ c>= c_0 cBIT1 b0 f0
- |- (((!n. ((_0 + (BIT0 n)) = (BIT0 n))) ==> ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)) = ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n))
T c= c==> ! c= c+ c_0 cBIT0 b0 cBIT0 b0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- |- (((!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) ==> ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)) = ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
- |- (((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) ==> ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)) = ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT0 b1 cF * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0 * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
- |- ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)
T * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
- |- ((SUC (BIT1 n)) = (BIT0 (SUC n)))
T c= cSUC cBIT1 f0 cBIT0 cSUC f0
- |- (((BIT1 m) < (BIT1 n)) = (m < n))
T c= c< cBIT1 f0 cBIT1 f1 c< f0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (x IN s) |- (((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) = ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))))
T c==> cIN f0 f1 c= creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)
T * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
- |- (((!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((NUMERAL (NUMERAL _0)) = (NUMERAL _0))
T c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0
- |- (((!n. ((PRE (BIT1 n)) = (BIT0 n))) ==> ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n)) = ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n))
T c= c==> ! c= cPRE cBIT1 b0 cBIT0 b0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0
- |- (((!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) ==> ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)) = ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n))
T c= c==> ! c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
+ |- (((BIT1 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT1 f0 cBIT1 f1 c<= f0 f1
- |- (((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) ==> ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)) = ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
+ |- ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))
T creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((EVEN _0) = T) /\ ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F))))
T c/\ c= cEVEN c_0 cT c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- (((!x. (((\s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) x) ==> ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))) ==> ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))) = ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))
T c= c==> ! c==> * / c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b2 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b1 ! c==> cIN b2 b1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b3 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 f0 b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c/\ c<= b3 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b4 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 b1 ! c==> cIN b4 b1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b5 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b4 b3 creal_le creal_of_num cNUMERAL c_0 c$ b2 b3 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0 c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0 c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0
- |- ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1
- |- (((NUMERAL n) > (NUMERAL m)) = (n > m))
T c= c> cNUMERAL f0 cNUMERAL f1 c> f0 f1
- |- ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))
T c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- (((BIT0 m) < (BIT0 n)) = (m < n))
T c= c< cBIT0 f0 cBIT0 f1 c< f0 f1
- |- ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))
T c= cPRE cNUMERAL f0 cNUMERAL cPRE f0
+ (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) |- (?s'. (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ (NUMERAL (BIT1 _0))))))))))
T c==> chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV c? / c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 cNUMERAL cBIT1 c_0
+ (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) |- ((real_le (real_of_num (NUMERAL _0))) (drop (lift m)))
T c==> chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV creal_le creal_of_num cNUMERAL c_0 cdrop clift f1
- |- (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))
T c= c+ cBIT1 f0 cBIT1 f1 cBIT0 cSUC c+ f0 f1
- |- (((!n. ((_0 EXP (BIT1 n)) = _0)) ==> ((\n. ((_0 EXP (BIT1 n)) = _0)) n)) = ((\n. ((_0 EXP (BIT1 n)) = _0)) n))
T c= c==> ! c= cEXP c_0 cBIT1 b0 c_0 * / c= cEXP c_0 cBIT1 b0 c_0 f0 * / c= cEXP c_0 cBIT1 b0 c_0 f0
- |- ((!x. t) = t)
T c= ! f0 f0
- |- ((_0 >= (BIT0 n)) = (_0 >= n))
T c= c>= c_0 cBIT0 f0 c>= c_0 f0
+ ((drop x) = (x $ (NUMERAL (BIT1 _0)))) |- ((x $ (NUMERAL (BIT1 _0))) = (drop x))
T c==> c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0 c= c$ f0 cNUMERAL cBIT1 c_0 cdrop f0
- |- (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))))
T c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT0 n) - _0) = (BIT0 n))
T c= c- cBIT0 f0 c_0 cBIT0 f0
+ |- (((!i. (!k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))) ==> ((\i. (!k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))) i)) = ((\i. (!k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))) i))
T c= c==> ! ! c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 b2 ! c==> cIN b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1 * / ! c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 b2 ! c==> cIN b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1 f1 * / ! c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 b2 ! c==> cIN b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1 f1
+ |- (((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> (!i. (!k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) = (!i. (!k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))))
T c= c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 ! ! c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 b2 ! c==> cIN b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1 ! ! c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 b2 ! c==> cIN b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1
- |- (((!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) ==> ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)) = ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
- |- ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT1 n) <= _0) = F)
T c= c<= cBIT1 f0 c_0 cF
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) |- ((\k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))) k)
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f1 f2 ! c==> cIN b1 f2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ f1 b0 f3
- |- ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))
T c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)
T * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
+ |- ((~ (x IN s)) ==> ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))))
T c==> c~ cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ ((\s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) s') |- (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))
T c==> * / c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f0 f3 c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 f3 ! c==> cIN b0 f3 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f0
+ |- ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)
T * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
- |- ((\n. ((EVEN (BIT0 n)) = T)) n)
T * / c= cEVEN cBIT0 b0 cT f0
- |- ((_0 + _0) = _0)
T c= c+ c_0 c_0 c_0
- |- (((!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) ==> ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)) = ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n))
T c= c==> ! c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
- |- ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))
T c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((_0 * (BIT0 n)) = _0)
T c= c* c_0 cBIT0 f0 c_0
- |- (((!n. (((BIT0 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- (((BIT0 n) >= (BIT0 m)) = (n >= m))
T c= c>= cBIT0 f0 cBIT0 f1 c>= f0 f1
- |- (((BIT0 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT1 f1 c<= f0 f1
- |- ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0
+ |- ((((\s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) s') ==> ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))) = T)
T c= c==> * / c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f0 f3 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0 cT
+ |- (!x. ((drop (lift x)) = x))
T c= cdrop clift f0 f0
- |- (((!n. ((_0 * (BIT1 n)) = _0)) ==> ((\n. ((_0 * (BIT1 n)) = _0)) n)) = ((\n. ((_0 * (BIT1 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT1 b0 c_0 * / c= c* c_0 cBIT1 b0 c_0 f0 * / c= c* c_0 cBIT1 b0 c_0 f0
- |- ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m)
T * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0
- |- ((EVEN (BIT1 n)) = F)
T c= cEVEN cBIT1 f0 cF
- |- ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)
T * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
- |- ((PRE _0) = _0)
T c= cPRE c_0 c_0
- |- ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n)
T * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((\n. ((BIT1 n) > _0)) n)
T * / c> cBIT1 b0 c_0 f0
- |- (((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) ==> ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0
- (x IN s) |- ((x IN s) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
- |- (((!n. ((BIT1 n) >= _0)) ==> ((\n. ((BIT1 n) >= _0)) n)) = ((\n. ((BIT1 n) >= _0)) n))
T c= c==> ! c>= cBIT1 b0 c_0 * / c>= cBIT1 b0 c_0 f0 * / c>= cBIT1 b0 c_0 f0
- |- (((!n. (((BIT1 n) > (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 > (BIT0 n)) = F)
T c= c> c_0 cBIT0 f0 cF
- |- (((!n. (((BIT1 n) - _0) = (BIT1 n))) ==> ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)) = ((\n. (((BIT1 n) - _0) = (BIT1 n))) n))
T c= c==> ! c= c- cBIT1 b0 c_0 cBIT1 b0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) ==> ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)) = ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((EVEN _0) = T)
T c= cEVEN c_0 cT
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) ==> ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)) = ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m))
T c= c==> ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
- |- ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))
T c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- ((x $ (NUMERAL (BIT1 _0))) = (drop x))
T c= c$ f0 cNUMERAL cBIT1 c_0 cdrop f0
+ |- (((!f. (!s. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral f) i) s) /\ (!x. ((x IN s) ==> ((real_le (real_of_num (NUMERAL _0))) ((f x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))))) ==> ((\f. (!s. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral f) i) s) /\ (!x. ((x IN s) ==> ((real_le (real_of_num (NUMERAL _0))) ((f x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))))) (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))) = ((\f. (!s. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral f) i) s) /\ (!x. ((x IN s) ==> ((real_le (real_of_num (NUMERAL _0))) ((f x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))))) (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))
T c= c==> ! ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c/\ c<= b3 cdimindex part cUNIV c/\ chas_integral b0 b2 b1 ! c==> cIN b4 b1 creal_le creal_of_num cNUMERAL c_0 c$ * b0 b4 b3 creal_le creal_of_num cNUMERAL c_0 c$ b2 b3 * / ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c/\ c<= b3 cdimindex part cUNIV c/\ chas_integral b0 b2 b1 ! c==> cIN b4 b1 creal_le creal_of_num cNUMERAL c_0 c$ * b0 b4 b3 creal_le creal_of_num cNUMERAL c_0 c$ b2 b3 / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 * / ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c/\ c<= b3 cdimindex part cUNIV c/\ chas_integral b0 b2 b1 ! c==> cIN b4 b1 creal_le creal_of_num cNUMERAL c_0 c$ * b0 b4 b3 creal_le creal_of_num cNUMERAL c_0 c$ b2 b3 / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (!m. (!s. ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) ==> ((real_le (real_of_num (NUMERAL _0))) m))))
T c==> chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV creal_le creal_of_num cNUMERAL c_0 f1
+ |- (((real_le (real_of_num (NUMERAL _0))) (drop (lift m))) = ((real_le (real_of_num (NUMERAL _0))) m))
T c= creal_le creal_of_num cNUMERAL c_0 cdrop clift f0 creal_le creal_of_num cNUMERAL c_0 f0
+ |- ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))
T c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) |- ((\i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))) i)
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f1 ! c==> cIN b2 f1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((!k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))) ==> ((\k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))) k)) = ((\k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))) k))
T c= c==> ! c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f1 b1 ! c==> cIN b2 b1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 b0 creal_le creal_of_num cNUMERAL c_0 c$ f1 b0 * / c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f1 b1 ! c==> cIN b2 b1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 b0 creal_le creal_of_num cNUMERAL c_0 c$ f1 b0 f2 * / c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f1 b1 ! c==> cIN b2 b1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 b0 creal_le creal_of_num cNUMERAL c_0 c$ f1 b0 f2
+ |- ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))), (?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) |- ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) /\ ((real_le (real_of_num (NUMERAL _0))) (i $ k)))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 f1 c/\ c<= f1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f1 c/\ c? / c/\ c<= cNUMERAL cBIT1 c_0 f1 c/\ c<= f1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f1 creal_le creal_of_num cNUMERAL c_0 c$ f2 f1
+ |- ((\x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) x)
T * / c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 f0
+ |- (x = (drop (lift x)))
T c= f0 cdrop clift f0
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) |- ((!k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))) = T)
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 c= ! c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f1 b1 ! c==> cIN b2 b1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 b0 creal_le creal_of_num cNUMERAL c_0 c$ f1 b0 cT
+ |- (((!n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) ==> ((\n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) n)) = ((\n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) n))
T c= c==> ! creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 * / creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 f0 * / creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 f0
+ |- ((\x. ((drop x) = (x $ (NUMERAL (BIT1 _0))))) x)
T * / c= cdrop b0 c$ b0 cNUMERAL cBIT1 c_0 f0
+ |- (((!x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) ==> ((\x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) x)) = ((\x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) x))
T c= c==> ! c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 * / c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 f0 * / c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 f0
+ (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) |- ((real_le (real_of_num (NUMERAL _0))) ((lift m) $ (NUMERAL (BIT1 _0))))
T c==> chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV creal_le creal_of_num cNUMERAL c_0 c$ clift f1 cNUMERAL cBIT1 c_0
+ ((x $ (NUMERAL (BIT1 _0))) = (drop x)) |- ((drop x) = (x $ (NUMERAL (BIT1 _0))))
T c==> c= c$ f0 cNUMERAL cBIT1 c_0 cdrop f0 c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0
+ |- ((\n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) n)
T * / creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 f0
+ |- (((!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ |- (((real_le (real_of_num (NUMERAL _0))) ((lift m) $ (NUMERAL (BIT1 _0)))) = ((real_le (real_of_num (NUMERAL _0))) (drop (lift m))))
T c= creal_le creal_of_num cNUMERAL c_0 c$ clift f0 cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL c_0 cdrop clift f0
+ |- ((\m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV))) m)
T * / c= chas_measure f0 b0 chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b0 part cUNIV f1
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) |- ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 f1 c/\ c<= f1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f1 creal_le creal_of_num cNUMERAL c_0 c$ f2 f1
+ |- (((!m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV))) ==> ((\m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV))) m)) = ((\m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV))) m))
T c= c==> ! c= chas_measure f0 b0 chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b0 part cUNIV * / c= chas_measure f0 b0 chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b0 part cUNIV f1 * / c= chas_measure f0 b0 chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b0 part cUNIV f1
+ |- ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ |- (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))))
T c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- (T = ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))))
T c= cT creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) |- ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))
T c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0
+ |- (((!n. ((drop (vec n)) = (real_of_num n))) ==> ((\n. ((drop (vec n)) = (real_of_num n))) n)) = ((\n. ((drop (vec n)) = (real_of_num n))) n))
T c= c==> ! c= cdrop cvec b0 creal_of_num b0 * / c= cdrop cvec b0 creal_of_num b0 f0 * / c= cdrop cvec b0 creal_of_num b0 f0
+ (~ (x IN s)) |- ((~ (x IN s)) /\ ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))))
T c==> c~ cIN f0 f1 c/\ c~ cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- (((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) ==> ((real_le (real_of_num (NUMERAL _0))) m)) = T)
T c= c==> chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV creal_le creal_of_num cNUMERAL c_0 f1 cT
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))), (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) |- ((real_le (real_of_num (NUMERAL _0))) (i $ k))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c/\ c<= f1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 f3 ! c==> cIN b0 f3 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f1 creal_le creal_of_num cNUMERAL c_0 c$ f2 f1
+ |- ((x IN UNIV) = T)
T c= cIN f0 part cUNIV cT
+ |- ((\n. ((drop (vec n)) = (real_of_num n))) n)
T * / c= cdrop cvec b0 creal_of_num b0 f0
+ |- ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> (!i. (!k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 ! ! c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 b2 ! c==> cIN b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1
+ |- (((real_le (real_of_num (NUMERAL _0))) ((((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) $ (NUMERAL (BIT1 _0)))) = T)
T c= creal_le creal_of_num cNUMERAL c_0 c$ cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
+ |- ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 f3 ! c==> cIN b0 f3 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0
+ ((drop (lift x)) = x) |- (x = (drop (lift x)))
T c==> c= cdrop clift f0 f0 c= f0 cdrop clift f0
+ |- (((!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
+ |- ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))
T c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) /\ (!x. ((x IN UNIV) ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ (NUMERAL (BIT1 _0)))))))))
T c==> chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV ! c==> cIN b0 part cUNIV creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 cNUMERAL cBIT1 c_0
+ |- ((!m. (!s. ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) ==> ((real_le (real_of_num (NUMERAL _0))) m)))) = (!m. (!s. (((has_measure s) m) ==> ((real_le (real_of_num (NUMERAL _0))) m)))))
T c= ! ! c==> chas_integral / cCOND cIN b2 b1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b0 part cUNIV creal_le creal_of_num cNUMERAL c_0 b0 ! ! c==> chas_measure b1 b0 creal_le creal_of_num cNUMERAL c_0 b0
+ |- (((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) ==> ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)) = ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
+ |- ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))
T c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) |- ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) = T)
T c==> chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV c= chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV cT
+ |- ((!s. ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) ==> ((real_le (real_of_num (NUMERAL _0))) m))) = T)
T c= ! c==> chas_integral / cCOND cIN b1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f0 part cUNIV creal_le creal_of_num cNUMERAL c_0 f0 cT
+ |- ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)
T * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
+ |- ((\i. (!k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))) i)
T * / ! c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 b2 ! c==> cIN b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1 f1
+ |- ((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) /\ (!x. ((x IN UNIV) ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ (NUMERAL (BIT1 _0))))))))) = ((\s'. (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ (NUMERAL (BIT1 _0)))))))))) UNIV))
T c= c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV ! c==> cIN b0 part cUNIV creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 cNUMERAL cBIT1 c_0 * / c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 cNUMERAL cBIT1 c_0 part cUNIV
+ |- (!x. ((real_le (real_of_num (NUMERAL _0))) ((((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) $ (NUMERAL (BIT1 _0)))))
T creal_le creal_of_num cNUMERAL c_0 c$ cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (x IN s) |- ((x IN s) /\ ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))))
T c==> cIN f0 f1 c/\ cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((!x. (x = (drop (lift x)))) ==> ((\x. (x = (drop (lift x)))) x)) = ((\x. (x = (drop (lift x)))) x))
T c= c==> ! c= b0 cdrop clift b0 * / c= b0 cdrop clift b0 f0 * / c= b0 cdrop clift b0 f0
+ |- (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 f3 ! c==> cIN b0 f3 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f0 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0
+ ((\s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) s') |- (((\s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) s') /\ ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))
T c==> * / c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f0 f3 c/\ * / c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f0 f3 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0
+ |- (((!x. (x IN UNIV)) ==> ((\x. (x IN UNIV)) x)) = ((\x. (x IN UNIV)) x))
T c= c==> ! cIN b0 part cUNIV * / cIN b0 part cUNIV f0 * / cIN b0 part cUNIV f0
+ |- (((!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) ==> ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)) = ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n))
T c= c==> ! c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
+ |- (((real_le (real_of_num (NUMERAL _0))) (real_of_num n)) = T)
T c= creal_le creal_of_num cNUMERAL c_0 creal_of_num f0 cT
+ |- ((\f. (!s. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral f) i) s) /\ (!x. ((x IN s) ==> ((real_le (real_of_num (NUMERAL _0))) ((f x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))))) (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))
T * / ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c/\ c<= b3 cdimindex part cUNIV c/\ chas_integral b0 b2 b1 ! c==> cIN b4 b1 creal_le creal_of_num cNUMERAL c_0 c$ * b0 b4 b3 creal_le creal_of_num cNUMERAL c_0 c$ b2 b3 / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (T = ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))))
T c= cT creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((_0 <= _0) = T)
T c= c<= c_0 c_0 cT
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) |- (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f1 ! c==> cIN b2 f1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) |- ((\s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) s')
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 * / ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 f1
+ (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) |- (((?s'. (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ (NUMERAL (BIT1 _0)))))))))) ==> ((real_le (real_of_num (NUMERAL _0))) ((lift m) $ (NUMERAL (BIT1 _0))))) = ((real_le (real_of_num (NUMERAL _0))) ((lift m) $ (NUMERAL (BIT1 _0)))))
T c==> chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV c= c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL c_0 c$ clift f1 cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL c_0 c$ clift f1 cNUMERAL cBIT1 c_0
+ |- (((x IN s) ==> ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) /\ ((~ (x IN s)) ==> ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))))
T c/\ c==> cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c~ cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- ((x IN s) ==> ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))))
T c==> cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) |- ((\s'. (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ (NUMERAL (BIT1 _0)))))))))) UNIV)
T c==> chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV * / c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 cNUMERAL cBIT1 c_0 part cUNIV
+ (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) |- ((!x. ((real_le (real_of_num (NUMERAL _0))) ((((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) $ (NUMERAL (BIT1 _0))))) = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) /\ (!x. ((x IN UNIV) ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ (NUMERAL (BIT1 _0))))))))))
T c==> chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV c= ! creal_le creal_of_num cNUMERAL c_0 c$ cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV ! c==> cIN b0 part cUNIV creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 cNUMERAL cBIT1 c_0
+ |- (!s'. (((\s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) s') ==> ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))
T c==> * / c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f0 f3 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0
+ |- ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))
T c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) |- (!k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 ! c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f1 b1 ! c==> cIN b2 b1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 b0 creal_le creal_of_num cNUMERAL c_0 c$ f1 b0
+ |- (((NUMERAL m) <= (NUMERAL n)) = (m <= n))
T c= c<= cNUMERAL f0 cNUMERAL f1 c<= f0 f1
+ |- ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)
T * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
+ ((\s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) s') |- (((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))) = ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))
T c==> * / c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 f3 ! c==> cIN b0 f3 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0
+ |- (((!s. (!m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV)))) ==> ((\s. (!m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV)))) s)) = ((\s. (!m. (((has_measure s) m) = (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV)))) s))
T c= c==> ! ! c= chas_measure b0 b1 chas_integral / cCOND cIN b2 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b1 part cUNIV * / ! c= chas_measure b0 b1 chas_integral / cCOND cIN b2 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b1 part cUNIV f0 * / ! c= chas_measure b0 b1 chas_integral / cCOND cIN b2 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift b1 part cUNIV f0
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) |- (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f1 f2 ! c==> cIN b1 f2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ f1 b0
+ |- (((real_le (real_of_num (NUMERAL _0))) ((((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) $ (NUMERAL (BIT1 _0)))) = (((x IN s) ==> ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) /\ ((~ (x IN s)) ==> ((real_le (real_of_num (NUMERAL _0))) ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))))))
T c= creal_le creal_of_num cNUMERAL c_0 c$ cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c==> cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c~ cIN f0 f1 creal_le creal_of_num cNUMERAL c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) |- ((!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) /\ (!i. (!k. ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 c/\ ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 ! ! c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 b2 ! c==> cIN b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- (((!x. ((drop x) = (x $ (NUMERAL (BIT1 _0))))) ==> ((\x. ((drop x) = (x $ (NUMERAL (BIT1 _0))))) x)) = ((\x. ((drop x) = (x $ (NUMERAL (BIT1 _0))))) x))
T c= c==> ! c= cdrop b0 c$ b0 cNUMERAL cBIT1 c_0 * / c= cdrop b0 c$ b0 cNUMERAL cBIT1 c_0 f0 * / c= cdrop b0 c$ b0 cNUMERAL cBIT1 c_0 f0
+ |- ((\x. (x = (drop (lift x)))) x)
T * / c= b0 cdrop clift b0 f0
+ |- ((?s'. (((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k)))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))
T c==> c? / c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f2 b0 ! c==> cIN b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 f0 creal_le creal_of_num cNUMERAL c_0 c$ f2 f0
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) |- (((!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))) ==> ((\i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))) i)) = ((\i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k))))) i))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 c= c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f1 ! c==> cIN b2 f1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1 * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f1 ! c==> cIN b2 f1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1 f2 * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c<= b1 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 f1 ! c==> cIN b2 f1 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 b1 creal_le creal_of_num cNUMERAL c_0 c$ b0 b1 f2
+ (!s'. (!i. (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))))) |- (((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))) ==> ((\k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))) k)) = ((\k. ((((NUMERAL (BIT1 _0)) <= k) /\ ((k <= (dimindex UNIV)) /\ ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) i) s') /\ (!x. ((x IN s') ==> ((real_le (real_of_num (NUMERAL _0))) (((\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) x) $ k))))))) ==> ((real_le (real_of_num (NUMERAL _0))) (i $ k)))) k))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c/\ c<= b2 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b3 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 ! c==> cIN b3 b0 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b4 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b3 b2 creal_le creal_of_num cNUMERAL c_0 c$ b1 b2 c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f1 f2 ! c==> cIN b1 f2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ f1 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f1 f2 ! c==> cIN b1 f2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ f1 b0 f3 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ chas_integral / cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f1 f2 ! c==> cIN b1 f2 creal_le creal_of_num cNUMERAL c_0 c$ * / cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 b0 creal_le creal_of_num cNUMERAL c_0 c$ f1 b0 f3
+ |- ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))
T c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (x = (drop (lift x))) |- ((drop (lift x)) = x)
T c==> c= f0 cdrop clift f0 c= cdrop clift f0 f0
+ (((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) |- ((((has_integral (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (lift m)) UNIV) /\ ((real_le (real_of_num (NUMERAL _0))) m))
T c==> chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV c/\ chas_integral / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 clift f1 part cUNIV creal_le creal_of_num cNUMERAL c_0 f1
