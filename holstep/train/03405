N MATRIX_NEG_MINUS1
C |- (!A. ((matrix_neg A) = ((%% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) A)))
T c= cmatrix_neg f0 c%% creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D TRUTH
A |- T
T cT
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D matrix_cmul
A |- (!c. (!A. (((%% c) A) = (lambdai. (lambdaj. ((real_mul c) ((A $ i) $ j)))))))
T c= c%% f0 f1 clambda / clambda / creal_mul f0 c$ c$ f1 b0 b1
D matrix_neg
A |- (!A. ((matrix_neg A) = (lambdai. (lambdaj. (real_neg ((A $ i) $ j))))))
T c= cmatrix_neg f0 clambda / clambda / creal_neg c$ c$ f0 b0 b1
+ |- ((\x. (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x) = (real_neg x))) x)
T * / c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 creal_neg b0 f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!c. (!A. (((%% c) A) = (lambdai. (lambdaj. ((real_mul c) ((A $ i) $ j))))))) ==> ((\c. (!A. (((%% c) A) = (lambdai. (lambdaj. ((real_mul c) ((A $ i) $ j))))))) c)) = ((\c. (!A. (((%% c) A) = (lambdai. (lambdaj. ((real_mul c) ((A $ i) $ j))))))) c))
T c= c==> ! ! c= c%% b0 b1 clambda / clambda / creal_mul b0 c$ c$ b1 b2 b3 * / ! c= c%% b0 b1 clambda / clambda / creal_mul b0 c$ c$ b1 b2 b3 f0 * / ! c= c%% b0 b1 clambda / clambda / creal_mul b0 c$ c$ b1 b2 b3 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((!A. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. (real_neg ((A $ i) $ j)))) $ i) $ i') = (((lambdai. (lambdaj. ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((A $ i) $ j)))) $ i) $ i'))))))) = (!A. ((matrix_neg A) = ((%% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) A))))
T c= ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ c$ clambda / clambda / creal_neg c$ c$ b0 b3 b3 b1 b2 c$ c$ clambda / clambda / creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ c$ b0 b3 b3 b1 b2 ! c= cmatrix_neg b0 c%% creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0
+ |- (!A. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. (real_neg ((A $ i) $ j)))) $ i) $ i') = (((lambdai. (lambdaj. ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((A $ i) $ j)))) $ i) $ i')))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c$ clambda / clambda / creal_neg c$ c$ f1 b1 b2 f0 b0 c$ c$ clambda / clambda / creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ c$ f1 b1 b2 f0 b0
+ |- ((!i'. t) = t)
T c= ! f0 f0
- |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
