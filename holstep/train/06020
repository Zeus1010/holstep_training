N Planarity.coplanar_cross_dot
C |- (!x. (!v. (!u. (!v1. ((~ (coplanar (x INSERT (v INSERT (u INSERT (v1 INSERT EMPTY)))))) ==> (~ (((dot ((cross ((vector_sub v) x)) ((vector_sub u) x))) ((vector_sub v1) x)) = (real_of_num (NUMERAL _0)))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= cdot ccross cvector_sub f1 f0 cvector_sub f2 f0 cvector_sub f3 f0 creal_of_num cNUMERAL c_0
D TRUTH
A |- T
T cT
D DOT_SYM
A |- (!x. (!y. (((dot x) y) = ((dot y) x))))
T c= cdot f0 f1 cdot f1 f0
D Trigonometry.BKMUSOX2
A |- (!x. (!y. (!z. (((dot ((cross x) y)) z) = ((dot ((cross y) z)) x)))))
T c= cdot ccross f0 f1 f2 cdot ccross f1 f2 f0
D DOT_CROSS_DET
A |- (!x. (!y. (!z. (((dot x) ((cross y) z)) = (det (vector ((CONS x) ((CONS y) ((CONS z) NIL)))))))))
T c= cdot f0 ccross f1 f2 cdet cvector cCONS f0 cCONS f1 cCONS f2 cNIL
D COPLANAR_DET_EQ_0
A |- (!v0. (!v1. (!v2. (!v3. ((coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((det (vector ((CONS ((vector_sub v1) v0)) ((CONS ((vector_sub v2) v0)) ((CONS ((vector_sub v3) v0)) NIL))))) = (real_of_num (NUMERAL _0))))))))
T c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cdet cvector cCONS cvector_sub f1 f0 cCONS cvector_sub f2 f0 cCONS cvector_sub f3 f0 cNIL creal_of_num cNUMERAL c_0
- (B ==> A), ((B ==> A) ==> ((~ A) ==> (~ B))) |- ((B ==> A) /\ ((~ A) ==> (~ B)))
T c==> c==> f0 f1 c==> c==> c==> f0 f1 c==> c~ f1 c~ f0 c/\ c==> f0 f1 c==> c~ f1 c~ f0
- |- (((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))) ==> ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))) x)) = ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))) x))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- ((!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) = T)
T c= ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
+ |- ((\y. (!z. (((dot ((cross x) y)) z) = ((dot ((cross y) z)) x)))) y)
T * / ! c= cdot ccross f0 b0 b1 cdot ccross b0 b1 f0 f1
+ |- ((\z. (((dot x) ((cross y) z)) = (det (vector ((CONS x) ((CONS y) ((CONS z) NIL))))))) z)
T * / c= cdot f0 ccross f1 b0 cdet cvector cCONS f0 cCONS f1 cCONS b0 cNIL f2
+ |- (((!v3. ((coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((det (vector ((CONS ((vector_sub v1) v0)) ((CONS ((vector_sub v2) v0)) ((CONS ((vector_sub v3) v0)) NIL))))) = (real_of_num (NUMERAL _0))))) ==> ((\v3. ((coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((det (vector ((CONS ((vector_sub v1) v0)) ((CONS ((vector_sub v2) v0)) ((CONS ((vector_sub v3) v0)) NIL))))) = (real_of_num (NUMERAL _0))))) v3)) = ((\v3. ((coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((det (vector ((CONS ((vector_sub v1) v0)) ((CONS ((vector_sub v2) v0)) ((CONS ((vector_sub v3) v0)) NIL))))) = (real_of_num (NUMERAL _0))))) v3))
T c= c==> ! c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= cdet cvector cCONS cvector_sub f1 f0 cCONS cvector_sub f2 f0 cCONS cvector_sub b0 f0 cNIL creal_of_num cNUMERAL c_0 * / c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= cdet cvector cCONS cvector_sub f1 f0 cCONS cvector_sub f2 f0 cCONS cvector_sub b0 f0 cNIL creal_of_num cNUMERAL c_0 f3 * / c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= cdet cvector cCONS cvector_sub f1 f0 cCONS cvector_sub f2 f0 cCONS cvector_sub b0 f0 cNIL creal_of_num cNUMERAL c_0 f3
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((((((dot ((cross ((vector_sub v) x)) ((vector_sub u) x))) ((vector_sub v1) x)) = (real_of_num (NUMERAL _0))) ==> (coplanar (x INSERT (v INSERT (u INSERT (v1 INSERT EMPTY)))))) ==> ((~ (coplanar (x INSERT (v INSERT (u INSERT (v1 INSERT EMPTY)))))) ==> (~ (((dot ((cross ((vector_sub v) x)) ((vector_sub u) x))) ((vector_sub v1) x)) = (real_of_num (NUMERAL _0)))))) = ((~ (coplanar (x INSERT (v INSERT (u INSERT (v1 INSERT EMPTY)))))) ==> (~ (((dot ((cross ((vector_sub v) x)) ((vector_sub u) x))) ((vector_sub v1) x)) = (real_of_num (NUMERAL _0))))))
T c= c==> c==> c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 c==> c~ ccoplanar * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0
- |- ((((B ==> A) ==> ((~ A) ==> (~ B))) ==> ((B ==> A) ==> ((~ A) ==> (~ B)))) = ((B ==> A) ==> ((~ A) ==> (~ B))))
T c= c==> c==> c==> f0 f1 c==> c~ f1 c~ f0 c==> c==> f0 f1 c==> c~ f1 c~ f0 c==> c==> f0 f1 c==> c~ f1 c~ f0
+ |- (T = (((det (vector ((CONS ((vector_sub v) x)) ((CONS ((vector_sub u) x)) ((CONS ((vector_sub v1) x)) NIL))))) = (real_of_num (NUMERAL _0))) ==> ((det (vector ((CONS ((vector_sub v) x)) ((CONS ((vector_sub u) x)) ((CONS ((vector_sub v1) x)) NIL))))) = (real_of_num (NUMERAL _0)))))
T c= cT c==> c= cdet cvector cCONS cvector_sub f0 f1 cCONS cvector_sub f2 f1 cCONS cvector_sub f3 f1 cNIL creal_of_num cNUMERAL c_0 c= cdet cvector cCONS cvector_sub f0 f1 cCONS cvector_sub f2 f1 cCONS cvector_sub f3 f1 cNIL creal_of_num cNUMERAL c_0
- (B ==> A), ((B ==> A) ==> ((~ A) ==> (~ B))) |- (((B ==> A) ==> ((~ A) ==> (~ B))) /\ ((~ A) ==> (~ B)))
T c==> c==> f0 f1 c==> c==> c==> f0 f1 c==> c~ f1 c~ f0 c/\ c==> c==> f0 f1 c==> c~ f1 c~ f0 c==> c~ f1 c~ f0
- |- (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))) = T)
T c= c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- ((((dot ((cross ((vector_sub u) x)) ((vector_sub v1) x))) ((vector_sub v) x)) = (real_of_num (NUMERAL _0))) ==> (coplanar (x INSERT (v INSERT (u INSERT (v1 INSERT EMPTY))))))
T c==> c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- (((!y. (!z. (((dot ((cross x) y)) z) = ((dot ((cross y) z)) x)))) ==> ((\y. (!z. (((dot ((cross x) y)) z) = ((dot ((cross y) z)) x)))) y)) = ((\y. (!z. (((dot ((cross x) y)) z) = ((dot ((cross y) z)) x)))) y))
T c= c==> ! ! c= cdot ccross f0 b0 b1 cdot ccross b0 b1 f0 * / ! c= cdot ccross f0 b0 b1 cdot ccross b0 b1 f0 f1 * / ! c= cdot ccross f0 b0 b1 cdot ccross b0 b1 f0 f1
+ |- (((det (vector ((CONS ((vector_sub v) x)) ((CONS ((vector_sub u) x)) ((CONS ((vector_sub v1) x)) NIL))))) = (real_of_num (NUMERAL _0))) ==> ((det (vector ((CONS ((vector_sub v) x)) ((CONS ((vector_sub u) x)) ((CONS ((vector_sub v1) x)) NIL))))) = (real_of_num (NUMERAL _0))))
T c==> c= cdet cvector cCONS cvector_sub f0 f1 cCONS cvector_sub f2 f1 cCONS cvector_sub f3 f1 cNIL creal_of_num cNUMERAL c_0 c= cdet cvector cCONS cvector_sub f0 f1 cCONS cvector_sub f2 f1 cCONS cvector_sub f3 f1 cNIL creal_of_num cNUMERAL c_0
+ |- (((!x. (!y. (!z. (((dot ((cross x) y)) z) = ((dot ((cross y) z)) x))))) ==> ((\x. (!y. (!z. (((dot ((cross x) y)) z) = ((dot ((cross y) z)) x))))) x)) = ((\x. (!y. (!z. (((dot ((cross x) y)) z) = ((dot ((cross y) z)) x))))) x))
T c= c==> ! ! ! c= cdot ccross b0 b1 b2 cdot ccross b1 b2 b0 * / ! ! c= cdot ccross b0 b1 b2 cdot ccross b1 b2 b0 f0 * / ! ! c= cdot ccross b0 b1 b2 cdot ccross b1 b2 b0 f0
+ |- ((!u. (!v1. ((~ (coplanar (x INSERT (v INSERT (u INSERT (v1 INSERT EMPTY)))))) ==> (~ (((dot ((cross ((vector_sub v) x)) ((vector_sub u) x))) ((vector_sub v1) x)) = (real_of_num (NUMERAL _0))))))) = T)
T c= ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ c= cdot ccross cvector_sub f1 f0 cvector_sub b0 f0 cvector_sub b1 f0 creal_of_num cNUMERAL c_0 cT
+ |- ((\x. (!y. (((dot x) y) = ((dot y) x)))) x)
T * / ! c= cdot b0 b1 cdot b1 b0 f0
+ |- (((det (vector ((CONS ((vector_sub v) x)) ((CONS ((vector_sub u) x)) ((CONS ((vector_sub v1) x)) NIL))))) = (real_of_num (NUMERAL _0))) ==> (coplanar (x INSERT (v INSERT (u INSERT (v1 INSERT EMPTY))))))
T c==> c= cdet cvector cCONS cvector_sub f0 f1 cCONS cvector_sub f2 f1 cCONS cvector_sub f3 f1 cNIL creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((!v. (!u. (!v1. ((~ (coplanar (x INSERT (v INSERT (u INSERT (v1 INSERT EMPTY)))))) ==> (~ (((dot ((cross ((vector_sub v) x)) ((vector_sub u) x))) ((vector_sub v1) x)) = (real_of_num (NUMERAL _0)))))))) = T)
T c= ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= cdot ccross cvector_sub b0 f0 cvector_sub b1 f0 cvector_sub b2 f0 creal_of_num cNUMERAL c_0 cT
+ |- (((((dot ((vector_sub v) x)) ((cross ((vector_sub u) x)) ((vector_sub v1) x))) = (real_of_num (NUMERAL _0))) ==> (coplanar (x INSERT (v INSERT (u INSERT (v1 INSERT EMPTY)))))) = ((((dot ((cross ((vector_sub u) x)) ((vector_sub v1) x))) ((vector_sub v) x)) = (real_of_num (NUMERAL _0))) ==> (coplanar (x INSERT (v INSERT (u INSERT (v1 INSERT EMPTY)))))))
T c= c==> c= cdot cvector_sub f0 f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cdot ccross cvector_sub f2 f1 cvector_sub f3 f1 cvector_sub f0 f1 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) ==> ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) u)) = ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) u))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ |- (((!y. (!z. (((dot x) ((cross y) z)) = (det (vector ((CONS x) ((CONS y) ((CONS z) NIL)))))))) ==> ((\y. (!z. (((dot x) ((cross y) z)) = (det (vector ((CONS x) ((CONS y) ((CONS z) NIL)))))))) y)) = ((\y. (!z. (((dot x) ((cross y) z)) = (det (vector ((CONS x) ((CONS y) ((CONS z) NIL)))))))) y))
T c= c==> ! ! c= cdot f0 ccross b0 b1 cdet cvector cCONS f0 cCONS b0 cCONS b1 cNIL * / ! c= cdot f0 ccross b0 b1 cdet cvector cCONS f0 cCONS b0 cCONS b1 cNIL f1 * / ! c= cdot f0 ccross b0 b1 cdet cvector cCONS f0 cCONS b0 cCONS b1 cNIL f1
+ |- ((\x. (!y. (!z. (((dot x) ((cross y) z)) = (det (vector ((CONS x) ((CONS y) ((CONS z) NIL))))))))) x)
T * / ! ! c= cdot b0 ccross b1 b2 cdet cvector cCONS b0 cCONS b1 cCONS b2 cNIL f0
+ |- ((((det (vector ((CONS ((vector_sub v) x)) ((CONS ((vector_sub u) x)) ((CONS ((vector_sub v1) x)) NIL))))) = (real_of_num (NUMERAL _0))) ==> ((det (vector ((CONS ((vector_sub v) x)) ((CONS ((vector_sub u) x)) ((CONS ((vector_sub v1) x)) NIL))))) = (real_of_num (NUMERAL _0)))) = (((det (vector ((CONS ((vector_sub v) x)) ((CONS ((vector_sub u) x)) ((CONS ((vector_sub v1) x)) NIL))))) = (real_of_num (NUMERAL _0))) ==> (coplanar (x INSERT (v INSERT (u INSERT (v1 INSERT EMPTY)))))))
T c= c==> c= cdet cvector cCONS cvector_sub f0 f1 cCONS cvector_sub f2 f1 cCONS cvector_sub f3 f1 cNIL creal_of_num cNUMERAL c_0 c= cdet cvector cCONS cvector_sub f0 f1 cCONS cvector_sub f2 f1 cCONS cvector_sub f3 f1 cNIL creal_of_num cNUMERAL c_0 c==> c= cdet cvector cCONS cvector_sub f0 f1 cCONS cvector_sub f2 f1 cCONS cvector_sub f3 f1 cNIL creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) = T)
T c= ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cT
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) u)
T * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ |- (((!z. (((dot x) ((cross y) z)) = (det (vector ((CONS x) ((CONS y) ((CONS z) NIL))))))) ==> ((\z. (((dot x) ((cross y) z)) = (det (vector ((CONS x) ((CONS y) ((CONS z) NIL))))))) z)) = ((\z. (((dot x) ((cross y) z)) = (det (vector ((CONS x) ((CONS y) ((CONS z) NIL))))))) z))
T c= c==> ! c= cdot f0 ccross f1 b0 cdet cvector cCONS f0 cCONS f1 cCONS b0 cNIL * / c= cdot f0 ccross f1 b0 cdet cvector cCONS f0 cCONS f1 cCONS b0 cNIL f2 * / c= cdot f0 ccross f1 b0 cdet cvector cCONS f0 cCONS f1 cCONS b0 cNIL f2
+ |- ((\x. (!y. (!z. (((dot ((cross x) y)) z) = ((dot ((cross y) z)) x))))) x)
T * / ! ! c= cdot ccross b0 b1 b2 cdot ccross b1 b2 b0 f0
+ |- ((\v0. (!v1. (!v2. (!v3. ((coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((det (vector ((CONS ((vector_sub v1) v0)) ((CONS ((vector_sub v2) v0)) ((CONS ((vector_sub v3) v0)) NIL))))) = (real_of_num (NUMERAL _0)))))))) v0)
T * / ! ! ! c= ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= cdet cvector cCONS cvector_sub b1 b0 cCONS cvector_sub b2 b0 cCONS cvector_sub b3 b0 cNIL creal_of_num cNUMERAL c_0 f0
- |- ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) v)
T * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- |- (((B ==> A) ==> ((~ A) ==> (~ B))) ==> ((B ==> A) ==> ((~ A) ==> (~ B))))
T c==> c==> c==> f0 f1 c==> c~ f1 c~ f0 c==> c==> f0 f1 c==> c~ f1 c~ f0
- ((B ==> A) ==> ((~ A) ==> (~ B))) |- (((B ==> A) ==> ((~ A) ==> (~ B))) /\ ((B ==> A) ==> ((~ A) ==> (~ B))))
T c==> c==> c==> f0 f1 c==> c~ f1 c~ f0 c/\ c==> c==> f0 f1 c==> c~ f1 c~ f0 c==> c==> f0 f1 c==> c~ f1 c~ f0
- |- (((!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) ==> ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) v)) = ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) v))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- (B ==> A) |- (((B ==> A) ==> ((~ A) ==> (~ B))) ==> ((~ A) ==> (~ B)))
T c==> c==> f0 f1 c==> c==> c==> f0 f1 c==> c~ f1 c~ f0 c==> c~ f1 c~ f0
- |- (((!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) w)) = ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) w))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
- |- ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))) x)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) w)
T * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
- |- ((!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) = T)
T c= ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cT
