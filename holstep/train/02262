N Hypermap.lemma_transitive_going
C |- (!H. (!L. (!x. (!y. (!z. ((((((is_node_going H) L) x) y) /\ ((((is_node_going H) L) y) z)) ==> ((((is_node_going H) L) x) z)))))))
T c==> c/\ cis_node_going f0 f1 f2 f3 cis_node_going f0 f1 f3 f4 cis_node_going f0 f1 f2 f4
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D LE_REFL
A |- (!n. (n <= n))
T c<= f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D LE_ADD_LCANCEL
A |- (!m. (!n. (!p. (((m + n) <= (m + p)) = (n <= p)))))
T c= c<= c+ f0 f1 c+ f0 f2 c<= f1 f2
D Hypermap.addition_exponents
A |- (!m. (!n. (!f. (((POWER f) (m + n)) = (((POWER f) m) o ((POWER f) n))))))
T c= * * part cPOWER f0 c+ f1 f2 * * part co * * part cPOWER f0 f1 * * part cPOWER f0 f2
D Hypermap.is_node_going
A |- (!H. (!L. (!x. (!y. (((((is_node_going H) L) x) y) = (?k. ((y = (((POWER (loop_map L)) k) x)) /\ (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))))))))))
T c= cis_node_going f0 f1 f2 f3 c? / c/\ c= f3 cPOWER * part cloop_map f1 b0 f2 ! c==> c<= b1 b0 c= cPOWER * part cloop_map f1 b1 f2 cPOWER * part cinverse * part cnode_map f0 b1 f2
+ ((\d. (i = (m + (SUC d)))) d) |- (((i = (m + (SUC d))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x))) = ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))
T c==> * / c= f0 c+ f1 cSUC b0 f2 c= c==> c= f0 c+ f1 cSUC f2 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cinverse * part cnode_map f5 f0 f4 c= cPOWER * part cloop_map f3 f0 f4 cPOWER * part cinverse * part cnode_map f5 f0 f4
+ (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))), (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), (y = (((POWER (loop_map L)) m) x)), (i = (m + j)), (i <= (k + m)) |- ((((POWER (loop_map L)) (m + j)) x) = (((POWER (inverse (node_map H))) (m + j)) x))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> ! c==> c<= b0 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f3 b0 f5 c==> c= f2 cPOWER * part cloop_map f1 f4 f5 c==> c= f6 c+ f4 f7 c==> c<= f6 c+ f0 f4 c= cPOWER * part cloop_map f1 c+ f4 f7 f5 cPOWER * part cinverse * part cnode_map f3 c+ f4 f7 f5
+ |- ((\n. (!p. (((m + n) <= (m + p)) = (n <= p)))) n)
T * / ! c= c<= c+ f0 b0 c+ f0 b1 c<= b0 b1 f1
+ |- (((!m. (!n. (!f. (((POWER f) (m + n)) = (((POWER f) m) o ((POWER f) n)))))) ==> ((\m. (!n. (!f. (((POWER f) (m + n)) = (((POWER f) m) o ((POWER f) n)))))) m)) = ((\m. (!n. (!f. (((POWER f) (m + n)) = (((POWER f) m) o ((POWER f) n)))))) m))
T c= c==> ! ! ! c= * * part cPOWER b2 c+ b0 b1 * * part co * * part cPOWER b2 b0 * * part cPOWER b2 b1 * / ! ! c= * * part cPOWER b2 c+ b0 b1 * * part co * * part cPOWER b2 b0 * * part cPOWER b2 b1 f0 * / ! ! c= * * part cPOWER b2 c+ b0 b1 * * part co * * part cPOWER b2 b0 * * part cPOWER b2 b1 f0
+ |- (((((POWER (loop_map L)) (j + m)) x) = (((POWER (inverse (node_map H))) (j + m)) x)) = ((((POWER (loop_map L)) (m + j)) x) = (((POWER (inverse (node_map H))) (m + j)) x)))
T c= c= cPOWER * part cloop_map f0 c+ f1 f2 f3 cPOWER * part cinverse * part cnode_map f4 c+ f1 f2 f3 c= cPOWER * part cloop_map f0 c+ f2 f1 f3 cPOWER * part cinverse * part cnode_map f4 c+ f2 f1 f3
+ |- (((!n. ((m + n) = (n + m))) ==> ((\n. ((m + n) = (n + m))) n)) = ((\n. ((m + n) = (n + m))) n))
T c= c==> ! c= c+ f0 b0 c+ b0 f0 * / c= c+ f0 b0 c+ b0 f0 f1 * / c= c+ f0 b0 c+ b0 f0 f1
+ |- ((\t. (t \/ (~ t))) (i <= m))
T * / c\/ b0 c~ b0 c<= f0 f1
+ (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))), (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), (y = (((POWER (loop_map L)) m) x)) |- (((i <= (k + m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x))) = T)
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> ! c==> c<= b0 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f3 b0 f5 c==> c= f2 cPOWER * part cloop_map f1 f4 f5 c= c==> c<= f6 c+ f0 f4 c= cPOWER * part cloop_map f1 f6 f5 cPOWER * part cinverse * part cnode_map f3 f6 f5 cT
- ((SUC d) = j) |- ((\j. ((SUC d) = j)) j)
T c==> c= cSUC f0 f1 * / c= cSUC f0 b0 f1
- (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))), (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), (?d. (i = (m + (SUC d)))), (y = (((POWER (loop_map L)) m) x)), (i <= (k + m)) |- ((?d. (i = (m + (SUC d)))) /\ ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> ! c==> c<= b0 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f3 b0 f5 c==> c? / c= f6 c+ f4 cSUC b0 c==> c= f2 cPOWER * part cloop_map f1 f4 f5 c==> c<= f6 c+ f0 f4 c/\ c? / c= f6 c+ f4 cSUC b0 c= cPOWER * part cloop_map f1 f6 f5 cPOWER * part cinverse * part cnode_map f3 f6 f5
+ (?k. ((z = (((POWER (loop_map L)) k) y)) /\ (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))))) |- (((\k. ((y = (((POWER (loop_map L)) k) x)) /\ (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))))) m) ==> (?k. ((z = (((POWER (loop_map L)) k) x)) /\ (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))))))
T c==> c? / c/\ c= f0 cPOWER * part cloop_map f1 b0 f2 ! c==> c<= b1 b0 c= cPOWER * part cloop_map f1 b1 f2 cPOWER * part cinverse * part cnode_map f3 b1 f2 c==> * / c/\ c= f2 cPOWER * part cloop_map f1 b0 f4 ! c==> c<= b1 b0 c= cPOWER * part cloop_map f1 b1 f4 cPOWER * part cinverse * part cnode_map f3 b1 f4 f5 c? / c/\ c= f0 cPOWER * part cloop_map f1 b0 f4 ! c==> c<= b1 b0 c= cPOWER * part cloop_map f1 b1 f4 cPOWER * part cinverse * part cnode_map f3 b1 f4
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (i <= m))) = ((\t. (t \/ (~ t))) (i <= m)))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c<= f0 f1 * / c\/ b0 c~ b0 c<= f0 f1
+ |- (((!p. (((m + n) <= (m + p)) = (n <= p))) ==> ((\p. (((m + n) <= (m + p)) = (n <= p))) p)) = ((\p. (((m + n) <= (m + p)) = (n <= p))) p))
T c= c==> ! c= c<= c+ f0 f1 c+ f0 b0 c<= f1 b0 * / c= c<= c+ f0 f1 c+ f0 b0 c<= f1 b0 f2 * / c= c<= c+ f0 f1 c+ f0 b0 c<= f1 b0 f2
+ |- ((\m. (!n. (!p. (((m + n) <= (m + p)) = (n <= p))))) m)
T * / ! ! c= c<= c+ b0 b1 c+ b0 b2 c<= b1 b2 f0
- (i = (m + j)) |- ((!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))) = (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))))
T c==> c= f0 c+ f1 f2 c= ! c==> c<= b0 f1 c= cPOWER * part cloop_map f3 b0 f4 cPOWER * part cinverse * part cnode_map f5 b0 f4 ! c==> c<= b0 f1 c= cPOWER * part cloop_map f3 b0 f4 cPOWER * part cinverse * part cnode_map f5 b0 f4
+ |- (((!f. (((POWER f) (m + n)) = (((POWER f) m) o ((POWER f) n)))) ==> ((\f. (((POWER f) (m + n)) = (((POWER f) m) o ((POWER f) n)))) f)) = ((\f. (((POWER f) (m + n)) = (((POWER f) m) o ((POWER f) n)))) f))
T c= c==> ! c= * * part cPOWER b0 c+ f0 f1 * * part co * * part cPOWER b0 f0 * * part cPOWER b0 f1 * / c= * * part cPOWER b0 c+ f0 f1 * * part co * * part cPOWER b0 f0 * * part cPOWER b0 f1 f2 * / c= * * part cPOWER b0 c+ f0 f1 * * part co * * part cPOWER b0 f0 * * part cPOWER b0 f1 f2
+ |- ((\p. (((m + n) <= (m + p)) = (n <= p))) p)
T * / c= c<= c+ f0 f1 c+ f0 b0 c<= f1 b0 f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))) |- ((\i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))) m)
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 * / c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 f0
- ((SUC d) = j) |- (((SUC d) = j) /\ (?j. ((SUC d) = j)))
T c==> c= cSUC f0 f1 c/\ c= cSUC f0 f1 c? / c= cSUC f0 b0
+ (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))), (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), (y = (((POWER (loop_map L)) m) x)), ((SUC d) = j), (i <= (k + m)) |- ((i = (m + (SUC d))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> ! c==> c<= b0 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f3 b0 f5 c==> c= f2 cPOWER * part cloop_map f1 f4 f5 c==> c= cSUC f6 f7 c==> c<= f8 c+ f0 f4 c==> c= f8 c+ f4 cSUC f6 c= cPOWER * part cloop_map f1 f8 f5 cPOWER * part cinverse * part cnode_map f3 f8 f5
+ |- ((\j. ((SUC d) = j)) (SUC d))
T * / c= cSUC f0 b0 cSUC f0
+ (y = (((POWER (loop_map L)) m) x)) |- ((((((POWER (loop_map L)) m) x) = (((POWER (inverse (node_map H))) m) x)) ==> ((((POWER (loop_map L)) j) (((POWER (loop_map L)) m) x)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (node_map H))) m) x)))) = ((y = (((POWER (inverse (node_map H))) m) x)) ==> ((((POWER (loop_map L)) j) y) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (node_map H))) m) x)))))
T c==> c= f0 cPOWER * part cloop_map f1 f2 f3 c= c==> c= cPOWER * part cloop_map f1 f2 f3 cPOWER * part cinverse * part cnode_map f4 f2 f3 c= cPOWER * part cloop_map f1 f5 cPOWER * part cloop_map f1 f2 f3 cPOWER * part cinverse * part cnode_map f4 f5 cPOWER * part cinverse * part cnode_map f4 f2 f3 c==> c= f0 cPOWER * part cinverse * part cnode_map f4 f2 f3 c= cPOWER * part cloop_map f1 f5 f0 cPOWER * part cinverse * part cnode_map f4 f5 cPOWER * part cinverse * part cnode_map f4 f2 f3
+ (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))), (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), (y = (((POWER (loop_map L)) m) x)), (i = (m + j)), (i <= (k + m)) |- ((((POWER (loop_map L)) (j + m)) x) = (((POWER (inverse (node_map H))) (j + m)) x))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> ! c==> c<= b0 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f3 b0 f5 c==> c= f2 cPOWER * part cloop_map f1 f4 f5 c==> c= f6 c+ f4 f7 c==> c<= f6 c+ f0 f4 c= cPOWER * part cloop_map f1 c+ f7 f4 f5 cPOWER * part cinverse * part cnode_map f3 c+ f7 f4 f5
+ (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))), (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), (y = (((POWER (loop_map L)) m) x)), (i = (m + j)), (i <= (k + m)) |- ((i = (m + j)) /\ ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> ! c==> c<= b0 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f3 b0 f5 c==> c= f2 cPOWER * part cloop_map f1 f4 f5 c==> c= f6 c+ f4 f7 c==> c<= f6 c+ f0 f4 c/\ c= f6 c+ f4 f7 c= cPOWER * part cloop_map f1 f6 f5 cPOWER * part cinverse * part cnode_map f3 f6 f5
- |- ((!i. t) = t)
T c= ! f0 f0
+ (i = (m + j)), (i <= (k + m)) |- ((m + j) <= (k + m))
T c==> c= f0 c+ f1 f2 c==> c<= f0 c+ f3 f1 c<= c+ f1 f2 c+ f3 f1
+ (z = (((POWER (loop_map L)) k) y)) |- ((!i. ((i <= (k + m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))) = ((z = (((POWER (loop_map L)) k) y)) /\ (!i. ((i <= (k + m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x))))))
T c==> c= f0 cPOWER * part cloop_map f1 f2 f3 c= ! c==> c<= b0 c+ f2 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f6 b0 f5 c/\ c= f0 cPOWER * part cloop_map f1 f2 f3 ! c==> c<= b0 c+ f2 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f6 b0 f5
+ (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), ((~ (i <= m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x))) |- ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> c==> c~ c<= f4 f0 c= cPOWER * part cloop_map f1 f4 f2 cPOWER * part cinverse * part cnode_map f3 f4 f2 c= cPOWER * part cloop_map f1 f4 f2 cPOWER * part cinverse * part cnode_map f3 f4 f2
+ (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))), (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), (y = (((POWER (loop_map L)) m) x)), (i <= (k + m)) |- ((~ (i <= m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> ! c==> c<= b0 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f3 b0 f5 c==> c= f2 cPOWER * part cloop_map f1 f4 f5 c==> c<= f6 c+ f0 f4 c==> c~ c<= f6 f4 c= cPOWER * part cloop_map f1 f6 f5 cPOWER * part cinverse * part cnode_map f3 f6 f5
+ (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))), (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), (y = (((POWER (loop_map L)) m) x)), (i <= (k + m)) |- (!j. (((\j. ((SUC d) = j)) j) ==> ((i = (m + (SUC d))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> ! c==> c<= b0 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f3 b0 f5 c==> c= f2 cPOWER * part cloop_map f1 f4 f5 c==> c<= f6 c+ f0 f4 ! c==> * / c= cSUC f7 b1 b0 c==> c= f6 c+ f4 cSUC f7 c= cPOWER * part cloop_map f1 f6 f5 cPOWER * part cinverse * part cnode_map f3 f6 f5
- |- ((?d. t) = t)
T c= c? / f0 f0
- |- (!j. (((\j. ((SUC d) = j)) j) ==> (?j. ((SUC d) = j))))
T c==> * / c= cSUC f0 b0 f1 c? / c= cSUC f0 b0
- |- (((SUC d) = j) ==> (?j. ((SUC d) = j)))
T c==> c= cSUC f0 f1 c? / c= cSUC f0 b0
- ((\j. ((SUC d) = j)) j) |- (((\j. ((SUC d) = j)) j) /\ (?j. ((SUC d) = j)))
T c==> * / c= cSUC f0 b0 f1 c/\ * / c= cSUC f0 b0 f1 c? / c= cSUC f0 b0
- (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), (i <= m) |- ((i <= m) /\ ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> c<= f4 f0 c/\ c<= f4 f0 c= cPOWER * part cloop_map f1 f4 f2 cPOWER * part cinverse * part cnode_map f3 f4 f2
- (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))), (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), (y = (((POWER (loop_map L)) m) x)), (i = (m + (SUC d))), (i <= (k + m)) |- ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> ! c==> c<= b0 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f3 b0 f5 c==> c= f2 cPOWER * part cloop_map f1 f4 f5 c==> c= f6 c+ f4 cSUC f7 c==> c<= f6 c+ f0 f4 c= cPOWER * part cloop_map f1 f6 f5 cPOWER * part cinverse * part cnode_map f3 f6 f5
- |- (((SUC d) = j) = ((\j. ((SUC d) = j)) j))
T c= c= cSUC f0 f1 * / c= cSUC f0 b0 f1
- |- (((!x. (((\j. ((SUC d) = j)) x) ==> (?j. ((SUC d) = j)))) ==> ((?j. ((SUC d) = j)) ==> (?j. ((SUC d) = j)))) = ((?j. ((SUC d) = j)) ==> (?j. ((SUC d) = j))))
T c= c==> ! c==> * / c= cSUC f0 b1 b0 c? / c= cSUC f0 b1 c==> c? / c= cSUC f0 b0 c? / c= cSUC f0 b0 c==> c? / c= cSUC f0 b0 c? / c= cSUC f0 b0
- (i = (m + j)) |- ((!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))) = (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))))
T c==> c= f0 c+ f1 f2 c= ! c==> c<= b0 f3 c= cPOWER * part cloop_map f4 b0 f5 cPOWER * part cinverse * part cnode_map f6 b0 f5 ! c==> c<= b0 f3 c= cPOWER * part cloop_map f4 b0 f5 cPOWER * part cinverse * part cnode_map f6 b0 f5
- (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))), (j <= k) |- (T = ((((POWER (loop_map L)) j) y) = (((POWER (inverse (node_map H))) j) y)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> c<= f4 f0 c= cT c= cPOWER * part cloop_map f1 f4 f2 cPOWER * part cinverse * part cnode_map f3 f4 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((?j. ((SUC d) = j)) ==> (?j. ((SUC d) = j)))
T c==> c? / c= cSUC f0 b0 c? / c= cSUC f0 b0
- ((\j. ((SUC d) = j)) j) |- ((((SUC d) = j) ==> (?j. ((SUC d) = j))) = (?j. ((SUC d) = j)))
T c==> * / c= cSUC f0 b0 f1 c= c==> c= cSUC f0 f1 c? / c= cSUC f0 b0 c? / c= cSUC f0 b0
- (i = (m + j)) |- ((z = (((POWER (loop_map L)) k) y)) = (z = (((POWER (loop_map L)) k) y)))
T c==> c= f0 c+ f1 f2 c= c= f3 cPOWER * part cloop_map f4 f5 f6 c= f3 cPOWER * part cloop_map f4 f5 f6
- (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))), (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), (y = (((POWER (loop_map L)) m) x)), (i = (m + (SUC d))), (i <= (k + m)) |- ((i = (m + (SUC d))) /\ ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> ! c==> c<= b0 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f3 b0 f5 c==> c= f2 cPOWER * part cloop_map f1 f4 f5 c==> c= f6 c+ f4 cSUC f7 c==> c<= f6 c+ f0 f4 c/\ c= f6 c+ f4 cSUC f7 c= cPOWER * part cloop_map f1 f6 f5 cPOWER * part cinverse * part cnode_map f3 f6 f5
- (i = (m + j)) |- ((y = (((POWER (loop_map L)) m) x)) = (y = (((POWER (loop_map L)) m) x)))
T c==> c= f0 c+ f1 f2 c= c= f3 cPOWER * part cloop_map f4 f1 f5 c= f3 cPOWER * part cloop_map f4 f1 f5
- (!i. ((i <= k) ==> ((((POWER (loop_map L)) i) y) = (((POWER (inverse (node_map H))) i) y)))), (!i. ((i <= m) ==> ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x)))), (?d. (i = (m + (SUC d)))), (y = (((POWER (loop_map L)) m) x)), (i <= (k + m)) |- ((((POWER (loop_map L)) i) x) = (((POWER (inverse (node_map H))) i) x))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map f1 b0 f2 cPOWER * part cinverse * part cnode_map f3 b0 f2 c==> ! c==> c<= b0 f4 c= cPOWER * part cloop_map f1 b0 f5 cPOWER * part cinverse * part cnode_map f3 b0 f5 c==> c? / c= f6 c+ f4 cSUC b0 c==> c= f2 cPOWER * part cloop_map f1 f4 f5 c==> c<= f6 c+ f0 f4 c= cPOWER * part cloop_map f1 f6 f5 cPOWER * part cinverse * part cnode_map f3 f6 f5
- (i = (m + j)) |- (((SUC d) = j) = ((SUC d) = j))
T c==> c= f0 c+ f1 f2 c= c= cSUC f3 f2 c= cSUC f3 f2
- |- ((((\j. ((SUC d) = j)) j) ==> (?j. ((SUC d) = j))) = T)
T c= c==> * / c= cSUC f0 b0 f1 c? / c= cSUC f0 b0 cT
