N Aq12.s_list_not_in_fst
C |- (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1)))))))))
T c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cprev_el f1 f4 f6 c/\ c= cfind_face f0 f3 f7 cMEM f8 cs_list f0 f1 f3 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f6
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Seq2.next_prev_id
A |- (!x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x))))
T c==> cuniq f0 c= cnext_el f0 cprev_el f0 f1 f1
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D List_hypermap.uniq_sublist_unique
A |- (!l1. (!l2. (!L. (!x. (((uniq (flatten L)) /\ (((MEM l1) L) /\ (((MEM l2) L) /\ (((MEM x) l1) /\ ((MEM x) l2))))) ==> (l1 = l2))))))
T c==> c/\ cuniq cflatten f0 c/\ cMEM f1 f0 c/\ cMEM f2 f0 c/\ cMEM f3 f1 cMEM f3 f2 c= f1 f2
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.ntrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.rtrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= crtrans f0 f1 f2 f3 f4 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Hojodcm.PPLHULJ_v0
A |- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cindexf f5 cztrans f0 f1 f2 f3 cNUMERAL c_0 f4
D Aq8.AQ_normal_list
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((normal_list L) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cnormal_list f0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D Aq8.snd_mem_rtran1
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D Aq8.fst_mem_rtran1
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D Aq9.fst_is_not_eq_snd_split
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))) = (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3
D Aq12.s_list_in_rtrans
A |- (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))
T c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cprev_el f1 f4 f6 c/\ c= cfind_face f0 f3 f7 cMEM f8 cs_list f0 f1 f3 cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f6
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((?w. (((next_el f) x) = w)) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> cMEM cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> c? / c= cnext_el f7 f3 b0 cF
- |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))) = (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))) = (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))) = (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3
+ |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ (~ ((final_list L) r)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 c/\ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f3 f9 c==> cMEM f6 f7 c==> cMEM f4 f7 c==> c< cindexf f9 f6 f7 cindexf f9 f4 f7 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> F))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> c= cfind_face f0 f3 f7 c==> cMEM f8 cs_list f0 f1 f3 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f6 cF
- (~ ((final_list L) r)), (good_list L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F)))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> c= cfind_face f0 f3 f7 c==> cMEM f8 cs_list f0 f1 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f6 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f6 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f6 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f3 f9 c==> cMEM f5 f7 c==> cMEM f4 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f4 f7 cF
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((normal_list L) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> F) = F)
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cnormal_list f0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cF cF
+ |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) r))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 cntrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 cntrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 cntrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((((marked_list L) N) r) x) |- (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) /\ ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))) ==> F) = F)
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cindexf f5 cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 cF cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (((s_list L) r) x)), ((((marked_list L) N) r) x) |- (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cmarked_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
- |- (((!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) ==> ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)) = ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x))
T c= c==> ! ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
+ ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) = T)
T c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cntrans f0 f4 f1 f5 cNUMERAL cBIT1 c_0 c= cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cntrans f0 f4 f1 f5 cNUMERAL cBIT1 c_0 cT
+ |- (((!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) ==> ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N)) = ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1
+ (~ ((final_list L) r)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM y) f), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))
T c==> c~ cfinal_list f0 f1 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM f6 f7 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f4 f7 c==> c< cindexf f9 f6 f7 cindexf f9 f4 f7 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> cMEM cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f3 f9 c==> cMEM f6 f7 c==> cMEM f5 f7 c==> c< cindexf f9 f6 f7 cindexf f9 f5 f7 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (((s_list L) r) x)), ((((marked_list L) N) r) x) |- (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cMEM f4 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f8 cs_list f0 f1 f2 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c/\ c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cs_flag_list f0 f6 f1 f2 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cMEM f4 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
+ |- (((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM d) (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))) ==> ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))
T c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM f6 cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cMEM f6 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 c= cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ (((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f6 f7 c==> c= cprev_el f2 f7 f6 c==> c= cl'y f1 f2 f3 f8 c==> c= cl'z f1 f0 f2 f3 f7 c==> c= cfind_face f1 f3 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f9 cFST csplit_normal_list f1 f2 f4 f8 f6 c==> cMEM f9 cSND csplit_normal_list f1 f2 f4 f8 f6 c==> cMEM f9 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> cMEM cFST csplit_normal_list f1 f2 cfind_face f1 f8 f8 f6 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f8 f8 f6 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c~ c/\ cMEM f8 f4 c/\ cMEM f7 f4 c< cindexf f5 f8 f4 cindexf f5 f7 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f6 f7 c==> c= cprev_el f2 f7 f6 c==> c= cl'y f1 f2 f3 f8 c==> c= cl'z f1 f0 f2 f3 f7 c==> c= cfind_face f1 f3 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f9 cFST csplit_normal_list f1 f2 f4 f8 f6 c==> cMEM f9 cSND csplit_normal_list f1 f2 f4 f8 f6 c==> cMEM f9 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> cMEM cFST csplit_normal_list f1 f2 cfind_face f1 f8 f8 f6 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f8 f8 f6 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> cMEM f8 f4 c==> cMEM f7 f4 c==> c< cindexf f5 f8 f4 cindexf f5 f7 f4 cF
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f6 f7 c==> c= cprev_el f2 f7 f6 c==> c= cl'y f1 f2 f3 f8 c==> c= cl'z f1 f0 f2 f3 f7 c==> c= cfind_face f1 f3 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f5 f8 f4 cindexf f5 f7 f4 c==> cMEM f9 cFST csplit_normal_list f1 f2 f4 f8 f6 c==> cMEM f9 cSND csplit_normal_list f1 f2 f4 f8 f6 c==> cMEM f9 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f8 f4 c==> cMEM f7 f4 c==> cMEM f2 f0 c==> cMEM cFST csplit_normal_list f1 f2 cfind_face f1 f8 f8 f6 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f8 f8 f6 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cF
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f0 f2 f3 c~ cfinal_list f1 f2 cMEM cSND csplit_normal_list f1 f2 cfind_face f1 cl'y f1 f2 f3 cl'y f1 f2 f3 cprev_el f2 cl'z f1 f0 f2 f3 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cF
+ (~ ((final_list L) r)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))
T c==> c~ cfinal_list f0 f1 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cfind_face f0 f3 f4 c==> cMEM f9 cFST csplit_normal_list f0 f1 f4 f8 f7 c==> cMEM f9 cSND csplit_normal_list f0 f1 f4 f8 f7 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f8 f8 f7 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f8 f8 f7 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 c/\ c= cnext_el f4 f3 f5 c==> cMEM f8 f4 c==> cMEM f6 f4 c==> c< cindexf f5 f8 f4 cindexf f5 f6 f4 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> c/\ call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c/\ call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
+ |- ((\x'. (((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM x') (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM x') (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))) ==> ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) d)
T * / c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM b0 cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cMEM b0 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 c= cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 f6
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 cF
+ (~ ((final_list L) r)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM y) f), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- F
T c==> c~ cfinal_list f0 f1 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM f6 f7 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> call / c~ c= b0 cNIL f6 c==> cmarked_list f0 f6 f1 f4 c/\ call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
+ |- (((!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ (~ ((final_list L) r)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM y) f), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) /\ F)
T c==> c~ cfinal_list f0 f1 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM f6 f7 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 c/\ c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- (~ ((SND (((((split_normal_list L) r) f) y) z1)) = (FST (((((split_normal_list L) r) f) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f5 f7 c==> cmarked_list f0 f6 f1 f4 c~ c= cSND csplit_normal_list f0 f1 f7 f5 f3 cFST csplit_normal_list f0 f1 f7 f5 f3
+ |- ((((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))) = T)
T c= c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cprev_el f1 f4 f6 c/\ c= cfind_face f0 f3 f7 cMEM f8 cs_list f0 f1 f3 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f6 cT
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> F))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> c= cfind_face f0 f3 f7 c==> cMEM f8 cs_list f0 f1 f3 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f6 cF
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
- (~ ((FST (((((split_normal_list L) r) f) y) z1)) = (SND (((((split_normal_list L) r) f) y) z1)))) |- (((~ ((SND (((((split_normal_list L) r) f) y) z1)) = (FST (((((split_normal_list L) r) f) y) z1)))) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = (FST (((((split_normal_list L) r) f) y) z1))) = F)) = (((SND (((((split_normal_list L) r) f) y) z1)) = (FST (((((split_normal_list L) r) f) y) z1))) = F))
T c==> c~ c= cFST csplit_normal_list f0 f1 f2 f3 f4 cSND csplit_normal_list f0 f1 f2 f3 f4 c= c==> c~ c= cSND csplit_normal_list f0 f1 f2 f3 f4 cFST csplit_normal_list f0 f1 f2 f3 f4 c= c= cSND csplit_normal_list f0 f1 f2 f3 f4 cFST csplit_normal_list f0 f1 f2 f3 f4 cF c= c= cSND csplit_normal_list f0 f1 f2 f3 f4 cFST csplit_normal_list f0 f1 f2 f3 f4 cF
+ (~ ((final_list L) r)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM y) f), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM f6 f7 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 cF
+ |- ((\l2. (!L. (!x. (((uniq (flatten L)) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) L) /\ (((MEM l2) L) /\ (((MEM x) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM x) l2))))) ==> ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = l2))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))
T * / ! ! c==> c/\ cuniq cflatten b1 c/\ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b1 c/\ cMEM b0 b1 c/\ cMEM b2 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cMEM b2 b0 c= cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3
- |- (((!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) ==> ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)) = ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1))
T c= c==> ! ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 cntrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 cntrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 cntrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (((s_list L) r) x)), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cmarked_list f0 f6 f1 f4 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f4 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 cs_flag_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x))), ((((marked_list L) N) r) x) |- (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c= cfind_face f0 f4 f7 cMEM f8 cs_list f0 f1 f4 c==> cmarked_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
- |- (((!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))))) ==> ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))))) f)) = ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))))) f))
T c= c==> ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ c= cfind_face b3 b6 b0 cMEM f1 cs_list b3 b5 b6 cMEM f1 cSND csplit_normal_list b3 b5 b0 b1 b2 * / ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ c= cfind_face b3 b6 b0 cMEM f1 cs_list b3 b5 b6 cMEM f1 cSND csplit_normal_list b3 b5 b0 b1 b2 f2 * / ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ c= cfind_face b3 b6 b0 cMEM f1 cs_list b3 b5 b6 cMEM f1 cSND csplit_normal_list b3 b5 b0 b1 b2 f2
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((normal_list L) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cnormal_list f0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3
+ |- (((!x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) ==> ((\x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) (((((ztrans L) N) r) x) (NUMERAL _0)))) = ((\x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) (((((ztrans L) N) r) x) (NUMERAL _0))))
T c= c==> ! ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 * / ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0 * / ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0
+ |- (((!L. (!x. (((uniq (flatten L)) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) L) /\ (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) L) /\ (((MEM x) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM x) (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))) ==> ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) ==> ((\L. (!x. (((uniq (flatten L)) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) L) /\ (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) L) /\ (((MEM x) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM x) (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))) ==> ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) = ((\L. (!x. (((uniq (flatten L)) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) L) /\ (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) L) /\ (((MEM x) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM x) (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))) ==> ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c= c==> ! ! c==> c/\ cuniq cflatten b0 c/\ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 c/\ cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 c/\ cMEM b1 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cMEM b1 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c= cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 * / ! c==> c/\ cuniq cflatten b0 c/\ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 c/\ cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 c/\ cMEM b1 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cMEM b1 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c= cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cntrans f0 f4 f1 f5 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cuniq cflatten b0 c/\ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 c/\ cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 c/\ cMEM b1 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cMEM b1 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c= cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cntrans f0 f4 f1 f5 cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((MEM d) (((s_list L) r) x)) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> F))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f8 cs_list f0 f1 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 cF
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (!l2. (!L. (!x. (((uniq (flatten L)) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) L) /\ (((MEM l2) L) /\ (((MEM x) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM x) l2))))) ==> ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = l2)))))
T c==> c/\ cuniq cflatten f0 c/\ cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f3 f3 f4 f0 c/\ cMEM f5 f0 c/\ cMEM f6 cSND csplit_normal_list f1 f2 cfind_face f1 f3 f3 f4 cMEM f6 f5 c= cSND csplit_normal_list f1 f2 cfind_face f1 f3 f3 f4 f5
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) ==> ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 f5 f6 c==> c= cfind_face f0 f2 f7 c==> cMEM f8 cs_list f0 f1 f2 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> c= cnext_el f1 f6 f5 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f3 f6 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f3 f6 c==> cuniq cflatten cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f2 f9 c==> cMEM f3 f7 c==> cMEM f5 f7 c==> c< cindexf f9 f3 f7 cindexf f9 f5 f7 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f8 cs_list f0 f1 f2 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ cs_flag_list f0 f6 f1 f2 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f3 f9 c==> cMEM f6 f7 c==> cMEM f5 f7 c==> c< cindexf f9 f6 f7 cindexf f9 f5 f7 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))))), ((MEM d) (((s_list L) r) x)), ((((marked_list L) N) r) x) |- (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f4 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 cs_flag_list f0 f6 f1 f4 c==> cMEM f8 cs_list f0 f1 f4 c==> cmarked_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
+ |- ((!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))))) = T)
T c= ! ! c==> c/\ c~ cfinal_list f0 b0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ c= cfind_face f0 b1 f5 cMEM f6 cs_list f0 b0 b1 c~ cMEM f6 cFST csplit_normal_list f0 b0 f5 f3 f4 cT
- |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 cs_flag_list f0 f6 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f8 cs_list f0 f1 f2 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> c/\ call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c/\ call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c/\ call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> cMEM cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 cF
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))) = (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cFST csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f8 cs_list f0 f1 f3 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f5 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f6 f5 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f3 f9 c==> cMEM f6 f7 c==> cMEM f4 f7 c==> c< cindexf f9 f6 f7 cindexf f9 f4 f7 cF
- |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f0 f2 f3 c~ cfinal_list f1 f2 cMEM cFST csplit_normal_list f1 f2 cfind_face f1 cl'y f1 f2 f3 cl'y f1 f2 f3 cprev_el f2 cl'z f1 f0 f2 f3 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
+ |- (((((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM d) (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))) ==> ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) ==> F) = F)
T c= c==> c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM f6 cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cMEM f6 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 c= cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cF cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> F))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f6 c==> c= cfind_face f0 f2 f7 c==> cMEM f8 cs_list f0 f1 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f3 f6 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))), ((MEM d) (((s_list L) r) x)), ((((marked_list L) N) r) x) |- (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f4 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 cs_flag_list f0 f6 f1 f4 c==> cMEM f8 cs_list f0 f1 f4 c==> cmarked_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cF
- (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) |- (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cMEM f4 cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 f4 * part cset_of_list cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
+ (~ ((final_list L) r)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) y) = f), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- F
T c==> c~ cfinal_list f0 f1 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f6 f7 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c/\ cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f8 cs_list f0 f1 f2 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cnormal_list f0 f6 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f4
- |- ((!d. t) = t)
T c= ! f0 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ |- ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (((s_list L) r) x)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 cntrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 f0
+ |- (((!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) ==> ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)) = ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
+ |- (((!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
+ |- (((!x'. (((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM x') (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM x') (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))) ==> ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) ==> ((\x'. (((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM x') (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM x') (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))) ==> ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) d)) = ((\x'. (((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM x') (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM x') (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))) ==> ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) d))
T c= c==> ! c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM b0 cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cMEM b0 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 c= cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 * / c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM b0 cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cMEM b0 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 c= cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 f6 * / c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c/\ cMEM b0 cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cMEM b0 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 c= cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 f6
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x))))))) |- (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cprev_el f1 f4 f6 c/\ c= cfind_face f0 f3 f7 cMEM f8 cs_list f0 f1 f3 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f6
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 cs_flag_list f0 f6 f1 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f8 cs_list f0 f1 f4 c==> cMEM f4 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
- |- ((((\w. (((next_el f) x) = w)) w) ==> (?w. (((next_el f) x) = w))) = T)
T c= c==> * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> c= cfind_face f0 f3 f7 c==> cMEM f8 cs_list f0 f1 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f6 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f6 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f6 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f3 f9 c==> cMEM f5 f7 c==> cMEM f4 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f4 f7 cF
- ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) = T)
T c==> call * part cf_last f0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c= call * part cf_last f0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cT
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f6 f7 c==> c= cprev_el f2 f7 f6 c==> c= cl'y f1 f2 f3 f8 c==> c= cl'z f1 f0 f2 f3 f7 c==> c= cfind_face f1 f3 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f9 cFST csplit_normal_list f1 f2 f4 f8 f6 c==> cMEM f9 cSND csplit_normal_list f1 f2 f4 f8 f6 c==> cMEM f9 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> cMEM cFST csplit_normal_list f1 f2 cfind_face f1 f8 f8 f6 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f8 f8 f6 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cF
+ (uniq r), (((prev_el r) z) = z1), (((((l'z L) N) r) x) = z) |- (((((next_el r) z1) = z) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))) = (((uniq r) ==> (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0)))) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))))
T c==> cuniq f0 c==> c= cprev_el f0 f1 f2 c==> c= cl'z f3 f4 f0 f5 f1 c= c==> c= cnext_el f0 f2 f1 c~ cMEM f6 cFST csplit_normal_list f3 f0 f7 f8 f2 c==> c==> cuniq f0 c= cnext_el f0 cprev_el f0 cztrans f3 f4 f0 f5 cNUMERAL c_0 cztrans f3 f4 f0 f5 cNUMERAL c_0 c~ cMEM f6 cFST csplit_normal_list f3 f0 f7 f8 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> c/\ cuniq cflatten f6 c/\ call / c~ c= b0 cNIL f6 c/\ call * part cf_last f0 f6 c/\ call * part cloop_list f0 f6 ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f8 cs_list f0 f1 f2 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f4
- |- ((\y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1)))))))))) y)
T * / ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ c= cfind_face b2 b5 f1 cMEM f2 cs_list b2 b4 b5 cMEM f2 cSND csplit_normal_list b2 b4 f1 b0 b1 f3
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
- ((\w. (((next_el f) x) = w)) w) |- (((((next_el f) x) = w) ==> (?w. (((next_el f) x) = w))) = (?w. (((next_el f) x) = w)))
T c==> * / c= cnext_el f0 f1 b0 f2 c= c==> c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c/\ call / c~ c= b0 cNIL f2 c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f8 cs_list f0 f1 f3 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f6 f5
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
+ |- ((\L. (!x. (((uniq (flatten L)) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) L) /\ (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) L) /\ (((MEM x) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM x) (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))) ==> ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T * / ! c==> c/\ cuniq cflatten b0 c/\ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 c/\ cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 c/\ cMEM b1 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cMEM b1 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c= cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cntrans f0 f4 f1 f5 cNUMERAL cBIT1 c_0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c/\ cuniq cflatten f2 c/\ call / c~ c= b0 cNIL f2 c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f8 cs_list f0 f1 f3 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f6 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f8 cs_list f0 f1 f2 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c==> cs_flag_list f0 f6 f1 f2 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> cMEM cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cF
+ |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))), ((((marked_list L) N) r) x) |- (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c= cprev_el f1 f2 f3 c/\ c= cfind_face f0 f4 f7 cMEM f8 cs_list f0 f1 f4 c==> cmarked_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
- |- ((!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))) = T)
T c= ! ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ c= cfind_face b1 b4 f2 cMEM f3 cs_list b1 b3 b4 cMEM f3 cSND csplit_normal_list b1 b3 f2 f1 b0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 cF
- ((all (\l. (~ (l = NIL)))) L) |- (((all (\l. (~ (l = NIL)))) L) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
- (~ ((FST (((((split_normal_list L) r) f) y) z1)) = (SND (((((split_normal_list L) r) f) y) z1)))) |- (((SND (((((split_normal_list L) r) f) y) z1)) = (FST (((((split_normal_list L) r) f) y) z1))) = F)
T c==> c~ c= cFST csplit_normal_list f0 f1 f2 f3 f4 cSND csplit_normal_list f0 f1 f2 f3 f4 c= c= cSND csplit_normal_list f0 f1 f2 f3 f4 cFST csplit_normal_list f0 f1 f2 f3 f4 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f8 cs_list f0 f1 f3 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f5 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f6 f5 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f6 f5 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f5 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f3 f9 c==> cMEM f6 f7 c==> cMEM f4 f7 c==> c< cindexf f9 f6 f7 cindexf f9 f4 f7 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> F))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c/\ c= cprev_el f1 f2 f3 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((~ ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> F))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c= c~ cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f4 c~ cfinal_list f0 f1 cMEM cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f4 cl'y f0 f1 f4 cprev_el f1 cl'z f0 f6 f1 f4 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cF
+ ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) = T)
T c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cntrans f0 f4 f1 f5 cNUMERAL cBIT1 c_0 c= cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cntrans f0 f4 f1 f5 cNUMERAL cBIT1 c_0 cT
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))) = (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f8 cs_list f0 f1 f2 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> c/\ cuniq cflatten f6 c/\ call / c~ c= b0 cNIL f6 c/\ call * part cf_last f0 f6 c/\ call * part cloop_list f0 f6 ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f4
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (f_last L)) N), ((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (loop_list L)) N), ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((all (\s. (~ (s = NIL)))) N), ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((!x'. (((\w. (((next_el f) x) = w)) x') ==> F)) ==> ((?w. (((next_el f) x) = w)) ==> F)) = ((?w. (((next_el f) x) = w)) ==> F))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq cflatten cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f5 c==> c= cfind_face f1 f3 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f8 cFST csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cSND csplit_normal_list f1 f2 f7 f6 f4 c==> cMEM f8 cs_list f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> cMEM cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f4 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f1 f0 c==> call * part cf_last f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f1 f0 c==> call * part cloop_list f1 cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL cntrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c= c==> ! c==> * / c= cnext_el f7 f3 b1 b0 cF c==> c? / c= cnext_el f7 f3 b0 cF c==> c? / c= cnext_el f7 f3 b0 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ (((MEM d) (((s_list L) r) x)) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> F)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c/\ c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 cF
+ |- ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))) x)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= b1 cfind_face f0 b0 c= b2 cnext_el b1 b0 c/\ cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 c/\ cMEM cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 c< cindexf b2 cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 cindexf b2 cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
+ ((\w. (((next_el f) x) = w)) w) |- (((next_el f) x) = w)
T c==> * / c= cnext_el f0 f1 b0 f2 c= cnext_el f0 f1 f2
- |- (((!x'. (((\w. (((next_el f) x) = w)) x') ==> (?w. (((next_el f) x) = w)))) ==> ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w)))) = ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w))))
T c= c==> ! c==> * / c= cnext_el f0 f1 b1 b0 c? / c= cnext_el f0 f1 b1 c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0 c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
- (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) |- ((\d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) d)
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 * / c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f4
- ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) = T)
T c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c= call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cT
- (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) |- ((((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) = T)
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c= c==> cMEM f4 cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 f4 * part cset_of_list cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cT
- |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F)))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f6 c==> c= cfind_face f0 f2 f7 c==> cMEM f8 cs_list f0 f1 f2 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> c= cnext_el f1 f6 f5 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f3 f6 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f3 f6 c==> cuniq cflatten cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f2 f9 c==> cMEM f3 f7 c==> cMEM f5 f7 c==> c< cindexf f9 f3 f7 cindexf f9 f5 f7 cF
- (~ ((FST (((((split_normal_list L) r) f) y) z1)) = (SND (((((split_normal_list L) r) f) y) z1)))) |- (((FST (((((split_normal_list L) r) f) y) z1)) = (SND (((((split_normal_list L) r) f) y) z1))) = F)
T c==> c~ c= cFST csplit_normal_list f0 f1 f2 f3 f4 cSND csplit_normal_list f0 f1 f2 f3 f4 c= c= cFST csplit_normal_list f0 f1 f2 f3 f4 cSND csplit_normal_list f0 f1 f2 f3 f4 cF
- |- ((!d. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1)))))))))))) = T)
T c= ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ c= cfind_face b4 b7 b1 cMEM b0 cs_list b4 b6 b7 cMEM b0 cSND csplit_normal_list b4 b6 b1 b2 b3 cT
- |- ((((next_el f) x) = w) ==> (?w. (((next_el f) x) = w)))
T c==> c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0
- |- ((!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1)))))))) = T)
T c= ! ! ! ! c==> c/\ c~ cfinal_list b0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ c= cfind_face b0 b3 f3 cMEM f4 cs_list b0 b2 b3 cMEM f4 cSND csplit_normal_list b0 b2 f3 f1 f2 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ (((MEM d) (((s_list L) r) x)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c/\ c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
- |- ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)
T * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- |- (((!d. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1)))))))))))) ==> ((\d. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1)))))))))))) d)) = ((\d. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1)))))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ c= cfind_face b4 b7 b1 cMEM b0 cs_list b4 b6 b7 cMEM b0 cSND csplit_normal_list b4 b6 b1 b2 b3 * / ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ c= cfind_face b4 b7 b1 cMEM b0 cs_list b4 b6 b7 cMEM b0 cSND csplit_normal_list b4 b6 b1 b2 b3 f1 * / ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ c= cfind_face b4 b7 b1 cMEM b0 cs_list b4 b6 b7 cMEM b0 cSND csplit_normal_list b4 b6 b1 b2 b3 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f8 cs_list f0 f1 f2 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cs_flag_list f0 f6 f1 f2 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f8 cs_list f0 f1 f4 c==> cMEM f4 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
- |- (((!z. (!d. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))))))) ==> ((\z. (!d. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))))))) z)) = ((\z. (!d. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))))))) z))
T c= c==> ! ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b5 b7 c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 b0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 b0 b4 c/\ c= cfind_face b5 b8 b2 cMEM b1 cs_list b5 b7 b8 cMEM b1 cSND csplit_normal_list b5 b7 b2 b3 b4 * / ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b5 b7 c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 b0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 b0 b4 c/\ c= cfind_face b5 b8 b2 cMEM b1 cs_list b5 b7 b8 cMEM b1 cSND csplit_normal_list b5 b7 b2 b3 b4 f0 * / ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b5 b7 c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 b0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 b0 b4 c/\ c= cfind_face b5 b8 b2 cMEM b1 cs_list b5 b7 b8 cMEM b1 cSND csplit_normal_list b5 b7 b2 b3 b4 f0
- |- ((((next_el f) x) = w) = ((\w. (((next_el f) x) = w)) w))
T c= c= cnext_el f0 f1 f2 * / c= cnext_el f0 f1 b0 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f8 cs_list f0 f1 f2 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cs_flag_list f0 f6 f1 f2 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F)))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> c= cfind_face f0 f3 f7 c==> cMEM f8 cs_list f0 f1 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f6 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f6 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f6 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f3 f9 c==> cMEM f5 f7 c==> cMEM f4 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f4 f7 cF
- |- (((POWER f) (SUC n)) = (((POWER f) n) o f))
T c= * * part cPOWER f0 cSUC f1 * * part co * * part cPOWER f0 f1 f0
- |- (((!n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) ==> ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)) = ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n))
T c= c==> ! c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- |- (((!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) ==> ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2)) = ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2))
T c= c==> ! c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> F)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- |- (((!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))) ==> ((\z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))) z1)) = ((\z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))) z1))
T c= c==> ! ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ c= cfind_face b1 b4 f2 cMEM f3 cs_list b1 b3 b4 cMEM f3 cSND csplit_normal_list b1 b3 f2 f1 b0 * / ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ c= cfind_face b1 b4 f2 cMEM f3 cs_list b1 b3 b4 cMEM f3 cSND csplit_normal_list b1 b3 f2 f1 b0 f4 * / ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ c= cfind_face b1 b4 f2 cMEM f3 cs_list b1 b3 b4 cMEM f3 cSND csplit_normal_list b1 b3 f2 f1 b0 f4
- |- ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w)))
T c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (((s_list L) r) x)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
- (~ ((FST (((((split_normal_list L) r) f) y) z1)) = (SND (((((split_normal_list L) r) f) y) z1)))) |- (T = (~ ((SND (((((split_normal_list L) r) f) y) z1)) = (FST (((((split_normal_list L) r) f) y) z1)))))
T c==> c~ c= cFST csplit_normal_list f0 f1 f2 f3 f4 cSND csplit_normal_list f0 f1 f2 f3 f4 c= cT c~ c= cSND csplit_normal_list f0 f1 f2 f3 f4 cFST csplit_normal_list f0 f1 f2 f3 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- F
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> c= cfind_face f0 f5 f7 c==> cmarked_list f0 f6 f1 f4 cF
- |- ((\z. (!d. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))))))) z)
T * / ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b5 b7 c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 b0 c/\ c= cl'y b5 b7 b8 b3 c/\ c= cprev_el b7 b0 b4 c/\ c= cfind_face b5 b8 b2 cMEM b1 cs_list b5 b7 b8 cMEM b1 cSND csplit_normal_list b5 b7 b2 b3 b4 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (((s_list L) r) x)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
- ((\w. (((next_el f) x) = w)) w) |- (((\w. (((next_el f) x) = w)) w) /\ (?w. (((next_el f) x) = w)))
T c==> * / c= cnext_el f0 f1 b0 f2 c/\ * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0
- |- ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)
T * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) ==> ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> F)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 f5 f6 c==> c= cfind_face f0 f2 f7 c==> cMEM f8 cs_list f0 f1 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f3 f6 cF
- ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) = T)
T c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c= call * part cloop_list f0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F)))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c/\ c= cprev_el f1 f2 f3 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f3 c==> cuniq cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f3 cntrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f4 f9 c==> cMEM f5 f7 c==> cMEM f2 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f2 f7 cF
- |- ((\z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))) z1)
T * / ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 b0 c/\ c= cfind_face b1 b4 f2 cMEM f3 cs_list b1 b3 b4 cMEM f3 cSND csplit_normal_list b1 b3 f2 f1 b0 f4
- (((next_el f) x) = w) |- ((((next_el f) x) = w) /\ (?w. (((next_el f) x) = w)))
T c==> c= cnext_el f0 f1 f2 c/\ c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((((marked_list L) N) r) x) |- (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) /\ F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cs_list f0 f1 f4 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f8 cs_list f0 f1 f4 c==> cMEM f4 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> F)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> c= cfind_face f0 f3 f7 c==> cMEM f8 cs_list f0 f1 f3 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f6 cF
- |- (!w. (((\w. (((next_el f) x) = w)) w) ==> (?w. (((next_el f) x) = w))))
T c==> * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0
- |- ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2)
T * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> c= cfind_face f0 f3 f7 c==> cMEM f8 cs_list f0 f1 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f6 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f6 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f6 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f3 f9 c==> cMEM f5 f7 c==> cMEM f4 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f4 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- (((next_el f) x) = w) |- ((\w. (((next_el f) x) = w)) w)
T c==> c= cnext_el f0 f1 f2 * / c= cnext_el f0 f1 b0 f2
- |- ((\g. ((f o g) = (\x. (f (g x))))) g)
T * / c= * * part co f0 b0 / * f0 * b0 b1 f1
- |- (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))
T c= cMEM f0 cAPPEND f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = (FST (((((split_normal_list L) r) f) y) z1))), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- (((SND (((((split_normal_list L) r) f) y) z1)) = (FST (((((split_normal_list L) r) f) y) z1))) /\ F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> c= cfind_face f0 f5 f7 c==> cmarked_list f0 f6 f1 f4 c/\ c= cSND csplit_normal_list f0 f1 f7 f5 f3 cFST csplit_normal_list f0 f1 f7 f5 f3 cF
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- |- ((\f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))))) f)
T * / ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ c= cfind_face b3 b6 b0 cMEM f1 cs_list b3 b5 b6 cMEM f1 cSND csplit_normal_list b3 b5 b0 b1 b2 f2
- |- (((!g. ((f o g) = (\x. (f (g x))))) ==> ((\g. ((f o g) = (\x. (f (g x))))) g)) = ((\g. ((f o g) = (\x. (f (g x))))) g))
T c= c==> ! c= * * part co f0 b0 / * f0 * b0 b1 * / c= * * part co f0 b0 / * f0 * b0 b1 f1 * / c= * * part co f0 b0 / * f0 * b0 b1 f1
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> ((((find_face L) x) = f) ==> (((MEM d) (((s_list L) r) x)) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> (((MEM d) (SND (((((split_normal_list L) r) f) y) z1))) ==> ((uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (f_last L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((!d. (((MEM d) (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((MEM (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((((next_el f) x) = w) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> F)))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> c= cfind_face f0 f3 f7 c==> cMEM f8 cs_list f0 f1 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f6 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f6 c==> cMEM f8 cSND csplit_normal_list f0 f1 f7 f5 f6 c==> cuniq cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call / c~ c= b0 cNIL cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cf_last f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> call * part cloop_list f0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> ! c==> cMEM b0 cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cMEM cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c= cnext_el f7 f3 f9 c==> cMEM f5 f7 c==> cMEM f4 f7 c==> c< cindexf f9 f5 f7 cindexf f9 f4 f7 cF
- |- (((!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1)))))))))) ==> ((\y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1)))))))))) y)) = ((\y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1)))))))))) y))
T c= c==> ! ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ c= cfind_face b2 b5 f1 cMEM f2 cs_list b2 b4 b5 cMEM f2 cSND csplit_normal_list b2 b4 f1 b0 b1 * / ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ c= cfind_face b2 b5 f1 cMEM f2 cs_list b2 b4 b5 cMEM f2 cSND csplit_normal_list b2 b4 f1 b0 b1 f3 * / ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ c= cfind_face b2 b5 f1 cMEM f2 cs_list b2 b4 b5 cMEM f2 cSND csplit_normal_list b2 b4 f1 b0 b1 f3
- |- ((!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1)))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 b0 c/\ c= cprev_el b4 f0 b1 c/\ c= cfind_face b2 b5 f1 cMEM f2 cs_list b2 b4 b5 cMEM f2 cSND csplit_normal_list b2 b4 f1 b0 b1 cT
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- |- ((!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 b1 c/\ c= cprev_el b5 f0 b2 c/\ c= cfind_face b3 b6 b0 cMEM f1 cs_list b3 b5 b6 cMEM f1 cSND csplit_normal_list b3 b5 b0 b1 b2 cT
- ((((indexf w) y) f) < (((indexf w) z) f)) |- (((((indexf w) y) f) < (((indexf w) z) f)) = T)
T c==> c< cindexf f0 f1 f2 cindexf f0 f3 f2 c= c< cindexf f0 f1 f2 cindexf f0 f3 f2 cT
- |- ((\d. (!f. (!y. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ ((((find_face L) x) = f) /\ ((MEM d) (((s_list L) r) x)))))))))) ==> ((MEM d) (SND (((((split_normal_list L) r) f) y) z1)))))))))))) d)
T * / ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 b2 c/\ c= cprev_el b6 f0 b3 c/\ c= cfind_face b4 b7 b1 cMEM b0 cs_list b4 b6 b7 cMEM b0 cSND csplit_normal_list b4 b6 b1 b2 b3 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))), ((MEM d) (((s_list L) r) x)), ((((marked_list L) N) r) x) |- F
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 c==> cMEM f8 cs_list f0 f1 f4 c==> cmarked_list f0 f6 f1 f4 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (((s_list L) r) x)), ((((marked_list L) N) r) x) |- (((MEM d) (((s_list L) r) x)) /\ (((MEM d) (FST (((((split_normal_list L) r) f) y) z1))) ==> F))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f8 cs_list f0 f1 f4 c==> cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3 cF
- |- ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)
T * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM d) (((s_list L) r) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((MEM d) (FST (((((split_normal_list L) r) f) y) z1))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f8 cs_list f0 f1 f4 c==> cMEM f4 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c~ cMEM f8 cFST csplit_normal_list f0 f1 f7 f5 f3
- |- ((f o g) = (\x. (f (g x))))
T c= * * part co f0 f1 / * f0 * f1 b0
