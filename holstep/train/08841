N More_lemma2.next_core_FST
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 f2 c= cf_list f0 f4 cnext_el f2 f4 c= cnext_el ccore f0 f2 cFST f4 cFST cnext_el f2 f4
D TRUTH
A |- T
T cT
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hypermap.is_restricted
A |- (!H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))))))
T c= cis_restricted f0 c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
D Nkezbfc_local.lemma
A |- (!A. (A \/ (~ A)))
T c\/ f0 c~ f0
D Seq.allP
A |- (!a. (!s. ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))))
T c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0
D Seq2.mem_next_el
A |- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s))))
T c==> cMEM f0 f1 cMEM cnext_el f1 f0 f1
D List_hypermap.uniq_sublist_unique
A |- (!l1. (!l2. (!L. (!x. (((uniq (flatten L)) /\ (((MEM l1) L) /\ (((MEM l2) L) /\ (((MEM x) l1) /\ ((MEM x) l2))))) ==> (l1 = l2))))))
T c==> c/\ cuniq cflatten f0 c/\ cMEM f1 f0 c/\ cMEM f2 f0 c/\ cMEM f3 f1 cMEM f3 f2 c= f1 f2
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.loop_list
A |- (!L. (!s. (((loop_list L) s) = ((all (\x. (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el s) x))))) s))))
T c= cloop_list f0 f1 call / c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f1 b0 f1
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.core
A |- (!L. (!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))))
T c= ccore f0 f1 cMAP * * part co part cFST part cHD cparts f0 f1
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.MEMf_MAP
A |- (!f. (!x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))))
T c==> cMEM f0 f1 cMEM * f2 f0 cMAP f2 f1
D Tame_list.next_el_MEM_map
A |- (!y. (!d. (!f. (((uniq y) /\ (((MEM d) y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((next_el ((MAP f) y)) (f d)) = (f ((next_el y) d)))))))
T c==> c/\ cuniq f0 c/\ cMEM f1 f0 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f2 b0 * f2 b1 c= b0 b1 c= cnext_el cMAP f2 f0 * f2 f1 * f2 cnext_el f0 f1
D Tame_list.MEM_LAST
A |- (!s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s)))
T c==> c~ c= f0 cNIL cMEM cLAST f0 f0
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.is_restricted_e_list_nondeg
A |- (!L. (!d. (((good_list L) /\ ((is_restricted (hypermap_of_list L)) /\ ((MEM d) (list_of_darts L)))) ==> (~ ((e_list d) = d)))))
T c==> c/\ cgood_list f0 c/\ cis_restricted chypermap_of_list f0 cMEM f1 clist_of_darts f0 c~ c= ce_list f1 f1
D Tame_list.edge_nondeg_f_xor_ni
A |- (!L. (!x. (((good_list L) /\ (((MEM x) (list_of_darts L)) /\ (is_edge_nondegenerate (hypermap_of_list L)))) ==> (~ (((f_list L) x) = ((f_list L) (e_list x)))))))
T c==> c/\ cgood_list f0 c/\ cMEM f1 clist_of_darts f0 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cf_list f0 f1 cf_list f0 ce_list f1
D Tame_list.parts_flatten
A |- (!L. (!r. (((uniq r) /\ (~ (r = NIL))) ==> ((flatten ((parts L) r)) = r))))
T c==> c/\ cuniq f0 c~ c= f0 cNIL c= cflatten cparts f1 f0 f0
D Tame_list.parts_all_nonnil
A |- (!L. (!r. (((uniq r) /\ (~ (r = NIL))) ==> ((all (\p. (~ (p = NIL)))) ((parts L) r)))))
T c==> c/\ cuniq f0 c~ c= f0 cNIL call / c~ c= b0 cNIL cparts f1 f0
D Tame_list.LYNVPSU
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((all uniq) ((quotient_list L) N)))))))
T c==> cmarked_list f0 f1 f2 f3 call part cuniq cquotient_list f0 f1
D Tame_list.parts_nonnil
A |- (!L. (!r. (((uniq r) /\ (~ (r = NIL))) ==> (~ (((parts L) r) = NIL)))))
T c==> c/\ cuniq f0 c~ c= f0 cNIL c~ c= cparts f1 f0 cNIL
D Tame_list.parts_fst
A |- (!L. (!N. (!r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p)))))))))
T c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM f4 f3 c= cFST f4 cFST cHD f3
D Tame_list.uniq_parts
A |- (!L. (!r. (((uniq r) /\ (~ (r = NIL))) ==> (uniq ((parts L) r)))))
T c==> c/\ cuniq f0 c~ c= f0 cNIL cuniq cparts f1 f0
D Tame_list.f_list_quotient_alt
A |- (!L. (!N. (!r. (!r'. (!p. (!p'. ((((normal_list L) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM p') ((parts L) r')) /\ (((MEM r) N) /\ ((MEM r') N))))) ==> ((((next_el ((parts L) r)) p) = p') = ((MEM ((f_list L) (LAST p))) p')))))))))
T c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 cparts f0 f3 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f3 f1 cMEM f5 f1 c= c= cnext_el cparts f0 f3 f2 f4 cMEM cf_list f0 cLAST f2 f4
D Tame_list.quotient_list_core
A |- (!L. (!N. (((quotient_list L) N) = ((MAP (core L)) N))))
T c= cquotient_list f0 f1 cMAP * part ccore f0 f1
D Dangeyj.mem_imp_not_nil
A |- (!s. (!x. (((MEM x) s) ==> (~ (s = NIL)))))
T c==> cMEM f0 f1 c~ c= f1 cNIL
D Pwssrat.f_list_power_next_el
A |- (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
D Pplhulj.marked_list_of_dart
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))))
T c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0
D Aq23.LAST_FLATTEN_2
A |- (!r. (((~ (r = NIL)) /\ (~ ((LAST r) = NIL))) ==> ((LAST (flatten r)) = (LAST (LAST r)))))
T c==> c/\ c~ c= f0 cNIL c~ c= cLAST f0 cNIL c= cLAST cflatten f0 cLAST cLAST f0
D Aq8.parts_mem_exists
A |- (!L. (!r. (((uniq r) /\ ((MEM x) r)) ==> (?p. (((MEM p) ((parts L) r)) /\ ((MEM x) p))))))
T c==> c/\ cuniq f0 cMEM f1 f0 c? / c/\ cMEM b0 cparts f2 f0 cMEM f1 b0
D Aq8.uniq_imp_inj
A |- (!y. ((uniq ((MAP f) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))))
T c==> cuniq cMAP f0 f1 ! ! c==> c/\ cMEM b0 f1 c/\ cMEM b1 f1 c= * f0 b0 * f0 b1 c= b0 b1
D Aq12.condition_last_parts
A |- (!p. (!d. ((((MEM p) ((parts L) r)) /\ (((MEM d) p) /\ ((~ (d = (LAST r))) /\ ((~ (r = NIL)) /\ (uniq r))))) ==> ((~ (((next_el r) d) = ((f_list L) (e_list d)))) = (d = (LAST p))))))
T c==> c/\ cMEM f0 cparts f1 f2 c/\ cMEM f3 f0 c/\ c~ c= f3 cLAST f2 c/\ c~ c= f2 cNIL cuniq f2 c= c~ c= cnext_el f2 f3 cf_list f1 ce_list f3 c= f3 cLAST f0
D More_lemma2.MEM_CORE
A |- (!L. (!N. (!r. (!x. (!k. ((((MEM d) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST d)) ((core L) r))))))))
T c==> c/\ cMEM f0 f1 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f1 f4 c~ cfinal_list f2 f1 cMEM cFST f0 ccore f2 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST x)) ((core L) r)) /\ (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c/\ cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ |- (((((uniq (flatten N)) /\ ((MEM r) N)) ==> (uniq r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))) = (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c= c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f1 cFST f3 cFST cnext_el f1 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f1 cFST f3 cFST cnext_el f1 f3
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d)
T * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0
+ (~ (r = NIL)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))))))))), ((MEM d) p), ((MEM d) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> cgood_list f1 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> c/\ cconnected_hypermap chypermap_of_list f1 c/\ csimple_hypermap chypermap_of_list f1 c/\ cis_no_double_joins chypermap_of_list f1 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> cMEM f2 f3 c==> cMEM f2 clist_of_darts f1 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 cMEM cf_list f1 cLAST f3 f4
+ |- (((!A. (A \/ (~ A))) ==> ((\A. (A \/ (~ A))) (d = (LAST r)))) = ((\A. (A \/ (~ A))) (d = (LAST r))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= f0 cLAST f1 * / c\/ b0 c~ b0 c= f0 cLAST f1
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f4 ccore f0 f2 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((FST d) = (FST (HD p))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> c= cFST f4 cFST cHD f6 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (!p'. (((\p. (((MEM p) ((parts L) r)) /\ ((MEM ((next_el r) d)) p))) p') ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 ! c==> * / c/\ cMEM b1 cparts f1 f2 cMEM cnext_el f2 f4 b1 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((MEM x) r), ((((marked_list L) N) r) x) |- ((((MEM (FST x)) ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = ((!k. ((((MEM x) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST x)) ((core L) r)))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f2 c= c==> cMEM cFST f2 ccore f0 f1 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4 c==> ! c==> c/\ cMEM f2 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f3 f1 f2 c~ cfinal_list f0 f1 cMEM cFST f2 ccore f0 f1 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- (((!x'. (((\w. (((next_el ((find_face L) x)) x) = w)) x') ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) ==> ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) = ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c= c==> ! c==> * / c= cnext_el cfind_face f0 f4 f4 b1 b0 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> c? / c= cnext_el cfind_face f0 f4 f4 b0 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> c? / c= cnext_el cfind_face f0 f4 f4 b0 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
+ |- (((!f. (!y. ((uniq ((MAP f) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))))) ==> ((\f. (!y. ((uniq ((MAP f) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))))) (FST o HD))) = ((\f. (!y. ((uniq ((MAP f) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))))) (FST o HD)))
T c= c==> ! ! c==> cuniq cMAP b0 b1 ! ! c==> c/\ cMEM b2 b1 c/\ cMEM b3 b1 c= * b0 b2 * b0 b3 c= b2 b3 * / ! c==> cuniq cMAP b0 b1 ! ! c==> c/\ cMEM b2 b1 c/\ cMEM b3 b1 c= * b0 b2 * b0 b3 c= b2 b3 * * part co part cFST part cHD * / ! c==> cuniq cMAP b0 b1 ! ! c==> c/\ cMEM b2 b1 c/\ cMEM b3 b1 c= * b0 b2 * b0 b3 c= b2 b3 * * part co part cFST part cHD
+ (~ (((parts L) r) = NIL)), (uniq r), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- ((((MEM (LAST ((parts L) r))) ((parts L) r)) ==> (~ ((LAST ((parts L) r)) = NIL))) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= cparts f0 f1 cNIL c==> cuniq f1 c==> c= f2 cLAST f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cflatten cparts f0 f1 f1 c==> cMEM f2 f3 c==> cMEM cnext_el f1 f2 f4 c==> cMEM f3 cparts f0 f1 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c==> c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c~ c= cLAST cparts f0 f1 cNIL cMEM cf_list f0 cLAST f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cmarked_list f0 f5 f1 f2 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3
+ (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), ((FST ((next_el r) d)) = (FST (HD pn))), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- (((FST ((next_el r) d)) = (FST (HD pn))) /\ (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))
T c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> c= cFST cnext_el f0 f2 cFST cHD f3 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> cMEM f2 f4 c==> cMEM cnext_el f0 f2 f3 c==> cMEM f4 cparts f1 f0 c/\ c= cFST cnext_el f0 f2 cFST cHD f3 c==> c= c= cnext_el cparts f1 f0 f4 f3 cMEM cf_list f1 cLAST f4 f3 c==> cMEM f2 clist_of_darts f1 c==> cone_step_list f1 f2 cnext_el f0 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f1 cLAST f4 f3
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq ((MAP (FST o HD)) ((parts L) r))) /\ ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- |- ((\q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q'))))) q')
T * / c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 b0 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 c==> f2 b0 f4
+ |- ((~ (((parts L) r) = NIL)) ==> ((MEM (LAST ((parts L) r))) ((parts L) r)))
T c==> c~ c= cparts f0 f1 cNIL cMEM cLAST cparts f0 f1 cparts f0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
+ |- (((!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) ==> ((\r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) r)) = ((\r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) r))
T c= c==> ! c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 * / c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 f1 * / c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 f1
+ |- ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM pn) ((parts L) r)) /\ ((MEM ((next_el r) d)) pn))))) ==> ((FST ((next_el r) d)) = (FST (HD pn))))
T c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM cnext_el f2 f4 f3 c= cFST cnext_el f2 f4 cFST cHD f3
+ (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM ((next_el r) d)) pn) |- (((flatten ((parts L) r)) = r) /\ ((~ (((parts L) r) = NIL)) ==> (((MEM (LAST ((parts L) r))) ((parts L) r)) ==> ((~ ((LAST ((parts L) r)) = NIL)) ==> (((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))) ==> ((p = (LAST ((parts L) r))) ==> ((MEM ((f_list L) (LAST r))) pn)))))))
T c==> c= f0 cLAST f1 c==> c= cf_list f2 f0 cnext_el f1 f0 c==> c= cflatten cparts f2 f1 f1 c==> cMEM cnext_el f1 f0 f3 c/\ c= cflatten cparts f2 f1 f1 c==> c~ c= cparts f2 f1 cNIL c==> cMEM cLAST cparts f2 f1 cparts f2 f1 c==> c~ c= cLAST cparts f2 f1 cNIL c==> cMEM cLAST cLAST cparts f2 f1 cLAST cparts f2 f1 c==> c= f4 cLAST cparts f2 f1 cMEM cf_list f2 cLAST f1 f3
- (((f_list L) d) = ((next_el r) d)), ((MEM ((next_el r) d)) pn) |- ((d = (LAST r)) ==> ((MEM ((f_list L) (LAST r))) pn))
T c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM cnext_el f2 f1 f3 c==> c= f1 cLAST f2 cMEM cf_list f0 cLAST f2 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((f_list L) x) = w) /\ (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c/\ c= cf_list f0 f2 f4 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) p'), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM p') ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (!pn. (((\pn. (p' = pn)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 ! c==> * / c= f7 b1 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- (~ (r = NIL)) |- ((NIL = r) = F)
T c==> c~ c= f0 cNIL c= c= cNIL f0 cF
+ (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM p) ((parts L) r)) |- (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f1 c==> cgood_list f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f3 c==> cMEM f3 cparts f0 f1 c==> cMEM cnext_el f1 f2 f4 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f1 c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f1 cNIL c==> cuniq cparts f0 f1 c==> c= cFST f2 cFST cHD f3 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f3 cFST cHD cnext_el cparts f0 f1 f3 c==> c= cFST cnext_el f1 f2 cFST cHD f4 c==> c= c= cnext_el cparts f0 f1 f3 f4 cMEM cf_list f0 cLAST f3 f4 c==> cMEM f2 clist_of_darts f0 c==> cone_step_list f0 f2 cnext_el f1 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f0 cLAST f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), (p' = pn), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM p') ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> c= f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f8 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f8 cparts f1 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cMEM cnext_el f2 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- (((one_step_list L) d) ((next_el r) d)) |- ((((one_step_list L) d) ((next_el r) d)) = T)
T c==> cone_step_list f0 f1 cnext_el f2 f1 c= cone_step_list f0 f1 cnext_el f2 f1 cT
+ (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
- (~ ((e_list d) = d)) |- (~ (d = (e_list d)))
T c==> c~ c= ce_list f0 f0 c~ c= f0 ce_list f0
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> c/\ cuniq cflatten f5 c/\ call / c~ c= b0 cNIL f5 c/\ call * part cf_last f0 f5 c/\ call * part cloop_list f0 f5 ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cuniq f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 c==> cMEM f4 clist_of_darts f1 c==> cone_step_list f1 f4 cnext_el f2 f4 c==> c~ c= ce_list f4 f4 cMEM cf_list f1 cLAST f6 f7
- (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> (((MEM d) r) ==> ((((f_list L) d) = ((next_el r) d)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> cMEM f4 f2 c==> c= cf_list f0 f4 cnext_el f2 f4 c==> c= cnext_el f5 f3 f6 c==> c= cfind_face f0 f3 f5 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c= cnext_el ccore f0 f2 cFST f4 cFST cnext_el f2 f4
- |- ((((find_face L) x) = f) = ((\f. (((find_face L) x) = f)) f))
T c= c= cfind_face f0 f1 f2 * / c= cfind_face f0 f1 b0 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((next_el r) d)) r) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cmarked_list f0 f5 f1 f2 c==> cMEM cnext_el f1 f3 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3
- ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((\w. (((next_el ((find_face L) x)) x) = w)) w) /\ (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c/\ * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
+ (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
- (is_no_double_joins (hypermap_of_list L)) |- ((is_no_double_joins (hypermap_of_list L)) = T)
T c==> cis_no_double_joins chypermap_of_list f0 c= cis_no_double_joins chypermap_of_list f0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) x) = (((POWER (next_el ((find_face L) x))) (SUC (NUMERAL _0))) x))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f3 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f3 cPOWER * part cnext_el cfind_face f0 f3 cSUC cNUMERAL c_0 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- (((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F)) |- ((((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F)) /\ (((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c/\ c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF
- (~ (d = (LAST r))) |- (~ ((LAST r) = d))
T c==> c~ c= f0 cLAST f1 c~ c= cLAST f1 f0
+ (uniq ((parts L) r)) |- ((uniq ((parts L) r)) = T)
T c==> cuniq cparts f0 f1 c= cuniq cparts f0 f1 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c==> c= cfind_face f0 f3 f2 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ (~ ((f a) = (f b))), (a = b) |- F
T c==> c~ c= * f0 f1 * f0 f2 c==> c= f1 f2 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f1 c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f1 cNIL c==> cuniq cparts f0 f1 c==> c= cFST f3 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f6 cFST cHD cnext_el cparts f0 f1 f6 c==> c= cFST cnext_el f1 f3 cFST cHD f7 c==> c= c= cnext_el cparts f0 f1 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f3 clist_of_darts f0 c==> cone_step_list f0 f3 cnext_el f1 f3 c==> c~ c= ce_list f3 f3 cMEM cf_list f0 cLAST f6 f7
+ (~ (r = NIL)), (uniq r), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- (((flatten ((parts L) r)) = r) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= f1 cLAST f0 c==> c= cf_list f2 f1 cnext_el f0 f1 c==> cMEM f1 f3 c==> cMEM cnext_el f0 f1 f4 c==> cMEM f3 cparts f2 f0 c==> c= cflatten cparts f2 f0 f0 cMEM cf_list f2 cLAST f3 f4
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f2 c==> cMEM f4 cparts f0 f2 c==> cMEM f1 f4 c==> cMEM f5 cparts f0 f2 c==> cMEM cnext_el f2 f1 f5 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f4 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f4 cFST cHD cnext_el cparts f0 f2 f4 c==> c= cFST cnext_el f2 f1 cFST cHD f5 c==> c= c= cnext_el cparts f0 f2 f4 f5 cMEM cf_list f0 cLAST f4 f5 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f4 f5
+ |- (((!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) ==> ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) x)) = ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f4 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((MEM p') ((parts L) r)) /\ ((MEM ((next_el r) d)) p')) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> c/\ cMEM f7 cparts f1 f2 cMEM cnext_el f2 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ |- (((!y. (!d. (!f. (((uniq y) /\ (((MEM d) y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((next_el ((MAP f) y)) (f d)) = (f ((next_el y) d))))))) ==> ((\y. (!d. (!f. (((uniq y) /\ (((MEM d) y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((next_el ((MAP f) y)) (f d)) = (f ((next_el y) d))))))) ((parts L) r))) = ((\y. (!d. (!f. (((uniq y) /\ (((MEM d) y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((next_el ((MAP f) y)) (f d)) = (f ((next_el y) d))))))) ((parts L) r)))
T c= c==> ! ! ! c==> c/\ cuniq b0 c/\ cMEM b1 b0 ! ! c==> c/\ cMEM b3 b0 c/\ cMEM b4 b0 c= * b2 b3 * b2 b4 c= b3 b4 c= cnext_el cMAP b2 b0 * b2 b1 * b2 cnext_el b0 b1 * / ! ! c==> c/\ cuniq b0 c/\ cMEM b1 b0 ! ! c==> c/\ cMEM b3 b0 c/\ cMEM b4 b0 c= * b2 b3 * b2 b4 c= b3 b4 c= cnext_el cMAP b2 b0 * b2 b1 * b2 cnext_el b0 b1 cparts f0 f1 * / ! ! c==> c/\ cuniq b0 c/\ cMEM b1 b0 ! ! c==> c/\ cMEM b3 b0 c/\ cMEM b4 b0 c= * b2 b3 * b2 b4 c= b3 b4 c= cnext_el cMAP b2 b0 * b2 b1 * b2 cnext_el b0 b1 cparts f0 f1
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f3 ccore f0 f2 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
+ (~ ((f a) = (f b))), (a = b) |- (((f b) = (f b)) ==> F)
T c==> c~ c= * f0 f1 * f0 f2 c==> c= f1 f2 c==> c= * f0 f2 * f0 f2 cF
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ ((FST ((next_el r) d)) = (FST (HD pn))) |- (((FST (HD ((next_el ((parts L) r)) p))) = (FST (HD pn))) = ((FST (HD ((next_el ((parts L) r)) p))) = (FST ((next_el r) d))))
T c==> c= cFST cnext_el f0 f1 cFST cHD f2 c= c= cFST cHD cnext_el cparts f3 f0 f4 cFST cHD f2 c= cFST cHD cnext_el cparts f3 f0 f4 cFST cnext_el f0 f1
- |- ((((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F)) ==> (((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF
+ (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM d) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)), (((one_step_list L) d) ((next_el r) d)) |- ((((one_step_list L) d) ((next_el r) d)) /\ ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))
T c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> cMEM f2 f3 c==> cMEM f2 clist_of_darts f1 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 c==> cone_step_list f1 f2 cnext_el f0 f2 c/\ cone_step_list f1 f2 cnext_el f0 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f1 cLAST f3 f4
+ (!x. (((MEM x) ((parts L) r)) ==> (~ (x = NIL)))), (~ (((parts L) r) = NIL)), (uniq r), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> ! c==> cMEM b0 cparts f0 f1 c~ c= b0 cNIL c==> c~ c= cparts f0 f1 cNIL c==> cuniq f1 c==> c= f2 cLAST f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cflatten cparts f0 f1 f1 c==> cMEM f2 f3 c==> cMEM cnext_el f1 f2 f4 c==> cMEM f3 cparts f0 f1 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 cMEM cf_list f0 cLAST f3 f4
+ (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((MEM ((next_el r) d)) pn), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- (((MEM (LAST ((parts L) r))) ((parts L) r)) /\ ((~ ((LAST ((parts L) r)) = NIL)) ==> (((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))) ==> ((p = (LAST ((parts L) r))) ==> ((MEM ((f_list L) (LAST r))) pn)))))
T c==> c= f0 cLAST f1 c==> c= cf_list f2 f0 cnext_el f1 f0 c==> cMEM cnext_el f1 f0 f3 c==> cMEM cLAST cparts f2 f1 cparts f2 f1 c/\ cMEM cLAST cparts f2 f1 cparts f2 f1 c==> c~ c= cLAST cparts f2 f1 cNIL c==> cMEM cLAST cLAST cparts f2 f1 cLAST cparts f2 f1 c==> c= f4 cLAST cparts f2 f1 cMEM cf_list f2 cLAST f1 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((all (f_last L)) N) /\ (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c/\ call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f4 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
+ (p' = pn), ((MEM ((next_el r) d)) p') |- ((((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))) = (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> c= f0 f1 c==> cMEM cnext_el f2 f3 f0 c= c==> cMEM cnext_el f2 f3 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f4 f2 cFST f3 cFST cnext_el f2 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f4 f2 cFST f3 cFST cnext_el f2 f3
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c? / c/\ cMEM b0 cparts f1 f2 cMEM f3 b0 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f4 cf_list f1 f4 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f4 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> cMEM f4 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f4 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f3 cFST cnext_el f2 f3
- ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F), (((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F)) |- ((((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F)) /\ ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c/\ c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF
+ (good_list L), ((MEM d) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- ((((FST d) = (FST (HD p))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))) = (((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM d) p))))) ==> ((FST d) = (FST (HD p)))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 cparts f0 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c= c==> c= cFST f1 cFST cHD f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f3 cFST f1 cFST cnext_el f3 f1 c==> c==> c/\ cnormal_list f0 f4 c/\ cgood_list f0 c/\ cMEM f3 f4 c/\ cMEM f2 cparts f0 f3 cMEM f1 f2 c= cFST f1 cFST cHD f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f3 cFST f1 cFST cnext_el f3 f1
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((all uniq) ((quotient_list L) N))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 call part cuniq cquotient_list f0 f1 f2
+ (~ ((LAST ((parts L) r)) = NIL)), (~ (((parts L) r) = NIL)), (uniq r), (d = (LAST r)), ((LAST r) = (LAST (LAST ((parts L) r)))), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM d) p), ((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> c~ c= cLAST cparts f0 f1 cNIL c==> c~ c= cparts f0 f1 cNIL c==> cuniq f1 c==> c= f2 cLAST f1 c==> c= cLAST f1 cLAST cLAST cparts f0 f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cflatten cparts f0 f1 f1 c==> cMEM f2 f3 c==> cMEM cLAST cLAST cparts f0 f1 cLAST cparts f0 f1 c==> cMEM cnext_el f1 f2 f4 c==> cMEM f3 cparts f0 f1 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 cMEM cf_list f0 cLAST f3 f4
+ (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))
T c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> cMEM f2 f3 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 c==> c= c= cnext_el cparts f1 f0 f3 f4 cMEM cf_list f1 cLAST f3 f4 c==> cMEM f2 clist_of_darts f1 c==> cone_step_list f1 f2 cnext_el f0 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f1 cLAST f3 f4
+ |- ((((normal_list L) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM pn) ((parts L) r)) /\ (((MEM r) N) /\ ((MEM r) N))))) ==> ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)))
T c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 cparts f0 f3 c/\ cMEM f4 cparts f0 f3 c/\ cMEM f3 f1 cMEM f3 f1 c= c= cnext_el cparts f0 f3 f2 f4 cMEM cf_list f0 cLAST f2 f4
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((FST ((next_el r) d)) = (FST (HD pn))) ==> ((FST (HD ((next_el ((parts L) r)) p))) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f5 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f5 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM f5 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f7 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c==> c= cFST cnext_el f2 f3 cFST cHD f7 c= cFST cHD cnext_el cparts f1 f2 f4 cFST cnext_el f2 f3
+ |- (((!s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) ==> ((\s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) (LAST ((parts L) r)))) = ((\s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) (LAST ((parts L) r))))
T c= c==> ! c==> c~ c= b0 cNIL cMEM cLAST b0 b0 * / c==> c~ c= b0 cNIL cMEM cLAST b0 b0 cLAST cparts f0 f1 * / c==> c~ c= b0 cNIL cMEM cLAST b0 b0 cLAST cparts f0 f1
+ |- (((!L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) ==> ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L)) = ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (((~ (EMPTY = (dart (hypermap_of_list L)))) ==> ((EMPTY = (dart (hypermap_of_list L))) = F)) = ((EMPTY = (dart (hypermap_of_list L))) = F))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c==> c~ c= part cEMPTY * part cdart chypermap_of_list f0 c= c= part cEMPTY * part cdart chypermap_of_list f0 cF c= c= part cEMPTY * part cdart chypermap_of_list f0 cF
+ (~ (r = NIL)), (uniq r), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((((uniq r) /\ (~ (r = NIL))) ==> (~ (((parts L) r) = NIL))) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= f1 cLAST f0 c==> c= cf_list f2 f1 cnext_el f0 f1 c==> c= cflatten cparts f2 f0 f0 c==> cMEM f1 f3 c==> cMEM cnext_el f0 f1 f4 c==> cMEM f3 cparts f2 f0 c==> c==> c/\ cuniq f0 c~ c= f0 cNIL c~ c= cparts f2 f0 cNIL cMEM cf_list f2 cLAST f3 f4
+ (~ (r = NIL)), (uniq r) |- (((!x. (((MEM x) ((parts L) r)) ==> (~ (x = NIL)))) ==> ((MEM ((f_list L) (LAST p))) pn)) = ((((uniq r) /\ (~ (r = NIL))) ==> ((all (\p. (~ (p = NIL)))) ((parts L) r))) ==> ((MEM ((f_list L) (LAST p))) pn)))
T c==> c~ c= f0 cNIL c==> cuniq f0 c= c==> ! c==> cMEM b0 cparts f1 f0 c~ c= b0 cNIL cMEM cf_list f1 cLAST f2 f3 c==> c==> c/\ cuniq f0 c~ c= f0 cNIL call / c~ c= b0 cNIL cparts f1 f0 cMEM cf_list f1 cLAST f2 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ (~ (((next_el r) d) = ((f_list L) (e_list d)))), (~ (r = NIL)), (uniq r), (((f_list L) d) = ((next_el r) d)), ((d = (LAST r)) \/ (~ (d = (LAST r)))), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= cf_list f2 f1 cnext_el f0 f1 c==> c\/ c= f1 cLAST f0 c~ c= f1 cLAST f0 c==> cMEM f1 f3 c==> cMEM cnext_el f0 f1 f4 c==> cMEM f3 cparts f2 f0 cMEM cf_list f2 cLAST f3 f4
- |- ((!f. ((a = b) ==> ((f a) = (f b)))) = T)
T c= ! c==> c= f0 f1 c= * b0 f0 * b0 f1 cT
+ |- (((!L. (!p. (!d. ((((MEM p) ((parts L) r)) /\ (((MEM d) p) /\ ((~ (d = (LAST r))) /\ ((~ (r = NIL)) /\ (uniq r))))) ==> ((~ (((next_el r) d) = ((f_list L) (e_list d)))) = (d = (LAST p))))))) ==> ((\L. (!p. (!d. ((((MEM p) ((parts L) r)) /\ (((MEM d) p) /\ ((~ (d = (LAST r))) /\ ((~ (r = NIL)) /\ (uniq r))))) ==> ((~ (((next_el r) d) = ((f_list L) (e_list d)))) = (d = (LAST p))))))) L)) = ((\L. (!p. (!d. ((((MEM p) ((parts L) r)) /\ (((MEM d) p) /\ ((~ (d = (LAST r))) /\ ((~ (r = NIL)) /\ (uniq r))))) ==> ((~ (((next_el r) d) = ((f_list L) (e_list d)))) = (d = (LAST p))))))) L))
T c= c==> ! ! ! c==> c/\ cMEM b1 cparts b0 f0 c/\ cMEM b2 b1 c/\ c~ c= b2 cLAST f0 c/\ c~ c= f0 cNIL cuniq f0 c= c~ c= cnext_el f0 b2 cf_list b0 ce_list b2 c= b2 cLAST b1 * / ! ! c==> c/\ cMEM b1 cparts b0 f0 c/\ cMEM b2 b1 c/\ c~ c= b2 cLAST f0 c/\ c~ c= f0 cNIL cuniq f0 c= c~ c= cnext_el f0 b2 cf_list b0 ce_list b2 c= b2 cLAST b1 f1 * / ! ! c==> c/\ cMEM b1 cparts b0 f0 c/\ cMEM b2 b1 c/\ c~ c= b2 cLAST f0 c/\ c~ c= f0 cNIL cuniq f0 c= c~ c= cnext_el f0 b2 cf_list b0 ce_list b2 c= b2 cLAST b1 f1
+ (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) /\ ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))
T c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> cis_restricted chypermap_of_list f0 c==> cuniq f1 c==> cgood_list f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f3 c==> cMEM cnext_el f1 f2 f4 c==> cMEM f3 cparts f0 f1 c/\ ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f1 cNIL c==> cuniq cparts f0 f1 c==> c= cFST f2 cFST cHD f3 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f3 cFST cHD cnext_el cparts f0 f1 f3 c==> c= cFST cnext_el f1 f2 cFST cHD f4 c==> c= c= cnext_el cparts f0 f1 f3 f4 cMEM cf_list f0 cLAST f3 f4 c==> cMEM f2 clist_of_darts f0 c==> cone_step_list f0 f2 cnext_el f1 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f0 cLAST f3 f4
+ |- ((\r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) r)
T * / c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 f1
+ |- ((\u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u)))) u)
T * / c==> cMEM f0 b0 cMEM * f1 f0 cMAP f1 b0 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)), ((all (\l. (~ (l = NIL)))) L) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> call / c~ c= b0 cNIL f0 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f3 ccore f0 f2 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
+ |- (((!q'. ((((MEM ((core L) r)) ((MAP (core L)) N)) = p') ==> ((p' ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (p' ==> q'))))) ==> ((\q'. ((((MEM ((core L) r)) ((MAP (core L)) N)) = p') ==> ((p' ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (p' ==> q'))))) q')) = ((\q'. ((((MEM ((core L) r)) ((MAP (core L)) N)) = p') ==> ((p' ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cMEM ccore f0 f1 cMAP * part ccore f0 f2 f3 c==> c==> f3 c= cuniq ccore f0 f1 b0 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> f3 b0 * / c==> c= cMEM ccore f0 f1 cMAP * part ccore f0 f2 f3 c==> c==> f3 c= cuniq ccore f0 f1 b0 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> f3 b0 f4 * / c==> c= cMEM ccore f0 f1 cMAP * part ccore f0 f2 f3 c==> c==> f3 c= cuniq ccore f0 f1 b0 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> f3 b0 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f4 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
- ((MEM (FST ((next_el r) d))) ((core L) r)) |- (((MEM (FST ((next_el r) d))) ((core L) r)) = T)
T c==> cMEM cFST cnext_el f0 f1 ccore f2 f0 c= cMEM cFST cnext_el f0 f1 ccore f2 f0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((!x. (((\p. (((MEM p) ((parts L) r)) /\ ((MEM ((next_el r) d)) p))) x) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))) ==> ((?p. (((MEM p) ((parts L) r)) /\ ((MEM ((next_el r) d)) p))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))) = ((?p. (((MEM p) ((parts L) r)) /\ ((MEM ((next_el r) d)) p))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= c==> ! c==> * / c/\ cMEM b1 cparts f1 f2 cMEM cnext_el f2 f4 b1 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4 c==> c? / c/\ cMEM b0 cparts f1 f2 cMEM cnext_el f2 f4 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4 c==> c? / c/\ cMEM b0 cparts f1 f2 cMEM cnext_el f2 f4 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), (((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f6 cuniq ccore f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM r) N), ((normal_list L) N) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f4 ccore f0 f2 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
+ (!x. (((MEM x) ((parts L) r)) ==> (~ (x = NIL)))) |- ((\x. (((MEM x) ((parts L) r)) ==> (~ (x = NIL)))) (LAST ((parts L) r)))
T c==> ! c==> cMEM b0 cparts f0 f1 c~ c= b0 cNIL * / c==> cMEM b0 cparts f0 f1 c~ c= b0 cNIL cLAST cparts f0 f1
+ |- ((d = (LAST r)) \/ (~ (d = (LAST r))))
T c\/ c= f0 cLAST f1 c~ c= f0 cLAST f1
+ (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f1 c==> cgood_list f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f3 c==> cMEM cnext_el f1 f2 f4 c==> cMEM f3 cparts f0 f1 c==> c~ c= f1 cNIL c==> cuniq cparts f0 f1 c==> c= cFST f2 cFST cHD f3 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f3 cFST cHD cnext_el cparts f0 f1 f3 c==> c= cFST cnext_el f1 f2 cFST cHD f4 c==> c= c= cnext_el cparts f0 f1 f3 f4 cMEM cf_list f0 cLAST f3 f4 c==> cMEM f2 clist_of_darts f0 c==> cone_step_list f0 f2 cnext_el f1 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f0 cLAST f3 f4
+ |- (!k. ((((MEM ((next_el r) d)) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST ((next_el r) d))) ((core L) r))))
T c==> c/\ cMEM cnext_el f0 f1 f0 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f0 f4 c~ cfinal_list f2 f0 cMEM cFST cnext_el f0 f1 ccore f2 f0
+ |- (((T ==> ((uniq ((core L) r)) = (uniq ((core L) r)))) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (T ==> (uniq ((core L) r))))) = ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (T ==> (uniq ((core L) r)))))
T c= c==> c==> cT c= cuniq ccore f0 f1 cuniq ccore f0 f1 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> cT cuniq ccore f0 f1 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> cT cuniq ccore f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (FST ((next_el r) d))) ((core L) r)) /\ (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cmarked_list f0 f5 f1 f2 c/\ cMEM cFST cnext_el f1 f3 ccore f0 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
+ (good_list L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> cgood_list f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 f2 c= cf_list f0 f4 cnext_el f2 f4 c= cnext_el ccore f0 f2 cFST f4 cFST cnext_el f2 f4
- (d = (e_list d)) |- ((e_list d) = d)
T c==> c= f0 ce_list f0 c= ce_list f0 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) /\ (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((MEM p) ((parts L) r)) /\ ((MEM d) p)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> c/\ cMEM f6 cparts f1 f2 cMEM f4 f6 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (~ (r = NIL)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))), ((MEM d) p), ((MEM d) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> cgood_list f1 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> c/\ csimple_hypermap chypermap_of_list f1 c/\ cis_no_double_joins chypermap_of_list f1 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> cMEM f2 f3 c==> cMEM f2 clist_of_darts f1 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 cMEM cf_list f1 cLAST f3 f4
+ |- (((?w. (((next_el ((find_face L) x)) x) = w)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c= c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3
- (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ |- (((uniq ((parts L) r)) /\ (((MEM p) ((parts L) r)) /\ (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) ((FST o HD) p)) = ((FST o HD) ((next_el ((parts L) r)) p))))
T c==> c/\ cuniq cparts f0 f1 c/\ cMEM f2 cparts f0 f1 ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 co part cFST part cHD f2 co part cFST part cHD cnext_el cparts f0 f1 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> cMEM f4 f1 c==> cmarked_list f0 f5 f1 f2 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4
+ (~ (r = NIL)), (uniq r), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((((uniq r) /\ (~ (r = NIL))) ==> ((flatten ((parts L) r)) = r)) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= f1 cLAST f0 c==> c= cf_list f2 f1 cnext_el f0 f1 c==> cMEM f1 f3 c==> cMEM cnext_el f0 f1 f4 c==> cMEM f3 cparts f2 f0 c==> c==> c/\ cuniq f0 c~ c= f0 cNIL c= cflatten cparts f2 f0 f0 cMEM cf_list f2 cLAST f3 f4
- |- (T = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= cT c==> c~ ! c\/ b0 c~ b0 cF
+ |- (((!r. (!L. (!p. (!d. ((((MEM p) ((parts L) r)) /\ (((MEM d) p) /\ ((~ (d = (LAST r))) /\ ((~ (r = NIL)) /\ (uniq r))))) ==> ((~ (((next_el r) d) = ((f_list L) (e_list d)))) = (d = (LAST p)))))))) ==> ((\r. (!L. (!p. (!d. ((((MEM p) ((parts L) r)) /\ (((MEM d) p) /\ ((~ (d = (LAST r))) /\ ((~ (r = NIL)) /\ (uniq r))))) ==> ((~ (((next_el r) d) = ((f_list L) (e_list d)))) = (d = (LAST p)))))))) r)) = ((\r. (!L. (!p. (!d. ((((MEM p) ((parts L) r)) /\ (((MEM d) p) /\ ((~ (d = (LAST r))) /\ ((~ (r = NIL)) /\ (uniq r))))) ==> ((~ (((next_el r) d) = ((f_list L) (e_list d)))) = (d = (LAST p)))))))) r))
T c= c==> ! ! ! ! c==> c/\ cMEM b2 cparts b1 b0 c/\ cMEM b3 b2 c/\ c~ c= b3 cLAST b0 c/\ c~ c= b0 cNIL cuniq b0 c= c~ c= cnext_el b0 b3 cf_list b1 ce_list b3 c= b3 cLAST b2 * / ! ! ! c==> c/\ cMEM b2 cparts b1 b0 c/\ cMEM b3 b2 c/\ c~ c= b3 cLAST b0 c/\ c~ c= b0 cNIL cuniq b0 c= c~ c= cnext_el b0 b3 cf_list b1 ce_list b3 c= b3 cLAST b2 f0 * / ! ! ! c==> c/\ cMEM b2 cparts b1 b0 c/\ cMEM b3 b2 c/\ c~ c= b3 cLAST b0 c/\ c~ c= b0 cNIL cuniq b0 c= c~ c= cnext_el b0 b3 cf_list b1 ce_list b3 c= b3 cLAST b2 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))), ((MEM d) r), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 cs_flag_list f0 f6 f1 f3 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- |- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ |- ((!L. (!N. (!r. (!x. (!k. ((((MEM d) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST d)) ((core L) r)))))))) = T)
T c= ! ! ! ! ! c==> c/\ cMEM f0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST f0 ccore b0 b2 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), (((one_step_list L) d) ((next_el r) d)), ((((s_flag_list L) N) r) x) |- ((((good_list L) /\ ((is_restricted (hypermap_of_list L)) /\ ((MEM d) (list_of_darts L)))) ==> (~ ((e_list d) = d))) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cone_step_list f1 f3 cnext_el f2 f3 c==> cs_flag_list f1 f0 f2 f6 c==> c==> c/\ cgood_list f1 c/\ cis_restricted chypermap_of_list f1 cMEM f3 clist_of_darts f1 c~ c= ce_list f3 f3 cMEM cf_list f1 cLAST f4 f5
+ |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((MEM d) r) ==> ((((f_list L) d) = ((next_el r) d)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f4 f1 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cnext_el f5 f3 f6 c==> c= cfind_face f0 f3 f5 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4
+ |- (((!L. (!r. (((uniq r) /\ (~ (r = NIL))) ==> ((flatten ((parts L) r)) = r)))) ==> ((\L. (!r. (((uniq r) /\ (~ (r = NIL))) ==> ((flatten ((parts L) r)) = r)))) L)) = ((\L. (!r. (((uniq r) /\ (~ (r = NIL))) ==> ((flatten ((parts L) r)) = r)))) L))
T c= c==> ! ! c==> c/\ cuniq b1 c~ c= b1 cNIL c= cflatten cparts b0 b1 b1 * / ! c==> c/\ cuniq b1 c~ c= b1 cNIL c= cflatten cparts b0 b1 b1 f0 * / ! c==> c/\ cuniq b1 c~ c= b1 cNIL c= cflatten cparts b0 b1 b1 f0
+ ((MEM (LAST ((parts L) r))) ((parts L) r)) |- (((~ ((LAST ((parts L) r)) = NIL)) ==> ((MEM ((f_list L) (LAST p))) pn)) = ((((MEM (LAST ((parts L) r))) ((parts L) r)) ==> (~ ((LAST ((parts L) r)) = NIL))) ==> ((MEM ((f_list L) (LAST p))) pn)))
T c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c= c==> c~ c= cLAST cparts f0 f1 cNIL cMEM cf_list f0 cLAST f2 f3 c==> c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c~ c= cLAST cparts f0 f1 cNIL cMEM cf_list f0 cLAST f2 f3
- (~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) |- ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) /\ F)
T c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 c/\ c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), (((MEM p') ((parts L) r)) /\ ((MEM ((next_el r) d)) p')), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM p') ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> c/\ cMEM f6 cparts f1 f2 cMEM cnext_el f2 f4 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f7 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ |- (((~ (((parts L) r) = NIL)) /\ (~ ((LAST ((parts L) r)) = NIL))) ==> ((LAST (flatten ((parts L) r))) = (LAST (LAST ((parts L) r)))))
T c==> c/\ c~ c= cparts f0 f1 cNIL c~ c= cLAST cparts f0 f1 cNIL c= cLAST cflatten cparts f0 f1 cLAST cLAST cparts f0 f1
- (~ ((f a) = (f b))), (a = b) |- ((~ F) ==> F)
T c==> c~ c= * f0 f1 * f0 f2 c==> c= f1 f2 c==> c~ cF cF
- (((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) |- ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = T)
T c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c/\ call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f4 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
+ |- (((!L. (!x. (((good_list L) /\ (((MEM x) (list_of_darts L)) /\ (is_edge_nondegenerate (hypermap_of_list L)))) ==> (~ (((f_list L) x) = ((f_list L) (e_list x))))))) ==> ((\L. (!x. (((good_list L) /\ (((MEM x) (list_of_darts L)) /\ (is_edge_nondegenerate (hypermap_of_list L)))) ==> (~ (((f_list L) x) = ((f_list L) (e_list x))))))) L)) = ((\L. (!x. (((good_list L) /\ (((MEM x) (list_of_darts L)) /\ (is_edge_nondegenerate (hypermap_of_list L)))) ==> (~ (((f_list L) x) = ((f_list L) (e_list x))))))) L))
T c= c==> ! ! c==> c/\ cgood_list b0 c/\ cMEM b1 clist_of_darts b0 cis_edge_nondegenerate chypermap_of_list b0 c~ c= cf_list b0 b1 cf_list b0 ce_list b1 * / ! c==> c/\ cgood_list b0 c/\ cMEM b1 clist_of_darts b0 cis_edge_nondegenerate chypermap_of_list b0 c~ c= cf_list b0 b1 cf_list b0 ce_list b1 f0 * / ! c==> c/\ cgood_list b0 c/\ cMEM b1 clist_of_darts b0 cis_edge_nondegenerate chypermap_of_list b0 c~ c= cf_list b0 b1 cf_list b0 ce_list b1 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cfind_face f0 f2 f5 c==> cMEM f4 f1 c==> cmarked_list f0 f6 f1 f2 c==> c= cfind_face f0 f2 f5 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\a. (!f. (!b. ((a = b) ==> ((f a) = (f b)))))) a)
T * / ! ! c==> c= b0 b2 c= * b1 b0 * b1 b2 f0
+ ((MEM r) N) |- (((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((MEM ((f_list L) (LAST p))) pn)) = ((((MEM r) N) ==> (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x)))))) ==> ((MEM ((f_list L) (LAST p))) pn)))
T c==> cMEM f0 f1 c= c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f2 cone_step_list f2 b0 cnext_el f0 b0 cMEM cf_list f2 cLAST f3 f4 c==> c==> cMEM f0 f1 ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f2 cone_step_list f2 b0 cnext_el f0 b0 cMEM cf_list f2 cLAST f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq r) /\ (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cuniq f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f3 ccore f0 f2 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
- ((e_list d) = d) |- (d = (e_list d))
T c==> c= ce_list f0 f0 c= f0 ce_list f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cmarked_list f0 f5 f1 f2 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3
+ |- (((!r. (((uniq r) /\ (~ (r = NIL))) ==> (~ (((parts L) r) = NIL)))) ==> ((\r. (((uniq r) /\ (~ (r = NIL))) ==> (~ (((parts L) r) = NIL)))) r)) = ((\r. (((uniq r) /\ (~ (r = NIL))) ==> (~ (((parts L) r) = NIL)))) r))
T c= c==> ! c==> c/\ cuniq b0 c~ c= b0 cNIL c~ c= cparts f0 b0 cNIL * / c==> c/\ cuniq b0 c~ c= b0 cNIL c~ c= cparts f0 b0 cNIL f1 * / c==> c/\ cuniq b0 c~ c= b0 cNIL c~ c= cparts f0 b0 cNIL f1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
+ |- ((\x. (((uniq (flatten ((parts L) r))) /\ (((MEM p) ((parts L) r)) /\ (((MEM (LAST ((parts L) r))) ((parts L) r)) /\ (((MEM x) p) /\ ((MEM x) (LAST ((parts L) r))))))) ==> (p = (LAST ((parts L) r))))) d)
T * / c==> c/\ cuniq cflatten cparts f0 f1 c/\ cMEM f2 cparts f0 f1 c/\ cMEM cLAST cparts f0 f1 cparts f0 f1 c/\ cMEM b0 f2 cMEM b0 cLAST cparts f0 f1 c= f2 cLAST cparts f0 f1 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- ((!b. ((a = b) ==> ((f a) = (f b)))) = T)
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 c= ! c==> c= f0 b0 c= * f1 f0 * f1 b0 cT
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- (((find_face L) x) = f) |- ((((find_face L) x) = f) /\ (?f. (((find_face L) x) = f)))
T c==> c= cfind_face f0 f1 f2 c/\ c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((next_el ((MAP (FST o HD)) ((parts L) r))) ((FST o HD) p)) = ((FST o HD) ((next_el ((parts L) r)) p))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST (HD p))) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f5 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f5 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM f5 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f7 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c==> c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 co part cFST part cHD f4 co part cFST part cHD cnext_el cparts f1 f2 f4 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST cHD f4 cFST cnext_el f2 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))), ((MEM d) r), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 cs_flag_list f0 f6 f1 f3 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f6 cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ |- (((!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) ==> ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N)) = ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N))
T c= c==> ! ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1
+ |- ((uniq ((core L) r)) ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> cuniq ccore f0 f1 c= c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
- (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM f1 f2 c==> cMEM f3 f2 c==> cMEM f2 f4 c==> cnormal_list f0 f4 c/\ cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f3 c==> cs_flag_list f0 f4 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f2 c==> cMEM cFST f3 ccore f0 f2 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f2 cFST f1 cFST cnext_el f2 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) p'), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM p') ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((p' = pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> c= f7 f8 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ |- (((!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) ==> ((MEM ((f_list L) (LAST p))) pn)) = (((all (loop_list L)) N) ==> ((MEM ((f_list L) (LAST p))) pn)))
T c= c==> ! c==> cMEM b0 f0 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f1 cone_step_list f1 b1 cnext_el b0 b1 cMEM cf_list f1 cLAST f2 f3 c==> call * part cloop_list f1 f0 cMEM cf_list f1 cLAST f2 f3
+ (~ (r = NIL)), (uniq r), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((d = (LAST r)) /\ ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= f1 cLAST f0 c==> c= cf_list f2 f1 cnext_el f0 f1 c==> cMEM f1 f3 c==> cMEM cnext_el f0 f1 f4 c==> cMEM f3 cparts f2 f0 c/\ c= f1 cLAST f0 cMEM cf_list f2 cLAST f3 f4
+ ((MEM r) N) |- (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> cMEM f0 f1 c= c==> cuniq ccore f2 f0 c= cnext_el ccore f2 f0 cFST f3 cFST cnext_el f0 f3 c==> c==> cMEM ccore f2 f0 cMAP * part ccore f2 f1 cuniq ccore f2 f0 c= cnext_el ccore f2 f0 cFST f3 cFST cnext_el f0 f3
+ |- (((~ ((f a) = (f b))) ==> F) = ((f a) = (f b)))
T c= c==> c~ c= * f0 f1 * f0 f2 cF c= * f0 f1 * f0 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c/\ cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- |- ((!A'. (A' \/ (~ A))) = ((!A. A) \/ (~ A)))
T c= ! c\/ b0 c~ f0 c\/ ! b0 c~ f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((next_el ((find_face L) x)) x) = w) /\ (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> cMEM f4 f1 c==> cmarked_list f0 f5 f1 f2 c/\ c= cnext_el cfind_face f0 f2 f2 f3 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- ((((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = ((good_list L) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c= c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> cgood_list f0 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((!x. (((\p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))) x) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))) ==> ((?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))) = ((?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= c==> ! c==> * / c/\ cMEM b1 cparts f1 f2 cMEM f4 b1 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4 c==> c? / c/\ cMEM b0 cparts f1 f2 cMEM f4 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4 c==> c? / c/\ cMEM b0 cparts f1 f2 cMEM f4 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) p'), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM p') ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((!x. (((\pn. (p' = pn)) x) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))) ==> ((?pn. (p' = pn)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))) = ((?pn. (p' = pn)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= c==> ! c==> * / c= f7 b1 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4 c==> c? / c= f7 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4 c==> c? / c= f7 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (uniq ((parts L) r)), ((MEM p) ((parts L) r)) |- (((((next_el ((MAP (FST o HD)) ((parts L) r))) ((FST o HD) p)) = ((FST o HD) ((next_el ((parts L) r)) p))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST (HD p))) = (FST ((next_el r) d)))) = ((((uniq ((parts L) r)) /\ (((MEM p) ((parts L) r)) /\ (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) ((FST o HD) p)) = ((FST o HD) ((next_el ((parts L) r)) p)))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST (HD p))) = (FST ((next_el r) d)))))
T c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> cuniq cparts f0 f1 c==> cMEM f2 cparts f0 f1 c= c==> c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 co part cFST part cHD f2 co part cFST part cHD cnext_el cparts f0 f1 f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST cHD f2 cFST cnext_el f1 f3 c==> c==> c/\ cuniq cparts f0 f1 c/\ cMEM f2 cparts f0 f1 ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 co part cFST part cHD f2 co part cFST part cHD cnext_el cparts f0 f1 f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST cHD f2 cFST cnext_el f1 f3
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), (((next_el ((MAP (FST o HD)) ((parts L) r))) ((FST o HD) p)) = ((FST o HD) ((next_el ((parts L) r)) p))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST (HD p))) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 co part cFST part cHD f4 co part cFST part cHD cnext_el cparts f1 f2 f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f5 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f5 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM f5 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f7 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST cHD f4 cFST cnext_el f2 f3
+ (~ (d = (LAST r))) |- ((d = (LAST r)) = F)
T c==> c~ c= f0 cLAST f1 c= c= f0 cLAST f1 cF
+ |- ((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))) = T)
T c= ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ cMEM f2 b0 c= cf_list f0 f2 cnext_el b0 f2 c= cnext_el ccore f0 b0 cFST f2 cFST cnext_el b0 f2 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
+ (~ (r = NIL)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))), ((MEM d) p), ((MEM d) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> cgood_list f1 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> c/\ c~ c= * part cdart chypermap_of_list f1 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f1 c/\ cplain_hypermap chypermap_of_list f1 c/\ cconnected_hypermap chypermap_of_list f1 c/\ csimple_hypermap chypermap_of_list f1 c/\ cis_no_double_joins chypermap_of_list f1 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> cMEM f2 f3 c==> cMEM f2 clist_of_darts f1 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 cMEM cf_list f1 cLAST f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cone_step_list f1 f3 cnext_el f2 f3 c==> c~ c= ce_list f3 f3 cMEM cf_list f1 cLAST f4 f5
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) p'), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM p') ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((\pn. (p' = pn)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> * / c= f7 b0 f8 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- (~ ((e_list d) = d)) |- ((d = (e_list d)) = F)
T c==> c~ c= ce_list f0 f0 c= c= f0 ce_list f0 cF
+ (!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) |- (((MEM r) N) ==> (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))))
T c==> ! c==> cMEM b0 f0 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f1 cone_step_list f1 b1 cnext_el b0 b1 c==> cMEM f2 f0 ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f2 b0
+ |- (((!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r))
T c= c==> ! ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ ((MEM r) N) |- (((MEM ((core L) r)) ((MAP (core L)) N)) = T)
T c==> cMEM f0 f1 c= cMEM ccore f2 f0 cMAP * part ccore f2 f1 cT
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- ((!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) /\ (!a. (!f. (!b. ((a = b) ==> ((f a) = (f b)))))))
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 c/\ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 ! ! ! c==> c= b0 b2 c= * b1 b0 * b1 b2
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- ((MEM (FST d)) ((core L) r)) |- (((MEM (FST d)) ((core L) r)) = T)
T c==> cMEM cFST f0 ccore f1 f2 c= cMEM cFST f0 ccore f1 f2 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq ((parts L) r)) /\ (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f4 ccore f0 f2 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((parts L) r)) p) = pn)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c= cnext_el cparts f1 f2 f4 f5
- |- ((\f. (!b. ((a = b) ==> ((f a) = (f b))))) f)
T * / ! c==> c= f0 b1 c= * b0 f0 * b0 b1 f1
- |- ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l)
T * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2
- |- (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))
T c= cMEM f0 cMAP f1 f2 c? / c/\ cMEM b0 f2 c= f0 * f1 b0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((~ (r = NIL)) /\ ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 cMEM cf_list f1 cLAST f4 f5
+ |- ((((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))) ==> ((MEM ((f_list L) (LAST p))) pn)) = ((is_restricted (hypermap_of_list L)) ==> ((MEM ((f_list L) (LAST p))) pn)))
T c= c==> c/\ c~ c= * part cdart chypermap_of_list f0 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f0 c/\ cplain_hypermap chypermap_of_list f0 c/\ cconnected_hypermap chypermap_of_list f0 c/\ csimple_hypermap chypermap_of_list f0 c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 cMEM cf_list f0 cLAST f1 f2 c==> cis_restricted chypermap_of_list f0 cMEM cf_list f0 cLAST f1 f2
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((MEM ((next_el r) d)) pn) |- (((flatten ((parts L) r)) = r) ==> ((~ (((parts L) r) = NIL)) ==> (((MEM (LAST ((parts L) r))) ((parts L) r)) ==> ((~ ((LAST ((parts L) r)) = NIL)) ==> (((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))) ==> ((p = (LAST ((parts L) r))) ==> ((MEM ((f_list L) (LAST r))) pn)))))))
T c==> c= f0 cLAST f1 c==> c= cf_list f2 f0 cnext_el f1 f0 c==> cMEM cnext_el f1 f0 f3 c==> c= cflatten cparts f2 f1 f1 c==> c~ c= cparts f2 f1 cNIL c==> cMEM cLAST cparts f2 f1 cparts f2 f1 c==> c~ c= cLAST cparts f2 f1 cNIL c==> cMEM cLAST cLAST cparts f2 f1 cLAST cparts f2 f1 c==> c= f4 cLAST cparts f2 f1 cMEM cf_list f2 cLAST f1 f3
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- ((EMPTY = (dart (hypermap_of_list L))) = F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c= part cEMPTY * part cdart chypermap_of_list f0 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), (((next_el ((MAP (FST o HD)) ((parts L) r))) ((FST o HD) p)) = ((FST o HD) ((next_el ((parts L) r)) p))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((next_el ((MAP (FST o HD)) ((parts L) r))) ((FST o HD) p)) = ((FST o HD) ((next_el ((parts L) r)) p))) /\ (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST (HD p))) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 co part cFST part cHD f4 co part cFST part cHD cnext_el cparts f1 f2 f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f5 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f5 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM f5 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f7 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c/\ c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 co part cFST part cHD f4 co part cFST part cHD cnext_el cparts f1 f2 f4 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST cHD f4 cFST cnext_el f2 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST d)) ((core L) r)) /\ (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c/\ cMEM cFST f3 ccore f0 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3
+ (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f) |- (((next_el f) x) = w)
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c==> c= cfind_face f0 f1 f3 c= cnext_el f3 f1 f2
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f0 c/\ cMEM b1 cparts f1 f0 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f0 c==> cuniq f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f0 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f0 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f0 cFST cHD f4 cFST cHD cnext_el cparts f1 f0 f4 c==> c= c= cnext_el cparts f1 f0 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f0 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f0 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM cFST f3 ccore f1 f0 c==> cMEM cFST f6 ccore f1 f0 c==> cMEM cFST cnext_el f0 f3 ccore f1 f0 c==> cMEM f3 f4 c==> cMEM f3 f0 c==> cMEM f6 f0 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f0 f3 f5 c==> cMEM cnext_el f0 f3 f0 c==> cMEM f4 cparts f1 f0 c==> cMEM f5 cparts f1 f0 c==> cMEM f0 f2 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cs_flag_list f1 f2 f0 f6 cMEM cf_list f1 cLAST f4 f5
+ (((f_list L) d) = ((next_el r) d)), ((MEM ((next_el r) d)) pn) |- ((d = (LAST p)) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM cnext_el f2 f1 f3 c==> c= f1 cLAST f4 cMEM cf_list f0 cLAST f4 f3
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- (((!b. (!f. ((a = b) ==> ((f a) = (f b))))) ==> ((\b. (!f. ((a = b) ==> ((f a) = (f b))))) b)) = ((\b. (!f. ((a = b) ==> ((f a) = (f b))))) b))
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 c= c==> ! ! c==> c= f0 b0 c= * b1 f0 * b1 b0 * / ! c==> c= f0 b0 c= * b1 f0 * b1 b0 f1 * / ! c==> c= f0 b0 c= * b1 f0 * b1 b0 f1
+ (!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) |- (((((MEM r) N) ==> (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x)))))) ==> ((MEM ((f_list L) (LAST p))) pn)) = ((MEM ((f_list L) (LAST p))) pn))
T c==> ! c==> cMEM b0 f0 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f1 cone_step_list f1 b1 cnext_el b0 b1 c= c==> c==> cMEM f2 f0 ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f2 b0 cMEM cf_list f1 cLAST f3 f4 cMEM cf_list f1 cLAST f3 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x), ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((\w. (((next_el ((find_face L) x)) x) = w)) w) /\ (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c==> * / c= cnext_el cfind_face f0 f4 f4 b0 f5 c/\ * / c= cnext_el cfind_face f0 f4 f4 b0 f5 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
+ |- (((!N. (!r'. (!x. (!k. ((((MEM ((next_el r) d)) r') /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r') x) /\ (~ ((final_list L) r')))))) ==> ((MEM (FST ((next_el r) d))) ((core L) r'))))))) ==> ((\N. (!r'. (!x. (!k. ((((MEM ((next_el r) d)) r') /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r') x) /\ (~ ((final_list L) r')))))) ==> ((MEM (FST ((next_el r) d))) ((core L) r'))))))) N)) = ((\N. (!r'. (!x. (!k. ((((MEM ((next_el r) d)) r') /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r') x) /\ (~ ((final_list L) r')))))) ==> ((MEM (FST ((next_el r) d))) ((core L) r'))))))) N))
T c= c==> ! ! ! ! c==> c/\ cMEM cnext_el f0 f1 b1 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 b0 b1 b2 c~ cfinal_list f2 b1 cMEM cFST cnext_el f0 f1 ccore f2 b1 * / ! ! ! c==> c/\ cMEM cnext_el f0 f1 b1 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 b0 b1 b2 c~ cfinal_list f2 b1 cMEM cFST cnext_el f0 f1 ccore f2 b1 f3 * / ! ! ! c==> c/\ cMEM cnext_el f0 f1 b1 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 b0 b1 b2 c~ cfinal_list f2 b1 cMEM cFST cnext_el f0 f1 ccore f2 b1 f3
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) x) = w) /\ (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cmarked_list f0 f5 f1 f2 c/\ c= cf_list f0 f2 f4 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3
- |- (!pn. (((\pn. (p' = pn)) pn) ==> (?pn. (p' = pn))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f4 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
+ (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)) |- (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f1 c==> cgood_list f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f3 cparts f0 f1 c==> cMEM f2 f3 c==> cMEM f4 cparts f0 f1 c==> cMEM cnext_el f1 f2 f4 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f1 c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f1 cNIL c==> cuniq cparts f0 f1 c==> c= cFST f2 cFST cHD f3 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f3 cFST cHD cnext_el cparts f0 f1 f3 c==> c= cFST cnext_el f1 f2 cFST cHD f4 c==> c= c= cnext_el cparts f0 f1 f3 f4 cMEM cf_list f0 cLAST f3 f4 c==> cMEM f2 clist_of_darts f0 c==> cone_step_list f0 f2 cnext_el f1 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f0 cLAST f3 f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c/\ cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) p'), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM p') ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (~ (r = NIL)), (~ (((parts L) r) = NIL)), (uniq r), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- (((MEM (LAST ((parts L) r))) ((parts L) r)) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= f0 cNIL c==> c~ c= cparts f1 f0 cNIL c==> cuniq f0 c==> c= f2 cLAST f0 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> c= cflatten cparts f1 f0 f0 c==> cMEM f2 f3 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 c==> cMEM cLAST cparts f1 f0 cparts f1 f0 cMEM cf_list f1 cLAST f3 f4
+ |- ((\m. (((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) m) x) = (((POWER (next_el ((find_face L) x))) m) x)))) (SUC (NUMERAL _0)))
T * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 cSUC cNUMERAL c_0
- |- (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = ((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM d) p) /\ (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
+ |- (((!L. (!N. (!r. (!x. (!k. ((((MEM d) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST d)) ((core L) r)))))))) ==> ((\L. (!N. (!r. (!x. (!k. ((((MEM d) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST d)) ((core L) r)))))))) L)) = ((\L. (!N. (!r. (!x. (!k. ((((MEM d) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST d)) ((core L) r)))))))) L))
T c= c==> ! ! ! ! ! c==> c/\ cMEM f0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST f0 ccore b0 b2 * / ! ! ! ! c==> c/\ cMEM f0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST f0 ccore b0 b2 f1 * / ! ! ! ! c==> c/\ cMEM f0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST f0 ccore b0 b2 f1
+ |- (((!L. (!x. (((uniq (flatten L)) /\ (((MEM p) L) /\ (((MEM (LAST ((parts L) r))) L) /\ (((MEM x) p) /\ ((MEM x) (LAST ((parts L) r))))))) ==> (p = (LAST ((parts L) r)))))) ==> ((\L. (!x. (((uniq (flatten L)) /\ (((MEM p) L) /\ (((MEM (LAST ((parts L) r))) L) /\ (((MEM x) p) /\ ((MEM x) (LAST ((parts L) r))))))) ==> (p = (LAST ((parts L) r)))))) ((parts L) r))) = ((\L. (!x. (((uniq (flatten L)) /\ (((MEM p) L) /\ (((MEM (LAST ((parts L) r))) L) /\ (((MEM x) p) /\ ((MEM x) (LAST ((parts L) r))))))) ==> (p = (LAST ((parts L) r)))))) ((parts L) r)))
T c= c==> ! ! c==> c/\ cuniq cflatten b0 c/\ cMEM f0 b0 c/\ cMEM cLAST cparts f1 f2 b0 c/\ cMEM b1 f0 cMEM b1 cLAST cparts f1 f2 c= f0 cLAST cparts f1 f2 * / ! c==> c/\ cuniq cflatten b0 c/\ cMEM f0 b0 c/\ cMEM cLAST cparts f1 f2 b0 c/\ cMEM b1 f0 cMEM b1 cLAST cparts f1 f2 c= f0 cLAST cparts f1 f2 cparts f1 f2 * / ! c==> c/\ cuniq cflatten b0 c/\ cMEM f0 b0 c/\ cMEM cLAST cparts f1 f2 b0 c/\ cMEM b1 f0 cMEM b1 cLAST cparts f1 f2 c= f0 cLAST cparts f1 f2 cparts f1 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ |- ((\pn. (p' = pn)) p')
T * / c= f0 b0 f0
+ |- (((!x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) ==> ((\x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) x)) = ((\x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) x))
T c= c==> ! ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 * / ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 f1 * / ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 f1
+ (~ ((LAST ((parts L) r)) = NIL)), (~ (((parts L) r) = NIL)), (uniq r), (d = (LAST r)), ((LAST r) = (LAST (LAST ((parts L) r)))), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM d) p), ((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- ((((uniq (flatten ((parts L) r))) /\ (((MEM p) ((parts L) r)) /\ (((MEM (LAST ((parts L) r))) ((parts L) r)) /\ (((MEM d) p) /\ ((MEM d) (LAST ((parts L) r))))))) ==> (p = (LAST ((parts L) r)))) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= cLAST cparts f0 f1 cNIL c==> c~ c= cparts f0 f1 cNIL c==> cuniq f1 c==> c= f2 cLAST f1 c==> c= cLAST f1 cLAST cLAST cparts f0 f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cflatten cparts f0 f1 f1 c==> cMEM f2 f3 c==> cMEM cLAST cLAST cparts f0 f1 cLAST cparts f0 f1 c==> cMEM cnext_el f1 f2 f4 c==> cMEM f3 cparts f0 f1 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c==> c==> c/\ cuniq cflatten cparts f0 f1 c/\ cMEM f3 cparts f0 f1 c/\ cMEM cLAST cparts f0 f1 cparts f0 f1 c/\ cMEM f2 f3 cMEM f2 cLAST cparts f0 f1 c= f3 cLAST cparts f0 f1 cMEM cf_list f0 cLAST f3 f4
+ |- ((\N. (!r. (!r'. (!p. (!p'. ((((normal_list L) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM p') ((parts L) r')) /\ (((MEM r) N) /\ ((MEM r') N))))) ==> ((((next_el ((parts L) r)) p) = p') = ((MEM ((f_list L) (LAST p))) p')))))))) N)
T * / ! ! ! ! c==> c/\ cnormal_list f0 b0 c/\ cMEM b3 cparts f0 b1 c/\ cMEM b4 cparts f0 b2 c/\ cMEM b1 b0 cMEM b2 b0 c= c= cnext_el cparts f0 b1 b3 b4 cMEM cf_list f0 cLAST b3 b4 f1
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM f3 f2 c==> cMEM f2 f4 c==> cnormal_list f0 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f3 c==> cs_flag_list f0 f4 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f3 ccore f0 f2 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- |- ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f)))
T c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) x)
T * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) /\ ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
+ (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((uniq ((MAP (FST o HD)) ((parts L) r))) /\ ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f1 c==> cuniq f1 c==> cgood_list f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f3 c==> cMEM cnext_el f1 f2 f4 c==> cMEM f3 cparts f0 f1 c/\ cuniq cMAP * * part co part cFST part cHD cparts f0 f1 c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f1 cNIL c==> cuniq cparts f0 f1 c==> c= cFST f2 cFST cHD f3 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f3 cFST cHD cnext_el cparts f0 f1 f3 c==> c= cFST cnext_el f1 f2 cFST cHD f4 c==> c= c= cnext_el cparts f0 f1 f3 f4 cMEM cf_list f0 cLAST f3 f4 c==> cMEM f2 clist_of_darts f0 c==> cone_step_list f0 f2 cnext_el f1 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f0 cLAST f3 f4
- (a = b) |- ((!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) ==> ((f a) = (f b)))
T c==> c= f0 f1 c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 c= * f2 f0 * f2 f1
+ |- ((\f. (!x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u)))))) f)
T * / ! ! c==> cMEM b1 b2 cMEM * b0 b1 cMAP b0 b2 f0
+ |- ((!p. (!d. ((((MEM p) ((parts L) r)) /\ (((MEM d) p) /\ ((~ (d = (LAST r))) /\ ((~ (r = NIL)) /\ (uniq r))))) ==> ((~ (((next_el r) d) = ((f_list L) (e_list d)))) = (d = (LAST p)))))) = T)
T c= ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 b0 c/\ c~ c= b1 cLAST f1 c/\ c~ c= f1 cNIL cuniq f1 c= c~ c= cnext_el f1 b1 cf_list f0 ce_list b1 c= b1 cLAST b0 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq r) /\ (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cuniq f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- |- ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y)
T * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1
+ |- ((((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM pn) ((parts L) r)) /\ ((MEM ((next_el r) d)) pn))))) ==> ((FST ((next_el r) d)) = (FST (HD pn)))) ==> ((FST (HD ((next_el ((parts L) r)) p))) = (FST ((next_el r) d)))) = ((FST (HD ((next_el ((parts L) r)) p))) = (FST ((next_el r) d))))
T c= c==> c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM cnext_el f2 f4 f3 c= cFST cnext_el f2 f4 cFST cHD f3 c= cFST cHD cnext_el cparts f0 f2 f5 cFST cnext_el f2 f4 c= cFST cHD cnext_el cparts f0 f2 f5 cFST cnext_el f2 f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq ((core L) r)) /\ (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c/\ cuniq ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 cs_flag_list f0 f6 f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ |- (((!p'. ((((normal_list L) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM p') ((parts L) r)) /\ (((MEM r) N) /\ ((MEM r) N))))) ==> ((((next_el ((parts L) r)) p) = p') = ((MEM ((f_list L) (LAST p))) p')))) ==> ((\p'. ((((normal_list L) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM p') ((parts L) r)) /\ (((MEM r) N) /\ ((MEM r) N))))) ==> ((((next_el ((parts L) r)) p) = p') = ((MEM ((f_list L) (LAST p))) p')))) pn)) = ((\p'. ((((normal_list L) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM p') ((parts L) r)) /\ (((MEM r) N) /\ ((MEM r) N))))) ==> ((((next_el ((parts L) r)) p) = p') = ((MEM ((f_list L) (LAST p))) p')))) pn))
T c= c==> ! c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 cparts f0 f3 c/\ cMEM b0 cparts f0 f3 c/\ cMEM f3 f1 cMEM f3 f1 c= c= cnext_el cparts f0 f3 f2 b0 cMEM cf_list f0 cLAST f2 b0 * / c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 cparts f0 f3 c/\ cMEM b0 cparts f0 f3 c/\ cMEM f3 f1 cMEM f3 f1 c= c= cnext_el cparts f0 f3 f2 b0 cMEM cf_list f0 cLAST f2 b0 f4 * / c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 cparts f0 f3 c/\ cMEM b0 cparts f0 f3 c/\ cMEM f3 f1 cMEM f3 f1 c= c= cnext_el cparts f0 f3 f2 b0 cMEM cf_list f0 cLAST f2 b0 f4
+ ((MEM r) N) |- ((T ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (T ==> q')))
T c==> cMEM f0 f1 c==> c==> cT c= cuniq ccore f2 f0 f3 c= c==> cMEM ccore f2 f0 cMAP * part ccore f2 f1 cuniq ccore f2 f0 c==> cT f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cmarked_list f0 f5 f1 f2 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3
+ (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) /\ (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))
T c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> c= c= cnext_el cparts f1 f0 f2 f3 cMEM cf_list f1 cLAST f2 f3 c==> c= cf_list f1 f4 cnext_el f0 f4 c==> cMEM f4 f2 c==> cMEM cnext_el f0 f4 f3 c==> cMEM f2 cparts f1 f0 c/\ c= c= cnext_el cparts f1 f0 f2 f3 cMEM cf_list f1 cLAST f2 f3 c==> cMEM f4 clist_of_darts f1 c==> cone_step_list f1 f4 cnext_el f0 f4 c==> c~ c= ce_list f4 f4 cMEM cf_list f1 cLAST f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) p'), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM p') ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((\pn. (p' = pn)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= c==> * / c= f7 b0 f8 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4 cT
+ |- ((\f. (((find_face L) x) = f)) ((find_face L) x))
T * / c= cfind_face f0 f1 b0 cfind_face f0 f1
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- (~ ((LAST ((parts L) r)) = NIL)) |- ((NIL = (LAST ((parts L) r))) = F)
T c==> c~ c= cLAST cparts f0 f1 cNIL c= c= cNIL cLAST cparts f0 f1 cF
+ (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) |- (((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)) = T)
T c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c= c==> c/\ cMEM f2 cparts f0 f1 c/\ cMEM f3 cparts f0 f1 c= co part cFST part cHD f2 co part cFST part cHD f3 c= f2 f3 cT
- |- ((?p. t) = t)
T c= c? / f0 f0
+ (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f1 c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f1 cNIL c==> cuniq cparts f0 f1 c==> c= cFST f3 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f6 cFST cHD cnext_el cparts f0 f1 f6 c==> c= cFST cnext_el f1 f3 cFST cHD f7 c==> c= c= cnext_el cparts f0 f1 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f3 clist_of_darts f0 c==> cone_step_list f0 f3 cnext_el f1 f3 c==> c~ c= ce_list f3 f3 cMEM cf_list f0 cLAST f6 f7
+ (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) |- ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v))
T c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c/\ cMEM f2 cparts f0 f1 c/\ cMEM f3 cparts f0 f1 c= co part cFST part cHD f2 co part cFST part cHD f3 c= f2 f3
- (((next_el r) d) = ((f_list L) (e_list d))) |- (((f_list L) (e_list d)) = ((next_el r) d))
T c==> c= cnext_el f0 f1 cf_list f2 ce_list f1 c= cf_list f2 ce_list f1 cnext_el f0 f1
- (~ ((e_list d) = d)) |- (((e_list d) = d) = F)
T c==> c~ c= ce_list f0 f0 c= c= ce_list f0 f0 cF
+ |- (((!r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))))) ==> ((\r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))))) r)) = ((\r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))))) r))
T c= c==> ! ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 cMEM b2 b1 c= cFST b2 cFST cHD b1 * / ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 cMEM b2 b1 c= cFST b2 cFST cHD b1 f2 * / ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 cMEM b2 b1 c= cFST b2 cFST cHD b1 f2
- (NIL = ((parts L) r)) |- (((parts L) r) = NIL)
T c==> c= cNIL cparts f0 f1 c= cparts f0 f1 cNIL
+ (~ (d = (LAST r))), (~ (((next_el r) d) = ((f_list L) (e_list d)))), (~ (r = NIL)), (uniq r), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> c~ c= f0 cLAST f1 c==> c~ c= cnext_el f1 f0 cf_list f2 ce_list f0 c==> c~ c= f1 cNIL c==> cuniq f1 c==> c= cf_list f2 f0 cnext_el f1 f0 c==> cMEM f0 f3 c==> cMEM cnext_el f1 f0 f4 c==> cMEM f3 cparts f2 f1 cMEM cf_list f2 cLAST f3 f4
+ ((MEM r) N) |- ((((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (uniq ((core L) r))) ==> (((uniq ((core L) r)) ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = ((uniq ((core L) r)) ==> q')))) = (((uniq ((core L) r)) ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = ((uniq ((core L) r)) ==> q'))))
T c==> cMEM f0 f1 c= c==> c= c==> cMEM ccore f2 f0 cMAP * part ccore f2 f1 cuniq ccore f2 f0 cuniq ccore f2 f0 c==> c==> cuniq ccore f2 f0 c= c= cnext_el ccore f2 f0 cFST f3 cFST cnext_el f0 f3 f4 c= c==> c==> cMEM ccore f2 f0 cMAP * part ccore f2 f1 cuniq ccore f2 f0 c= cnext_el ccore f2 f0 cFST f3 cFST cnext_el f0 f3 c==> cuniq ccore f2 f0 f4 c==> c==> cuniq ccore f2 f0 c= c= cnext_el ccore f2 f0 cFST f3 cFST cnext_el f0 f3 f4 c= c==> c==> cMEM ccore f2 f0 cMAP * part ccore f2 f1 cuniq ccore f2 f0 c= cnext_el ccore f2 f0 cFST f3 cFST cnext_el f0 f3 c==> cuniq ccore f2 f0 f4
+ |- ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)
T * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f2 f4 c==> c= cf_list f0 f3 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM cFST f4 ccore f0 f2 c==> cMEM cFST f3 ccore f0 f2 c==> cMEM cFST cnext_el f2 f4 ccore f0 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f4 clist_of_darts f0 c==> cone_step_list f0 f4 cnext_el f2 f4 c==> c~ c= ce_list f4 f4 cMEM cf_list f0 cLAST f6 f7
- (~ (((next_el r) d) = ((f_list L) (e_list d)))) |- ((((f_list L) (e_list d)) = ((next_el r) d)) = F)
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c= c= cf_list f2 ce_list f1 cnext_el f0 f1 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM ((next_el r) d)) r) /\ (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c/\ cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f5 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f5 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f5 f2 c==> cMEM f5 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f7 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cFST cnext_el f2 f3 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f4 f7 cMEM cf_list f1 cLAST f4 f7 c==> cMEM f3 clist_of_darts f1 c==> cone_step_list f1 f3 cnext_el f2 f3 c==> c~ c= ce_list f3 f3 cMEM cf_list f1 cLAST f4 f7
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST ((next_el r) d))) ((core L) r)) /\ (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c/\ cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ |- (((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST ((next_el r) d)))) = ((((next_el ((MAP (FST o HD)) ((parts L) r))) ((FST o HD) p)) = ((FST o HD) ((next_el ((parts L) r)) p))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST (HD p))) = (FST ((next_el r) d)))))
T c= c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f2 cFST cHD cnext_el cparts f0 f1 f2 c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f2 cFST cnext_el f1 f3 c==> c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 co part cFST part cHD f2 co part cFST part cHD cnext_el cparts f0 f1 f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST cHD f2 cFST cnext_el f1 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c/\ cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
+ (p' = pn), ((MEM p') ((parts L) r)) |- ((MEM pn) ((parts L) r))
T c==> c= f0 f1 c==> cMEM f0 cparts f2 f3 cMEM f1 cparts f2 f3
+ |- ((\d. ((((MEM p) ((parts L) r)) /\ (((MEM d) p) /\ ((~ (d = (LAST r))) /\ ((~ (r = NIL)) /\ (uniq r))))) ==> ((~ (((next_el r) d) = ((f_list L) (e_list d)))) = (d = (LAST p))))) d)
T * / c==> c/\ cMEM f0 cparts f1 f2 c/\ cMEM b0 f0 c/\ c~ c= b0 cLAST f2 c/\ c~ c= f2 cNIL cuniq f2 c= c~ c= cnext_el f2 b0 cf_list f1 ce_list b0 c= b0 cLAST f0 f3
+ |- (((!p'. (!q'. (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 b0 c==> c==> b0 c= c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 b1 c= c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 c==> b0 b1 * / ! c==> c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 b0 c==> c==> b0 c= c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 b1 c= c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 c==> b0 b1 f4 * / ! c==> c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 b0 c==> c==> b0 c= c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 b1 c= c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 c==> b0 b1 f4
+ (~ (d = (LAST r))), (~ (((next_el r) d) = ((f_list L) (e_list d)))), (~ (r = NIL)), (uniq r), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- (((((MEM p) ((parts L) r)) /\ (((MEM d) p) /\ ((~ (d = (LAST r))) /\ ((~ (r = NIL)) /\ (uniq r))))) ==> ((~ (((next_el r) d) = ((f_list L) (e_list d)))) = (d = (LAST p)))) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= f0 cLAST f1 c==> c~ c= cnext_el f1 f0 cf_list f2 ce_list f0 c==> c~ c= f1 cNIL c==> cuniq f1 c==> c= cf_list f2 f0 cnext_el f1 f0 c==> cMEM f0 f3 c==> cMEM cnext_el f1 f0 f4 c==> cMEM f3 cparts f2 f1 c==> c==> c/\ cMEM f3 cparts f2 f1 c/\ cMEM f0 f3 c/\ c~ c= f0 cLAST f1 c/\ c~ c= f1 cNIL cuniq f1 c= c~ c= cnext_el f1 f0 cf_list f2 ce_list f0 c= f0 cLAST f3 cMEM cf_list f2 cLAST f3 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> c/\ call / c~ c= b0 cNIL f2 c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> cMEM f4 f1 c==> cmarked_list f0 f5 f1 f2 c==> c= cfind_face f0 f2 f6 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4
+ (uniq r), ((MEM ((next_el r) d)) r) |- (((?p. (((MEM p) ((parts L) r)) /\ ((MEM ((next_el r) d)) p))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))) = ((((uniq r) /\ ((MEM ((next_el r) d)) r)) ==> (?p. (((MEM p) ((parts L) r)) /\ ((MEM ((next_el r) d)) p)))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> cuniq f0 c==> cMEM cnext_el f0 f1 f0 c= c==> c? / c/\ cMEM b0 cparts f2 f0 cMEM cnext_el f0 f1 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f0 cFST f1 cFST cnext_el f0 f1 c==> c==> c/\ cuniq f0 cMEM cnext_el f0 f1 f0 c? / c/\ cMEM b0 cparts f2 f0 cMEM cnext_el f0 f1 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f0 cFST f1 cFST cnext_el f0 f1
+ (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- (((MEM ((next_el r) d)) pn) /\ ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f1 c==> cgood_list f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f3 c==> cMEM cnext_el f1 f2 f4 c==> cMEM f3 cparts f0 f1 c/\ cMEM cnext_el f1 f2 f4 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f1 c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f1 cNIL c==> cuniq cparts f0 f1 c==> c= cFST f2 cFST cHD f3 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f3 cFST cHD cnext_el cparts f0 f1 f3 c==> c= cFST cnext_el f1 f2 cFST cHD f4 c==> c= c= cnext_el cparts f0 f1 f3 f4 cMEM cf_list f0 cLAST f3 f4 c==> cMEM f2 clist_of_darts f0 c==> cone_step_list f0 f2 cnext_el f1 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f0 cLAST f3 f4
- ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
- (~ ((LAST ((parts L) r)) = NIL)), (~ (((parts L) r) = NIL)), (d = (LAST r)), ((LAST r) = (LAST (LAST ((parts L) r)))), (((f_list L) d) = ((next_el r) d)), (p = (LAST ((parts L) r))), ((flatten ((parts L) r)) = r), ((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))), ((MEM ((next_el r) d)) pn), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- (((LAST r) = (LAST (LAST ((parts L) r)))) /\ ((MEM ((f_list L) (LAST (LAST ((parts L) r))))) pn))
T c==> c~ c= cLAST cparts f0 f1 cNIL c==> c~ c= cparts f0 f1 cNIL c==> c= f2 cLAST f1 c==> c= cLAST f1 cLAST cLAST cparts f0 f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= f3 cLAST cparts f0 f1 c==> c= cflatten cparts f0 f1 f1 c==> cMEM cLAST cLAST cparts f0 f1 cLAST cparts f0 f1 c==> cMEM cnext_el f1 f2 f4 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c/\ c= cLAST f1 cLAST cLAST cparts f0 f1 cMEM cf_list f0 cLAST cLAST cparts f0 f1 f4
+ |- ((\r. (((uniq r) /\ ((MEM d) r)) ==> (?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))))) r)
T * / c==> c/\ cuniq b0 cMEM f0 b0 c? / c/\ cMEM b1 cparts f1 b0 cMEM f0 b1 f2
+ |- ((\r. (!L. (!p. (!d. ((((MEM p) ((parts L) r)) /\ (((MEM d) p) /\ ((~ (d = (LAST r))) /\ ((~ (r = NIL)) /\ (uniq r))))) ==> ((~ (((next_el r) d) = ((f_list L) (e_list d)))) = (d = (LAST p)))))))) r)
T * / ! ! ! c==> c/\ cMEM b2 cparts b1 b0 c/\ cMEM b3 b2 c/\ c~ c= b3 cLAST b0 c/\ c~ c= b0 cNIL cuniq b0 c= c~ c= cnext_el b0 b3 cf_list b1 ce_list b3 c= b3 cLAST b2 f0
+ ((MEM x) r) |- (((~ (r = NIL)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))) = ((((MEM x) r) ==> (~ (r = NIL))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> cMEM f0 f1 c= c==> c~ c= f1 cNIL c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f1 cFST f3 cFST cnext_el f1 f3 c==> c==> cMEM f0 f1 c~ c= f1 cNIL c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f1 cFST f3 cFST cnext_el f1 f3
- ((MEM r) N) |- (T = ((MEM r) N))
T c==> cMEM f0 f1 c= cT cMEM f0 f1
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- (!b. ((a = b) ==> ((f a) = (f b))))
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 ! c==> c= f0 b0 c= * f1 f0 * f1 b0
- (((f_list L) (e_list d)) = ((next_el r) d)) |- (((next_el r) d) = ((f_list L) (e_list d)))
T c==> c= cf_list f0 ce_list f1 cnext_el f2 f1 c= cnext_el f2 f1 cf_list f0 ce_list f1
+ ((MEM x) u) |- (((MEM x) u) /\ (((MEM (f x)) ((MAP f) u)) = T))
T c==> cMEM f0 f1 c/\ cMEM f0 f1 c= cMEM * f2 f0 cMAP f2 f1 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM p) ((parts L) r)) /\ (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cMEM f6 cparts f1 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) |- (((MEM ((f_list L) (LAST p))) pn) = (((next_el ((parts L) r)) p) = pn))
T c==> c= c= cnext_el cparts f0 f1 f2 f3 cMEM cf_list f0 cLAST f2 f3 c= cMEM cf_list f0 cLAST f2 f3 c= cnext_el cparts f0 f1 f2 f3
+ |- ((\x'. (!k. ((((MEM x) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ (~ ((final_list L) r)))))) ==> ((MEM (FST x)) ((core L) r))))) x)
T * / ! c==> c/\ cMEM f0 f1 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f1 b0 c~ cfinal_list f2 f1 cMEM cFST f0 ccore f2 f1 f0
+ |- ((\l2. (!L. (!x. (((uniq (flatten L)) /\ (((MEM p) L) /\ (((MEM l2) L) /\ (((MEM x) p) /\ ((MEM x) l2))))) ==> (p = l2))))) (LAST ((parts L) r)))
T * / ! ! c==> c/\ cuniq cflatten b1 c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cMEM b2 f0 cMEM b2 b0 c= f0 b0 cLAST cparts f1 f2
+ |- ((((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))) = (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c= c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f2 cFST cnext_el f1 f2 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 c==> cMEM f4 clist_of_darts f1 c==> cone_step_list f1 f4 cnext_el f2 f4 c==> c~ c= ce_list f4 f4 cMEM cf_list f1 cLAST f6 f7
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) /\ (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f5 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f5 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM f5 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f7 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c/\ c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cnext_el f2 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((f_list L) d) = ((next_el r) d)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f3 c==> cMEM f1 f3 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f1 f4 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((MEM ((next_el r) d)) pn) |- (((MEM (LAST ((parts L) r))) ((parts L) r)) ==> ((~ ((LAST ((parts L) r)) = NIL)) ==> (((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))) ==> ((p = (LAST ((parts L) r))) ==> ((MEM ((f_list L) (LAST r))) pn)))))
T c==> c= f0 cLAST f1 c==> c= cf_list f2 f0 cnext_el f1 f0 c==> cMEM cnext_el f1 f0 f3 c==> cMEM cLAST cparts f2 f1 cparts f2 f1 c==> c~ c= cLAST cparts f2 f1 cNIL c==> cMEM cLAST cLAST cparts f2 f1 cLAST cparts f2 f1 c==> c= f4 cLAST cparts f2 f1 cMEM cf_list f2 cLAST f1 f3
+ ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ |- (((!l2. (!L. (!x. (((uniq (flatten L)) /\ (((MEM p) L) /\ (((MEM l2) L) /\ (((MEM x) p) /\ ((MEM x) l2))))) ==> (p = l2))))) ==> ((\l2. (!L. (!x. (((uniq (flatten L)) /\ (((MEM p) L) /\ (((MEM l2) L) /\ (((MEM x) p) /\ ((MEM x) l2))))) ==> (p = l2))))) (LAST ((parts L) r)))) = ((\l2. (!L. (!x. (((uniq (flatten L)) /\ (((MEM p) L) /\ (((MEM l2) L) /\ (((MEM x) p) /\ ((MEM x) l2))))) ==> (p = l2))))) (LAST ((parts L) r))))
T c= c==> ! ! ! c==> c/\ cuniq cflatten b1 c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cMEM b2 f0 cMEM b2 b0 c= f0 b0 * / ! ! c==> c/\ cuniq cflatten b1 c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cMEM b2 f0 cMEM b2 b0 c= f0 b0 cLAST cparts f1 f2 * / ! ! c==> c/\ cuniq cflatten b1 c/\ cMEM f0 b1 c/\ cMEM b0 b1 c/\ cMEM b2 f0 cMEM b2 b0 c= f0 b0 cLAST cparts f1 f2
+ (~ ((LAST ((parts L) r)) = NIL)), (~ (((parts L) r) = NIL)), (uniq r), (d = (LAST r)), ((LAST r) = (LAST (LAST ((parts L) r)))), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> c~ c= cLAST cparts f0 f1 cNIL c==> c~ c= cparts f0 f1 cNIL c==> cuniq f1 c==> c= f2 cLAST f1 c==> c= cLAST f1 cLAST cLAST cparts f0 f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cflatten cparts f0 f1 f1 c==> cMEM f2 f3 c==> cMEM cnext_el f1 f2 f4 c==> cMEM f3 cparts f0 f1 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 cMEM cf_list f0 cLAST f3 f4
+ |- (((!L. (!r. (((uniq r) /\ (~ (r = NIL))) ==> (~ (((parts L) r) = NIL))))) ==> ((\L. (!r. (((uniq r) /\ (~ (r = NIL))) ==> (~ (((parts L) r) = NIL))))) L)) = ((\L. (!r. (((uniq r) /\ (~ (r = NIL))) ==> (~ (((parts L) r) = NIL))))) L))
T c= c==> ! ! c==> c/\ cuniq b1 c~ c= b1 cNIL c~ c= cparts b0 b1 cNIL * / ! c==> c/\ cuniq b1 c~ c= b1 cNIL c~ c= cparts b0 b1 cNIL f0 * / ! c==> c/\ cuniq b1 c~ c= b1 cNIL c~ c= cparts b0 b1 cNIL f0
- (planar_hypermap (hypermap_of_list L)) |- ((planar_hypermap (hypermap_of_list L)) = T)
T c==> cplanar_hypermap chypermap_of_list f0 c= cplanar_hypermap chypermap_of_list f0 cT
+ |- ((\x. (!L. (!r. (((uniq r) /\ ((MEM x) r)) ==> (?p. (((MEM p) ((parts L) r)) /\ ((MEM x) p))))))) ((next_el r) d))
T * / ! ! c==> c/\ cuniq b2 cMEM b0 b2 c? / c/\ cMEM b3 cparts b1 b2 cMEM b0 b3 cnext_el f0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 c==> cMEM f4 clist_of_darts f1 c==> cone_step_list f1 f4 cnext_el f2 f4 c==> c~ c= ce_list f4 f4 cMEM cf_list f1 cLAST f6 f7
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L))
T c= c==> ! ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0
+ (~ (((next_el r) d) = ((f_list L) (e_list d)))) |- ((((next_el r) d) = ((f_list L) (e_list d))) = F)
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c= c= cnext_el f0 f1 cf_list f2 ce_list f1 cF
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
- |- ((((\f. (((find_face L) x) = f)) f) ==> (?f. (((find_face L) x) = f))) = T)
T c= c==> * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ |- (((!x. (!k. ((((MEM ((next_el r) d)) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST ((next_el r) d))) ((core L) r))))) ==> ((\x. (!k. ((((MEM ((next_el r) d)) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST ((next_el r) d))) ((core L) r))))) x)) = ((\x. (!k. ((((MEM ((next_el r) d)) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST ((next_el r) d))) ((core L) r))))) x))
T c= c==> ! ! c==> c/\ cMEM cnext_el f0 f1 f0 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f0 b0 c~ cfinal_list f2 f0 cMEM cFST cnext_el f0 f1 ccore f2 f0 * / ! c==> c/\ cMEM cnext_el f0 f1 f0 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f0 b0 c~ cfinal_list f2 f0 cMEM cFST cnext_el f0 f1 ccore f2 f0 f4 * / ! c==> c/\ cMEM cnext_el f0 f1 f0 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f0 b0 c~ cfinal_list f2 f0 cMEM cFST cnext_el f0 f1 ccore f2 f0 f4
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f2 c==> cMEM f4 cparts f0 f2 c==> cMEM f1 f4 c==> cMEM f5 cparts f0 f2 c==> cMEM cnext_el f2 f1 f5 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f4 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f4 cFST cHD cnext_el cparts f0 f2 f4 c==> c= cFST cnext_el f2 f1 cFST cHD f5 c==> c= c= cnext_el cparts f0 f2 f4 f5 cMEM cf_list f0 cLAST f4 f5 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f4 f5
+ |- ((\N. (((quotient_list L) N) = ((MAP (core L)) N))) N)
T * / c= cquotient_list f0 b0 cMAP * part ccore f0 b0 f1
- |- ((!A. (A \/ (~ A))) = ((T \/ (~ T)) /\ (F \/ (~ F))))
T c= ! c\/ b0 c~ b0 c/\ c\/ cT c~ cT c\/ cF c~ cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 c==> cMEM f4 clist_of_darts f1 c==> cone_step_list f1 f4 cnext_el f2 f4 c==> c~ c= ce_list f4 f4 cMEM cf_list f1 cLAST f6 f7
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f2 b0 cMEM cf_list f1 cLAST f4 f5
+ ((MEM d) (list_of_darts L)) |- (((MEM d) (list_of_darts L)) = T)
T c==> cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cT
+ ((FST d) = (FST (HD p))) |- ((((next_el ((MAP (FST o HD)) ((parts L) r))) (FST (HD p))) = (FST ((next_el r) d))) = (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> c= cFST f0 cFST cHD f1 c= c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f3 cFST cHD f1 cFST cnext_el f3 f0 c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f3 cFST f0 cFST cnext_el f3 f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((\L. (!N. (!r'. (!x. (!k. ((((MEM ((next_el r) d)) r') /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r') x) /\ (~ ((final_list L) r')))))) ==> ((MEM (FST ((next_el r) d))) ((core L) r')))))))) L)
T * / ! ! ! ! c==> c/\ cMEM cnext_el f0 f1 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST cnext_el f0 f1 ccore b0 b2 f2
+ (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)) |- ((uniq r) /\ (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f1 c==> cgood_list f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c/\ cuniq f1 c==> cMEM f3 cparts f0 f1 c==> cMEM f2 f3 c==> cMEM f4 cparts f0 f1 c==> cMEM cnext_el f1 f2 f4 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f1 c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f1 cNIL c==> cuniq cparts f0 f1 c==> c= cFST f2 cFST cHD f3 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f3 cFST cHD cnext_el cparts f0 f1 f3 c==> c= cFST cnext_el f1 f2 cFST cHD f4 c==> c= c= cnext_el cparts f0 f1 f3 f4 cMEM cf_list f0 cLAST f3 f4 c==> cMEM f2 clist_of_darts f0 c==> cone_step_list f0 f2 cnext_el f1 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f0 cLAST f3 f4
+ |- ((\f. (!y. ((uniq ((MAP f) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))))) (FST o HD))
T * / ! c==> cuniq cMAP b0 b1 ! ! c==> c/\ cMEM b2 b1 c/\ cMEM b3 b1 c= * b0 b2 * b0 b3 c= b2 b3 * * part co part cFST part cHD
- (~ ((e_list d) = d)) |- (((~ (d = (e_list d))) ==> ((d = (e_list d)) = F)) = ((d = (e_list d)) = F))
T c==> c~ c= ce_list f0 f0 c= c==> c~ c= f0 ce_list f0 c= c= f0 ce_list f0 cF c= c= f0 ce_list f0 cF
- (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f1 f2 c==> cMEM f4 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f2 c==> cMEM cFST f4 ccore f0 f2 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f2 cFST f1 cFST cnext_el f2 f1
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f4 ccore f0 f2 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
+ |- (((!r. (((uniq r) /\ (~ (r = NIL))) ==> ((all (\p. (~ (p = NIL)))) ((parts L) r)))) ==> ((\r. (((uniq r) /\ (~ (r = NIL))) ==> ((all (\p. (~ (p = NIL)))) ((parts L) r)))) r)) = ((\r. (((uniq r) /\ (~ (r = NIL))) ==> ((all (\p. (~ (p = NIL)))) ((parts L) r)))) r))
T c= c==> ! c==> c/\ cuniq b0 c~ c= b0 cNIL call / c~ c= b1 cNIL cparts f0 b0 * / c==> c/\ cuniq b0 c~ c= b0 cNIL call / c~ c= b1 cNIL cparts f0 b0 f1 * / c==> c/\ cuniq b0 c~ c= b0 cNIL call / c~ c= b1 cNIL cparts f0 b0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((\p. (((MEM p) ((parts L) r)) /\ ((MEM ((next_el r) d)) p))) p') ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> * / c/\ cMEM b0 cparts f1 f2 cMEM cnext_el f2 f4 b0 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> c= cf_list f0 f2 cnext_el f3 f2 c/\ cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f3 c==> cMEM f4 cparts f0 f3 c==> cMEM f2 f4 c==> cMEM f5 cparts f0 f3 c==> cMEM cnext_el f3 f2 f5 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f3 c==> ! ! c==> c/\ cMEM b0 cparts f0 f3 c/\ cMEM b1 cparts f0 f3 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f3 cNIL c==> cuniq cparts f0 f3 c==> c= cFST f2 cFST cHD f4 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f3 cFST cHD f4 cFST cHD cnext_el cparts f0 f3 f4 c==> c= cFST cnext_el f3 f2 cFST cHD f5 c==> c= c= cnext_el cparts f0 f3 f4 f5 cMEM cf_list f0 cLAST f4 f5 c==> cMEM f2 clist_of_darts f0 c==> cone_step_list f0 f2 cnext_el f3 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f0 cLAST f4 f5
- |- (((uniq ((core L) r)) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q'))))
T c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 f4 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 c==> f2 f4
+ |- ((\p'. (!q'. ((((MEM ((core L) r)) ((MAP (core L)) N)) = p') ==> ((p' ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (p' ==> q')))))) p')
T * / ! c==> c= cMEM ccore f0 f1 cMAP * part ccore f0 f2 b0 c==> c==> b0 c= cuniq ccore f0 f1 b1 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> b0 b1 f3
- |- (((!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q'))))) ==> ((\q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q'))))) q')) = ((\q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 b0 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 c==> f2 b0 * / c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 b0 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 c==> f2 b0 f4 * / c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 b0 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3 c==> f2 b0 f4
+ (uniq r), ((MEM d) r) |- (((?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))) = ((((uniq r) /\ ((MEM d) r)) ==> (?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p)))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> cuniq f0 c==> cMEM f1 f0 c= c==> c? / c/\ cMEM b0 cparts f2 f0 cMEM f1 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f0 cFST f1 cFST cnext_el f0 f1 c==> c==> c/\ cuniq f0 cMEM f1 f0 c? / c/\ cMEM b0 cparts f2 f0 cMEM f1 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f0 cFST f1 cFST cnext_el f0 f1
+ (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))
T c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> cMEM f2 f3 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 c==> c= cFST f2 cFST cHD f3 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f0 cFST cHD f3 cFST cHD cnext_el cparts f1 f0 f3 c==> c= cFST cnext_el f0 f2 cFST cHD f4 c==> c= c= cnext_el cparts f1 f0 f3 f4 cMEM cf_list f1 cLAST f3 f4 c==> cMEM f2 clist_of_darts f1 c==> cone_step_list f1 f2 cnext_el f0 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f1 cLAST f3 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((MEM d) r) ==> ((MEM ((next_el r) d)) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cmarked_list f0 f5 f1 f2 c==> c==> cMEM f3 f1 cMEM cnext_el f1 f3 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3
- (~ (((parts L) r) = NIL)) |- (((~ (NIL = ((parts L) r))) ==> ((NIL = ((parts L) r)) = F)) = ((NIL = ((parts L) r)) = F))
T c==> c~ c= cparts f0 f1 cNIL c= c==> c~ c= cNIL cparts f0 f1 c= c= cNIL cparts f0 f1 cF c= c= cNIL cparts f0 f1 cF
+ (~ (((next_el r) d) = ((f_list L) (e_list d)))), (~ (r = NIL)), (uniq r), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((~ (d = (LAST r))) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= cf_list f2 f1 cnext_el f0 f1 c==> cMEM f1 f3 c==> cMEM cnext_el f0 f1 f4 c==> cMEM f3 cparts f2 f0 c==> c~ c= f1 cLAST f0 cMEM cf_list f2 cLAST f3 f4
+ ((MEM (LAST ((parts L) r))) ((parts L) r)) |- (((MEM (LAST ((parts L) r))) ((parts L) r)) = T)
T c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c= cMEM cLAST cparts f0 f1 cparts f0 f1 cT
- (is_node_nondegenerate (hypermap_of_list L)) |- ((is_node_nondegenerate (hypermap_of_list L)) = T)
T c==> cis_node_nondegenerate chypermap_of_list f0 c= cis_node_nondegenerate chypermap_of_list f0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq ((MAP (FST o HD)) ((parts L) r))) /\ (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- ((\b. (!f. ((a = b) ==> ((f a) = (f b))))) b)
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 * / ! c==> c= f0 b0 c= * b1 f0 * b1 b0 f1
+ |- ((\x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) x)
T * / ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cis_restricted chypermap_of_list f1 c==> cgood_list f1 c==> c= cf_list f1 f2 cnext_el f3 f2 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f3 c==> cMEM f4 cparts f1 f3 c==> cMEM f2 f4 c==> cMEM f5 cparts f1 f3 c==> cMEM cnext_el f3 f2 f5 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f3 c==> ! ! c==> c/\ cMEM b0 cparts f1 f3 c/\ cMEM b1 cparts f1 f3 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f3 cNIL c==> cuniq cparts f1 f3 c==> c= cFST f2 cFST cHD f4 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f3 cFST cHD f4 cFST cHD cnext_el cparts f1 f3 f4 c==> c= cFST cnext_el f3 f2 cFST cHD f5 c==> c= c= cnext_el cparts f1 f3 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> cMEM f2 clist_of_darts f1 c==> cone_step_list f1 f2 cnext_el f3 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f1 cLAST f4 f5
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cIN f1 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f3 ccore f0 f2 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
- T |- (T = T)
T c==> cT c= cT cT
+ |- (((!k. ((((MEM x) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST x)) ((core L) r)))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c= c==> ! c==> c/\ cMEM f0 f1 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f1 f0 c~ cfinal_list f2 f1 cMEM cFST f0 ccore f2 f1 c= cnext_el ccore f2 f1 cFST f4 cFST cnext_el f1 f4 c= cnext_el ccore f2 f1 cFST f4 cFST cnext_el f1 f4
+ |- ((\f. (((uniq ((parts L) r)) /\ (((MEM p) ((parts L) r)) /\ (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((next_el ((MAP f) ((parts L) r))) (f p)) = (f ((next_el ((parts L) r)) p))))) (FST o HD))
T * / c==> c/\ cuniq cparts f0 f1 c/\ cMEM f2 cparts f0 f1 ! ! c==> c/\ cMEM b1 cparts f0 f1 c/\ cMEM b2 cparts f0 f1 c= * b0 b1 * b0 b2 c= b1 b2 c= cnext_el cMAP b0 cparts f0 f1 * b0 f2 * b0 cnext_el cparts f0 f1 f2 * * part co part cFST part cHD
+ |- ((((d = (LAST r)) \/ (~ (d = (LAST r)))) ==> ((MEM ((f_list L) (LAST p))) pn)) = ((MEM ((f_list L) (LAST p))) pn))
T c= c==> c\/ c= f0 cLAST f1 c~ c= f0 cLAST f1 cMEM cf_list f2 cLAST f3 f4 cMEM cf_list f2 cLAST f3 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ ((e_list d) = d)), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), (((one_step_list L) d) ((next_el r) d)), ((((s_flag_list L) N) r) x) |- ((~ ((e_list d) = d)) /\ ((MEM ((f_list L) (LAST p))) pn))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= ce_list f3 f3 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cone_step_list f1 f3 cnext_el f2 f3 c==> cs_flag_list f1 f0 f2 f6 c/\ c~ c= ce_list f3 f3 cMEM cf_list f1 cLAST f4 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), (((MEM p') ((parts L) r)) /\ ((MEM ((next_el r) d)) p')), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((MEM p') ((parts L) r)) /\ ((MEM ((next_el r) d)) p')) /\ (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> c/\ cMEM f6 cparts f1 f2 cMEM cnext_el f2 f4 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f7 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ c/\ cMEM f6 cparts f1 f2 cMEM cnext_el f2 f4 f6 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((FST ((next_el r) d)) = (FST (HD pn))) /\ (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c/\ c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 cMEM cf_list f1 cLAST f4 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c/\ c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (FST x)) ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ |- ((\x. (!k. ((((MEM d) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST d)) ((core L) r))))) x)
T * / ! c==> c/\ cMEM f0 f1 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f1 b0 c~ cfinal_list f2 f1 cMEM cFST f0 ccore f2 f1 f4
+ (~ ((final_list L) r)) |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))))), ((MEM d) r), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 cs_flag_list f0 f6 f1 f3 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ |- (((!q'. (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q'))))) ==> ((\q'. (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q'))))) q')) = ((\q'. (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 f3 c==> c==> f3 c= c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4 b0 c= c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4 c==> f3 b0 * / c==> c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 f3 c==> c==> f3 c= c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4 b0 c= c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4 c==> f3 b0 f5 * / c==> c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 f3 c==> c==> f3 c= c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4 b0 c= c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4 c==> f3 b0 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))), ((MEM d) r), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cMEM f2 f1 c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f3 c==> cs_flag_list f0 f4 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f3 ccore f0 f2 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
- |- (((!x'. (((\w. (((next_el ((find_face L) x)) x) = w)) x') ==> (?w. (((next_el ((find_face L) x)) x) = w)))) ==> ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w)))) = ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w))))
T c= c==> ! c==> * / c= cnext_el cfind_face f0 f1 f1 b1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b1 c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0 c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((FST (HD ((next_el ((parts L) r)) p))) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c= cFST cHD cnext_el cparts f1 f2 f4 cFST cnext_el f2 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f1 c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f1 cNIL c==> cuniq cparts f0 f1 c==> c= cFST f3 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f6 cFST cHD cnext_el cparts f0 f1 f6 c==> c= cFST cnext_el f1 f3 cFST cHD f7 c==> c= c= cnext_el cparts f0 f1 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f3 clist_of_darts f0 c==> cone_step_list f0 f3 cnext_el f1 f3 c==> c~ c= ce_list f3 f3 cMEM cf_list f0 cLAST f6 f7
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), (((MEM d) (list_of_darts L)) /\ (((one_step_list L) d) ((next_el r) d))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> c/\ cMEM f3 clist_of_darts f1 cone_step_list f1 f3 cnext_el f2 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 cMEM cf_list f1 cLAST f4 f5
+ (uniq (flatten N)), ((MEM r) N) |- (((uniq r) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))) = ((((uniq (flatten N)) /\ ((MEM r) N)) ==> (uniq r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> cuniq cflatten f0 c==> cMEM f1 f0 c= c==> cuniq f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f1 cFST f3 cFST cnext_el f1 f3 c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f1 cFST f3 cFST cnext_el f1 f3
+ (~ (r = NIL)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))))))))))), ((MEM d) p), ((MEM d) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> cgood_list f1 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> c/\ cplanar_hypermap chypermap_of_list f1 c/\ cplain_hypermap chypermap_of_list f1 c/\ cconnected_hypermap chypermap_of_list f1 c/\ csimple_hypermap chypermap_of_list f1 c/\ cis_no_double_joins chypermap_of_list f1 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> cMEM f2 f3 c==> cMEM f2 clist_of_darts f1 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 cMEM cf_list f1 cLAST f3 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (?p. (((MEM p) ((parts L) r)) /\ ((MEM ((next_el r) d)) p))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((?p. (((MEM p) ((parts L) r)) /\ ((MEM ((next_el r) d)) p))) /\ (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c? / c/\ cMEM b0 cparts f1 f2 cMEM cnext_el f2 f3 b0 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f4 cf_list f1 f4 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f4 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f6 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> cMEM f4 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f4 c/\ c? / c/\ cMEM b0 cparts f1 f2 cMEM cnext_el f2 f3 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f3 cFST cnext_el f2 f3
- (((parts L) r) = NIL) |- (NIL = ((parts L) r))
T c==> c= cparts f0 f1 cNIL c= cNIL cparts f0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ (~ (r = NIL)), (uniq r), (((f_list L) d) = ((next_el r) d)), ((~ (d = (LAST r))) ==> ((MEM ((f_list L) (LAST p))) pn)), ((d = (LAST r)) \/ (~ (d = (LAST r)))), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> c==> c~ c= f2 cLAST f0 cMEM cf_list f1 cLAST f3 f4 c==> c\/ c= f2 cLAST f0 c~ c= f2 cLAST f0 c==> cMEM f2 f3 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 cMEM cf_list f1 cLAST f3 f4
+ |- ((\r. (!r'. (!p. (!p'. ((((normal_list L) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM p') ((parts L) r')) /\ (((MEM r) N) /\ ((MEM r') N))))) ==> ((((next_el ((parts L) r)) p) = p') = ((MEM ((f_list L) (LAST p))) p'))))))) r)
T * / ! ! ! c==> c/\ cnormal_list f0 f1 c/\ cMEM b2 cparts f0 b0 c/\ cMEM b3 cparts f0 b1 c/\ cMEM b0 f1 cMEM b1 f1 c= c= cnext_el cparts f0 b0 b2 b3 cMEM cf_list f0 cLAST b2 b3 f2
+ ((!x. (((MEM x) s) ==> (a x))) = ((all a) s)) |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c==> c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0 c= call f1 f0 ! c==> cMEM b0 f0 * f1 b0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c==> c? / c= cnext_el cfind_face f0 f4 f4 b0 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
- (!x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) |- (((MEM x) ((MAP (core L)) N)) ==> (uniq x))
T c==> ! c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 c==> cMEM f2 cMAP * part ccore f0 f1 cuniq f2
+ (~ (r = NIL)), (~ (((parts L) r) = NIL)), (uniq r), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- (((~ (((parts L) r) = NIL)) ==> ((MEM (LAST ((parts L) r))) ((parts L) r))) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= f0 cNIL c==> c~ c= cparts f1 f0 cNIL c==> cuniq f0 c==> c= f2 cLAST f0 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> c= cflatten cparts f1 f0 f0 c==> cMEM f2 f3 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 c==> c==> c~ c= cparts f1 f0 cNIL cMEM cLAST cparts f1 f0 cparts f1 f0 cMEM cf_list f1 cLAST f3 f4
+ |- ((\H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))))))) H)
T * / c= cis_restricted b0 c/\ c~ c= * part cdart b0 part cEMPTY c/\ cplanar_hypermap b0 c/\ cplain_hypermap b0 c/\ cconnected_hypermap b0 c/\ csimple_hypermap b0 c/\ cis_no_double_joins b0 c/\ cis_edge_nondegenerate b0 c/\ cis_node_nondegenerate b0 ! c==> cIN b1 * part cdart b0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface b0 b1 f0
- (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))), ((MEM ((next_el r) d)) pn) |- (((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))) /\ ((p = (LAST ((parts L) r))) ==> ((MEM ((f_list L) (LAST r))) pn)))
T c==> c= f0 cLAST f1 c==> c= cf_list f2 f0 cnext_el f1 f0 c==> cMEM cLAST cLAST cparts f2 f1 cLAST cparts f2 f1 c==> cMEM cnext_el f1 f0 f3 c/\ cMEM cLAST cLAST cparts f2 f1 cLAST cparts f2 f1 c==> c= f4 cLAST cparts f2 f1 cMEM cf_list f2 cLAST f1 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> c/\ cuniq cflatten f2 c/\ call / c~ c= b0 cNIL f2 c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((FST d) = (FST (HD p))) /\ ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f5 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f5 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM f5 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f7 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c/\ c= cFST f3 cFST cHD f4 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cFST cnext_el f2 f3 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f4 f7 cMEM cf_list f1 cLAST f4 f7 cMEM cf_list f1 cLAST f4 f7
+ |- (((!d. (((good_list L) /\ ((is_restricted (hypermap_of_list L)) /\ ((MEM d) (list_of_darts L)))) ==> (~ ((e_list d) = d)))) ==> ((\d. (((good_list L) /\ ((is_restricted (hypermap_of_list L)) /\ ((MEM d) (list_of_darts L)))) ==> (~ ((e_list d) = d)))) d)) = ((\d. (((good_list L) /\ ((is_restricted (hypermap_of_list L)) /\ ((MEM d) (list_of_darts L)))) ==> (~ ((e_list d) = d)))) d))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cis_restricted chypermap_of_list f0 cMEM b0 clist_of_darts f0 c~ c= ce_list b0 b0 * / c==> c/\ cgood_list f0 c/\ cis_restricted chypermap_of_list f0 cMEM b0 clist_of_darts f0 c~ c= ce_list b0 b0 f1 * / c==> c/\ cgood_list f0 c/\ cis_restricted chypermap_of_list f0 cMEM b0 clist_of_darts f0 c~ c= ce_list b0 b0 f1
+ |- ((\L. (!x. (((good_list L) /\ (((MEM x) (list_of_darts L)) /\ (is_edge_nondegenerate (hypermap_of_list L)))) ==> (~ (((f_list L) x) = ((f_list L) (e_list x))))))) L)
T * / ! c==> c/\ cgood_list b0 c/\ cMEM b1 clist_of_darts b0 cis_edge_nondegenerate chypermap_of_list b0 c~ c= cf_list b0 b1 cf_list b0 ce_list b1 f0
- (~ (!A. (A \/ (~ A)))) |- F
T c==> c~ ! c\/ b0 c~ b0 cF
- |- ((!b. (!f. ((a = b) ==> ((f a) = (f b))))) = T)
T c= ! ! c==> c= f0 b0 c= * b1 f0 * b1 b0 cT
+ |- (((!y. ((uniq ((MAP (FST o HD)) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))))) ==> ((\y. ((uniq ((MAP (FST o HD)) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))))) ((parts L) r))) = ((\y. ((uniq ((MAP (FST o HD)) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))))) ((parts L) r)))
T c= c==> ! c==> cuniq cMAP * * part co part cFST part cHD b0 ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c= co part cFST part cHD b1 co part cFST part cHD b2 c= b1 b2 * / c==> cuniq cMAP * * part co part cFST part cHD b0 ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c= co part cFST part cHD b1 co part cFST part cHD b2 c= b1 b2 cparts f0 f1 * / c==> cuniq cMAP * * part co part cFST part cHD b0 ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c= co part cFST part cHD b1 co part cFST part cHD b2 c= b1 b2 cparts f0 f1
+ |- ((\q'. ((((MEM ((core L) r)) ((MAP (core L)) N)) = p') ==> ((p' ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (p' ==> q'))))) q')
T * / c==> c= cMEM ccore f0 f1 cMAP * part ccore f0 f2 f3 c==> c==> f3 c= cuniq ccore f0 f1 b0 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> f3 b0 f4
+ (~ ((LAST ((parts L) r)) = NIL)) |- (((LAST ((parts L) r)) = NIL) = F)
T c==> c~ c= cLAST cparts f0 f1 cNIL c= c= cLAST cparts f0 f1 cNIL cF
- |- ((p' = pn) = ((\pn. (p' = pn)) pn))
T c= c= f0 f1 * / c= f0 b0 f1
- (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) |- ((((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x)))) = T)
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c= c==> cMEM f2 f0 c/\ cMEM f2 clist_of_darts f1 cone_step_list f1 f2 cnext_el f0 f2 cT
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ (uniq ((core L) r)) |- ((uniq ((core L) r)) /\ ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> cuniq ccore f0 f1 c/\ cuniq ccore f0 f1 c= c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM cFST f3 ccore f0 f2 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
+ |- ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)
T * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((f_list L) d) = ((next_el r) d)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
+ |- ((\s. (((loop_list L) s) = ((all (\x. (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el s) x))))) s))) s)
T * / c= cloop_list f0 b0 call / c/\ cMEM b1 clist_of_darts f0 cone_step_list f0 b1 cnext_el b0 b1 b0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cMEM f3 clist_of_darts f1 c==> cone_step_list f1 f3 cnext_el f2 f3 c==> c~ c= ce_list f3 f3 cMEM cf_list f1 cLAST f4 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
+ (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))
T c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> cMEM f2 f3 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 c==> cuniq cparts f1 f0 c==> c= cFST f2 cFST cHD f3 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f0 cFST cHD f3 cFST cHD cnext_el cparts f1 f0 f3 c==> c= cFST cnext_el f0 f2 cFST cHD f4 c==> c= c= cnext_el cparts f1 f0 f3 f4 cMEM cf_list f1 cLAST f3 f4 c==> cMEM f2 clist_of_darts f1 c==> cone_step_list f1 f2 cnext_el f0 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f1 cLAST f3 f4
+ |- ((!L. (!r. (((uniq r) /\ ((MEM x) r)) ==> (?p. (((MEM p) ((parts L) r)) /\ ((MEM x) p)))))) = T)
T c= ! ! c==> c/\ cuniq b1 cMEM f0 b1 c? / c/\ cMEM b2 cparts b0 b1 cMEM f0 b2 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c/\ c= cfind_face f0 f3 f2 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ (~ ((e_list d) = d)), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM d) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((~ ((e_list d) = d)) /\ ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= ce_list f0 f0 c==> c~ c= f1 cNIL c==> cis_restricted chypermap_of_list f2 c==> cuniq f1 c==> cgood_list f2 c==> c= cf_list f2 f0 cnext_el f1 f0 c==> cMEM f0 f3 c==> cMEM f0 clist_of_darts f2 c==> cMEM cnext_el f1 f0 f4 c==> cMEM f3 cparts f2 f1 c/\ c~ c= ce_list f0 f0 cMEM cf_list f2 cLAST f3 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c==> c= cfind_face f0 f3 f2 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f2 f4 c==> c= cf_list f0 f3 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM cFST f4 ccore f0 f2 c==> cMEM cFST f3 ccore f0 f2 c==> cMEM cFST cnext_el f2 f4 ccore f0 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 cMEM cf_list f0 cLAST f6 f7
- |- ((!A. ((P A) \/ Q)) = ((!A. (P A)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- (((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF
+ |- ((!y. ((uniq ((MAP f) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v)))))) = T)
T c= ! c==> cuniq cMAP f0 b0 ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 cT
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f2 c==> cMEM f4 cparts f0 f2 c==> cMEM f1 f4 c==> cMEM f5 cparts f0 f2 c==> cMEM cnext_el f2 f1 f5 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f4 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f4 cFST cHD cnext_el cparts f0 f2 f4 c==> c= cFST cnext_el f2 f1 cFST cHD f5 c==> c= c= cnext_el cparts f0 f2 f4 f5 cMEM cf_list f0 cLAST f4 f5 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f4 f5
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq r) /\ (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cuniq f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ |- (!k. ((((MEM x) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST x)) ((core L) r))))
T c==> c/\ cMEM f0 f1 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f1 f0 c~ cfinal_list f2 f1 cMEM cFST f0 ccore f2 f1
+ |- ((\y. (!d. (!f. (((uniq y) /\ (((MEM d) y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((next_el ((MAP f) y)) (f d)) = (f ((next_el y) d))))))) ((parts L) r))
T * / ! ! c==> c/\ cuniq b0 c/\ cMEM b1 b0 ! ! c==> c/\ cMEM b3 b0 c/\ cMEM b4 b0 c= * b2 b3 * b2 b4 c= b3 b4 c= cnext_el cMAP b2 b0 * b2 b1 * b2 cnext_el b0 b1 cparts f0 f1
+ |- ((\x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))) d)
T * / c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM b0 f3 c= cFST b0 cFST cHD f3 f4
+ |- (((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) x) = (((POWER (next_el ((find_face L) x))) (SUC (NUMERAL _0))) x)))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cNUMERAL c_0 f1
+ |- (((!s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) ==> ((\s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) ((parts L) r))) = ((\s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) ((parts L) r)))
T c= c==> ! c==> c~ c= b0 cNIL cMEM cLAST b0 b0 * / c==> c~ c= b0 cNIL cMEM cLAST b0 b0 cparts f0 f1 * / c==> c~ c= b0 cNIL cMEM cLAST b0 b0 cparts f0 f1
- (uniq ((core L) r)) |- ((uniq ((core L) r)) = T)
T c==> cuniq ccore f0 f1 c= cuniq ccore f0 f1 cT
+ |- (((!d. (!f. (((uniq ((parts L) r)) /\ (((MEM d) ((parts L) r)) /\ (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((next_el ((MAP f) ((parts L) r))) (f d)) = (f ((next_el ((parts L) r)) d)))))) ==> ((\d. (!f. (((uniq ((parts L) r)) /\ (((MEM d) ((parts L) r)) /\ (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((next_el ((MAP f) ((parts L) r))) (f d)) = (f ((next_el ((parts L) r)) d)))))) p)) = ((\d. (!f. (((uniq ((parts L) r)) /\ (((MEM d) ((parts L) r)) /\ (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((next_el ((MAP f) ((parts L) r))) (f d)) = (f ((next_el ((parts L) r)) d)))))) p))
T c= c==> ! ! c==> c/\ cuniq cparts f0 f1 c/\ cMEM b0 cparts f0 f1 ! ! c==> c/\ cMEM b2 cparts f0 f1 c/\ cMEM b3 cparts f0 f1 c= * b1 b2 * b1 b3 c= b2 b3 c= cnext_el cMAP b1 cparts f0 f1 * b1 b0 * b1 cnext_el cparts f0 f1 b0 * / ! c==> c/\ cuniq cparts f0 f1 c/\ cMEM b0 cparts f0 f1 ! ! c==> c/\ cMEM b2 cparts f0 f1 c/\ cMEM b3 cparts f0 f1 c= * b1 b2 * b1 b3 c= b2 b3 c= cnext_el cMAP b1 cparts f0 f1 * b1 b0 * b1 cnext_el cparts f0 f1 b0 f2 * / ! c==> c/\ cuniq cparts f0 f1 c/\ cMEM b0 cparts f0 f1 ! ! c==> c/\ cMEM b2 cparts f0 f1 c/\ cMEM b3 cparts f0 f1 c= * b1 b2 * b1 b3 c= b2 b3 c= cnext_el cMAP b1 cparts f0 f1 * b1 b0 * b1 cnext_el cparts f0 f1 b0 f2
- (~ ((LAST ((parts L) r)) = NIL)) |- (~ (NIL = (LAST ((parts L) r))))
T c==> c~ c= cLAST cparts f0 f1 cNIL c~ c= cNIL cLAST cparts f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 cs_flag_list f0 f6 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((((next_el ((find_face L) x)) x) = w) ==> (?w. (((next_el ((find_face L) x)) x) = w))) = (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c= c==> c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- (((!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) ==> ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l)) = ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l))
T c= c==> ! c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2 * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2
+ |- ((((f b) = (f b)) ==> F) = F)
T c= c==> c= * f0 f1 * f0 f1 cF cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> ! c==> cMEM b0 f0 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f1 cone_step_list f1 b1 cnext_el b0 b1 cMEM cf_list f1 cLAST f4 f5
+ |- (((!x. (!L. (!r. (((uniq r) /\ ((MEM x) r)) ==> (?p. (((MEM p) ((parts L) r)) /\ ((MEM x) p))))))) ==> ((\x. (!L. (!r. (((uniq r) /\ ((MEM x) r)) ==> (?p. (((MEM p) ((parts L) r)) /\ ((MEM x) p))))))) d)) = ((\x. (!L. (!r. (((uniq r) /\ ((MEM x) r)) ==> (?p. (((MEM p) ((parts L) r)) /\ ((MEM x) p))))))) d))
T c= c==> ! ! ! c==> c/\ cuniq b2 cMEM b0 b2 c? / c/\ cMEM b3 cparts b1 b2 cMEM b0 b3 * / ! ! c==> c/\ cuniq b2 cMEM b0 b2 c? / c/\ cMEM b3 cparts b1 b2 cMEM b0 b3 f0 * / ! ! c==> c/\ cuniq b2 cMEM b0 b2 c? / c/\ cMEM b3 cparts b1 b2 cMEM b0 b3 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), (p' = pn), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) p'), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM p') ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((p' = pn) /\ (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> c= f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f8 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f6 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f8 cparts f1 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ c= f6 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f3 c==> cs_flag_list f0 f4 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f3 ccore f0 f2 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST x)) ((core L) r)) /\ (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c/\ cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
+ (~ (r = NIL)), (uniq r), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((~ (((parts L) r) = NIL)) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= f1 cLAST f0 c==> c= cf_list f2 f1 cnext_el f0 f1 c==> c= cflatten cparts f2 f0 f0 c==> cMEM f1 f3 c==> cMEM cnext_el f0 f1 f4 c==> cMEM f3 cparts f2 f0 c==> c~ c= cparts f2 f0 cNIL cMEM cf_list f2 cLAST f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((MEM d) (list_of_darts L)) /\ (((one_step_list L) d) ((next_el r) d))) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> c/\ cMEM f3 clist_of_darts f1 cone_step_list f1 f3 cnext_el f2 f3 cMEM cf_list f1 cLAST f4 f5
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- (!f. ((a = b) ==> ((f a) = (f b))))
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 ! c==> c= f0 f1 c= * b0 f0 * b0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST d)) ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3
- |- ((\f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) f)
T * / ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((HD ((next_el ((parts L) r)) p)) = (HD pn))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c= cHD cnext_el cparts f1 f2 f4 cHD f5
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f1 c==> ! ! c==> c/\ cMEM b0 cparts f0 f1 c/\ cMEM b1 cparts f0 f1 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f1 cNIL c==> cuniq cparts f0 f1 c==> c= cFST f3 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f1 cFST cHD f6 cFST cHD cnext_el cparts f0 f1 f6 c==> c= cFST cnext_el f1 f3 cFST cHD f7 c==> c= c= cnext_el cparts f0 f1 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f3 clist_of_darts f0 c==> cone_step_list f0 f3 cnext_el f1 f3 c==> c~ c= ce_list f3 f3 cMEM cf_list f0 cLAST f6 f7
+ (((f_list L) d) = ((next_el r) d)), ((MEM ((next_el r) d)) pn) |- ((MEM ((f_list L) d)) pn)
T c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM cnext_el f2 f1 f3 cMEM cf_list f0 f1 f3
+ ((\pn. (p' = pn)) pn) |- (((p' = pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))) = (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f3 cFST f4 cFST cnext_el f3 f4 c= cnext_el cMAP * * part co part cFST part cHD cparts f2 f3 cFST f4 cFST cnext_el f3 f4
+ |- ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((all uniq) ((quotient_list L) N))))))) L)
T * / ! ! ! c==> cmarked_list b0 b1 b2 b3 call part cuniq cquotient_list b0 b1 f0
+ |- ((\r'. (((uniq r') /\ ((MEM ((next_el r) d)) r')) ==> (?p. (((MEM p) ((parts L) r')) /\ ((MEM ((next_el r) d)) p))))) r)
T * / c==> c/\ cuniq b0 cMEM cnext_el f0 f1 b0 c? / c/\ cMEM b1 cparts f2 b0 cMEM cnext_el f0 f1 b1 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))), ((MEM d) r), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) /\ (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 cs_flag_list f0 f6 f1 f3 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c/\ c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM r) N) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM f2 f3 c/\ cMEM f2 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f4 ccore f0 f2 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f2 c==> cMEM f6 cparts f0 f2 c==> cMEM f1 f6 c==> cMEM f7 cparts f0 f2 c==> cMEM cnext_el f2 f1 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f0 f2 c==> ! ! c==> c/\ cMEM b0 cparts f0 f2 c/\ cMEM b1 cparts f0 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f0 f2 c==> c= cFST f1 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f0 f2 cFST cHD f6 cFST cHD cnext_el cparts f0 f2 f6 c==> c= cFST cnext_el f2 f1 cFST cHD f7 c==> c= c= cnext_el cparts f0 f2 f6 f7 cMEM cf_list f0 cLAST f6 f7 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cnext_el f2 f1 c==> c~ c= ce_list f1 f1 cMEM cf_list f0 cLAST f6 f7
+ |- ((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) = T)
T c= ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((\p. (((MEM p) ((parts L) r)) /\ ((MEM ((next_el r) d)) p))) p') ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= c==> * / c/\ cMEM b0 cparts f1 f2 cMEM cnext_el f2 f4 b0 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f3 c==> cMEM f1 f3 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f1 f4 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
- ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) |- (((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) /\ ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c/\ c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF
+ |- ((\d. (!L. (!N. (!r. (!x. (!k. ((((MEM d) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST d)) ((core L) r))))))))) d)
T * / ! ! ! ! ! c==> c/\ cMEM b0 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c~ cfinal_list b1 b3 cMEM cFST b0 ccore b1 b3 f0
- (connected_hypermap (hypermap_of_list L)) |- ((connected_hypermap (hypermap_of_list L)) = T)
T c==> cconnected_hypermap chypermap_of_list f0 c= cconnected_hypermap chypermap_of_list f0 cT
+ ((((marked_list L) N) r) x) |- ((((MEM x) (list_of_darts L)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = ((((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> cmarked_list f0 f1 f2 f3 c= c==> cMEM f3 clist_of_darts f0 c= cnext_el ccore f0 f2 cFST f4 cFST cnext_el f2 f4 c==> c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0 c= cnext_el ccore f0 f2 cFST f4 cFST cnext_el f2 f4
+ |- ((\x. (((MEM x) r) ==> (~ (r = NIL)))) x)
T * / c==> cMEM b0 f0 c~ c= f0 cNIL f1
+ |- (((!N. (!r. (!r'. (!p. (!p'. ((((normal_list L) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM p') ((parts L) r')) /\ (((MEM r) N) /\ ((MEM r') N))))) ==> ((((next_el ((parts L) r)) p) = p') = ((MEM ((f_list L) (LAST p))) p')))))))) ==> ((\N. (!r. (!r'. (!p. (!p'. ((((normal_list L) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM p') ((parts L) r')) /\ (((MEM r) N) /\ ((MEM r') N))))) ==> ((((next_el ((parts L) r)) p) = p') = ((MEM ((f_list L) (LAST p))) p')))))))) N)) = ((\N. (!r. (!r'. (!p. (!p'. ((((normal_list L) N) /\ (((MEM p) ((parts L) r)) /\ (((MEM p') ((parts L) r')) /\ (((MEM r) N) /\ ((MEM r') N))))) ==> ((((next_el ((parts L) r)) p) = p') = ((MEM ((f_list L) (LAST p))) p')))))))) N))
T c= c==> ! ! ! ! ! c==> c/\ cnormal_list f0 b0 c/\ cMEM b3 cparts f0 b1 c/\ cMEM b4 cparts f0 b2 c/\ cMEM b1 b0 cMEM b2 b0 c= c= cnext_el cparts f0 b1 b3 b4 cMEM cf_list f0 cLAST b3 b4 * / ! ! ! ! c==> c/\ cnormal_list f0 b0 c/\ cMEM b3 cparts f0 b1 c/\ cMEM b4 cparts f0 b2 c/\ cMEM b1 b0 cMEM b2 b0 c= c= cnext_el cparts f0 b1 b3 b4 cMEM cf_list f0 cLAST b3 b4 f1 * / ! ! ! ! c==> c/\ cnormal_list f0 b0 c/\ cMEM b3 cparts f0 b1 c/\ cMEM b4 cparts f0 b2 c/\ cMEM b1 b0 cMEM b2 b0 c= c= cnext_el cparts f0 b1 b3 b4 cMEM cf_list f0 cLAST b3 b4 f1
+ |- ((\r. (((uniq r) /\ (~ (r = NIL))) ==> ((flatten ((parts L) r)) = r))) r)
T * / c==> c/\ cuniq b0 c~ c= b0 cNIL c= cflatten cparts f0 b0 b0 f1
+ (~ (((next_el r) d) = ((f_list L) (e_list d)))), (~ (r = NIL)), (uniq r), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c==> c~ c= f0 cNIL c==> cuniq f0 c==> c= cf_list f2 f1 cnext_el f0 f1 c==> cMEM f1 f3 c==> cMEM cnext_el f0 f1 f4 c==> cMEM f3 cparts f2 f0 cMEM cf_list f2 cLAST f3 f4
+ (~ (r = NIL)), (~ (((parts L) r) = NIL)), (uniq r), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- (((MEM (LAST ((parts L) r))) ((parts L) r)) /\ ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= f0 cNIL c==> c~ c= cparts f1 f0 cNIL c==> cuniq f0 c==> c= f2 cLAST f0 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> c= cflatten cparts f1 f0 f0 c==> cMEM f2 f3 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 c==> cMEM cLAST cparts f1 f0 cparts f1 f0 c/\ cMEM cLAST cparts f1 f0 cparts f1 f0 cMEM cf_list f1 cLAST f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), (((MEM d) (list_of_darts L)) /\ (((one_step_list L) d) ((next_el r) d))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((MEM d) (list_of_darts L)) /\ (((one_step_list L) d) ((next_el r) d))) /\ ((MEM ((f_list L) (LAST p))) pn))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> c/\ cMEM f3 clist_of_darts f1 cone_step_list f1 f3 cnext_el f2 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c/\ c/\ cMEM f3 clist_of_darts f1 cone_step_list f1 f3 cnext_el f2 f3 cMEM cf_list f1 cLAST f4 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ (((MEM d) r) ==> ((((f_list L) d) = ((next_el r) d)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> cMEM f4 f1 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cnext_el f5 f3 f6 c==> c= cfind_face f0 f3 f5 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4
+ |- ((((next_el ((find_face L) x)) x) = ((next_el ((find_face L) x)) x)) = ((\w. (((next_el ((find_face L) x)) x) = w)) ((next_el ((find_face L) x)) x)))
T c= c= cnext_el cfind_face f0 f1 f1 cnext_el cfind_face f0 f1 f1 * / c= cnext_el cfind_face f0 f1 f1 b0 cnext_el cfind_face f0 f1 f1
- (~ ((LAST ((parts L) r)) = NIL)) |- (((~ (NIL = (LAST ((parts L) r)))) ==> ((NIL = (LAST ((parts L) r))) = F)) = ((NIL = (LAST ((parts L) r))) = F))
T c==> c~ c= cLAST cparts f0 f1 cNIL c= c==> c~ c= cNIL cLAST cparts f0 f1 c= c= cNIL cLAST cparts f0 f1 cF c= c= cNIL cLAST cparts f0 f1 cF
- (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((MEM ((next_el r) d)) pn) |- ((d = (LAST r)) /\ ((MEM ((f_list L) (LAST r))) pn))
T c==> c= f0 cLAST f1 c==> c= cf_list f2 f0 cnext_el f1 f0 c==> cMEM cnext_el f1 f0 f3 c/\ c= f0 cLAST f1 cMEM cf_list f2 cLAST f1 f3
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cmarked_list f0 f5 f1 f2 c= cnext_el ccore f0 f1 cFST f3 cFST cnext_el f1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) p'), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM p') ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((\pn. (p' = pn)) pn) |- (((\pn. (p' = pn)) pn) /\ (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> * / c= f7 b0 f8 c/\ * / c= f7 b0 f8 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) |- (((((MEM d) r) ==> (((MEM d) (list_of_darts L)) /\ (((one_step_list L) d) ((next_el r) d)))) ==> ((MEM ((f_list L) (LAST p))) pn)) = ((MEM ((f_list L) (LAST p))) pn))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c= c==> c==> cMEM f2 f0 c/\ cMEM f2 clist_of_darts f1 cone_step_list f1 f2 cnext_el f0 f2 cMEM cf_list f1 cLAST f3 f4 cMEM cf_list f1 cLAST f3 f4
- |- (((!f. (!b. ((a = b) ==> ((f a) = (f b))))) ==> ((\f. (!b. ((a = b) ==> ((f a) = (f b))))) f)) = ((\f. (!b. ((a = b) ==> ((f a) = (f b))))) f))
T c= c==> ! ! c==> c= f0 b1 c= * b0 f0 * b0 b1 * / ! c==> c= f0 b1 c= * b0 f0 * b0 b1 f1 * / ! c==> c= f0 b1 c= * b0 f0 * b0 b1 f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f6 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM ((next_el r) d)) pn) /\ ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- (((!x. (((\f. (((find_face L) x) = f)) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) ==> ((?f. (((find_face L) x) = f)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) = ((?f. (((find_face L) x) = f)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> cMEM f4 f1 c==> cmarked_list f0 f5 f1 f2 c= c==> ! c==> * / c= cfind_face f0 f2 b1 b0 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4 c==> c? / c= cfind_face f0 f2 b0 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4 c==> c? / c= cfind_face f0 f2 b0 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4
+ (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM d) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- (((MEM d) (list_of_darts L)) /\ ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))
T c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> cMEM f2 f3 c==> cMEM f2 clist_of_darts f1 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 c/\ cMEM f2 clist_of_darts f1 c==> cone_step_list f1 f2 cnext_el f0 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f1 cLAST f3 f4
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((all uniq) ((quotient_list L) N))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((all uniq) ((quotient_list L) N))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((all uniq) ((quotient_list L) N))))))) L))
T c= c==> ! ! ! ! c==> cmarked_list b0 b1 b2 b3 call part cuniq cquotient_list b0 b1 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 call part cuniq cquotient_list b0 b1 f0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 call part cuniq cquotient_list b0 b1 f0
+ |- ((\r. (((uniq r) /\ (~ (r = NIL))) ==> (~ (((parts L) r) = NIL)))) r)
T * / c==> c/\ cuniq b0 c~ c= b0 cNIL c~ c= cparts f0 b0 cNIL f1
+ |- (((!k. ((((MEM d) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST d)) ((core L) r)))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c= c==> ! c==> c/\ cMEM f0 f1 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f1 f4 c~ cfinal_list f2 f1 cMEM cFST f0 ccore f2 f1 c= cnext_el ccore f2 f1 cFST f0 cFST cnext_el f1 f0 c= cnext_el ccore f2 f1 cFST f0 cFST cnext_el f1 f0
+ ((MEM r) N) |- (((((MEM ((core L) r)) ((MAP (core L)) N)) = T) ==> ((T ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (T ==> q')))) = ((T ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (T ==> q'))))
T c==> cMEM f0 f1 c= c==> c= cMEM ccore f2 f0 cMAP * part ccore f2 f1 cT c==> c==> cT c= cuniq ccore f2 f0 f3 c= c==> cMEM ccore f2 f0 cMAP * part ccore f2 f1 cuniq ccore f2 f0 c==> cT f3 c==> c==> cT c= cuniq ccore f2 f0 f3 c= c==> cMEM ccore f2 f0 cMAP * part ccore f2 f1 cuniq ccore f2 f0 c==> cT f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c==> c==> cmarked_list f0 f6 f1 f3 cMEM f3 clist_of_darts f0 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM d) p))))) ==> ((FST d) = (FST (HD p)))) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> c==> c/\ cnormal_list f1 f0 c/\ cgood_list f1 c/\ cMEM f2 f0 c/\ cMEM f6 cparts f1 f2 cMEM f4 f6 c= cFST f4 cFST cHD f6 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ |- ((\L. (!x. (((uniq (flatten L)) /\ (((MEM p) L) /\ (((MEM (LAST ((parts L) r))) L) /\ (((MEM x) p) /\ ((MEM x) (LAST ((parts L) r))))))) ==> (p = (LAST ((parts L) r)))))) ((parts L) r))
T * / ! c==> c/\ cuniq cflatten b0 c/\ cMEM f0 b0 c/\ cMEM cLAST cparts f1 f2 b0 c/\ cMEM b1 f0 cMEM b1 cLAST cparts f1 f2 c= f0 cLAST cparts f1 f2 cparts f1 f2
- (NIL = r) |- (r = NIL)
T c==> c= cNIL f0 c= f0 cNIL
+ (~ (((parts L) r) = NIL)), (uniq r), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- ((~ ((LAST ((parts L) r)) = NIL)) ==> ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= cparts f0 f1 cNIL c==> cuniq f1 c==> c= f2 cLAST f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cflatten cparts f0 f1 f1 c==> cMEM f2 f3 c==> cMEM cnext_el f1 f2 f4 c==> cMEM f3 cparts f0 f1 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c==> c~ c= cLAST cparts f0 f1 cNIL cMEM cf_list f0 cLAST f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) /\ (((next_el ((parts L) r)) p) = pn))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c/\ c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c= cnext_el cparts f1 f2 f4 f5
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) /\ (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> c/\ cuniq cflatten f5 c/\ call / c~ c= b0 cNIL f5 c/\ call * part cf_last f0 f5 c/\ call * part cloop_list f0 f5 ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c/\ c/\ cuniq cflatten f5 c/\ call / c~ c= b0 cNIL f5 c/\ call * part cf_last f0 f5 c/\ call * part cloop_list f0 f5 ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- ((\a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) a)
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 * / ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 f0
+ (~ (((parts L) r) = NIL)), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), ((MEM ((next_el r) d)) pn) |- ((~ (((parts L) r) = NIL)) /\ (((MEM (LAST ((parts L) r))) ((parts L) r)) ==> ((~ ((LAST ((parts L) r)) = NIL)) ==> (((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))) ==> ((p = (LAST ((parts L) r))) ==> ((MEM ((f_list L) (LAST r))) pn))))))
T c==> c~ c= cparts f0 f1 cNIL c==> c= f2 cLAST f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM cnext_el f1 f2 f3 c/\ c~ c= cparts f0 f1 cNIL c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c==> c~ c= cLAST cparts f0 f1 cNIL c==> cMEM cLAST cLAST cparts f0 f1 cLAST cparts f0 f1 c==> c= f4 cLAST cparts f0 f1 cMEM cf_list f0 cLAST f1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f) |- (((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) = ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c==> c= cfind_face f0 f1 f3 c= c==> c= cnext_el f3 f1 f2 c==> c= cfind_face f0 f1 f3 c= cnext_el ccore f0 f4 cFST f5 cFST cnext_el f4 f5 c==> c= cfind_face f0 f1 f3 c= cnext_el ccore f0 f4 cFST f5 cFST cnext_el f4 f5
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))), ((MEM d) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 cs_flag_list f0 f6 f1 f3 c==> cMEM f5 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- ((\f. (((find_face L) x) = f)) f) |- (((((find_face L) x) = f) ==> (?f. (((find_face L) x) = f))) = (?f. (((find_face L) x) = f)))
T c==> * / c= cfind_face f0 f1 b0 f2 c= c==> c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
+ |- (!r'. (!x. (!k. ((((MEM ((next_el r) d)) r') /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r') x) /\ (~ ((final_list L) r')))))) ==> ((MEM (FST ((next_el r) d))) ((core L) r'))))))
T c==> c/\ cMEM cnext_el f0 f1 f2 c/\ cgood_list f3 c/\ cgood_list_nodes f3 c/\ cmarked_list f3 f4 f2 f5 c~ cfinal_list f3 f2 cMEM cFST cnext_el f0 f1 ccore f3 f2
+ (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((~ (r = NIL)) /\ ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> (((MEM d) (list_of_darts L)) ==> ((((one_step_list L) d) ((next_el r) d)) ==> ((~ ((e_list d) = d)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))
T c==> c~ c= f0 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> cMEM f2 f3 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 c/\ c~ c= f0 cNIL c==> cuniq cparts f1 f0 c==> c= cFST f2 cFST cHD f3 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f0 cFST cHD f3 cFST cHD cnext_el cparts f1 f0 f3 c==> c= cFST cnext_el f0 f2 cFST cHD f4 c==> c= c= cnext_el cparts f1 f0 f3 f4 cMEM cf_list f1 cLAST f3 f4 c==> cMEM f2 clist_of_darts f1 c==> cone_step_list f1 f2 cnext_el f0 f2 c==> c~ c= ce_list f2 f2 cMEM cf_list f1 cLAST f3 f4
+ |- (((!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u)))) ==> ((\u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u)))) u)) = ((\u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u)))) u))
T c= c==> ! c==> cMEM f0 b0 cMEM * f1 f0 cMAP f1 b0 * / c==> cMEM f0 b0 cMEM * f1 f0 cMAP f1 b0 f2 * / c==> cMEM f0 b0 cMEM * f1 f0 cMAP f1 b0 f2
+ |- (((!L. (!N. (!r'. (!x. (!k. ((((MEM ((next_el r) d)) r') /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r') x) /\ (~ ((final_list L) r')))))) ==> ((MEM (FST ((next_el r) d))) ((core L) r')))))))) ==> ((\L. (!N. (!r'. (!x. (!k. ((((MEM ((next_el r) d)) r') /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r') x) /\ (~ ((final_list L) r')))))) ==> ((MEM (FST ((next_el r) d))) ((core L) r')))))))) L)) = ((\L. (!N. (!r'. (!x. (!k. ((((MEM ((next_el r) d)) r') /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r') x) /\ (~ ((final_list L) r')))))) ==> ((MEM (FST ((next_el r) d))) ((core L) r')))))))) L))
T c= c==> ! ! ! ! ! c==> c/\ cMEM cnext_el f0 f1 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST cnext_el f0 f1 ccore b0 b2 * / ! ! ! ! c==> c/\ cMEM cnext_el f0 f1 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST cnext_el f0 f1 ccore b0 b2 f2 * / ! ! ! ! c==> c/\ cMEM cnext_el f0 f1 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST cnext_el f0 f1 ccore b0 b2 f2
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (uniq r), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) p), ((MEM d) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM p) ((parts L) r)) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> c= cf_list f1 f2 cnext_el f0 f2 c==> cMEM f2 f3 c==> cMEM f2 clist_of_darts f1 c==> cMEM cnext_el f0 f2 f4 c==> cMEM f3 cparts f1 f0 cMEM cf_list f1 cLAST f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM pn) ((parts L) r)) /\ (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
+ (~ ((LAST ((parts L) r)) = NIL)), (~ (((parts L) r) = NIL)), (d = (LAST r)), ((LAST r) = (LAST (LAST ((parts L) r)))), (((f_list L) d) = ((next_el r) d)), (p = (LAST ((parts L) r))), ((flatten ((parts L) r)) = r), ((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))), ((MEM ((next_el r) d)) pn), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- ((p = (LAST ((parts L) r))) /\ ((MEM ((f_list L) (LAST p))) pn))
T c==> c~ c= cLAST cparts f0 f1 cNIL c==> c~ c= cparts f0 f1 cNIL c==> c= f2 cLAST f1 c==> c= cLAST f1 cLAST cLAST cparts f0 f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= f3 cLAST cparts f0 f1 c==> c= cflatten cparts f0 f1 f1 c==> cMEM cLAST cLAST cparts f0 f1 cLAST cparts f0 f1 c==> cMEM cnext_el f1 f2 f4 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c/\ c= f3 cLAST cparts f0 f1 cMEM cf_list f0 cLAST f3 f4
+ |- (((!a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) ==> ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a)) = ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a))
T c= c==> ! ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM ((next_el r) d)) r) /\ (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c/\ cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c/\ c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- |- ((?pn. (p' = pn)) ==> (?pn. (p' = pn)))
T c==> c? / c= f0 b0 c? / c= f0 b0
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))), (a = b) |- ((a = b) /\ ((f a) = (f b)))
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 c==> c= f0 f1 c/\ c= f0 f1 c= * f2 f0 * f2 f1
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> (((MEM d) r) ==> ((((f_list L) d) = ((next_el r) d)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> cMEM f4 f2 c==> c= cf_list f0 f4 cnext_el f2 f4 c==> c= cnext_el f5 f3 f6 c==> c= cfind_face f0 f3 f5 c= cnext_el ccore f0 f2 cFST f4 cFST cnext_el f2 f4
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- (((!f. ((a = b) ==> ((f a) = (f b)))) ==> ((\f. ((a = b) ==> ((f a) = (f b)))) f)) = ((\f. ((a = b) ==> ((f a) = (f b)))) f))
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 c= c==> ! c==> c= f0 f1 c= * b0 f0 * b0 f1 * / c==> c= f0 f1 c= * b0 f0 * b0 f1 f2 * / c==> c= f0 f1 c= * b0 f0 * b0 f1 f2
- (~ ((LAST ((parts L) r)) = NIL)), (~ (((parts L) r) = NIL)), (d = (LAST r)), ((LAST r) = (LAST (LAST ((parts L) r)))), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))), ((MEM ((next_el r) d)) pn), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- ((p = (LAST ((parts L) r))) ==> ((MEM ((f_list L) (LAST (LAST ((parts L) r))))) pn))
T c==> c~ c= cLAST cparts f0 f1 cNIL c==> c~ c= cparts f0 f1 cNIL c==> c= f2 cLAST f1 c==> c= cLAST f1 cLAST cLAST cparts f0 f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cflatten cparts f0 f1 f1 c==> cMEM cLAST cLAST cparts f0 f1 cLAST cparts f0 f1 c==> cMEM cnext_el f1 f2 f3 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c==> c= f4 cLAST cparts f0 f1 cMEM cf_list f0 cLAST cLAST cparts f0 f1 f3
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f1 f2 c==> cMEM f4 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f2 c==> cMEM cFST f4 ccore f0 f2 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f2 cFST f1 cFST cnext_el f2 f1
- (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM f1 f2 c==> cMEM f3 f2 c==> cMEM f2 f4 c==> cnormal_list f0 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f3 c==> cs_flag_list f0 f4 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f2 c==> cMEM cFST f3 ccore f0 f2 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f2 cFST f1 cFST cnext_el f2 f1
- (!x. (((MEM x) ((parts L) r)) ==> (~ (x = NIL)))) |- ((((MEM x) ((parts L) r)) ==> (~ (x = NIL))) = T)
T c==> ! c==> cMEM b0 cparts f0 f1 c~ c= b0 cNIL c= c==> cMEM f2 cparts f0 f1 c~ c= f2 cNIL cT
- (~ (!A. (A \/ (~ A)))) |- ((~ (!A. (A \/ (~ A)))) /\ F)
T c==> c~ ! c\/ b0 c~ b0 c/\ c~ ! c\/ b0 c~ b0 cF
- |- (((!a. (!f. (!b. ((a = b) ==> ((f a) = (f b)))))) ==> ((\a. (!f. (!b. ((a = b) ==> ((f a) = (f b)))))) a)) = ((\a. (!f. (!b. ((a = b) ==> ((f a) = (f b)))))) a))
T c= c==> ! ! ! c==> c= b0 b2 c= * b1 b0 * b1 b2 * / ! ! c==> c= b0 b2 c= * b1 b0 * b1 b2 f0 * / ! ! c==> c= b0 b2 c= * b1 b0 * b1 b2 f0
- (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((MEM r) N), ((normal_list L) N) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f2 c==> cMEM cFST f4 ccore f0 f2 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f2 cFST f1 cFST cnext_el f2 f1
- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))) /\ (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c? / c/\ cMEM b0 cparts f1 f2 cMEM f3 b0 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f4 cf_list f1 f4 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f4 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> cMEM f4 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f4 c/\ c? / c/\ cMEM b0 cparts f1 f2 cMEM f3 b0 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f3 cFST cnext_el f2 f3
- (~ (r = NIL)) |- (~ (NIL = r))
T c==> c~ c= f0 cNIL c~ c= cNIL f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- ((\pn. (p' = pn)) pn) |- (((p' = pn) ==> (?pn. (p' = pn))) = (?pn. (p' = pn)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- (((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))) = T)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c= c==> cIN f1 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1 cT
- |- (!f. (((\f. (((find_face L) x) = f)) f) ==> (?f. (((find_face L) x) = f))))
T c==> * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- |- ((((uniq ((core L) r)) ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = ((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))) = (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = ((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))
T c= c==> c==> cuniq ccore f0 f1 c= c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((MEM d) r), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ ((((f_list L) d) = ((next_el r) d)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c/\ cMEM f2 f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
- (!x. (((MEM x) ((parts L) r)) ==> (~ (x = NIL)))) |- ((\x. (((MEM x) ((parts L) r)) ==> (~ (x = NIL)))) x)
T c==> ! c==> cMEM b0 cparts f0 f1 c~ c= b0 cNIL * / c==> cMEM b0 cparts f0 f1 c~ c= b0 cNIL f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), ((MEM d) (list_of_darts L)) |- ((MEM ((SND d) , (FST d))) (list_of_darts L))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((f_list L) x) = w) /\ (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c/\ c= cf_list f0 f2 f4 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cuniq ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- |- ((\b. ((a = b) ==> ((f a) = (f b)))) b)
T * / c==> c= f0 b0 c= * f1 f0 * f1 b0 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- ((dart (hypermap_of_list L)) = EMPTY) |- (EMPTY = (dart (hypermap_of_list L)))
T c==> c= * part cdart chypermap_of_list f0 part cEMPTY c= part cEMPTY * part cdart chypermap_of_list f0
- (!x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) |- ((\x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) x)
T c==> ! c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 * / c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c/\ cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- (a = b) |- (F = F)
T c==> c= f0 f1 c= cF cF
- (~ ((f b) = (f b))) |- ((~ ((f b) = (f b))) /\ ((f b) = (f b)))
T c==> c~ c= * f0 f1 * f0 f1 c/\ c~ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 f1
- |- (((!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) ==> (!a. (!f. (!b. ((a = b) ==> ((f a) = (f b))))))) = (!a. (!f. (!b. ((a = b) ==> ((f a) = (f b)))))))
T c= c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 ! ! ! c==> c= b0 b2 c= * b1 b0 * b1 b2 ! ! ! c==> c= b0 b2 c= * b1 b0 * b1 b2
- ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F), (((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F)) |- (((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) /\ ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c/\ c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c/\ cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f4 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (p' = pn) |- ((p' = pn) /\ (?pn. (p' = pn)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (~ (EMPTY = (dart (hypermap_of_list L))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c~ c= part cEMPTY * part cdart chypermap_of_list f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- (plain_hypermap (hypermap_of_list L)) |- ((plain_hypermap (hypermap_of_list L)) = T)
T c==> cplain_hypermap chypermap_of_list f0 c= cplain_hypermap chypermap_of_list f0 cT
- ((\pn. (p' = pn)) pn) |- (((\pn. (p' = pn)) pn) /\ (?pn. (p' = pn)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cMEM f6 cparts f1 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM p) ((parts L) r)) /\ (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cMEM f6 cparts f1 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) /\ (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f5 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f5 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM f5 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f7 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c/\ c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cFST cnext_el f2 f3 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f4 f7 cMEM cf_list f1 cLAST f4 f7 cMEM cf_list f1 cLAST f4 f7
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))), (a = b) |- ((f a) = (f b))
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 c==> c= f0 f1 c= * f2 f0 * f2 f1
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ ((e_list d) = d)), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), (((one_step_list L) d) ((next_el r) d)), ((((s_flag_list L) N) r) x) |- ((MEM ((f_list L) (LAST p))) pn)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= ce_list f3 f3 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cone_step_list f1 f3 cnext_el f2 f3 c==> cs_flag_list f1 f0 f2 f6 cMEM cf_list f1 cLAST f4 f5
- |- ((((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (?w. (((next_el ((find_face L) x)) x) = w))) = T)
T c= c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0 cT
- (~ (r = NIL)) |- (((~ (NIL = r)) ==> ((NIL = r) = F)) = ((NIL = r) = F))
T c==> c~ c= f0 cNIL c= c==> c~ c= cNIL f0 c= c= cNIL f0 cF c= c= cNIL f0 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c/\ cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST d)) ((core L) r)) /\ (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c/\ cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f4 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
- |- ((~ ((f b) = (f b))) ==> ((f b) = (f b)))
T c==> c~ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 f1
- |- ((T \/ t) = T)
T c= c\/ cT f0 cT
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- ((\f. ((a = b) ==> ((f a) = (f b)))) f)
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 * / c==> c= f0 f1 c= * b0 f0 * b0 f1 f2
- |- ((!A. (P \/ (Q A))) = (P \/ (!A. (Q A))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (!x. (((MEM x) ((parts L) r)) ==> (~ (x = NIL)))) |- (((MEM x) ((parts L) r)) ==> (~ (x = NIL)))
T c==> ! c==> cMEM b0 cparts f0 f1 c~ c= b0 cNIL c==> cMEM f2 cparts f0 f1 c~ c= f2 cNIL
- |- ((((find_face L) x) = f) ==> (?f. (((find_face L) x) = f)))
T c==> c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- ((\x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) x)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 * / c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 f1
- (~ ((LAST ((parts L) r)) = NIL)), (~ (((parts L) r) = NIL)), (d = (LAST r)), ((LAST r) = (LAST (LAST ((parts L) r)))), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))), ((MEM ((next_el r) d)) pn), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- (((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))) /\ ((p = (LAST ((parts L) r))) ==> ((MEM ((f_list L) (LAST (LAST ((parts L) r))))) pn)))
T c==> c~ c= cLAST cparts f0 f1 cNIL c==> c~ c= cparts f0 f1 cNIL c==> c= f2 cLAST f1 c==> c= cLAST f1 cLAST cLAST cparts f0 f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cflatten cparts f0 f1 f1 c==> cMEM cLAST cLAST cparts f0 f1 cLAST cparts f0 f1 c==> cMEM cnext_el f1 f2 f3 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c/\ cMEM cLAST cLAST cparts f0 f1 cLAST cparts f0 f1 c==> c= f4 cLAST cparts f0 f1 cMEM cf_list f0 cLAST cLAST cparts f0 f1 f3
- |- (((!x. (((\pn. (p' = pn)) x) ==> (?pn. (p' = pn)))) ==> ((?pn. (p' = pn)) ==> (?pn. (p' = pn)))) = ((?pn. (p' = pn)) ==> (?pn. (p' = pn))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((f_list L) d) = ((next_el r) d)) /\ ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c/\ c= cf_list f0 f2 cnext_el f1 f2 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f3 c==> cMEM f1 f3 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f1 f4 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((MEM d) r) ==> ((((f_list L) d) = ((next_el r) d)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f4 f1 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cnext_el f5 f3 f6 c==> c= cfind_face f0 f3 f5 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cMEM f6 cparts f1 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- |- (((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))) = (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c= c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((~ (_11143587 = _11143588)) \/ ((f _11143587) = (f _11143588)))
T c\/ c~ c= f0 f1 c= * f2 f0 * f2 f1
- |- ((p' = pn) ==> (?pn. (p' = pn)))
T c==> c= f0 f1 c? / c= f0 b0
- |- ((\L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))) L)
T * / c= cMEM f0 clist_of_darts b0 cMEM f0 cfind_face b0 f0 f1
- (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- ((~ (!A. (A \/ (~ A)))) ==> F) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((s = t) = (!x. ((x IN s) = (x IN t))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ (((MEM d) r) ==> ((((f_list L) d) = ((next_el r) d)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> cMEM f4 f1 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cnext_el f5 f3 f6 c==> c= cfind_face f0 f3 f5 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el ccore f0 f1 cFST f4 cFST cnext_el f1 f4
- |- (((!f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) ==> ((\f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) f)) = ((\f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) f))
T c= c==> ! ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 * / ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 f0 * / ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 f0
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) ==> (((MEM d) r) ==> ((((f_list L) d) = ((next_el r) d)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> cMEM f4 f2 c==> c= cf_list f0 f4 cnext_el f2 f4 c==> c= cnext_el f5 f3 f6 c==> c= cfind_face f0 f3 f5 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c= cnext_el ccore f0 f2 cFST f4 cFST cnext_el f2 f4
- (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c/\ cs_flag_list f0 f4 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- |- (((!d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) ==> ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d)) = ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d))
T c= c==> ! ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0 * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- (!b. (!f. ((a = b) ==> ((f a) = (f b)))))
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 ! ! c==> c= f0 b0 c= * b1 f0 * b1 b0
- |- (((((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F)) ==> (((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F))) = (((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF
- |- ((((next_el ((find_face L) x)) x) = w) ==> (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (good_list L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> (((MEM d) r) ==> ((((f_list L) d) = ((next_el r) d)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> cMEM f4 f2 c==> c= cf_list f0 f4 cnext_el f2 f4 c==> c= cnext_el f5 f3 f6 c==> c= cfind_face f0 f3 f5 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c= cnext_el ccore f0 f2 cFST f4 cFST cnext_el f2 f4
- |- ((F \/ t) = t)
T c= c\/ cF f0 f0
- (~ ((LAST ((parts L) r)) = NIL)), (~ (((parts L) r) = NIL)), (d = (LAST r)), ((LAST r) = (LAST (LAST ((parts L) r)))), (((f_list L) d) = ((next_el r) d)), ((flatten ((parts L) r)) = r), ((MEM ((next_el r) d)) pn), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- (((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))) ==> ((p = (LAST ((parts L) r))) ==> ((MEM ((f_list L) (LAST (LAST ((parts L) r))))) pn)))
T c==> c~ c= cLAST cparts f0 f1 cNIL c==> c~ c= cparts f0 f1 cNIL c==> c= f2 cLAST f1 c==> c= cLAST f1 cLAST cLAST cparts f0 f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cflatten cparts f0 f1 f1 c==> cMEM cnext_el f1 f2 f3 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c==> cMEM cLAST cLAST cparts f0 f1 cLAST cparts f0 f1 c==> c= f4 cLAST cparts f0 f1 cMEM cf_list f0 cLAST cLAST cparts f0 f1 f3
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- |- (!w. (((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (?w. (((next_el ((find_face L) x)) x) = w))))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), (((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) /\ (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f6 cuniq ccore f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c/\ c==> cMEM ccore f0 f1 cMAP * part ccore f0 f6 cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (~ (d = (LAST r))) |- (((LAST r) = d) = F)
T c==> c~ c= f0 cLAST f1 c= c= cLAST f1 f0 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (simple_hypermap (hypermap_of_list L)) |- ((simple_hypermap (hypermap_of_list L)) = T)
T c==> csimple_hypermap chypermap_of_list f0 c= csimple_hypermap chypermap_of_list f0 cT
- |- (((!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) ==> ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y)) = ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y))
T c= c==> ! ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1 * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1
- |- ((((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))) = T)
T c= c==> cMEM f0 f1 cMEM * f2 f0 cMAP f2 f1 cT
- (p' = pn) |- ((\pn. (p' = pn)) pn)
T c==> c= f0 f1 * / c= f0 b0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- |- ((!f. (P f)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cuniq f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM pn) ((parts L) r)) /\ (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- |- ((!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) ==> (!a. (!f. (!b. ((a = b) ==> ((f a) = (f b)))))))
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 ! ! ! c==> c= b0 b2 c= * b1 b0 * b1 b2
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (((!b. ((a = b) ==> ((f a) = (f b)))) ==> ((\b. ((a = b) ==> ((f a) = (f b)))) b)) = ((\b. ((a = b) ==> ((f a) = (f b)))) b))
T c= c==> ! c==> c= f0 b0 c= * f1 f0 * f1 b0 * / c==> c= f0 b0 c= * f1 f0 * f1 b0 f2 * / c==> c= f0 b0 c= * f1 f0 * f1 b0 f2
- ((LAST ((parts L) r)) = NIL) |- (NIL = (LAST ((parts L) r)))
T c==> c= cLAST cparts f0 f1 cNIL c= cNIL cLAST cparts f0 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f5 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f5 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM f5 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f7 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cFST cnext_el f2 f3 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f4 f7 cMEM cf_list f1 cLAST f4 f7 cMEM cf_list f1 cLAST f4 f7
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cuniq f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- ((\f. (((find_face L) x) = f)) f) |- (((\f. (((find_face L) x) = f)) f) /\ (?f. (((find_face L) x) = f)))
T c==> * / c= cfind_face f0 f1 b0 f2 c/\ * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c/\ cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- (!f. (!b. ((a = b) ==> ((f a) = (f b)))))
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 ! ! c==> c= f0 b1 c= * b0 f0 * b0 b1
- (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((normal_list L) N) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f3 c==> cMEM f2 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f2 c==> cMEM cFST f4 ccore f0 f2 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f2 cFST f1 cFST cnext_el f2 f1
- (~ (((parts L) r) = NIL)) |- ((NIL = ((parts L) r)) = F)
T c==> c~ c= cparts f0 f1 cNIL c= c= cNIL cparts f0 f1 cF
- |- (((!p'. (!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cuniq ccore f0 f1 b0 c==> c==> b0 c= c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 b1 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> b0 b1 * / ! c==> c= cuniq ccore f0 f1 b0 c==> c==> b0 c= c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 b1 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> b0 b1 f3 * / ! c==> c= cuniq ccore f0 f1 b0 c==> c==> b0 c= c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 b1 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> b0 b1 f3
- |- (((a = b) ==> ((f a) = (f b))) = T)
T c= c==> c= f0 f1 c= * f2 f0 * f2 f1 cT
- |- ((((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F)) = ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF
- |- ((((uniq ((core L) r)) = (uniq ((core L) r))) ==> (((uniq ((core L) r)) ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = ((uniq ((core L) r)) ==> q')))) = (((uniq ((core L) r)) ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = ((uniq ((core L) r)) ==> q'))))
T c= c==> c= cuniq ccore f0 f1 cuniq ccore f0 f1 c==> c==> cuniq ccore f0 f1 c= c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 f3 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> cuniq ccore f0 f1 f3 c==> c==> cuniq ccore f0 f1 c= c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 f3 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> cuniq ccore f0 f1 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST ((next_el r) d))) ((core L) r)) /\ (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c/\ cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- (~ (((parts L) r) = NIL)) |- (~ (NIL = ((parts L) r)))
T c==> c~ c= cparts f0 f1 cNIL c~ c= cNIL cparts f0 f1
- (~ F), (~ ((f a) = (f b))), (a = b) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= * f0 f1 * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (((dart (hypermap_of_list L)) = EMPTY) = F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c= * part cdart chypermap_of_list f0 part cEMPTY cF
- |- (((uniq ((core L) r)) ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = ((uniq ((core L) r)) ==> q')))
T c==> c==> cuniq ccore f0 f1 c= c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 f3 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> cuniq ccore f0 f1 f3
- (~ (((next_el r) d) = ((f_list L) (e_list d)))) |- (((~ (((f_list L) (e_list d)) = ((next_el r) d))) ==> ((((f_list L) (e_list d)) = ((next_el r) d)) = F)) = ((((f_list L) (e_list d)) = ((next_el r) d)) = F))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c= c==> c~ c= cf_list f2 ce_list f1 cnext_el f0 f1 c= c= cf_list f2 ce_list f1 cnext_el f0 f1 cF c= c= cf_list f2 ce_list f1 cnext_el f0 f1 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((all (loop_list L)) N) /\ ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f4 cnext_el f1 f4 c==> c= cf_list f0 f3 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cnext_el f1 f4 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cnext_el f1 f4 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c/\ call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f4 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f4 cFST cnext_el f1 f4
- |- ((((next_el ((find_face L) x)) x) = w) = ((\w. (((next_el ((find_face L) x)) x) = w)) w))
T c= c= cnext_el cfind_face f0 f1 f1 f2 * / c= cnext_el cfind_face f0 f1 f1 b0 f2
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f7 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- |- (((!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))) ==> ((\L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))) L)) = ((\L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))) L))
T c= c==> ! c= cMEM f0 clist_of_darts b0 cMEM f0 cfind_face b0 f0 * / c= cMEM f0 clist_of_darts b0 cMEM f0 cfind_face b0 f0 f1 * / c= cMEM f0 clist_of_darts b0 cMEM f0 cfind_face b0 f0 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM d) p) /\ (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f6 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f4 cFST cnext_el f2 f4
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\p. (f p)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((f_list L) d) = ((next_el r) d)) /\ ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c/\ c= cf_list f0 f2 cnext_el f1 f2 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
- |- (((!x. (((\f. (((find_face L) x) = f)) x) ==> (?f. (((find_face L) x) = f)))) ==> ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f)))) = ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f))))
T c= c==> ! c==> * / c= cfind_face f0 f1 b1 b0 c? / c= cfind_face f0 f1 b1 c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0 c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
- (!x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) |- ((((MEM x) ((MAP (core L)) N)) ==> (uniq x)) = T)
T c==> ! c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 c= c==> cMEM f2 cMAP * part ccore f0 f1 cuniq f2 cT
- |- ((\p'. (!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = q')) ==> (((uniq ((core L) r)) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (p' ==> q')))))) p')
T * / ! c==> c= cuniq ccore f0 f1 b0 c==> c==> b0 c= c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 b1 c= c==> cuniq ccore f0 f1 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> b0 b1 f3
- (~ ((LAST ((parts L) r)) = NIL)), (~ (((parts L) r) = NIL)), (d = (LAST r)), (((f_list L) d) = ((next_el r) d)), (p = (LAST ((parts L) r))), ((flatten ((parts L) r)) = r), ((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))), ((MEM ((next_el r) d)) pn), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- (((LAST r) = (LAST (LAST ((parts L) r)))) ==> ((MEM ((f_list L) (LAST (LAST ((parts L) r))))) pn))
T c==> c~ c= cLAST cparts f0 f1 cNIL c==> c~ c= cparts f0 f1 cNIL c==> c= f2 cLAST f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= f3 cLAST cparts f0 f1 c==> c= cflatten cparts f0 f1 f1 c==> cMEM cLAST cLAST cparts f0 f1 cLAST cparts f0 f1 c==> cMEM cnext_el f1 f2 f4 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c==> c= cLAST f1 cLAST cLAST cparts f0 f1 cMEM cf_list f0 cLAST cLAST cparts f0 f1 f4
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c/\ c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- |- ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((f_list L) d) = ((next_el r) d)), (((find_face L) x) = f), ((MEM d) r), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cf_list f0 f5 cnext_el f1 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c= cnext_el ccore f0 f1 cFST f5 cFST cnext_el f1 f5
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((MEM d) r), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ ((((f_list L) d) = ((next_el r) d)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c/\ cMEM f2 f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f3 c==> cMEM f1 f3 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f1 f4 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
- (((find_face L) x) = f) |- ((\f. (((find_face L) x) = f)) f)
T c==> c= cfind_face f0 f1 f2 * / c= cfind_face f0 f1 b0 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- (((next_el ((find_face L) x)) x) = w) |- ((\w. (((next_el ((find_face L) x)) x) = w)) w)
T c==> c= cnext_el cfind_face f0 f1 f1 f2 * / c= cnext_el cfind_face f0 f1 f1 b0 f2
- (~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) |- F
T c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF
- (is_restricted (hypermap_of_list L)), (good_list L), (((f_list L) d) = ((next_el r) d)), ((MEM d) r), ((MEM r) N), ((normal_list L) N) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c/\ cMEM f2 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f2 c==> cMEM cFST f4 ccore f0 f2 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f5 c==> cMEM cnext_el f2 f1 f2 c==> cMEM cFST cnext_el f2 f1 ccore f0 f2 c==> cMEM cFST f1 ccore f0 f2 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f2 cFST f1 cFST cnext_el f2 f1
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- (((a = b) ==> ((f a) = (f b))) = T)
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 c= c==> c= f0 f1 c= * f2 f0 * f2 f1 cT
- (NIL = (LAST ((parts L) r))) |- ((LAST ((parts L) r)) = NIL)
T c==> c= cNIL cLAST cparts f0 f1 c= cLAST cparts f0 f1 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> (((MEM ((SND d) , (FST d))) (list_of_darts L)) = T))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c= cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
- |- ((((\pn. (p' = pn)) pn) ==> (?pn. (p' = pn))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST d)) ((core L) r)) /\ ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> c= cf_list f0 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM cnext_el f1 f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f2 c/\ cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- |- (((~ (!A. (A \/ (~ A)))) ==> F) = (!A. (A \/ (~ A))))
T c= c==> c~ ! c\/ b0 c~ b0 cF ! c\/ b0 c~ b0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c/\ c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f1 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- ((~ (!A. (A \/ (~ A)))) ==> F) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (~ (d = (LAST r))) |- (((~ ((LAST r) = d)) ==> (((LAST r) = d) = F)) = (((LAST r) = d) = F))
T c==> c~ c= f0 cLAST f1 c= c==> c~ c= cLAST f1 f0 c= c= cLAST f1 f0 cF c= c= cLAST f1 f0 cF
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) |- ((!f. (!b. ((a = b) ==> ((f a) = (f b))))) = T)
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 c= ! ! c==> c= f0 b1 c= * b0 f0 * b0 b1 cT
- (~ ((LAST ((parts L) r)) = NIL)), (~ (((parts L) r) = NIL)), (d = (LAST r)), ((LAST r) = (LAST (LAST ((parts L) r)))), (((f_list L) d) = ((next_el r) d)), (p = (LAST ((parts L) r))), ((flatten ((parts L) r)) = r), ((MEM (LAST (LAST ((parts L) r)))) (LAST ((parts L) r))), ((MEM ((next_el r) d)) pn), ((MEM (LAST ((parts L) r))) ((parts L) r)) |- ((p = (LAST ((parts L) r))) /\ ((MEM ((f_list L) (LAST (LAST ((parts L) r))))) pn))
T c==> c~ c= cLAST cparts f0 f1 cNIL c==> c~ c= cparts f0 f1 cNIL c==> c= f2 cLAST f1 c==> c= cLAST f1 cLAST cLAST cparts f0 f1 c==> c= cf_list f0 f2 cnext_el f1 f2 c==> c= f3 cLAST cparts f0 f1 c==> c= cflatten cparts f0 f1 f1 c==> cMEM cLAST cLAST cparts f0 f1 cLAST cparts f0 f1 c==> cMEM cnext_el f1 f2 f4 c==> cMEM cLAST cparts f0 f1 cparts f0 f1 c/\ c= f3 cLAST cparts f0 f1 cMEM cf_list f0 cLAST cLAST cparts f0 f1 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> ((uniq ((MAP (FST o HD)) ((parts L) r))) ==> ((!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))) ==> ((~ (r = NIL)) ==> ((uniq ((parts L) r)) ==> (((FST d) = (FST (HD p))) ==> ((((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))) ==> (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cf_list f1 f4 cnext_el f2 f4 c==> c= cf_list f1 f3 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST cnext_el f2 f4 ccore f1 f2 c==> cMEM f4 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM cnext_el f2 f4 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f4 f6 c==> cMEM f7 cparts f1 f2 c==> cMEM cnext_el f2 f4 f7 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cuniq cparts f1 f2 c==> c= cFST f4 cFST cHD f6 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f6 cFST cHD cnext_el cparts f1 f2 f6 c==> c= cFST cnext_el f2 f4 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f6 f7 cMEM cf_list f1 cLAST f6 f7 cMEM cf_list f1 cLAST f6 f7
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((FST ((next_el r) d)) = (FST (HD pn))) ==> (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) ==> ((MEM ((f_list L) (LAST p))) pn)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f5 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f5 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM f5 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f7 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f7 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c==> c= cFST cnext_el f2 f3 cFST cHD f7 c==> c= c= cnext_el cparts f1 f2 f4 f7 cMEM cf_list f1 cLAST f4 f7 cMEM cf_list f1 cLAST f4 f7
- ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) |- ((((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F)) ==> ((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c==> c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF
- (r = NIL) |- (NIL = r)
T c==> c= f0 cNIL c= cNIL f0
- |- (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))
T c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ ((((f_list L) x) = w) ==> (((MEM ((next_el r) d)) r) ==> (((MEM (FST ((next_el r) d))) ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM p) ((parts L) r)) ==> (((MEM d) p) ==> (((MEM pn) ((parts L) r)) ==> (((MEM ((next_el r) d)) pn) ==> (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f3 cnext_el f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM cFST f2 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f4 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c/\ cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM cnext_el f1 f3 f1 c==> cMEM cFST cnext_el f1 f3 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> cMEM f6 cparts f0 f1 c==> cMEM f3 f6 c==> cMEM f7 cparts f0 f1 c==> cMEM cnext_el f1 f3 f7 c= cnext_el cMAP * * part co part cFST part cHD cparts f0 f1 cFST f3 cFST cnext_el f1 f3
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (?p. (((MEM p) ((parts L) r)) /\ ((MEM ((next_el r) d)) p))), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((next_el ((MAP (FST o HD)) ((parts L) r))) (FST d)) = (FST ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c? / c/\ cMEM b0 cparts f1 f2 cMEM cnext_el f2 f3 b0 c==> cis_restricted chypermap_of_list f1 c==> cuniq ccore f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> c= cnext_el f2 f4 cf_list f1 f4 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f4 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f4 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f6 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> cMEM f4 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f6 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f4 c= cnext_el cMAP * * part co part cFST part cHD cparts f1 f2 cFST f3 cFST cnext_el f2 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), ((MEM d) (list_of_darts L)) |- (((MEM d) (list_of_darts L)) /\ (((MEM ((SND d) , (FST d))) (list_of_darts L)) = T))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c/\ cMEM f1 clist_of_darts f0 c= cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
- ((LAST r) = d) |- (d = (LAST r))
T c==> c= cLAST f0 f1 c= f1 cLAST f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!u. (!v. ((((MEM u) ((parts L) r)) /\ (((MEM v) ((parts L) r)) /\ (((FST o HD) u) = ((FST o HD) v)))) ==> (u = v)))), (~ (r = NIL)), (is_restricted (hypermap_of_list L)), (uniq ((MAP (FST o HD)) ((parts L) r))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((parts L) r)), (good_list L), ((FST d) = (FST (HD p))), ((FST ((next_el r) d)) = (FST (HD pn))), (((next_el ((MAP (\x. (FST (HD x)))) ((parts L) r))) (FST (HD p))) = (FST (HD ((next_el ((parts L) r)) p)))), ((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)), (((next_el r) x) = ((f_list L) x)), (((f_list L) d) = ((next_el r) d)), (((f_list L) x) = w), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST d)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST ((next_el r) d))) ((core L) r)), ((MEM d) p), ((MEM d) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM ((next_el r) d)) pn), ((MEM ((next_el r) d)) r), ((MEM p) ((parts L) r)), ((MEM pn) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- (((((next_el ((parts L) r)) p) = pn) = ((MEM ((f_list L) (LAST p))) pn)) /\ ((MEM ((f_list L) (LAST p))) pn))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! c==> c/\ cMEM b0 cparts f1 f2 c/\ cMEM b1 cparts f1 f2 c= co part cFST part cHD b0 co part cFST part cHD b1 c= b0 b1 c==> c~ c= f2 cNIL c==> cis_restricted chypermap_of_list f1 c==> cuniq cMAP * * part co part cFST part cHD cparts f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cparts f1 f2 c==> cgood_list f1 c==> c= cFST f3 cFST cHD f4 c==> c= cFST cnext_el f2 f3 cFST cHD f5 c==> c= cnext_el cMAP / cFST cHD b0 cparts f1 f2 cFST cHD f4 cFST cHD cnext_el cparts f1 f2 f4 c==> c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cf_list f1 f3 cnext_el f2 f3 c==> c= cf_list f1 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM cFST f3 ccore f1 f2 c==> cMEM cFST f6 ccore f1 f2 c==> cMEM cFST cnext_el f2 f3 ccore f1 f2 c==> cMEM f3 f4 c==> cMEM f3 f2 c==> cMEM f6 f2 c==> cMEM f6 clist_of_darts f1 c==> cMEM cnext_el f2 f3 f5 c==> cMEM cnext_el f2 f3 f2 c==> cMEM f4 cparts f1 f2 c==> cMEM f5 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c/\ c= c= cnext_el cparts f1 f2 f4 f5 cMEM cf_list f1 cLAST f4 f5 cMEM cf_list f1 cLAST f4 f5
- |- (((~ (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b))))))) ==> F) = (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))))
T c= c==> c~ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 cF ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1
- (EMPTY = (dart (hypermap_of_list L))) |- ((dart (hypermap_of_list L)) = EMPTY)
T c==> c= part cEMPTY * part cdart chypermap_of_list f0 c= * part cdart chypermap_of_list f0 part cEMPTY
- (!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))), (a = b) |- ((!a. (!b. (!f. ((a = b) ==> ((f a) = (f b)))))) /\ ((f a) = (f b)))
T c==> ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 c==> c= f0 f1 c/\ ! ! ! c==> c= b0 b1 c= * b2 b0 * b2 b1 c= * f2 f0 * f2 f1
- (~ (((next_el r) d) = ((f_list L) (e_list d)))) |- (~ (((f_list L) (e_list d)) = ((next_el r) d)))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c~ c= cf_list f2 ce_list f1 cnext_el f0 f1
- (((next_el ((find_face L) x)) x) = w) |- ((((next_el ((find_face L) x)) x) = w) /\ (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c/\ c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
