N HOMOTOPIC_LOOPS_SHIFTPATH_SELF
C |- (!p. (!t. (!s. (((path p) /\ (((path_image p) SUBSET s) /\ (((pathfinish p) = (pathstart p)) /\ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) ==> (((homotopic_loops s) p) ((shiftpath t) p))))))
T c==> c/\ cpath f0 c/\ cSUBSET * part cpath_image f0 f1 c/\ c= cpathfinish f0 cpathstart f0 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chomotopic_loops f1 f0 * * part cshiftpath f2 f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LEFT_OR_FORALL_THM
A |- (!P. (!Q. (((!x. (P x)) \/ Q) = (!x. ((P x) \/ Q)))))
T c= c\/ ! * f0 b0 f1 ! c\/ * f0 b0 f1
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D SKOLEM_THM
A |- (!P. ((!x. (?y. ((P x) y))) = (?y. (!x. ((P x) (y x))))))
T c= ! c? / * * f0 b0 b1 c? / ! * * f0 b1 * b0 b1
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_LE_MUL
A |- (!x. (!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D Real_ext.REAL_PROP_NN_ADD2
A |- (!x. (!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_MUL_RID
A |- (!x. (((real_mul x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_LE_MUL2
A |- (!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 f3 creal_le creal_mul f0 f2 creal_mul f1 f3
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D FORALL_IN_IMAGE
A |- (!f. (!s. ((!y. ((y IN ((IMAGE f) s)) ==> (P y))) = (!x. ((x IN s) ==> (P (f x)))))))
T c= ! c==> cIN b0 * * part cIMAGE f0 f1 * f2 b0 ! c==> cIN b0 f1 * f2 * f0 b0
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D FSTCART_PASTECART
A |- (!x. (!y. ((fstcart ((pastecart x) y)) = x)))
T c= cfstcart cpastecart f0 f1 f0
D SNDCART_PASTECART
A |- (!x. (!y. ((sndcart ((pastecart x) y)) = y)))
T c= csndcart cpastecart f0 f1 f1
D FORALL_PASTECART
A |- ((!p. (P p)) = (!x. (!y. (P ((pastecart x) y)))))
T c= ! * f0 b0 ! ! * f0 cpastecart b0 b1
D FORALL_IN_PCROSS
A |- ((!z. ((z IN (s PCROSS t)) ==> (P z))) = (!x. (!y. (((x IN s) /\ (y IN t)) ==> (P ((pastecart x) y))))))
T c= ! c==> cIN b0 * * part cPCROSS f0 f1 * f2 b0 ! ! c==> c/\ cIN b0 f0 cIN b1 f1 * f2 cpastecart b0 b1
D PASTECART_IN_PCROSS
A |- (!s. (!t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))))
T c= cIN cpastecart f0 f1 * * part cPCROSS f2 f3 c/\ cIN f0 f2 cIN f1 f3
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D VECTOR_ADD_LID
A |- (!x. (((vector_add (vec (NUMERAL _0))) x) = x))
T c= cvector_add cvec cNUMERAL c_0 f0 f0
D VECTOR_SUB_REFL
A |- (!x. (((vector_sub x) x) = (vec (NUMERAL _0))))
T c= cvector_sub f0 f0 cvec cNUMERAL c_0
D VECTOR_MUL_RZERO
A |- (((% c) (vec (NUMERAL _0))) = (vec (NUMERAL _0)))
T c= c% f0 cvec cNUMERAL c_0 cvec cNUMERAL c_0
D LIFT_DROP
A |- ((!x. ((lift (drop x)) = x)) /\ (!x. ((drop (lift x)) = x)))
T c/\ ! c= clift cdrop b0 b0 ! c= cdrop clift b0 b0
D LIFT_EQ
A |- (!x. (!y. (((lift x) = (lift y)) = (x = y))))
T c= c= clift f0 clift f1 c= f0 f1
D LIFT_NUM
A |- (!n. ((lift (real_of_num n)) = (vec n)))
T c= clift creal_of_num f0 cvec f0
D LIFT_ADD
A |- (!x. (!y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))))
T c= clift creal_add f0 f1 cvector_add clift f0 clift f1
D LIFT_CMUL
A |- (!x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x)))))
T c= clift creal_mul f0 f1 c% f0 clift f1
D LIFT_EQ_CMUL
A |- (!x. ((lift x) = ((% x) (vec (NUMERAL (BIT1 _0))))))
T c= clift f0 c% f0 cvec cNUMERAL cBIT1 c_0
D DROP_VEC
A |- (!n. ((drop (vec n)) = (real_of_num n)))
T c= cdrop cvec f0 creal_of_num f0
D DROP_ADD
A |- (!x. (!y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))))
T c= cdrop cvector_add f0 f1 creal_add cdrop f0 cdrop f1
D DROP_SUB
A |- (!x. (!y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y)))))
T c= cdrop cvector_sub f0 f1 creal_sub cdrop f0 cdrop f1
D DROP_CMUL
A |- (!x. (!c. ((drop ((% c) x)) = ((real_mul c) (drop x)))))
T c= cdrop c% f0 f1 creal_mul f0 cdrop f1
D LINEAR_FSTCART
A |- (linear fstcart)
T clinear part cfstcart
D LINEAR_SNDCART
A |- (linear sndcart)
T clinear part csndcart
D CONTINUOUS_ON_SUBSET
A |- (!f. (!s. (!t. ((((continuous_on f) s) /\ (t SUBSET s)) ==> ((continuous_on f) t)))))
T c==> c/\ ccontinuous_on f0 f1 cSUBSET f2 f1 ccontinuous_on f0 f2
D CONTINUOUS_ON_CONST
A |- (!s. (!c. ((continuous_on (\x. c)) s)))
T ccontinuous_on / f0 f1
D CONTINUOUS_ON_CMUL
A |- (!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s)))))
T c==> ccontinuous_on f0 f1 ccontinuous_on / c% f2 * f0 b0 f1
D CONTINUOUS_ON_ADD
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_add * f0 b0 * f2 b0 f1
D CONTINUOUS_ON_SUB
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cvector_sub * f0 b0 * f2 b0 f1
D CONTINUOUS_ON_COMPOSE
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
D LINEAR_CONTINUOUS_ON
A |- (!f. (!s. ((linear f) ==> ((continuous_on f) s))))
T c==> clinear f0 ccontinuous_on f0 f1
D CONTINUOUS_ON_MUL
A |- (!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s)))))
T c==> c/\ ccontinuous_on * * part co part clift f0 f1 ccontinuous_on f2 f1 ccontinuous_on / c% * f0 b0 * f2 b0 f1
D IN_INTERVAL_1
A |- (!a. (!b. (!x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b))))))))
T c/\ c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ creal_le cdrop f1 cdrop f0 creal_le cdrop f0 cdrop f2 c= cIN f0 * part copen_interval c, f1 f2 c/\ creal_lt cdrop f1 cdrop f0 creal_lt cdrop f0 cdrop f2
D CONTINUOUS_ON_CASES_LE
A |- (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s)))))))
T c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 creal_le * f2 b1 f3 b1 c/\ ccontinuous_on f4 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 creal_le f3 * f2 b1 b1 c/\ ccontinuous_on * * part co part clift f2 f1 ! c==> c/\ cIN b0 f1 c= * f2 b0 f3 c= * f0 b0 * f4 b0 ccontinuous_on / cCOND creal_le * f2 b0 f3 * f0 b0 * f4 b0 f1
D path
A |- (!g. ((path g) = ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c= cpath f0 ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
D pathstart
A |- (!g. ((pathstart g) = (g (vec (NUMERAL _0)))))
T c= cpathstart f0 * f0 cvec cNUMERAL c_0
D pathfinish
A |- (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0))))))
T c= cpathfinish f0 * f0 cvec cNUMERAL cBIT1 c_0
D path_image
A |- (!g. ((path_image g) = ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c= * part cpath_image f0 * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
D shiftpath
A |- (!f. (!a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))))))
T c= * * part cshiftpath f0 f1 / cCOND creal_le cdrop cvector_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add f0 b0 * f1 cvector_add f0 cvector_sub b0 cvec cNUMERAL cBIT1 c_0
D CLOSED_SHIFTPATH
A |- (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))))
T c==> c/\ c= cpathfinish f0 cpathstart f0 cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f1 f0 cpathstart * * part cshiftpath f1 f0
D PATH_IMAGE_SHIFTPATH
A |- (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g)))))
T c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish f1 cpathstart f1 c= * part cpath_image * * part cshiftpath f0 f1 * part cpath_image f1
D HOMOTOPIC_LOOPS
A |- (!s. (!p. (!q. ((((homotopic_loops s) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x)))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish (h o (pastecart t))) = (pathstart (h o (pastecart t)))))))))))))))
T c= chomotopic_loops f0 f1 f2 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f1 b1 c/\ ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b0 cpastecart cvec cNUMERAL cBIT1 c_0 b1 * f2 b1 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part co b0 * part cpastecart b1 cpathstart * * part co b0 * part cpastecart b1
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 ! ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1
- |- (((?z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0)))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) = (?z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))))
T c= c/\ c? / c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c~ c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c? / c/\ c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c~ c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
+ (path p) |- ((((continuous_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t)))) = (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))))
T c==> cpath f0 c= c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0
+ (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- ((continuous_on (\z. (((COND ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c==> cpath f0 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f0 f2 ccontinuous_on / cCOND creal_le creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ ((path_image p) SUBSET s) |- (((path_image p) SUBSET s) = T)
T c==> cSUBSET * part cpath_image f0 f1 c= cSUBSET * part cpath_image f0 f1 cT
+ |- (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))
T c==> ccontinuous_on f0 f1 ! c==> cSUBSET b0 f1 ccontinuous_on f0 b0
- ((pathfinish p) = (pathstart p)) |- ((~ (((I pathfinish) p) = ((I pathstart) p))) ==> (((I pathfinish) p) = ((I pathstart) p)))
T c==> c= cpathfinish f0 cpathstart f0 c==> c~ c= cI part cpathfinish f0 cI part cpathstart f0 c= cI part cpathfinish f0 cI part cpathstart f0
+ (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- (((continuous_on (lift o (\z. ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))))))
T c==> cpath f0 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f0 f2 c/\ ccontinuous_on * * part co part clift / creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 creal_of_num cNUMERAL cBIT1 c_0 c= * f0 cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0
- (((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) |- ((((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) /\ (((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c/\ c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF
+ (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) |- ((((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) ==> F)
T c==> c/\ c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c~ c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c= cI f2 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f2 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cF
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 cT
+ |- ((((continuous_on (\z. ((% (drop t)) (fstcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) /\ ((continuous_on sndcart) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z)))))) ==> (((continuous_on (\z. ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) = T))
T c==> c/\ ccontinuous_on / c% cdrop f0 cfstcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 ccontinuous_on part csndcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 c= ccontinuous_on / cvector_add c% cdrop f0 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 cT
+ |- (((linear sndcart) ==> (((continuous_on sndcart) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) = T)) = (((continuous_on sndcart) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) = T))
T c= c==> clinear part csndcart c= ccontinuous_on part csndcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 cT c= ccontinuous_on part csndcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 cT
- (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) |- (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 ! c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b0 cpathstart b0 c= * part cpath_image * * part cshiftpath f0 b0 * part cpath_image b0
+ |- (((!x. (!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ ((~ (x = ((I p) x))) \/ (~ (t x)))))) /\ (!x. (!x. (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ ((x = ((I p) ((x'' x) x))) /\ (t ((x'' x) x))))))) = (!x. ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ ((~ (x = ((I p) x))) \/ (~ (t x))))) /\ (!x. (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ ((x = ((I p) ((x'' x) x))) /\ (t ((x'' x) x))))))))
T c= c/\ ! ! c\/ c/\ c= b0 cshiftpath * f0 f1 f2 * * f3 f1 b0 * f4 * * f3 f1 b0 c\/ c~ c= b0 cI f2 b1 c~ * f4 b1 ! ! c\/ c\/ c~ c= b0 cshiftpath * f0 f1 f2 b1 c~ * f4 b1 c/\ c= b0 cI f2 * * f5 f1 b0 * f4 * * f5 f1 b0 ! c/\ ! c\/ c/\ c= b0 cshiftpath * f0 f1 f2 * * f3 f1 b0 * f4 * * f3 f1 b0 c\/ c~ c= b0 cI f2 b1 c~ * f4 b1 ! c\/ c\/ c~ c= b0 cshiftpath * f0 f1 f2 b1 c~ * f4 b1 c/\ c= b0 cI f2 * * f5 f1 b0 * f4 * * f5 f1 b0
+ (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- (((continuous_on (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (lift (drop t))) p) x) = (((shiftpath t) p) x)))) /\ (!t'. ((t' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish ((shiftpath ((% (drop t)) t')) p)) = (pathstart ((shiftpath ((% (drop t)) t')) p)))))))))
T c==> cpath f0 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f0 f2 c/\ ccontinuous_on / cshiftpath c% cdrop f1 cfstcart b0 f0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE / cshiftpath c% cdrop f1 cfstcart b0 f0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f0 b0 * f0 b0 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath clift cdrop f1 f0 b0 cshiftpath f1 f0 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath c% cdrop f1 b0 f0 cpathstart * * part cshiftpath c% cdrop f1 b0 f0
+ |- (((!s. ((linear f) ==> ((continuous_on f) s))) ==> ((\s. ((linear f) ==> ((continuous_on f) s))) s)) = ((\s. ((linear f) ==> ((continuous_on f) s))) s))
T c= c==> ! c==> clinear f0 ccontinuous_on f0 b0 * / c==> clinear f0 ccontinuous_on f0 b0 f1 * / c==> clinear f0 ccontinuous_on f0 b0 f1
+ |- (T = (((~ (s _734227)) \/ ((~ (_734228 = (((shiftpath (f _734227)) p) _734229))) \/ ((~ (t _734229)) \/ (_734228 = ((I p) ((x'' _734227) _734228)))))) = ((_734228 = ((I p) ((x'' _734227) _734228))) \/ ((~ (s _734227)) \/ ((~ (_734228 = (((shiftpath (f _734227)) p) _734229))) \/ (~ (t _734229)))))))
T c= cT c= c\/ c~ * f0 f1 c\/ c~ c= f2 cshiftpath * f3 f1 f4 f5 c\/ c~ * f6 f5 c= f2 cI f4 * * f7 f1 f2 c\/ c= f2 cI f4 * * f7 f1 f2 c\/ c~ * f0 f1 c\/ c~ c= f2 cshiftpath * f3 f1 f4 f5 c~ * f6 f5
- (_734383 = _734385), (_734384 = _734386) |- ((_734384 = _734386) /\ (((I _734383) _734384) = ((I _734385) _734386)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- (!g. ((pathstart g) = (g (vec (NUMERAL _0))))) |- ((~ (((I p) ((I vec) ((I NUMERAL) _0))) = ((I pathstart) p))) ==> (((I p) ((I vec) ((I NUMERAL) _0))) = ((I pathstart) p)))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> c~ c= cI f0 cI part cvec cI part cNUMERAL c_0 cI part cpathstart f0 c= cI f0 cI part cvec cI part cNUMERAL c_0 cI part cpathstart f0
- |- (T ==> ((p ((vector_add (vec (NUMERAL _0))) x)) = (p x)))
T c==> cT c= * f0 cvector_add cvec cNUMERAL c_0 f1 * f0 f1
+ |- (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))), (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F))))))))
T c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> cpath f1 c==> c= cpathfinish f1 cpathstart f1 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f1 f2 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- (((!x. (!y. ((sndcart ((pastecart x) y)) = y))) ==> ((\x. (!y. ((sndcart ((pastecart x) y)) = y))) x)) = ((\x. (!y. ((sndcart ((pastecart x) y)) = y))) x))
T c= c==> ! ! c= csndcart cpastecart b0 b1 b1 * / ! c= csndcart cpastecart b0 b1 b1 f0 * / ! c= csndcart cpastecart b0 b1 b1 f0
- ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))), ((s x) /\ (t y)) |- ((~ ((((shiftpath (f x)) p) y) = ((I p) ((x'' x) (((shiftpath (f x)) p) y))))) ==> ((((shiftpath (f x)) p) y) = ((I p) ((x'' x) (((shiftpath (f x)) p) y)))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c==> c/\ * f3 f7 * f1 f8 c==> c~ c= cshiftpath * f4 f7 f0 f8 cI f0 * * f6 f7 cshiftpath * f4 f7 f0 f8 c= cshiftpath * f4 f7 f0 f8 cI f0 * * f6 f7 cshiftpath * f4 f7 f0 f8
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_sub b) c)) $ i) = (((vector_sub ((vector_add a) b)) c) $ i)))) = (((vector_add a) ((vector_sub b) c)) = ((vector_sub ((vector_add a) b)) c)))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 cvector_sub f1 f2 b0 c$ cvector_sub cvector_add f0 f1 f2 b0 c= cvector_add f0 cvector_sub f1 f2 cvector_sub cvector_add f0 f1 f2
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) ((vector_sub b) c)) $ i) = (((vector_sub ((vector_add a) b)) c) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_sub f2 f3 f0 c$ cvector_sub cvector_add f1 f2 f3 f0 cT
+ |- ((\x. (!y. ((x = y) = ((lift x) = (lift y))))) x)
T * / ! c= c= b0 b1 c= clift b0 clift b1 f0
+ (((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) |- ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c= creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1 cT
- ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- ((~ (s _734227)) \/ ((t ((x' _734227) _734228)) \/ ((~ (_734228 = ((I p) _734229))) \/ (~ (t _734229)))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c\/ c~ * f3 f7 c\/ * f1 * * f5 f7 f8 c\/ c~ c= f8 cI f0 f9 c~ * f1 f9
+ |- ((\g. ((path g) = ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) g)
T * / c= cpath b0 ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
+ (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))), (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F)))))))
T c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> cpath f1 c==> c= cpathfinish f1 cpathstart f1 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f1 f2 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF
+ (~ (u (((shiftpath (f x)) p) y))), ((s x) /\ (t y)) |- (((!x. (((\x. (?x'. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x x) x))) /\ (t ((x x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x' x) x))) /\ (t ((x' x) x))))))))))) x) ==> F)) ==> ((?x. (?x'. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x x) x))) /\ (t ((x x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x' x) x))) /\ (t ((x' x) x))))))))))) ==> F)) = ((?x. (?x'. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x x) x))) /\ (t ((x x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x' x) x))) /\ (t ((x' x) x))))))))))) ==> F))
T c==> c~ * f0 cshiftpath * f1 f2 f3 f4 c==> c/\ * f5 f2 * f6 f4 c= c==> ! c==> * / c? / c/\ ! c\/ ! c\/ c~ c= b2 * f3 b3 c~ * f6 b3 * f0 b2 ! c\/ c~ * f5 b2 c/\ ! c\/ c/\ c= b3 cshiftpath * f1 b2 f3 * * b1 b2 b3 * f6 * * b1 b2 b3 ! c\/ c~ c= b3 * f3 b4 c~ * f6 b4 ! c\/ ! c\/ c~ c= b3 cshiftpath * f1 b2 f3 b4 c~ * f6 b4 c/\ c= b3 * f3 * * b1 b2 b3 * f6 * * b1 b2 b3 b0 cF c==> c? / c? / c/\ ! c\/ ! c\/ c~ c= b2 * f3 b3 c~ * f6 b3 * f0 b2 ! c\/ c~ * f5 b2 c/\ ! c\/ c/\ c= b3 cshiftpath * f1 b2 f3 * * b0 b2 b3 * f6 * * b0 b2 b3 ! c\/ c~ c= b3 * f3 b4 c~ * f6 b4 ! c\/ ! c\/ c~ c= b3 cshiftpath * f1 b2 f3 b4 c~ * f6 b4 c/\ c= b3 * f3 * * b1 b2 b3 * f6 * * b1 b2 b3 cF c==> c? / c? / c/\ ! c\/ ! c\/ c~ c= b2 * f3 b3 c~ * f6 b3 * f0 b2 ! c\/ c~ * f5 b2 c/\ ! c\/ c/\ c= b3 cshiftpath * f1 b2 f3 * * b0 b2 b3 * f6 * * b0 b2 b3 ! c\/ c~ c= b3 * f3 b4 c~ * f6 b4 ! c\/ ! c\/ c~ c= b3 cshiftpath * f1 b2 f3 b4 c~ * f6 b4 c/\ c= b3 * f3 * * b1 b2 b3 * f6 * * b1 b2 b3 cF
+ (path p), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((continuous_on (p o (\z. ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z)))))
T c==> cpath f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on * * part co f0 / cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 b1
+ |- (((continuous_on (\z. (((COND ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((continuous_on (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c= ccontinuous_on / cCOND creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b0 cdrop csndcart b0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add c% cdrop f0 cfstcart b0 csndcart b0 * f1 cvector_add c% cdrop f0 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on / cshiftpath c% cdrop f0 cfstcart b0 f1 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) |- ((!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 f3 c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 creal_le creal_mul f0 f2 creal_mul f1 f3
+ (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- (((continuous_on (\z. (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) /\ (((continuous_on (lift o (\z. ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))))))
T c==> cpath f0 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f0 f2 c/\ ccontinuous_on / * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 b1 c/\ ccontinuous_on * * part co part clift / creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 creal_of_num cNUMERAL cBIT1 c_0 c= * f0 cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0
+ ((\x''. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x)))))))))) x'') |- ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x)))))))))
T c==> * / c/\ ! c\/ ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 * f2 b1 ! c\/ c~ * f3 b1 c/\ ! c\/ c/\ c= b2 cshiftpath * f4 b1 f0 * * f5 b1 b2 * f1 * * f5 b1 b2 ! c\/ c~ c= b2 * f0 b3 c~ * f1 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f4 b1 f0 b3 c~ * f1 b3 c/\ c= b2 * f0 * * b0 b1 b2 * f1 * * b0 b1 b2 f6 c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1
+ ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((((((% (drop t)) x) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish p) = (pathstart p))) ==> ((path_image ((shiftpath ((% (drop t)) x)) p)) = (path_image p))) = ((path_image ((shiftpath ((% (drop t)) x)) p)) = (path_image p)))
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c/\ cIN c% cdrop f1 f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish f0 cpathstart f0 c= * part cpath_image * * part cshiftpath c% cdrop f1 f2 f0 * part cpath_image f0 c= * part cpath_image * * part cshiftpath c% cdrop f1 f2 f0 * part cpath_image f0
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))), (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F))))))
T c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> cpath f1 c==> c= cpathfinish f1 cpathstart f1 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f1 f2 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_add (a $ i)) ((lambdai. ((real_sub (b $ i)) (c $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_add (a $ i)) (b $ i))) $ i)) (c $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ f1 b0 c$ clambda / creal_sub c$ f2 b1 c$ f3 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_add c$ f1 b1 c$ f2 b1 b0 c$ f3 b0 f0
+ ((pathfinish p) = (pathstart p)) |- ((~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> (~ (!x. (((vector_sub x) x) = (vec (NUMERAL _0))))))))))))))
T c==> c= cpathfinish f0 cpathstart f0 c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c~ ! c= cvector_sub b0 b0 cvec cNUMERAL c_0
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) f)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 f0
+ |- ((\y. ((sndcart ((pastecart x) y)) = y)) y)
T * / c= csndcart cpastecart f0 b0 b0 f1
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (T = (!x. (!y. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) (sndcart ((pastecart x) y))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cT ! ! c==> c/\ c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart cpastecart b0 b1 cdrop csndcart cpastecart b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% cdrop f0 cfstcart cpastecart b0 b1 csndcart cpastecart b0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- ((\q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= * f3 cvec cNUMERAL cBIT1 c_0 * f3 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f3 cvec cNUMERAL cBIT1 c_0 * f3 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> f2 b0 f4
+ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- (~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) |- ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) /\ F)
T c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 c/\ c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF
+ |- (((continuous_on (\x. ((% (drop t)) (fstcart x)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T)
T c= ccontinuous_on / c% cdrop f0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
- ((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) |- ((((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u)))))
T c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 c==> c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2
+ (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) |- ((((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I vec) ((I NUMERAL) _0)))) /\ (((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))))
T c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c/\ c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI part cvec cI part cNUMERAL c_0 c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
+ |- ((\f. (!s. ((linear f) ==> ((continuous_on f) s)))) f)
T * / ! c==> clinear b0 ccontinuous_on b0 b1 f0
+ (~ (u (((shiftpath (f x)) p) y))), ((s x) /\ (t y)) |- (((\x. (?x'. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x x) x))) /\ (t ((x x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x' x) x))) /\ (t ((x' x) x))))))))))) x') ==> F)
T c==> c~ * f0 cshiftpath * f1 f2 f3 f4 c==> c/\ * f5 f2 * f6 f4 c==> * / c? / c/\ ! c\/ ! c\/ c~ c= b2 * f3 b3 c~ * f6 b3 * f0 b2 ! c\/ c~ * f5 b2 c/\ ! c\/ c/\ c= b3 cshiftpath * f1 b2 f3 * * b0 b2 b3 * f6 * * b0 b2 b3 ! c\/ c~ c= b3 * f3 b4 c~ * f6 b4 ! c\/ ! c\/ c~ c= b3 cshiftpath * f1 b2 f3 b4 c~ * f6 b4 c/\ c= b3 * f3 * * b1 b2 b3 * f6 * * b1 b2 b3 f7 cF
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) /\ (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (p = p)) ==> (p = p))
T c==> c~ c= f0 f0 c= f0 f0
- (path p) |- ((path p) = T)
T c==> cpath f0 c= cpath f0 cT
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))), ((s x) /\ (t y)) |- (u (((shiftpath (f x)) p) y))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c==> c/\ * f3 f7 * f1 f8 * f2 cshiftpath * f4 f7 f0 f8
+ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))), ((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) |- (((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((continuous_on (\z. (p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) /\ (((continuous_on (\z. (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) /\ (((continuous_on (lift o (\z. ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))))))) ==> ((continuous_on (\z. (((COND ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c==> c/\ ccontinuous_on / * f0 cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 c/\ ccontinuous_on / * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 b1 c/\ ccontinuous_on * * part co part clift / creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 creal_of_num cNUMERAL cBIT1 c_0 c= * f0 cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 ccontinuous_on / cCOND creal_le creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- ((\x. (((~ (_734225 = ((I p) x))) \/ (~ (t x))) \/ (u _734225))) _734226)
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 * / c\/ c\/ c~ c= f7 cI f0 b0 c~ * f1 b0 * f2 f7 f8
+ |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))))) f)
T * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_add * b0 b3 * b1 b3 b2 f0
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!x. ((lift (drop x)) = x)) ==> ((\x. ((lift (drop x)) = x)) x)) = ((\x. ((lift (drop x)) = x)) x))
T c= c==> ! c= clift cdrop b0 b0 * / c= clift cdrop b0 b0 f0 * / c= clift cdrop b0 b0 f0
+ ((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) |- ((!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y)))) = T)
T c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 c= ! c==> c/\ * f3 f5 * f1 b0 * f2 cshiftpath * f4 f5 f0 b0 cT
+ |- ((\y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))) y)
T * / c= cIN cpastecart f0 b0 * * part cPCROSS f1 f2 c/\ cIN f0 f1 cIN b0 f2 f3
+ |- (((T ==> ((p x) = (p x))) ==> (((~ T) ==> ((p ((vector_sub x) (vec (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) (p x)) (p ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = (((COND T) (p x)) e')))) = (((~ T) ==> ((p ((vector_sub x) (vec (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) (p x)) (p ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = (((COND T) (p x)) e'))))
T c= c==> c==> cT c= * f0 f1 * f0 f1 c==> c==> c~ cT c= * f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 f2 c= cCOND creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 * f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND cT * f0 f1 f2 c==> c==> c~ cT c= * f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 f2 c= cCOND creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 * f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND cT * f0 f1 f2
+ |- (((!y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))) ==> ((\y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))) y)) = ((\y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))) y))
T c= c==> ! c= clift creal_add f0 b0 cvector_add clift f0 clift b0 * / c= clift creal_add f0 b0 cvector_add clift f0 clift b0 f1 * / c= clift creal_add f0 b0 cvector_add clift f0 clift b0 f1
- |- ((!t. (!s. (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y)))))))) = T)
T c= ! ! c==> c/\ ! c==> c? / c/\ c= b2 * f0 b3 * b0 b3 * f1 b2 ! c==> * b1 b2 ! c= c? / c/\ c= b3 cshiftpath * f2 b2 f0 b4 * b0 b4 c? / c/\ c= b3 * f0 b4 * b0 b4 ! ! c==> c/\ * b1 b2 * b0 b3 * f1 cshiftpath * f2 b2 f0 b3 cT
+ |- ((\f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) f)
T * / ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 f0
+ |- ((!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) = (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))))))
T c= ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f0 cdrop cfstcart b0 cdrop csndcart b0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_add c% cdrop f0 cfstcart b0 csndcart b0 * f1 cvector_add c% cdrop f0 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))), ((s x) /\ (t y)) |- (((((shiftpath (f x)) p) y) = ((I p) ((x'' x) (((shiftpath (f x)) p) y)))) /\ (t ((x'' x) (((shiftpath (f x)) p) y))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c==> c/\ * f3 f7 * f1 f8 c/\ c= cshiftpath * f4 f7 f0 f8 cI f0 * * f6 f7 cshiftpath * f4 f7 f0 f8 * f1 * * f6 f7 cshiftpath * f4 f7 f0 f8
- |- ((!x'. ((?x. ((x' = (((shiftpath (f x)) p) x)) /\ (t x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) = ((!x. (?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x)))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x))))))
T c= ! c\/ c? / c/\ c= b0 cshiftpath * f0 f1 f2 b1 * f3 b1 ! c\/ c~ c= f4 * f2 b1 c~ * f3 b1 c\/ ! c? / c/\ c= b0 cshiftpath * f0 f1 f2 b1 * f3 b1 ! c\/ c~ c= f4 * f2 b0 c~ * f3 b0
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((real_le ((real_mul (drop t)) (drop x))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_mul cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((% x) (vec (NUMERAL (BIT1 _0)))) = (lift x))) ==> ((\x. (((% x) (vec (NUMERAL (BIT1 _0)))) = (lift x))) x)) = ((\x. (((% x) (vec (NUMERAL (BIT1 _0)))) = (lift x))) x))
T c= c==> ! c= c% b0 cvec cNUMERAL cBIT1 c_0 clift b0 * / c= c% b0 cvec cNUMERAL cBIT1 c_0 clift b0 f0 * / c= c% b0 cvec cNUMERAL cBIT1 c_0 clift b0 f0
+ (((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) |- ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) /\ (((continuous_on (\x. ((% (c x)) (f x)))) s) = T))
T c==> c/\ ccontinuous_on * * part co part clift f0 f1 ccontinuous_on f2 f1 c/\ c/\ ccontinuous_on * * part co part clift f0 f1 ccontinuous_on f2 f1 c= ccontinuous_on / c% * f0 b0 * f2 b0 f1 cT
+ |- (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> q')))
T c==> c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f3 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 f3
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0
- (!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))), (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) |- ((real_le ((real_mul w) y)) ((real_mul x) z))
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 f3 creal_le creal_mul f0 f2 creal_mul f1 f3
+ |- ((?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (((shiftpath t) p) x)))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish (h o (pastecart t))) = (pathstart (h o (pastecart t))))))))))) = (((homotopic_loops s) p) ((shiftpath t) p)))
T c= c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f1 b1 c/\ ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b0 cpastecart cvec cNUMERAL cBIT1 c_0 b1 cshiftpath f2 f1 b1 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part co b0 * part cpastecart b1 cpathstart * * part co b0 * part cpastecart b1 chomotopic_loops f0 f1 * * part cshiftpath f2 f1
- |- ((((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) = (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y))))) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> q')))) = (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> q'))))
T c= c==> c= c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c==> c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f3 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 f3 c==> c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f3 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 f3
- |- (((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) = (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y)))))))
T c= c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1
- |- ((!x'. ((~ (x = (p x'))) \/ (~ (t x)))) = ((!x. (~ (x = (p x)))) \/ (~ (t x))))
T c= ! c\/ c~ c= f0 * f1 b0 c~ * f2 f3 c\/ ! c~ c= f0 * f1 b0 c~ * f2 f3
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- ((~ T) ==> ((p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = (p ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))
T c==> c~ cT c= * f0 cvector_add cvec cNUMERAL c_0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0
- (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) |- ((~ (((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I vec) ((I NUMERAL) _0))))) ==> (((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I vec) ((I NUMERAL) _0)))))
T c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c~ c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI part cvec cI part cNUMERAL c_0 c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI part cvec cI part cNUMERAL c_0
+ (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) |- (((!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))) ==> ((\a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))) a)) = ((\a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))) a))
T c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 c= c==> ! c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f1 creal_le * f2 b2 b0 b2 c/\ ccontinuous_on f3 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f1 creal_le b0 * f2 b2 b2 c/\ ccontinuous_on * * part co part clift f2 f1 ! c==> c/\ cIN b1 f1 c= * f2 b1 b0 c= * f0 b1 * f3 b1 ccontinuous_on / cCOND creal_le * f2 b1 b0 * f0 b1 * f3 b1 f1 * / c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f1 creal_le * f2 b2 b0 b2 c/\ ccontinuous_on f3 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f1 creal_le b0 * f2 b2 b2 c/\ ccontinuous_on * * part co part clift f2 f1 ! c==> c/\ cIN b1 f1 c= * f2 b1 b0 c= * f0 b1 * f3 b1 ccontinuous_on / cCOND creal_le * f2 b1 b0 * f0 b1 * f3 b1 f1 f4 * / c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f1 creal_le * f2 b2 b0 b2 c/\ ccontinuous_on f3 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f1 creal_le b0 * f2 b2 b2 c/\ ccontinuous_on * * part co part clift f2 f1 ! c==> c/\ cIN b1 f1 c= * f2 b1 b0 c= * f0 b1 * f3 b1 ccontinuous_on / cCOND creal_le * f2 b1 b0 * f0 b1 * f3 b1 f1 f4
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((\p'. (!q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> b0 b1 f3
+ |- (((continuous_on (p o (\z. ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) = ((continuous_on (\z. (p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))))
T c= ccontinuous_on * * part co f0 / cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 ccontinuous_on / * f0 cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1
+ ((\x. (f (g x))) = (f o g)) |- ((f o g) = (\x. (f (g x))))
T c==> c= / * f0 * f1 b0 * * part co f0 f1 c= * * part co f0 f1 / * f0 * f1 b0
+ |- (((!f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) ==> ((\f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) f)) = ((\f. (!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))))) f))
T c= c==> ! ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 * / ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 f0 * / ! ! c==> ccontinuous_on b0 b2 ccontinuous_on / c% b1 * b0 b3 b2 f0
+ |- ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f)
T * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1
+ (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) |- (((!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s)))) ==> ((\s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s)))) s)) = ((\s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s)))) s))
T c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 c= c==> ! ! c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 creal_le * f1 b3 b1 b3 c/\ ccontinuous_on f2 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 creal_le b1 * f1 b3 b3 c/\ ccontinuous_on * * part co part clift f1 b0 ! c==> c/\ cIN b2 b0 c= * f1 b2 b1 c= * f0 b2 * f2 b2 ccontinuous_on / cCOND creal_le * f1 b2 b1 * f0 b2 * f2 b2 b0 * / ! c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 creal_le * f1 b3 b1 b3 c/\ ccontinuous_on f2 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 creal_le b1 * f1 b3 b3 c/\ ccontinuous_on * * part co part clift f1 b0 ! c==> c/\ cIN b2 b0 c= * f1 b2 b1 c= * f0 b2 * f2 b2 ccontinuous_on / cCOND creal_le * f1 b2 b1 * f0 b2 * f2 b2 b0 f3 * / ! c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 creal_le * f1 b3 b1 b3 c/\ ccontinuous_on f2 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 creal_le b1 * f1 b3 b3 c/\ ccontinuous_on * * part co part clift f1 b0 ! c==> c/\ cIN b2 b0 c= * f1 b2 b1 c= * f0 b2 * f2 b2 ccontinuous_on / cCOND creal_le * f1 b2 b1 * f0 b2 * f2 b2 b0 f3
+ |- ((((continuous_on (\z. ((% (drop t)) (fstcart z)))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) /\ ((continuous_on (\z. ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z)))))) ==> (((continuous_on (\z. ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) = T))
T c==> c/\ ccontinuous_on / c% cdrop f0 cfstcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 ccontinuous_on / cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 c= ccontinuous_on / cvector_add c% cdrop f0 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 cT
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) (sndcart ((pastecart x) y))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) ==> T))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c/\ c/\ cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart cpastecart f1 f2 cdrop csndcart cpastecart f1 f2 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% cdrop f0 cfstcart cpastecart f1 f2 csndcart cpastecart f1 f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f2 creal_le cdrop f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f0 cdrop f1 cdrop f2 creal_of_num cNUMERAL cBIT1 c_0 cT
+ |- ((!x. (?x'. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x x) x))) /\ (t ((x x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p (x' x))) /\ (t (x' x))))))))) = (?x'. (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x x) x))) /\ (t ((x x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x' x) x))) /\ (t ((x' x) x))))))))))
T c= ! c? / c\/ c~ * f0 b0 c/\ ! c\/ c/\ c= b2 cshiftpath * f1 b0 f2 * * f3 b0 b2 * f4 * * f3 b0 b2 ! c\/ c~ c= b2 * f2 b3 c~ * f4 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f1 b0 f2 b3 c~ * f4 b3 c/\ c= b2 * f2 * b1 b2 * f4 * b1 b2 c? / ! c\/ c~ * f0 b1 c/\ ! c\/ c/\ c= b2 cshiftpath * f1 b1 f2 * * f3 b1 b2 * f4 * * f3 b1 b2 ! c\/ c~ c= b2 * f2 b3 c~ * f4 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f1 b1 f2 b3 c~ * f4 b3 c/\ c= b2 * f2 * * b0 b1 b2 * f4 * * b0 b1 b2
- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!x. ((drop (lift x)) = x)) ==> ((\x. ((drop (lift x)) = x)) x)) = ((\x. ((drop (lift x)) = x)) x))
T c= c==> ! c= cdrop clift b0 b0 * / c= cdrop clift b0 b0 f0 * / c= cdrop clift b0 b0 f0
+ ((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))), ((s x) /\ (t y)) |- ((~ (u (((shiftpath (f x)) p) y))) ==> F)
T c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 c==> c/\ * f3 f5 * f1 f6 c==> c~ * f2 cshiftpath * f4 f5 f0 f6 cF
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) (sndcart ((pastecart x) y))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c= cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 csndcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))), (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F)))
T c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> cpath f1 c==> c= cpathfinish f1 cpathstart f1 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f1 f2 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF
+ (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) |- (!a. (!f. (!g. (!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))
T c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 ! ! ! ! c==> c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b4 c/\ cIN b5 b3 creal_le * f0 b5 b0 b5 c/\ ccontinuous_on b2 * part cGSPEC / c? / cSETSPEC b4 c/\ cIN b5 b3 creal_le b0 * f0 b5 b5 c/\ ccontinuous_on * * part co part clift f0 b3 ! c==> c/\ cIN b4 b3 c= * f0 b4 b0 c= * b1 b4 * b2 b4 ccontinuous_on / cCOND creal_le * f0 b4 b0 * b1 b4 * b2 b4 b3
+ ((real_le (real_of_num (NUMERAL _0))) (drop x)), ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le ((real_mul (drop t)) (drop x))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> creal_le creal_of_num cNUMERAL c_0 cdrop f0 c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ creal_le creal_mul cdrop f2 cdrop f0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- ((((~ (s _734227)) \/ ((_734228 = (((shiftpath (f _734227)) p) ((x' _734227) _734228))) \/ ((~ (_734228 = ((I p) _734229))) \/ (~ (t _734229))))) /\ ((~ (s _734227)) \/ ((t ((x' _734227) _734228)) \/ ((~ (_734228 = ((I p) _734229))) \/ (~ (t _734229)))))) /\ (((~ (s _734227)) \/ (((~ (_734228 = (((shiftpath (f _734227)) p) _734229))) \/ (~ (t _734229))) \/ (_734228 = ((I p) ((x'' _734227) _734228))))) /\ ((~ (s _734227)) \/ (((~ (_734228 = (((shiftpath (f _734227)) p) _734229))) \/ (~ (t _734229))) \/ (t ((x'' _734227) _734228))))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c/\ c/\ c\/ c~ * f3 f7 c\/ c= f8 cshiftpath * f4 f7 f0 * * f5 f7 f8 c\/ c~ c= f8 cI f0 f9 c~ * f1 f9 c\/ c~ * f3 f7 c\/ * f1 * * f5 f7 f8 c\/ c~ c= f8 cI f0 f9 c~ * f1 f9 c/\ c\/ c~ * f3 f7 c\/ c\/ c~ c= f8 cshiftpath * f4 f7 f0 f9 c~ * f1 f9 c= f8 cI f0 * * f6 f7 f8 c\/ c~ * f3 f7 c\/ c\/ c~ c= f8 cshiftpath * f4 f7 f0 f9 c~ * f1 f9 * f1 * * f6 f7 f8
- (_734396 = _734398) |- ((_734395 = _734397) ==> (((I _734395) _734396) = ((I _734397) _734398)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
+ |- (((?x. (P x)) \/ Q) = (?x. ((P x) \/ Q)))
T c= c\/ c? / * f0 b0 f1 c? / c\/ * f0 b0 f1
- ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) |- ((((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF
- |- ((linear (\x. t)) = (linear (lift o (\z. (drop t)))))
T c= clinear / f0 clinear * * part co part clift / cdrop f0
+ (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) |- (!f. (!g. (!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s)))))
T c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b2 creal_le * f0 b4 f1 b4 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b2 creal_le f1 * f0 b4 b4 c/\ ccontinuous_on * * part co part clift f0 b2 ! c==> c/\ cIN b3 b2 c= * f0 b3 f1 c= * b0 b3 * b1 b3 ccontinuous_on / cCOND creal_le * f0 b3 f1 * b0 b3 * b1 b3 b2
+ |- (((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (?x'. (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x x) x))) /\ (t ((x x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x' x) x))) /\ (t ((x' x) x)))))))))) = (?x'. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x x) x))) /\ (t ((x x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x' x) x))) /\ (t ((x' x) x)))))))))))
T c= c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 c? / ! c\/ c~ * f3 b1 c/\ ! c\/ c/\ c= b2 cshiftpath * f4 b1 f0 * * f5 b1 b2 * f1 * * f5 b1 b2 ! c\/ c~ c= b2 * f0 b3 c~ * f1 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f4 b1 f0 b3 c~ * f1 b3 c/\ c= b2 * f0 * * b0 b1 b2 * f1 * * b0 b1 b2 c? / c/\ ! c\/ ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 * f2 b1 ! c\/ c~ * f3 b1 c/\ ! c\/ c/\ c= b2 cshiftpath * f4 b1 f0 * * f5 b1 b2 * f1 * * f5 b1 b2 ! c\/ c~ c= b2 * f0 b3 c~ * f1 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f4 b1 f0 b3 c~ * f1 b3 c/\ c= b2 * f0 * * b0 b1 b2 * f1 * * b0 b1 b2
+ |- ((linear sndcart) = T)
T c= clinear part csndcart cT
+ (((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (lift (drop t))) p) x) = (((shiftpath t) p) x)))) /\ (!t'. ((t' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish ((shiftpath ((% (drop t)) t')) p)) = (pathstart ((shiftpath ((% (drop t)) t')) p))))))
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath clift cdrop f1 f0 b0 cshiftpath f1 f0 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath c% cdrop f1 b0 f0 cpathstart * * part cshiftpath c% cdrop f1 b0 f0
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_le (real_of_num (NUMERAL _0))) (drop y)) = T)
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_of_num cNUMERAL c_0 cdrop f1 cT
+ |- (((!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) ==> ((\a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) a)) = ((\a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) a))
T c= c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 * / ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 f0 * / ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 f0
- |- ((_734396 = _734398) ==> ((~ (_734395 = _734397)) \/ (((I _734395) _734396) = ((I _734397) _734398))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))), ((s x) /\ (t y)) |- ((t ((x'' x) (((shiftpath (f x)) p) y))) = (((((shiftpath (f x)) p) y) = ((I p) ((x'' x) (((shiftpath (f x)) p) y)))) /\ (t ((x'' x) (((shiftpath (f x)) p) y)))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c==> c/\ * f3 f7 * f1 f8 c= * f1 * * f6 f7 cshiftpath * f4 f7 f0 f8 c/\ c= cshiftpath * f4 f7 f0 f8 cI f0 * * f6 f7 cshiftpath * f4 f7 f0 f8 * f1 * * f6 f7 cshiftpath * f4 f7 f0 f8
- ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F), (((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) |- ((((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) /\ ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c/\ c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF
- |- (((!u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)))) ==> ((\u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)))) u)) = ((\u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)))) u))
T c= c==> ! ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b3 * f0 b4 * b1 b4 * b0 b3 ! c==> * b2 b3 ! c= c? / c/\ c= b4 cshiftpath * f1 b3 f0 b5 * b1 b5 c? / c/\ c= b4 * f0 b5 * b1 b5 ! ! c==> c/\ * b2 b3 * b1 b4 * b0 cshiftpath * f1 b3 f0 b4 cF * / ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b3 * f0 b4 * b1 b4 * b0 b3 ! c==> * b2 b3 ! c= c? / c/\ c= b4 cshiftpath * f1 b3 f0 b5 * b1 b5 c? / c/\ c= b4 * f0 b5 * b1 b5 ! ! c==> c/\ * b2 b3 * b1 b4 * b0 cshiftpath * f1 b3 f0 b4 cF f2 * / ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b3 * f0 b4 * b1 b4 * b0 b3 ! c==> * b2 b3 ! c= c? / c/\ c= b4 cshiftpath * f1 b3 f0 b5 * b1 b5 c? / c/\ c= b4 * f0 b5 * b1 b5 ! ! c==> c/\ * b2 b3 * b1 b4 * b0 cshiftpath * f1 b3 f0 b4 cF f2
- ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((p _734257) = (p _734257)))
T c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 f0 * f1 f0
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ |- (((!y. (!x. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))))) ==> ((\y. (!x. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))))) y)) = ((\y. (!x. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))))) y))
T c= c==> ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 b2 creal_le creal_mul f0 b0 creal_mul b1 b2 * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 b2 creal_le creal_mul f0 b0 creal_mul b1 b2 f1 * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 b2 creal_le creal_mul f0 b0 creal_mul b1 b2 f1
+ (!g. ((pathstart g) = (g (vec (NUMERAL _0))))) |- (((I p) ((I vec) ((I NUMERAL) _0))) = ((I pathstart) p))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c= cI f0 cI part cvec cI part cNUMERAL c_0 cI part cpathstart f0
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((((real_le (real_of_num (NUMERAL _0))) ((real_mul (drop t)) (drop x))) /\ ((real_le (real_of_num (NUMERAL _0))) (drop y))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) (drop y))) = T)) = (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) (drop y))) = T))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul cdrop f2 cdrop f0 creal_le creal_of_num cNUMERAL c_0 cdrop f1 c= creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 cT c= creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 cT
+ (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) |- (((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s)) = T)
T c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 c= c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 creal_le * f2 b1 f3 b1 c/\ ccontinuous_on f4 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 creal_le f3 * f2 b1 b1 c/\ ccontinuous_on * * part co part clift f2 f1 ! c==> c/\ cIN b0 f1 c= * f2 b0 f3 c= * f0 b0 * f4 b0 ccontinuous_on / cCOND creal_le * f2 b0 f3 * f0 b0 * f4 b0 f1 cT
+ (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) |- (((((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0)))) = T) ==> ((T ==> ((p x) = t')) ==> (((~ T) ==> ((p ((vector_sub x) (vec (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) (p x)) (p ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = (((COND T) t') e'))))) = ((T ==> ((p x) = t')) ==> (((~ T) ==> ((p ((vector_sub x) (vec (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) (p x)) (p ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = (((COND T) t') e')))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 cT c==> c==> cT c= * f1 f0 f2 c==> c==> c~ cT c= * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND cT f2 f3 c==> c==> cT c= * f1 f0 f2 c==> c==> c~ cT c= * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND cT f2 f3
+ (path p), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((((continuous_on (lift o (\z. ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))))) = (((continuous_on (\z. (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) /\ (((continuous_on (lift o (\z. ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))))))))
T c==> cpath f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c/\ ccontinuous_on * * part co part clift / creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 creal_of_num cNUMERAL cBIT1 c_0 c= * f0 cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 c/\ ccontinuous_on / * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 b1 c/\ ccontinuous_on * * part co part clift / creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 creal_of_num cNUMERAL cBIT1 c_0 c= * f0 cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0
+ |- (((!x. (!y. ((fstcart ((pastecart x) y)) = x))) ==> ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x)) = ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x))
T c= c==> ! ! c= cfstcart cpastecart b0 b1 b0 * / ! c= cfstcart cpastecart b0 b1 b0 f0 * / ! c= cfstcart cpastecart b0 b1 b0 f0
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (!x. (!x. (((~ (x = ((I p) x))) \/ (~ (t x))) \/ (u x))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 ! ! c\/ c\/ c~ c= b0 cI f0 b1 c~ * f1 b1 * f2 b0
+ |- (((!q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) = (p' ==> q'))))) ==> ((\q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) = (p' ==> q'))))) q')) = ((\q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= * f3 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f3 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f3 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f3 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 c==> f2 b0 * / c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= * f3 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f3 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f3 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f3 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 c==> f2 b0 f4 * / c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= * f3 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f3 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f3 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f3 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 c==> f2 b0 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((s x) /\ (t y)) |- ((~ (s x)) ==> (s x))
T c==> c/\ * f0 f1 * f2 f3 c==> c~ * f0 f1 * f0 f1
+ |- ((\s. (!p. (!q. ((((homotopic_loops s) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x)))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish (h o (pastecart t))) = (pathstart (h o (pastecart t))))))))))))))) s)
T * / ! ! c= chomotopic_loops b0 b1 b2 c? / c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ ! c==> cIN b4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b3 cpastecart cvec cNUMERAL c_0 b4 * b1 b4 c/\ ! c==> cIN b4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b3 cpastecart cvec cNUMERAL cBIT1 c_0 b4 * b2 b4 ! c==> cIN b4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part co b3 * part cpastecart b4 cpathstart * * part co b3 * part cpastecart b4 f0
+ |- (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0
+ |- ((\t. ((\x. (t x)) = t)) t)
T * / c= / * b0 b1 b0 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) /\ ((continuous_on (g o f)) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c/\ c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- (~ (((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) |- ((~ (((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) /\ (((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))))
T c==> c~ c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c/\ c~ c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
+ |- (((continuous_on (p o (\z. ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) = ((continuous_on (\z. (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))))
T c= ccontinuous_on * * part co f0 / cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 b1 ccontinuous_on / * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 b1
- |- ((_734383 = _734385) ==> ((~ (_734384 = _734386)) \/ (((I _734383) _734384) = ((I _734385) _734386))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
+ (path p), ((path p) /\ (((path_image p) SUBSET s) /\ (((pathfinish p) = (pathstart p)) /\ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) |- (((homotopic_loops s) p) ((shiftpath t) p))
T c==> cpath f0 c==> c/\ cpath f0 c/\ cSUBSET * part cpath_image f0 f1 c/\ c= cpathfinish f0 cpathstart f0 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chomotopic_loops f1 f0 * * part cshiftpath f2 f0
+ ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> F), ((((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ ((real_le (drop _734256)) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_le (drop _734256)) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((p ((vector_add (vec (NUMERAL _0))) _734256)) = (p _734256)))
T c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_add cvec cNUMERAL c_0 f0 * f1 f0
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (!x. (!x. ((((~ (s _734227)) \/ ((x = (((shiftpath (f _734227)) p) ((x' _734227) x))) \/ ((~ (x = ((I p) x))) \/ (~ (t x))))) /\ ((~ (s _734227)) \/ ((t ((x' _734227) x)) \/ ((~ (x = ((I p) x))) \/ (~ (t x)))))) /\ (((~ (s _734227)) \/ (((~ (x = (((shiftpath (f _734227)) p) x))) \/ (~ (t x))) \/ (x = ((I p) ((x'' _734227) x))))) /\ ((~ (s _734227)) \/ (((~ (x = (((shiftpath (f _734227)) p) x))) \/ (~ (t x))) \/ (t ((x'' _734227) x))))))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 ! ! c/\ c/\ c\/ c~ * f3 f7 c\/ c= b0 cshiftpath * f4 f7 f0 * * f5 f7 b0 c\/ c~ c= b0 cI f0 b1 c~ * f1 b1 c\/ c~ * f3 f7 c\/ * f1 * * f5 f7 b0 c\/ c~ c= b0 cI f0 b1 c~ * f1 b1 c/\ c\/ c~ * f3 f7 c\/ c\/ c~ c= b0 cshiftpath * f4 f7 f0 b1 c~ * f1 b1 c= b0 cI f0 * * f6 f7 b0 c\/ c~ * f3 f7 c\/ c\/ c~ c= b0 cshiftpath * f4 f7 f0 b1 c~ * f1 b1 * f1 * * f6 f7 b0
- |- ((?x. (P x)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ (path p), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((continuous_on p) ((IMAGE (\z. ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))))
T c==> cpath f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 * * part cIMAGE / cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1
+ |- (((continuous_on (\x. ((% (drop t)) (fstcart x)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((continuous_on sndcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c/\ ccontinuous_on / c% cdrop f0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on part csndcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- (((!y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))) ==> ((\y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))) y)) = ((\y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))) y))
T c= c==> ! c= cdrop cvector_add f0 b0 creal_add cdrop f0 cdrop b0 * / c= cdrop cvector_add f0 b0 creal_add cdrop f0 cdrop b0 f1 * / c= cdrop cvector_add f0 b0 creal_add cdrop f0 cdrop b0 f1
+ (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), ((pathfinish p) = (pathstart p)) |- (((!x. (((\z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) x) ==> F)) ==> ((?z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) ==> F)) = ((?z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) ==> F))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c= cpathfinish f0 cpathstart f0 c= c==> ! c==> * / c/\ c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart b1 csndcart b1 cvec cNUMERAL cBIT1 c_0 c~ c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 b0 cF c==> c? / c/\ c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c~ c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 cF c==> c? / c/\ c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c~ c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 cF
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (((!x. (!x. (!x. ((((~ (s x)) \/ ((x = (((shiftpath (f x)) p) ((x' x) x))) \/ ((~ (x = ((I p) x))) \/ (~ (t x))))) /\ ((~ (s x)) \/ ((t ((x' x) x)) \/ ((~ (x = ((I p) x))) \/ (~ (t x)))))) /\ (((~ (s x)) \/ (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ (x = ((I p) ((x'' x) x))))) /\ ((~ (s x)) \/ (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ (t ((x'' x) x))))))))) ==> ((\x. (!x. (!x. ((((~ (s x)) \/ ((x = (((shiftpath (f x)) p) ((x' x) x))) \/ ((~ (x = ((I p) x))) \/ (~ (t x))))) /\ ((~ (s x)) \/ ((t ((x' x) x)) \/ ((~ (x = ((I p) x))) \/ (~ (t x)))))) /\ (((~ (s x)) \/ (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ (x = ((I p) ((x'' x) x))))) /\ ((~ (s x)) \/ (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ (t ((x'' x) x))))))))) _734227)) = ((\x. (!x. (!x. ((((~ (s x)) \/ ((x = (((shiftpath (f x)) p) ((x' x) x))) \/ ((~ (x = ((I p) x))) \/ (~ (t x))))) /\ ((~ (s x)) \/ ((t ((x' x) x)) \/ ((~ (x = ((I p) x))) \/ (~ (t x)))))) /\ (((~ (s x)) \/ (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ (x = ((I p) ((x'' x) x))))) /\ ((~ (s x)) \/ (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ (t ((x'' x) x))))))))) _734227))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c= c==> ! ! ! c/\ c/\ c\/ c~ * f3 b0 c\/ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 c\/ c~ c= b1 cI f0 b2 c~ * f1 b2 c\/ c~ * f3 b0 c\/ * f1 * * f5 b0 b1 c\/ c~ c= b1 cI f0 b2 c~ * f1 b2 c/\ c\/ c~ * f3 b0 c\/ c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c= b1 cI f0 * * f6 b0 b1 c\/ c~ * f3 b0 c\/ c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 * f1 * * f6 b0 b1 * / ! ! c/\ c/\ c\/ c~ * f3 b0 c\/ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 c\/ c~ c= b1 cI f0 b2 c~ * f1 b2 c\/ c~ * f3 b0 c\/ * f1 * * f5 b0 b1 c\/ c~ c= b1 cI f0 b2 c~ * f1 b2 c/\ c\/ c~ * f3 b0 c\/ c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c= b1 cI f0 * * f6 b0 b1 c\/ c~ * f3 b0 c\/ c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 * f1 * * f6 b0 b1 f7 * / ! ! c/\ c/\ c\/ c~ * f3 b0 c\/ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 c\/ c~ c= b1 cI f0 b2 c~ * f1 b2 c\/ c~ * f3 b0 c\/ * f1 * * f5 b0 b1 c\/ c~ c= b1 cI f0 b2 c~ * f1 b2 c/\ c\/ c~ * f3 b0 c\/ c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c= b1 cI f0 * * f6 b0 b1 c\/ c~ * f3 b0 c\/ c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 * f1 * * f6 b0 b1 f7
+ ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> (~ (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))))))))))))))
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c~ ! c= cvector_sub b0 b0 cvec cNUMERAL c_0
+ |- (((vector_add a) ((vector_sub b) c)) = ((vector_sub ((vector_add a) b)) c))
T c= cvector_add f0 cvector_sub f1 f2 cvector_sub cvector_add f0 f1 f2
- (~ (((I pathfinish) p) = ((I pathstart) p))), ((pathfinish p) = (pathstart p)) |- ((~ (((I pathfinish) p) = ((I pathstart) p))) /\ (((I pathfinish) p) = ((I pathstart) p)))
T c==> c~ c= cI part cpathfinish f0 cI part cpathstart f0 c==> c= cpathfinish f0 cpathstart f0 c/\ c~ c= cI part cpathfinish f0 cI part cpathstart f0 c= cI part cpathfinish f0 cI part cpathstart f0
+ |- ((!x. (!y. ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (!x. (!y. ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= ! ! c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop b0 creal_le cdrop b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop b1 creal_le cdrop b1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop b0 cdrop b1 creal_le creal_add creal_mul cdrop f0 cdrop b0 creal_sub cdrop b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop b0 creal_le cdrop b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop b1 creal_le cdrop b1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop b0 cdrop b1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f0 cdrop b0 creal_sub cdrop b1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f0 cdrop b0 creal_sub cdrop b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ (s _734227)) \/ ((~ (_734228 = (((shiftpath (f _734227)) p) _734229))) \/ ((~ (t _734229)) \/ (_734228 = ((I p) ((x'' _734227) _734228)))))) = ((_734228 = ((I p) ((x'' _734227) _734228))) \/ ((~ (s _734227)) \/ ((~ (_734228 = (((shiftpath (f _734227)) p) _734229))) \/ (~ (t _734229))))))
T c= c\/ c~ * f0 f1 c\/ c~ c= f2 cshiftpath * f3 f1 f4 f5 c\/ c~ * f6 f5 c= f2 cI f4 * * f7 f1 f2 c\/ c= f2 cI f4 * * f7 f1 f2 c\/ c~ * f0 f1 c\/ c~ c= f2 cshiftpath * f3 f1 f4 f5 c~ * f6 f5
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (!y. ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop b0 creal_le cdrop b0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop f1 cdrop b0 creal_le creal_add creal_mul cdrop f0 cdrop f1 creal_sub cdrop b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((COND ((real_le (drop ((vector_add (vec (NUMERAL _0))) _734256))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add (vec (NUMERAL _0))) _734256))) (p ((vector_add (vec (NUMERAL _0))) ((vector_sub _734256) (vec (NUMERAL (BIT1 _0))))))) = (((COND ((real_le (drop _734256)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734256)) (p ((vector_sub _734256) (vec (NUMERAL (BIT1 _0)))))))
T c= cCOND creal_le cdrop cvector_add cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add cvec cNUMERAL c_0 f0 * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0
+ |- (T = (((continuous_on (\x. ((% (drop t)) (fstcart x)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((continuous_on sndcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c= cT c/\ ccontinuous_on / c% cdrop f0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on part csndcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ (~ (u (((shiftpath (f x)) p) y))), ((s x) /\ (t y)) |- (!x'. (((\x. (?x'. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x x) x))) /\ (t ((x x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x' x) x))) /\ (t ((x' x) x))))))))))) x') ==> F))
T c==> c~ * f0 cshiftpath * f1 f2 f3 f4 c==> c/\ * f5 f2 * f6 f4 ! c==> * / c? / c/\ ! c\/ ! c\/ c~ c= b2 * f3 b3 c~ * f6 b3 * f0 b2 ! c\/ c~ * f5 b2 c/\ ! c\/ c/\ c= b3 cshiftpath * f1 b2 f3 * * b1 b2 b3 * f6 * * b1 b2 b3 ! c\/ c~ c= b3 * f3 b4 c~ * f6 b4 ! c\/ ! c\/ c~ c= b3 cshiftpath * f1 b2 f3 b4 c~ * f6 b4 c/\ c= b3 * f3 * * b2 b2 b3 * f6 * * b2 b2 b3 b0 cF
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))) ==> (((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u)))))) = (((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))))
T c= c==> c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2 c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2 c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2
+ |- ((\y. ((fstcart ((pastecart x) y)) = x)) y)
T * / c= cfstcart cpastecart f0 b0 f0 f1
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) /\ ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (u (((shiftpath (f x)) p) y))), ((s x) /\ (t y)) |- ((((\x''. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x)))))))))) x'') ==> F) = T)
T c==> c~ * f0 cshiftpath * f1 f2 f3 f4 c==> c/\ * f5 f2 * f6 f4 c= c==> * / c/\ ! c\/ ! c\/ c~ c= b1 * f3 b2 c~ * f6 b2 * f0 b1 ! c\/ c~ * f5 b1 c/\ ! c\/ c/\ c= b2 cshiftpath * f1 b1 f3 * * f7 b1 b2 * f6 * * f7 b1 b2 ! c\/ c~ c= b2 * f3 b3 c~ * f6 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f1 b1 f3 b3 c~ * f6 b3 c/\ c= b2 * f3 * * b0 b1 b2 * f6 * * b0 b1 b2 f8 cF cT
+ |- (((!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))) ==> ((\g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))) g)) = ((\g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))) g))
T c= c==> ! c==> c/\ c= cpathfinish b0 cpathstart b0 cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f0 b0 cpathstart * * part cshiftpath f0 b0 * / c==> c/\ c= cpathfinish b0 cpathstart b0 cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f0 b0 cpathstart * * part cshiftpath f0 b0 f1 * / c==> c/\ c= cpathfinish b0 cpathstart b0 cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f0 b0 cpathstart * * part cshiftpath f0 b0 f1
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le (real_of_num (NUMERAL _0))) (drop t)) /\ (((real_le (drop t)) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 c/\ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0
+ (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) |- ((\h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))) h)
T c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 * / ! ! c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b1 creal_le * b0 b4 b2 b4 c/\ ccontinuous_on f1 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b1 creal_le b2 * b0 b4 b4 c/\ ccontinuous_on * * part co part clift b0 b1 ! c==> c/\ cIN b3 b1 c= * b0 b3 b2 c= * f0 b3 * f1 b3 ccontinuous_on / cCOND creal_le * b0 b3 b2 * f0 b3 * f1 b3 b1 f2
- |- (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))
T c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y)))) y)
T * / c= cdrop cvector_sub f0 b0 creal_sub cdrop f0 cdrop b0 f1
+ ((\z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) z) |- (((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) ==> F) = F)
T c==> * / c/\ c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c~ c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 f2 c= c==> c/\ c/\ cIN f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart f2 csndcart f2 cvec cNUMERAL cBIT1 c_0 c~ c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 cF cF
- (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))), ((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) |- (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) /\ ((path_image ((shiftpath a) g)) = (path_image g)))
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish f1 cpathstart f1 c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish f1 cpathstart f1 c= * part cpath_image * * part cshiftpath f0 f1 * part cpath_image f1
+ |- ((((continuous_on (lift o (\z. (drop t)))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) /\ ((continuous_on fstcart) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z)))))) ==> (((continuous_on (\z. ((% (drop t)) (fstcart z)))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) = T))
T c==> c/\ ccontinuous_on * * part co part clift / cdrop f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 ccontinuous_on part cfstcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 c= ccontinuous_on / c% cdrop f0 cfstcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 cT
+ |- (((!p'. (!q'. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> (((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> (((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> (((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 b1 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 c==> b0 b1 * / ! c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 b1 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 c==> b0 b1 f2 * / ! c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 b1 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 c==> b0 b1 f2
+ (!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) |- (((!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))) ==> ((\y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))) y)) = ((\y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))) y))
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 c= c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 b1 creal_le creal_mul f0 b0 creal_mul f1 b1 * / ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 b1 creal_le creal_mul f0 b0 creal_mul f1 b1 f2 * / ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 b1 creal_le creal_mul f0 b0 creal_mul f1 b1 f2
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), ((pathfinish p) = (pathstart p)) |- (((\z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) z) ==> F)
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c= cpathfinish f0 cpathstart f0 c==> * / c/\ c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c~ c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 f2 cF
+ |- ((\x. (x = ((real_mul x) (real_of_num (NUMERAL (BIT1 _0)))))) x)
T * / c= b0 creal_mul b0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))), (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- ((~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> cpath f1 c==> c= cpathfinish f1 cpathstart f1 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f1 f2 c/\ c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 cF
+ |- (((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) ==> ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) g)) = ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s)))) g))
T c= c==> ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 f1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_sub * f0 b2 * b0 b2 b1 f1
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
- (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) |- ((~ (((I pathfinish) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) ==> (((I pathfinish) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))
T c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> c~ c= cI part cpathfinish f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI part cpathfinish f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- (_734279 = _734281), (_734280 = _734282) |- (((((I _734279) _734280) = ((I _734281) _734282)) ==> (((I _734281) _734282) \/ (~ ((I _734279) _734280)))) = (((I _734281) _734282) \/ (~ ((I _734279) _734280))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cI f0 f2 cI f1 f3 c\/ cI f1 f3 c~ cI f0 f2 c\/ cI f1 f3 c~ cI f0 f2
+ |- ((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)) = T))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 cT
- (_734250 = _734253), (_734252 = _734255) |- ((_734251 = _734254) ==> ((((shiftpath _734250) _734251) _734252) = (((shiftpath _734253) _734254) _734255)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= cshiftpath f0 f4 f2 cshiftpath f1 f5 f3
+ |- (((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u)))))
T c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- ((~ (s _734227)) \/ (((~ (_734228 = (((shiftpath (f _734227)) p) _734229))) \/ (~ (t _734229))) \/ (t ((x'' _734227) _734228))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c\/ c~ * f3 f7 c\/ c\/ c~ c= f8 cshiftpath * f4 f7 f0 f9 c~ * f1 f9 * f1 * * f6 f7 f8
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) /\ ((continuous_on (g o f)) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ccontinuous_on * * part co f2 f0 f1
+ |- ((\s. ((linear f) ==> ((continuous_on f) s))) s)
T * / c==> clinear f0 ccontinuous_on f0 b0 f1
+ |- ((\p'. (!q'. (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 b0 c==> c==> b0 c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b1 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> b0 b1 f3
+ |- (((real_le ((real_mul (drop t)) (drop x))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (drop t)) (drop x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_le creal_mul cdrop f0 cdrop f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) ==> (!g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2
+ |- ((((!x. ((x IN ((IMAGE p) t)) ==> (x IN u))) /\ (!x. ((x IN s) ==> (!x. ((x IN ((IMAGE ((shiftpath (f x)) p)) t)) = (x IN ((IMAGE p) t))))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))) = (((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))))
T c= c==> c/\ ! c==> cIN b0 * * part cIMAGE f0 f1 cIN b0 f2 ! c==> cIN b0 f3 ! c= cIN b1 * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 cIN b1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2 c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) |- ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((linear sndcart) ==> (((continuous_on sndcart) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) = T)) = (((continuous_on sndcart) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) = T))
T c= c==> clinear part csndcart c= ccontinuous_on part csndcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 cT c= ccontinuous_on part csndcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 cT
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) (drop y))) = T)
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 cT
+ (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((real_le (real_of_num (NUMERAL _0))) (drop x))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL c_0 cdrop f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) |- ((T ==> ((p ((vector_add (vec (NUMERAL _0))) x)) = t')) ==> (((~ T) ==> ((p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add (vec (NUMERAL _0))) x))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add (vec (NUMERAL _0))) x))) (p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) t') e'))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> cT c= * f1 cvector_add cvec cNUMERAL c_0 f0 f2 c==> c==> c~ cT c= * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop cvector_add cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add cvec cNUMERAL c_0 f0 * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND cT f2 f3
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) w)
T * / ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 f0
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((((real_le (real_of_num (NUMERAL _0))) (drop t)) /\ ((real_le (real_of_num (NUMERAL _0))) (drop x))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul (drop t)) (drop x))) = T)) = (((real_le (real_of_num (NUMERAL _0))) ((real_mul (drop t)) (drop x))) = T))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le creal_of_num cNUMERAL c_0 cdrop f1 c= creal_le creal_of_num cNUMERAL c_0 creal_mul cdrop f0 cdrop f1 cT c= creal_le creal_of_num cNUMERAL c_0 creal_mul cdrop f0 cdrop f1 cT
+ ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- ((((((IMAGE p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s) /\ (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((IMAGE ((shiftpath ((% (drop t)) x)) p)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((IMAGE p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))) ==> (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((((shiftpath ((% (drop t)) x)) p) y) IN s))))) = (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((((shiftpath ((% (drop t)) x)) p) y) IN s)))))
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f0 f2 c= c==> c/\ cSUBSET * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * * part cIMAGE * * part cshiftpath c% cdrop f1 b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN cshiftpath c% cdrop f1 b0 f0 b1 f2 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN cshiftpath c% cdrop f1 b0 f0 b1 f2
+ |- ((\q. ((((homotopic_loops s) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x)))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish (h o (pastecart t))) = (pathstart (h o (pastecart t))))))))))))) q)
T * / c= chomotopic_loops f0 f1 b0 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b1 cpastecart cvec cNUMERAL c_0 b2 * f1 b2 c/\ ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b1 cpastecart cvec cNUMERAL cBIT1 c_0 b2 * b0 b2 ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part co b1 * part cpastecart b2 cpathstart * * part co b1 * part cpastecart b2 f2
+ |- (((!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) ==> ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f)) = ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f))
T c= c==> ! ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1 * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1
+ |- ((~ T) ==> ((p ((vector_sub x) (vec (NUMERAL (BIT1 _0))))) = (p ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))
T c==> c~ cT c= * f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0
+ |- ((!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) ==> (!w. (!y. (!x. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))))
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le b1 b3 creal_le creal_mul b0 b1 creal_mul b2 b3
- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))) |- ((\t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))) t)
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 * / c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 f1
+ |- (((continuous_on fstcart) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) = T)
T c= ccontinuous_on part cfstcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 cT
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- ((\x. ((((~ (s _734227)) \/ ((_734228 = (((shiftpath (f _734227)) p) ((x' _734227) _734228))) \/ ((~ (_734228 = ((I p) x))) \/ (~ (t x))))) /\ ((~ (s _734227)) \/ ((t ((x' _734227) _734228)) \/ ((~ (_734228 = ((I p) x))) \/ (~ (t x)))))) /\ (((~ (s _734227)) \/ (((~ (_734228 = (((shiftpath (f _734227)) p) x))) \/ (~ (t x))) \/ (_734228 = ((I p) ((x'' _734227) _734228))))) /\ ((~ (s _734227)) \/ (((~ (_734228 = (((shiftpath (f _734227)) p) x))) \/ (~ (t x))) \/ (t ((x'' _734227) _734228))))))) _734229)
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 * / c/\ c/\ c\/ c~ * f3 f7 c\/ c= f8 cshiftpath * f4 f7 f0 * * f5 f7 f8 c\/ c~ c= f8 cI f0 b0 c~ * f1 b0 c\/ c~ * f3 f7 c\/ * f1 * * f5 f7 f8 c\/ c~ c= f8 cI f0 b0 c~ * f1 b0 c/\ c\/ c~ * f3 f7 c\/ c\/ c~ c= f8 cshiftpath * f4 f7 f0 b0 c~ * f1 b0 c= f8 cI f0 * * f6 f7 f8 c\/ c~ * f3 f7 c\/ c\/ c~ c= f8 cshiftpath * f4 f7 f0 b0 c~ * f1 b0 * f1 * * f6 f7 f8 f9
+ |- ((\s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) s)
T * / ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 f0
+ |- (((!x. (!y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y))))) ==> ((\x. (!y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y))))) x)) = ((\x. (!y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y))))) x))
T c= c==> ! ! c= cdrop cvector_sub b0 b1 creal_sub cdrop b0 cdrop b1 * / ! c= cdrop cvector_sub b0 b1 creal_sub cdrop b0 cdrop b1 f0 * / ! c= cdrop cvector_sub b0 b1 creal_sub cdrop b0 cdrop b1 f0
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- ((\x. (!x. (((~ (x = ((I p) x))) \/ (~ (t x))) \/ (u x)))) _734225)
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 * / ! c\/ c\/ c~ c= b0 cI f0 b1 c~ * f1 b1 * f2 b0 f7
+ (~ (u (((shiftpath (f x)) p) y))), ((s x) /\ (t y)) |- (((!x. (((\x''. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x)))))))))) x) ==> F)) ==> ((?x''. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x)))))))))) ==> F)) = ((?x''. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x)))))))))) ==> F))
T c==> c~ * f0 cshiftpath * f1 f2 f3 f4 c==> c/\ * f5 f2 * f6 f4 c= c==> ! c==> * / c/\ ! c\/ ! c\/ c~ c= b2 * f3 b3 c~ * f6 b3 * f0 b2 ! c\/ c~ * f5 b2 c/\ ! c\/ c/\ c= b3 cshiftpath * f1 b2 f3 * * f7 b2 b3 * f6 * * f7 b2 b3 ! c\/ c~ c= b3 * f3 b4 c~ * f6 b4 ! c\/ ! c\/ c~ c= b3 cshiftpath * f1 b2 f3 b4 c~ * f6 b4 c/\ c= b3 * f3 * * b1 b2 b3 * f6 * * b1 b2 b3 b0 cF c==> c? / c/\ ! c\/ ! c\/ c~ c= b1 * f3 b2 c~ * f6 b2 * f0 b1 ! c\/ c~ * f5 b1 c/\ ! c\/ c/\ c= b2 cshiftpath * f1 b1 f3 * * f7 b1 b2 * f6 * * f7 b1 b2 ! c\/ c~ c= b2 * f3 b3 c~ * f6 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f1 b1 f3 b3 c~ * f6 b3 c/\ c= b2 * f3 * * b0 b1 b2 * f6 * * b0 b1 b2 cF c==> c? / c/\ ! c\/ ! c\/ c~ c= b1 * f3 b2 c~ * f6 b2 * f0 b1 ! c\/ c~ * f5 b1 c/\ ! c\/ c/\ c= b2 cshiftpath * f1 b1 f3 * * f7 b1 b2 * f6 * * f7 b1 b2 ! c\/ c~ c= b2 * f3 b3 c~ * f6 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f1 b1 f3 b3 c~ * f6 b3 c/\ c= b2 * f3 * * b0 b1 b2 * f6 * * b0 b1 b2 cF
+ |- (((continuous_on (\z. ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) = T)
T c= ccontinuous_on / cvector_add c% cdrop f0 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 cT
- (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), ((pathfinish p) = (pathstart p)) |- ((~ (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) ==> (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))
T c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> c= cpathfinish f0 cpathstart f0 c==> c~ c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- |- ((((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), (~ (((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I vec) ((I NUMERAL) _0))))) |- ((~ (((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I vec) ((I NUMERAL) _0))))) /\ (((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I vec) ((I NUMERAL) _0)))))
T c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c~ c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI part cvec cI part cNUMERAL c_0 c/\ c~ c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI part cvec cI part cNUMERAL c_0 c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI part cvec cI part cNUMERAL c_0
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
- (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) |- ((!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g)))) = T)
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 c= ! c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b0 cpathstart b0 c= * part cpath_image * * part cshiftpath f0 b0 * part cpath_image b0 cT
+ |- (((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F))))))))) = ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F)))))))))
T c= c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- (((real_le (real_of_num (NUMERAL _0))) (drop x)) = T)
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= creal_le creal_of_num cNUMERAL c_0 cdrop f0 cT
- (_734240 = _734242) |- ((_734240 = _734242) /\ ((~ (_734241 = _734243)) \/ (((x'' _734240) _734241) = ((x'' _734242) _734243))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * f4 f0 f2 * * f4 f1 f3
+ (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), ((pathfinish p) = (pathstart p)) |- ((((((I pathfinish) p) = ((I pathstart) p)) /\ (((I pathfinish) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) ==> (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) = (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))
T c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> c= cpathfinish f0 cpathstart f0 c= c==> c/\ c= cI part cpathfinish f0 cI part cpathstart f0 c= cI part cpathfinish f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- |- (((!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) ==> (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g)))))) = (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))))
T c= c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1
+ |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) f)
T * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 f0
+ |- ((((~ (((real_add (a $ i)) ((real_sub (b $ i)) (c $ i))) = ((real_sub ((real_add (a $ i)) (b $ i))) (c $ i)))) ==> F) ==> (((real_add (a $ i)) ((real_sub (b $ i)) (c $ i))) = ((real_sub ((real_add (a $ i)) (b $ i))) (c $ i)))) = (((real_add (a $ i)) ((real_sub (b $ i)) (c $ i))) = ((real_sub ((real_add (a $ i)) (b $ i))) (c $ i))))
T c= c==> c==> c~ c= creal_add c$ f0 f1 creal_sub c$ f2 f1 c$ f3 f1 creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f3 f1 cF c= creal_add c$ f0 f1 creal_sub c$ f2 f1 c$ f3 f1 creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f3 f1 c= creal_add c$ f0 f1 creal_sub c$ f2 f1 c$ f3 f1 creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f3 f1
- (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), ((pathfinish p) = (pathstart p)), (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) |- ((~ F) ==> F)
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c= cpathfinish f0 cpathstart f0 c==> c/\ c/\ cIN f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f2 cfstcart f1 csndcart f1 cvec cNUMERAL cBIT1 c_0 c~ c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c~ cF cF
+ |- ((((continuous_on (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z))) ((pastecart (vec (NUMERAL _0))) x)) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z))) ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (((shiftpath t) p) x)))) /\ (!t'. ((t' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish ((\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z))) o (pastecart t'))) = (pathstart ((\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z))) o (pastecart t')))))))))) = ((\h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (((shiftpath t) p) x)))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish (h o (pastecart t))) = (pathstart (h o (pastecart t))))))))))) (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))))
T c= c/\ ccontinuous_on / cshiftpath c% cdrop f0 cfstcart b0 f1 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE / cshiftpath c% cdrop f0 cfstcart b0 f1 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * / cshiftpath c% cdrop f0 cfstcart b1 f1 csndcart b1 cpastecart cvec cNUMERAL c_0 b0 * f1 b0 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * / cshiftpath c% cdrop f0 cfstcart b1 f1 csndcart b1 cpastecart cvec cNUMERAL cBIT1 c_0 b0 cshiftpath f0 f1 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part co / cshiftpath c% cdrop f0 cfstcart b1 f1 csndcart b1 * part cpastecart b0 cpathstart * * part co / cshiftpath c% cdrop f0 cfstcart b1 f1 csndcart b1 * part cpastecart b0 * / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f1 b1 c/\ ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b0 cpastecart cvec cNUMERAL cBIT1 c_0 b1 cshiftpath f0 f1 b1 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part co b0 * part cpastecart b1 cpathstart * * part co b0 * part cpastecart b1 / cshiftpath c% cdrop f0 cfstcart b0 f1 csndcart b0
+ |- (((~ ((real_le (drop _734256)) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add (vec (NUMERAL _0))) ((vector_sub _734256) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add (vec (NUMERAL _0))) _734256))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add (vec (NUMERAL _0))) _734256))) (p ((vector_add (vec (NUMERAL _0))) ((vector_sub _734256) (vec (NUMERAL (BIT1 _0))))))) = (((COND ((real_le (drop _734256)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734256)) e')))
T c==> c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f2 c= cCOND creal_le cdrop cvector_add cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add cvec cNUMERAL c_0 f0 * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 f2
+ |- (((linear fstcart) ==> (((continuous_on fstcart) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) = T)) = (((continuous_on fstcart) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) = T))
T c= c==> clinear part cfstcart c= ccontinuous_on part cfstcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 cT c= ccontinuous_on part cfstcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 cT
- (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) |- (((((real_le (drop ((vector_add (vec (NUMERAL _0))) x))) (real_of_num (NUMERAL (BIT1 _0)))) = T) ==> ((T ==> ((p ((vector_add (vec (NUMERAL _0))) x)) = t')) ==> (((~ T) ==> ((p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add (vec (NUMERAL _0))) x))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add (vec (NUMERAL _0))) x))) (p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) t') e'))))) = ((T ==> ((p ((vector_add (vec (NUMERAL _0))) x)) = t')) ==> (((~ T) ==> ((p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add (vec (NUMERAL _0))) x))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add (vec (NUMERAL _0))) x))) (p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) t') e')))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c= creal_le cdrop cvector_add cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 cT c==> c==> cT c= * f1 cvector_add cvec cNUMERAL c_0 f0 f2 c==> c==> c~ cT c= * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop cvector_add cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add cvec cNUMERAL c_0 f0 * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND cT f2 f3 c==> c==> cT c= * f1 cvector_add cvec cNUMERAL c_0 f0 f2 c==> c==> c~ cT c= * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop cvector_add cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add cvec cNUMERAL c_0 f0 * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND cT f2 f3
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- ((((continuous_on (lift o (\z. (drop t)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) /\ ((continuous_on fstcart) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z)))))) ==> (((continuous_on (\z. ((% (drop t)) (fstcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) = T))
T c==> c/\ ccontinuous_on * * part co part clift / cdrop f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 ccontinuous_on part cfstcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 c= ccontinuous_on / c% cdrop f0 cfstcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 cT
- |- ((((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) = ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))
T c= c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF
- (~ (((I pathstart) p) = ((I pathstart) p))) |- ((~ (((I pathstart) p) = ((I pathstart) p))) /\ (((I pathstart) p) = ((I pathstart) p)))
T c==> c~ c= cI part cpathstart f0 cI part cpathstart f0 c/\ c~ c= cI part cpathstart f0 cI part cpathstart f0 c= cI part cpathstart f0 cI part cpathstart f0
+ |- ((~ (((real_le (real_of_num (NUMERAL _0))) ((real_add x) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) = ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) y)))) ==> F)
T c==> c~ c= creal_le creal_of_num cNUMERAL c_0 creal_add f0 creal_sub f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 f1 cF
+ |- ((\x. (!y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y))))) x)
T * / ! c= cdrop cvector_add b0 b1 creal_add cdrop b0 cdrop b1 f0
+ |- ((\c. ((lift ((real_mul c) x)) = ((% c) (lift x)))) c)
T * / c= clift creal_mul b0 f0 c% b0 clift f0 f1
+ (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) |- ((((I p) ((I vec) ((I NUMERAL) _0))) = ((I pathstart) p)) /\ (((I p) ((I vec) ((I NUMERAL) _0))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c/\ c= cI f0 cI part cvec cI part cNUMERAL c_0 cI part cpathstart f0 c= cI f0 cI part cvec cI part cNUMERAL c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
+ (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))), ((pathfinish p) = (pathstart p)) |- ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> (~ (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))))))))
T c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c= cpathfinish f1 cpathstart f1 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c~ ! c= cvector_sub b0 b0 cvec cNUMERAL c_0
+ |- (T ==> ((p x) = (p x)))
T c==> cT c= * f0 f1 * f0 f1
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2
+ |- (((!s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) ==> ((\s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) s)) = ((\s. (!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))))) s))
T c= c==> ! ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 * / ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 f0 * / ! ! c==> c/\ ccontinuous_on * * part co part clift b1 b0 ccontinuous_on b2 b0 ccontinuous_on / c% * b1 b3 * b2 b3 b0 f0
- (_734251 = _734254), (_734250 = _734253), (_734252 = _734255) |- ((_734251 = _734254) /\ ((((shiftpath _734250) _734251) _734252) = (((shiftpath _734253) _734254) _734255)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c= cshiftpath f2 f0 f4 cshiftpath f3 f1 f5
+ (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 cT
- (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))), ((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) |- ((path_image ((shiftpath a) g)) = (path_image g))
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish f1 cpathstart f1 c= * part cpath_image * * part cshiftpath f0 f1 * part cpath_image f1
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) /\ ((((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!x. (?x. (((x = (((shiftpath (f x)) p) x)) /\ (t x)) \/ (!x. ((~ (x = (p x))) \/ (~ (t x))))))) = (?x. (!x. (((x = (((shiftpath (f x)) p) (x x))) /\ (t (x x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x))))))))
T c= ! c? / c\/ c/\ c= b0 cshiftpath * f0 f1 f2 b1 * f3 b1 ! c\/ c~ c= b0 * f2 b2 c~ * f3 b2 c? / ! c\/ c/\ c= b1 cshiftpath * f0 f1 f2 * b0 b1 * f3 * b0 b1 ! c\/ c~ c= b1 * f2 b2 c~ * f3 b2
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) /\ ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = (path_image g)) |- ((path_image g) = ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c==> c= * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cpath_image f0 c= * part cpath_image f0 * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((continuous_on p) ((IMAGE (\z. ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z)))))) = (((continuous_on (\z. ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) /\ ((continuous_on p) ((IMAGE (\z. ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))))))
T c= ccontinuous_on f0 * * part cIMAGE / cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 c/\ ccontinuous_on / cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 ccontinuous_on f0 * * part cIMAGE / cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (((!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) ==> ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t)) = ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 c= c==> ! c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2
+ |- (((!x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x))))) ==> ((\x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x))))) x)) = ((\x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x))))) x))
T c= c==> ! ! c= clift creal_mul b1 b0 c% b1 clift b0 * / ! c= clift creal_mul b1 b0 c% b1 clift b0 f0 * / ! c= clift creal_mul b1 b0 c% b1 clift b0 f0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (T = (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (lift (drop t))) p) x) = (((shiftpath t) p) x)))))
T c= cT ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath clift cdrop f0 f1 b0 cshiftpath f0 f1 b0
- (path p) |- ((I path) p)
T c==> cpath f0 cI part cpath f0
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
- |- (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) |- ((\y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))) y)
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 * / ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 b1 creal_le creal_mul f0 b0 creal_mul f1 b1 f2
+ (!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) |- ((!x. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))) = T)
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 c= ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_le f1 b1 creal_le creal_mul f0 f1 creal_mul b0 b1 cT
+ |- ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)) = T))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c= creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1 cT
- |- ((~ (_734280 = _734282)) \/ ((~ (_734279 = _734281)) \/ (((I _734281) _734282) \/ (~ ((I _734279) _734280)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ |- (((!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))) ==> ((\s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))) s)) = ((\s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))) s))
T c= c==> ! c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 b0 creal_le * f1 b2 f2 b2 c/\ ccontinuous_on f3 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 b0 creal_le f2 * f1 b2 b2 c/\ ccontinuous_on * * part co part clift f1 b0 ! c==> c/\ cIN b1 b0 c= * f1 b1 f2 c= * f0 b1 * f3 b1 ccontinuous_on / cCOND creal_le * f1 b1 f2 * f0 b1 * f3 b1 b0 * / c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 b0 creal_le * f1 b2 f2 b2 c/\ ccontinuous_on f3 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 b0 creal_le f2 * f1 b2 b2 c/\ ccontinuous_on * * part co part clift f1 b0 ! c==> c/\ cIN b1 b0 c= * f1 b1 f2 c= * f0 b1 * f3 b1 ccontinuous_on / cCOND creal_le * f1 b1 f2 * f0 b1 * f3 b1 b0 f4 * / c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 b0 creal_le * f1 b2 f2 b2 c/\ ccontinuous_on f3 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 b0 creal_le f2 * f1 b2 b2 c/\ ccontinuous_on * * part co part clift f1 b0 ! c==> c/\ cIN b1 b0 c= * f1 b1 f2 c= * f0 b1 * f3 b1 ccontinuous_on / cCOND creal_le * f1 b1 f2 * f0 b1 * f3 b1 b0 f4
- |- (((T ==> ((p ((vector_add (vec (NUMERAL _0))) x)) = (p x))) ==> (((~ T) ==> ((p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add (vec (NUMERAL _0))) x))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add (vec (NUMERAL _0))) x))) (p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) (p x)) e')))) = (((~ T) ==> ((p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add (vec (NUMERAL _0))) x))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add (vec (NUMERAL _0))) x))) (p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) (p x)) e'))))
T c= c==> c==> cT c= * f0 cvector_add cvec cNUMERAL c_0 f1 * f0 f1 c==> c==> c~ cT c= * f0 cvector_add cvec cNUMERAL c_0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 f2 c= cCOND creal_le cdrop cvector_add cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add cvec cNUMERAL c_0 f1 * f0 cvector_add cvec cNUMERAL c_0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND cT * f0 f1 f2 c==> c==> c~ cT c= * f0 cvector_add cvec cNUMERAL c_0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 f2 c= cCOND creal_le cdrop cvector_add cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add cvec cNUMERAL c_0 f1 * f0 cvector_add cvec cNUMERAL c_0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND cT * f0 f1 f2
+ |- (((!x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) ==> ((\x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) x)) = ((\x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) x))
T c= c==> ! c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 * / c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 f2 * / c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 f2
+ ((f o g) = (\x. (f (g x)))) |- ((\x. (f (g x))) = (f o g))
T c==> c= * * part co f0 f1 / * f0 * f1 b0 c= / * f0 * f1 b0 * * part co f0 f1
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- ((\x. (!x. (!x. ((((~ (s x)) \/ ((x = (((shiftpath (f x)) p) ((x' x) x))) \/ ((~ (x = ((I p) x))) \/ (~ (t x))))) /\ ((~ (s x)) \/ ((t ((x' x) x)) \/ ((~ (x = ((I p) x))) \/ (~ (t x)))))) /\ (((~ (s x)) \/ (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ (x = ((I p) ((x'' x) x))))) /\ ((~ (s x)) \/ (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ (t ((x'' x) x))))))))) _734227)
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 * / ! ! c/\ c/\ c\/ c~ * f3 b0 c\/ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 c\/ c~ c= b1 cI f0 b2 c~ * f1 b2 c\/ c~ * f3 b0 c\/ * f1 * * f5 b0 b1 c\/ c~ c= b1 cI f0 b2 c~ * f1 b2 c/\ c\/ c~ * f3 b0 c\/ c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c= b1 cI f0 * * f6 b0 b1 c\/ c~ * f3 b0 c\/ c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 * f1 * * f6 b0 b1 f7
+ (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) |- ((!f. (!g. (!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))) = T)
T c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 c= ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b2 creal_le * f0 b4 f1 b4 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b2 creal_le f1 * f0 b4 b4 c/\ ccontinuous_on * * part co part clift f0 b2 ! c==> c/\ cIN b3 b2 c= * f0 b3 f1 c= * b0 b3 * b1 b3 ccontinuous_on / cCOND creal_le * f0 b3 f1 * b0 b3 * b1 b3 b2 cT
- |- ((drop (lift x)) = x)
T c= cdrop clift f0 f0
+ (~ (((real_le (real_of_num (NUMERAL _0))) ((real_add x) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) = ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) y)))) |- ((((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c~ c= creal_le creal_of_num cNUMERAL c_0 creal_add f0 creal_sub f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 f1 c\/ c/\ creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- (~ (u (((shiftpath (f x)) p) y))), ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))), ((s x) /\ (t y)) |- ((~ F) ==> F)
T c==> c~ * f0 cshiftpath * f1 f2 f3 f4 c==> c/\ ! c\/ ! c\/ c~ c= b0 * f3 b1 c~ * f5 b1 * f0 b0 ! c\/ c~ * f6 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f1 b0 f3 * * f7 b0 b1 * f5 * * f7 b0 b1 ! c\/ c~ c= b1 * f3 b2 c~ * f5 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f1 b0 f3 b2 c~ * f5 b2 c/\ c= b1 * f3 * * f8 b0 b1 * f5 * * f8 b0 b1 c==> c/\ * f6 f2 * f5 f4 c==> c~ cF cF
+ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((linear fstcart) ==> (((continuous_on fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T)) = (((continuous_on fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T))
T c= c==> clinear part cfstcart c= ccontinuous_on part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT c= ccontinuous_on part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((path_image ((shiftpath ((% (drop t)) x)) p)) = (path_image p)))
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * part cpath_image * * part cshiftpath c% cdrop f1 f2 f0 * part cpath_image f0
+ ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (lift (drop t))) p) x) = (((shiftpath t) p) x)))) /\ (!t'. ((t' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish ((shiftpath ((% (drop t)) t')) p)) = (pathstart ((shiftpath ((% (drop t)) t')) p)))))))
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f0 b0 * f0 b0 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath clift cdrop f1 f0 b0 cshiftpath f1 f0 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath c% cdrop f1 b0 f0 cpathstart * * part cshiftpath c% cdrop f1 b0 f0
+ |- (((((continuous_on (\z. ((% (drop t)) (fstcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) /\ ((continuous_on sndcart) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z)))))) ==> (((continuous_on (\z. ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) = T)) = (((continuous_on (\z. ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) = T))
T c= c==> c/\ ccontinuous_on / c% cdrop f0 cfstcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 ccontinuous_on part csndcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 c= ccontinuous_on / cvector_add c% cdrop f0 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 cT c= ccontinuous_on / cvector_add c% cdrop f0 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 cT
+ |- ((~ (((real_add (a $ i)) ((real_sub (b $ i)) (c $ i))) = ((real_sub ((real_add (a $ i)) (b $ i))) (c $ i)))) ==> F)
T c==> c~ c= creal_add c$ f0 f1 creal_sub c$ f2 f1 c$ f3 f1 creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f3 f1 cF
+ |- (((!f. (!g. (!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))) ==> ((\f. (!g. (!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))) f)) = ((\f. (!g. (!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))) f))
T c= c==> ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b2 creal_le * f0 b4 f1 b4 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b2 creal_le f1 * f0 b4 b4 c/\ ccontinuous_on * * part co part clift f0 b2 ! c==> c/\ cIN b3 b2 c= * f0 b3 f1 c= * b0 b3 * b1 b3 ccontinuous_on / cCOND creal_le * f0 b3 f1 * b0 b3 * b1 b3 b2 * / ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b2 creal_le * f0 b4 f1 b4 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b2 creal_le f1 * f0 b4 b4 c/\ ccontinuous_on * * part co part clift f0 b2 ! c==> c/\ cIN b3 b2 c= * f0 b3 f1 c= * b0 b3 * b1 b3 ccontinuous_on / cCOND creal_le * f0 b3 f1 * b0 b3 * b1 b3 b2 f2 * / ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b2 creal_le * f0 b4 f1 b4 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b2 creal_le f1 * f0 b4 b4 c/\ ccontinuous_on * * part co part clift f0 b2 ! c==> c/\ cIN b3 b2 c= * f0 b3 f1 c= * b0 b3 * b1 b3 ccontinuous_on / cCOND creal_le * f0 b3 f1 * b0 b3 * b1 b3 b2 f2
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) |- (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))))
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 b1 creal_le creal_mul f0 b0 creal_mul f1 b1
+ |- ((linear f) ==> (((continuous_on f) s) = T))
T c==> clinear f0 c= ccontinuous_on f0 f1 cT
- ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) |- ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T)
T c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 cT
- (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), (~ (((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I vec) ((I NUMERAL) _0)))) |- ((~ (((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I vec) ((I NUMERAL) _0)))) /\ (((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I vec) ((I NUMERAL) _0))))
T c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c~ c= cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL c_0 c/\ c~ c= cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL c_0 c= cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL c_0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 cT
+ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))), (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- F
T c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> cpath f1 c==> c= cpathfinish f1 cpathstart f1 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f1 f2 cF
- |- ((?z. t) = t)
T c= c? / f0 f0
- |- ((\u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)))) u)
T * / ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b3 * f0 b4 * b1 b4 * b0 b3 ! c==> * b2 b3 ! c= c? / c/\ c= b4 cshiftpath * f1 b3 f0 b5 * b1 b5 c? / c/\ c= b4 * f0 b5 * b1 b5 ! ! c==> c/\ * b2 b3 * b1 b4 * b0 cshiftpath * f1 b3 f0 b4 cF f2
- (_734395 = _734397), (_734396 = _734398) |- ((_734395 = _734397) /\ (((I _734395) _734396) = ((I _734397) _734398)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cI f0 f2 * * part cI f1 f3
+ |- ((\x. (!y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y))))) x)
T * / ! c= cdrop cvector_sub b0 b1 creal_sub cdrop b0 cdrop b1 f0
+ |- ((\z. (f (g z))) = (f o g))
T c= / * f0 * f1 b0 * * part co f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s)
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
- (_734250 = _734253) |- ((_734252 = _734255) ==> ((~ (_734251 = _734254)) \/ ((((shiftpath _734250) _734251) _734252) = (((shiftpath _734253) _734254) _734255))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c= cshiftpath f0 f4 f2 cshiftpath f1 f5 f3
+ (~ (u (((shiftpath (f x)) p) y))), ((s x) /\ (t y)) |- ((?x''. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x)))))))))) ==> F)
T c==> c~ * f0 cshiftpath * f1 f2 f3 f4 c==> c/\ * f5 f2 * f6 f4 c==> c? / c/\ ! c\/ ! c\/ c~ c= b1 * f3 b2 c~ * f6 b2 * f0 b1 ! c\/ c~ * f5 b1 c/\ ! c\/ c/\ c= b2 cshiftpath * f1 b1 f3 * * f7 b1 b2 * f6 * * f7 b1 b2 ! c\/ c~ c= b2 * f3 b3 c~ * f6 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f1 b1 f3 b3 c~ * f6 b3 c/\ c= b2 * f3 * * b0 b1 b2 * f6 * * b0 b1 b2 cF
+ (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) |- (((I p) ((I vec) ((I NUMERAL) _0))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))
T c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c= cI f0 cI part cvec cI part cNUMERAL c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (((~ (_734225 = ((I p) _734226))) \/ (~ (t _734226))) \/ (u _734225))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c\/ c\/ c~ c= f7 cI f0 f8 c~ * f1 f8 * f2 f7
+ (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), ((pathfinish p) = (pathstart p)), (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) |- ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c= cpathfinish f0 cpathstart f0 c==> c/\ c/\ cIN f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f2 cfstcart f1 csndcart f1 cvec cNUMERAL cBIT1 c_0 c~ c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c/\ c/\ c/\ cIN f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f2 cfstcart f1 csndcart f1 cvec cNUMERAL cBIT1 c_0 c~ c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 cF
- |- (((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) = ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0)))))) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> q')))) = ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> q'))))
T c= c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c==> c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 f3 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 f3 c==> c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 f3 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 f3
- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))) |- ((!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))) /\ (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))))
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 c/\ ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0
+ (((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y))) |- (((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y))) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop f1 cdrop f2 c= creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop f1 cdrop f2 cT
+ |- (((!p'. (!q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= * f2 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f2 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f2 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 c==> b0 b1 * / ! c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= * f2 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f2 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f2 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 c==> b0 b1 f3 * / ! c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= * f2 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f2 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f2 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 c==> b0 b1 f3
+ |- (((~ (_734225 = ((I p) _734226))) \/ ((~ (t _734226)) \/ (u _734225))) = ((u _734225) \/ ((~ (_734225 = ((I p) _734226))) \/ (~ (t _734226)))))
T c= c\/ c~ c= f0 cI f1 f2 c\/ c~ * f3 f2 * f4 f0 c\/ * f4 f0 c\/ c~ c= f0 cI f1 f2 c~ * f3 f2
+ |- (((!x. (((vector_add (vec (NUMERAL _0))) x) = x)) ==> ((\x. (((vector_add (vec (NUMERAL _0))) x) = x)) x)) = ((\x. (((vector_add (vec (NUMERAL _0))) x) = x)) x))
T c= c==> ! c= cvector_add cvec cNUMERAL c_0 b0 b0 * / c= cvector_add cvec cNUMERAL c_0 b0 b0 f0 * / c= cvector_add cvec cNUMERAL c_0 b0 b0 f0
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le (real_of_num (NUMERAL _0))) ((real_mul (drop t)) (drop x))) /\ ((real_le ((real_mul (drop t)) (drop x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul cdrop f0 cdrop f1 creal_le creal_mul cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0
- |- (((path p) ==> (((path_image p) SUBSET s) ==> (((pathfinish p) = (pathstart p)) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F)))))))))))))) ==> ((path p) ==> (((path_image p) SUBSET s) ==> (((pathfinish p) = (pathstart p)) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F)))))))))))))))
T c==> c==> cpath f0 c==> cSUBSET * part cpath_image f0 f1 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f2 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF c==> cpath f0 c==> cSUBSET * part cpath_image f0 f1 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f2 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF
+ |- (((!t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) ==> ((\t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) t)) = ((\t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) t))
T c= c==> ! ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 * / ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 f1 * / ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 f1
+ |- (((pathfinish p) = (pathstart p)) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> (~ (!x. (((vector_sub x) x) = (vec (NUMERAL _0))))))))))))))))
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c~ ! c= cvector_sub b0 b0 cvec cNUMERAL c_0
+ |- ((!x. (?x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p x)) /\ (t x))))) = (?x. (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p (x x))) /\ (t (x x)))))))
T c= ! c? / c\/ ! c\/ c~ c= b0 cshiftpath * f0 f1 f2 b2 c~ * f3 b2 c/\ c= b0 * f2 b1 * f3 b1 c? / ! c\/ ! c\/ c~ c= b1 cshiftpath * f0 f1 f2 b2 c~ * f3 b2 c/\ c= b1 * f2 * b0 b1 * f3 * b0 b1
- (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) |- (((!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g)))) ==> ((\g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g)))) g)) = ((\g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g)))) g))
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 c= c==> ! c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b0 cpathstart b0 c= * part cpath_image * * part cshiftpath f0 b0 * part cpath_image b0 * / c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b0 cpathstart b0 c= * part cpath_image * * part cshiftpath f0 b0 * part cpath_image b0 f1 * / c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b0 cpathstart b0 c= * part cpath_image * * part cshiftpath f0 b0 * part cpath_image b0 f1
+ |- (((!c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s)))) ==> ((\c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s)))) c)) = ((\c. (!f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s)))) c))
T c= c==> ! ! c==> c/\ ccontinuous_on * * part co part clift b0 f0 ccontinuous_on b1 f0 ccontinuous_on / c% * b0 b2 * b1 b2 f0 * / ! c==> c/\ ccontinuous_on * * part co part clift b0 f0 ccontinuous_on b1 f0 ccontinuous_on / c% * b0 b2 * b1 b2 f0 f1 * / ! c==> c/\ ccontinuous_on * * part co part clift b0 f0 ccontinuous_on b1 f0 ccontinuous_on / c% * b0 b2 * b1 b2 f0 f1
+ |- ((continuous_on fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T ccontinuous_on part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- (((real_le (real_of_num (NUMERAL _0))) ((real_add x) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) = ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) y)))
T c= creal_le creal_of_num cNUMERAL c_0 creal_add f0 creal_sub f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- (((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))) z)
T * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 b0 creal_le creal_mul f0 f2 creal_mul f1 b0 f3
+ |- ((\s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))) s)
T * / c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 b0 creal_le * f1 b2 f2 b2 c/\ ccontinuous_on f3 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 b0 creal_le f2 * f1 b2 b2 c/\ ccontinuous_on * * part co part clift f1 b0 ! c==> c/\ cIN b1 b0 c= * f1 b1 f2 c= * f0 b1 * f3 b1 ccontinuous_on / cCOND creal_le * f1 b1 f2 * f0 b1 * f3 b1 b0 f4
- (!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))), (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) |- ((!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) /\ ((real_le ((real_mul w) y)) ((real_mul x) z)))
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 f3 c/\ ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 creal_le creal_mul f0 f2 creal_mul f1 f3
+ |- ((\q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= * f3 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f3 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart f0 cdrop csndcart f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f3 cvector_add c% cdrop f1 cfstcart f0 csndcart f0 * f3 cvector_add c% cdrop f1 cfstcart f0 cvector_sub csndcart f0 cvec cNUMERAL cBIT1 c_0 c==> f2 b0 f4
- (~ T) |- ((~ T) /\ ((p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = (p ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))
T c==> c~ cT c/\ c~ cT c= * f0 cvector_add cvec cNUMERAL c_0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0
+ |- ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x)
T * / ! c= cfstcart cpastecart b0 b1 b0 f0
+ |- ((!x. ((x IN ((IMAGE (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (x IN s))) = (!x. ((x IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z))) x) IN s))))
T c= ! c==> cIN b0 * * part cIMAGE / cshiftpath c% cdrop f0 cfstcart b1 f1 csndcart b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b0 f2 ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cshiftpath c% cdrop f0 cfstcart b1 f1 csndcart b1 b0 f2
+ |- (((!f. (!s. ((linear f) ==> ((continuous_on f) s)))) ==> ((\f. (!s. ((linear f) ==> ((continuous_on f) s)))) f)) = ((\f. (!s. ((linear f) ==> ((continuous_on f) s)))) f))
T c= c==> ! ! c==> clinear b0 ccontinuous_on b0 b1 * / ! c==> clinear b0 ccontinuous_on b0 b1 f0 * / ! c==> clinear b0 ccontinuous_on b0 b1 f0
+ (path p), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((continuous_on p) ((IMAGE (\z. ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))))
T c==> cpath f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 * * part cIMAGE / cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0))))), ((real_le (real_of_num (NUMERAL _0))) (drop x)), ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0)))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cdrop f1 c==> creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f2 cdrop f1 creal_sub cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!q'. (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y)))))) = p') ==> ((p' ==> ((((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y)))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) ==> ((\q'. (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y)))))) = p') ==> ((p' ==> ((((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y)))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q')) = ((\q'. (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y)))))) = p') ==> ((p' ==> ((((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y)))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop cfstcart cpastecart f0 f1 cdrop csndcart cpastecart f0 f1 f3 c==> c==> f3 c= cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop cfstcart cpastecart f0 f1 cdrop csndcart cpastecart f0 f1 cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f3 b0 * / c==> c= c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop cfstcart cpastecart f0 f1 cdrop csndcart cpastecart f0 f1 f3 c==> c==> f3 c= cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop cfstcart cpastecart f0 f1 cdrop csndcart cpastecart f0 f1 cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f3 b0 f4 * / c==> c= c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop cfstcart cpastecart f0 f1 cdrop csndcart cpastecart f0 f1 f3 c==> c==> f3 c= cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop cfstcart cpastecart f0 f1 cdrop csndcart cpastecart f0 f1 cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f3 b0 f4
+ ((pathfinish p) = (pathstart p)) |- ((((real_le (real_of_num (NUMERAL _0))) ((real_mul (drop t)) (drop x))) /\ ((real_le ((real_mul (drop t)) (drop x))) (real_of_num (NUMERAL (BIT1 _0))))) = (((pathfinish p) = (pathstart p)) /\ (((% (drop t)) x) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c==> c= cpathfinish f0 cpathstart f0 c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul cdrop f1 cdrop f2 creal_le creal_mul cdrop f1 cdrop f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cpathfinish f0 cpathstart f0 cIN c% cdrop f1 f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- ((t ((x'' _734227) _734228)) \/ ((~ (s _734227)) \/ ((~ (_734228 = (((shiftpath (f _734227)) p) _734229))) \/ (~ (t _734229)))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c\/ * f1 * * f6 f7 f8 c\/ c~ * f3 f7 c\/ c~ c= f8 cshiftpath * f4 f7 f0 f9 c~ * f1 f9
+ ((continuous_on f) s) |- (((continuous_on f) s) /\ (((continuous_on (\x. ((% c) (f x)))) s) = T))
T c==> ccontinuous_on f0 f1 c/\ ccontinuous_on f0 f1 c= ccontinuous_on / c% f2 * f0 b0 f1 cT
- (_734379 = _734381), (_734380 = _734382) |- ((_734380 = _734382) /\ (((I _734379) _734380) = ((I _734381) _734382)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cI f0 f2 cI f1 f3
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((real_le ((real_mul (drop t)) (drop x))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_mul cdrop f0 cdrop f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!f. (!a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))))))) ==> ((\f. (!a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))))))) f)) = ((\f. (!a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))))))) f))
T c= c==> ! ! c= * * part cshiftpath b1 b0 / cCOND creal_le cdrop cvector_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 * b0 cvector_add b1 b2 * b0 cvector_add b1 cvector_sub b2 cvec cNUMERAL cBIT1 c_0 * / ! c= * * part cshiftpath b1 b0 / cCOND creal_le cdrop cvector_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 * b0 cvector_add b1 b2 * b0 cvector_add b1 cvector_sub b2 cvec cNUMERAL cBIT1 c_0 f0 * / ! c= * * part cshiftpath b1 b0 / cCOND creal_le cdrop cvector_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 * b0 cvector_add b1 b2 * b0 cvector_add b1 cvector_sub b2 cvec cNUMERAL cBIT1 c_0 f0
+ |- (T = (((~ (s _734227)) \/ ((~ (_734228 = (((shiftpath (f _734227)) p) _734229))) \/ ((~ (t _734229)) \/ (t ((x'' _734227) _734228))))) = ((t ((x'' _734227) _734228)) \/ ((~ (s _734227)) \/ ((~ (_734228 = (((shiftpath (f _734227)) p) _734229))) \/ (~ (t _734229)))))))
T c= cT c= c\/ c~ * f0 f1 c\/ c~ c= f2 cshiftpath * f3 f1 f4 f5 c\/ c~ * f6 f5 * f6 * * f7 f1 f2 c\/ * f6 * * f7 f1 f2 c\/ c~ * f0 f1 c\/ c~ c= f2 cshiftpath * f3 f1 f4 f5 c~ * f6 f5
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
+ (!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) |- ((\x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))))) x)
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le b1 b2 creal_le creal_mul f0 b1 creal_mul b0 b2 f1
- (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_le (real_of_num (NUMERAL _0))) (drop x)) = T)
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_of_num cNUMERAL c_0 cdrop f0 cT
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((((IMAGE (\z. ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) ((IMAGE (\z. ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))))) = ((continuous_on p) ((IMAGE (\z. ((vector_add ((% (drop t)) (fstcart z))) (sndcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z)))))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> cSUBSET * * part cIMAGE / cvector_add c% cdrop f0 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 * * part cIMAGE / cvector_add c% cdrop f0 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 ccontinuous_on f1 * * part cIMAGE / cvector_add c% cdrop f0 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1
+ |- ((\x. (!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y))))) x)
T * / ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 creal_le creal_of_num cNUMERAL c_0 creal_add b0 b1 f0
+ ((\z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) z) |- (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))
T c==> * / c/\ c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c~ c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 f2 c/\ c/\ cIN f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart f2 csndcart f2 cvec cNUMERAL cBIT1 c_0 c~ c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))), (t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((continuous_on p) t)
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 c==> cSUBSET f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (T = (((real_le (real_of_num (NUMERAL _0))) (drop t)) /\ ((real_le (real_of_num (NUMERAL _0))) (drop x))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cT c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f2 creal_le creal_of_num cNUMERAL c_0 cdrop f0
+ (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))), (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F))
T c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> cpath f1 c==> c= cpathfinish f1 cpathstart f1 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f1 f2 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF
+ (~ (u (((shiftpath (f x)) p) y))), ((s x) /\ (t y)) |- (!x''. (((\x''. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x)))))))))) x'') ==> F))
T c==> c~ * f0 cshiftpath * f1 f2 f3 f4 c==> c/\ * f5 f2 * f6 f4 ! c==> * / c/\ ! c\/ ! c\/ c~ c= b1 * f3 b2 c~ * f6 b2 * f0 b1 ! c\/ c~ * f5 b1 c/\ ! c\/ c/\ c= b2 cshiftpath * f1 b1 f3 * * f7 b1 b2 * f6 * * f7 b1 b2 ! c\/ c~ c= b2 * f3 b3 c~ * f6 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f1 b1 f3 b3 c~ * f6 b3 c/\ c= b2 * f3 * * b1 b1 b2 * f6 * * b1 b1 b2 b0 cF
+ (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) |- (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))
T c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 ! ! c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 creal_le * f1 b3 b1 b3 c/\ ccontinuous_on f2 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 creal_le b1 * f1 b3 b3 c/\ ccontinuous_on * * part co part clift f1 b0 ! c==> c/\ cIN b2 b0 c= * f1 b2 b1 c= * f0 b2 * f2 b2 ccontinuous_on / cCOND creal_le * f1 b2 b1 * f0 b2 * f2 b2 b0
+ |- ((\n. ((lift (real_of_num n)) = (vec n))) n)
T * / c= clift creal_of_num b0 cvec b0 f0
+ |- ((\s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s))) s)
T * / c==> ccontinuous_on f0 b0 ccontinuous_on / c% f1 * f0 b1 b0 f2
+ ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- ((((IMAGE (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (lift (drop t))) p) x) = (((shiftpath t) p) x)))) /\ (!t'. ((t' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish ((shiftpath ((% (drop t)) t')) p)) = (pathstart ((shiftpath ((% (drop t)) t')) p))))))))
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f0 f2 c/\ cSUBSET * * part cIMAGE / cshiftpath c% cdrop f1 cfstcart b0 f0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f0 b0 * f0 b0 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath clift cdrop f1 f0 b0 cshiftpath f1 f0 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath c% cdrop f1 b0 f0 cpathstart * * part cshiftpath c% cdrop f1 b0 f0
- (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) |- ((I ((I IN) z)) ((I ((I PCROSS) ((I closed_interval) ((I ((I CONS) ((I ((I ,) ((I vec) ((I NUMERAL) _0)))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) NIL)))) ((I closed_interval) ((I ((I CONS) ((I ((I ,) ((I vec) ((I NUMERAL) _0)))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) NIL))))
T c==> c/\ c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c~ c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 cI * * part cI part cIN f0 * * part cI * * part cI part cPCROSS * * part cI part cclosed_interval cI * * part cI part cCONS cI * * part cI part c, cI part cvec cI part cNUMERAL c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cNIL * * part cI part cclosed_interval cI * * part cI part cCONS cI * * part cI part c, cI part cvec cI part cNUMERAL c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cNIL
+ |- ((!x. (?x. (?x'. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) (x x))) /\ (t (x x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p (x' x))) /\ (t (x' x)))))))))) = (?x. (!x. (?x'. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x x) x))) /\ (t ((x x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p (x' x))) /\ (t (x' x)))))))))))
T c= ! c? / c? / c\/ c~ * f0 b0 c/\ ! c\/ c/\ c= b3 cshiftpath * f1 b0 f2 * b1 b3 * f3 * b1 b3 ! c\/ c~ c= b3 * f2 b4 c~ * f3 b4 ! c\/ ! c\/ c~ c= b3 cshiftpath * f1 b0 f2 b4 c~ * f3 b4 c/\ c= b3 * f2 * b2 b3 * f3 * b2 b3 c? / ! c? / c\/ c~ * f0 b1 c/\ ! c\/ c/\ c= b3 cshiftpath * f1 b1 f2 * * b0 b1 b3 * f3 * * b0 b1 b3 ! c\/ c~ c= b3 * f2 b4 c~ * f3 b4 ! c\/ ! c\/ c~ c= b3 cshiftpath * f1 b1 f2 b4 c~ * f3 b4 c/\ c= b3 * f2 * b2 b3 * f3 * b2 b3
+ |- (((!c. ((lift ((real_mul c) x)) = ((% c) (lift x)))) ==> ((\c. ((lift ((real_mul c) x)) = ((% c) (lift x)))) c)) = ((\c. ((lift ((real_mul c) x)) = ((% c) (lift x)))) c))
T c= c==> ! c= clift creal_mul b0 f0 c% b0 clift f0 * / c= clift creal_mul b0 f0 c% b0 clift f0 f1 * / c= clift creal_mul b0 f0 c% b0 clift f0 f1
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((\a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) a)
T * / ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 f0
+ (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))), ((pathfinish p) = (pathstart p)) |- ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> (~ (!x. (((vector_sub x) x) = (vec (NUMERAL _0))))))))))
T c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c= cpathfinish f1 cpathstart f1 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c~ ! c= cvector_sub b0 b0 cvec cNUMERAL c_0
- (~ ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0)))) = F)
T c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) ==> (!h. (!a. (!f. (!g. (!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s)))))))) = (!h. (!a. (!f. (!g. (!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))))
T c= c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 ! ! ! ! ! c==> c/\ ccontinuous_on b2 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b4 creal_le * b0 b6 b1 b6 c/\ ccontinuous_on b3 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b4 creal_le b1 * b0 b6 b6 c/\ ccontinuous_on * * part co part clift b0 b4 ! c==> c/\ cIN b5 b4 c= * b0 b5 b1 c= * b2 b5 * b3 b5 ccontinuous_on / cCOND creal_le * b0 b5 b1 * b2 b5 * b3 b5 b4 ! ! ! ! ! c==> c/\ ccontinuous_on b2 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b4 creal_le * b0 b6 b1 b6 c/\ ccontinuous_on b3 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b4 creal_le b1 * b0 b6 b6 c/\ ccontinuous_on * * part co part clift b0 b4 ! c==> c/\ cIN b5 b4 c= * b0 b5 b1 c= * b2 b5 * b3 b5 ccontinuous_on / cCOND creal_le * b0 b5 b1 * b2 b5 * b3 b5 b4
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ ((lift x) = ((% x) (vec (NUMERAL (BIT1 _0))))) |- (((% x) (vec (NUMERAL (BIT1 _0)))) = (lift x))
T c==> c= clift f0 c% f0 cvec cNUMERAL cBIT1 c_0 c= c% f0 cvec cNUMERAL cBIT1 c_0 clift f0
- (~ ((((shiftpath (f x)) p) y) = (((shiftpath (f x)) p) y))) |- ((~ ((((shiftpath (f x)) p) y) = (((shiftpath (f x)) p) y))) /\ ((((shiftpath (f x)) p) y) = (((shiftpath (f x)) p) y)))
T c==> c~ c= cshiftpath * f0 f1 f2 f3 cshiftpath * f0 f1 f2 f3 c/\ c~ c= cshiftpath * f0 f1 f2 f3 cshiftpath * f0 f1 f2 f3 c= cshiftpath * f0 f1 f2 f3 cshiftpath * f0 f1 f2 f3
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (((s _734227) /\ ((_734228 = (((shiftpath (f _734227)) p) _734229)) /\ (t _734229))) ==> (_734228 = ((I p) ((x'' _734227) _734228))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c==> c/\ * f3 f7 c/\ c= f8 cshiftpath * f4 f7 f0 f9 * f1 f9 c= f8 cI f0 * * f6 f7 f8
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (!x. (((~ (_734225 = ((I p) x))) \/ (~ (t x))) \/ (u _734225)))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 ! c\/ c\/ c~ c= f7 cI f0 b0 c~ * f1 b0 * f2 f7
+ |- ((\f. ((((continuous_on (lift o c)) s) /\ ((continuous_on f) s)) ==> ((continuous_on (\x. ((% (c x)) (f x)))) s))) f)
T * / c==> c/\ ccontinuous_on * * part co part clift f0 f1 ccontinuous_on b0 f1 ccontinuous_on / c% * f0 b1 * b0 b1 f1 f2
+ ((s x) /\ (t y)) |- (((((shiftpath (f x)) p) y) = (((shiftpath (f x)) p) y)) /\ (t y))
T c==> c/\ * f0 f1 * f2 f3 c/\ c= cshiftpath * f4 f1 f5 f3 cshiftpath * f4 f1 f5 f3 * f2 f3
+ (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- (((((IMAGE (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (lift (drop t))) p) x) = (((shiftpath t) p) x)))) /\ (!t'. ((t' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish ((shiftpath ((% (drop t)) t')) p)) = (pathstart ((shiftpath ((% (drop t)) t')) p)))))))) = (((continuous_on (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (lift (drop t))) p) x) = (((shiftpath t) p) x)))) /\ (!t'. ((t' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish ((shiftpath ((% (drop t)) t')) p)) = (pathstart ((shiftpath ((% (drop t)) t')) p))))))))))
T c==> cpath f0 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f0 f2 c= c/\ cSUBSET * * part cIMAGE / cshiftpath c% cdrop f1 cfstcart b0 f0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f0 b0 * f0 b0 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath clift cdrop f1 f0 b0 cshiftpath f1 f0 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath c% cdrop f1 b0 f0 cpathstart * * part cshiftpath c% cdrop f1 b0 f0 c/\ ccontinuous_on / cshiftpath c% cdrop f1 cfstcart b0 f0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE / cshiftpath c% cdrop f1 cfstcart b0 f0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f0 b0 * f0 b0 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath clift cdrop f1 f0 b0 cshiftpath f1 f0 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath c% cdrop f1 b0 f0 cpathstart * * part cshiftpath c% cdrop f1 b0 f0
- T |- (T = T)
T c==> cT c= cT cT
- |- (((!q'. (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) = p') ==> ((p' ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = (p' ==> q'))))) ==> ((\q'. (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) = p') ==> ((p' ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = (p' ==> q'))))) q')) = ((\q'. (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) = p') ==> ((p' ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 f3 c==> c==> f3 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> f3 b0 * / c==> c= c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 f3 c==> c==> f3 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> f3 b0 f4 * / c==> c= c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 f3 c==> c==> f3 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> f3 b0 f4
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!q'. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> (((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x))) = (p' ==> q'))))) ==> ((\q'. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> (((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x))) = (p' ==> q'))))) q')) = ((\q'. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> (((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> c==> f1 c= c= cshiftpath cvec cNUMERAL c_0 f2 f0 * f2 f0 b0 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f2 f0 * f2 f0 c==> f1 b0 * / c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> c==> f1 c= c= cshiftpath cvec cNUMERAL c_0 f2 f0 * f2 f0 b0 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f2 f0 * f2 f0 c==> f1 b0 f3 * / c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> c==> f1 c= c= cshiftpath cvec cNUMERAL c_0 f2 f0 * f2 f0 b0 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f2 f0 * f2 f0 c==> f1 b0 f3
- |- ((((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))) ==> (((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))))
T c==> c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2 c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2
+ ((path_image g) = ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = (path_image g))
T c==> c= * part cpath_image f0 * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cpath_image f0
+ |- ((\g. (((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = (path_image g))) g)
T * / c= * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cpath_image b0 f0
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (((_734225 = ((I p) _734226)) /\ (t _734226)) ==> (u _734225))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c==> c/\ c= f7 cI f0 f8 * f1 f8 * f2 f7
+ |- (((!y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y)))) ==> ((\y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y)))) y)) = ((\y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y)))) y))
T c= c==> ! c= cdrop cvector_sub f0 b0 creal_sub cdrop f0 cdrop b0 * / c= cdrop cvector_sub f0 b0 creal_sub cdrop f0 cdrop b0 f1 * / c= cdrop cvector_sub f0 b0 creal_sub cdrop f0 cdrop b0 f1
+ |- (((((continuous_on (\x. ((% (drop t)) (fstcart x)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((continuous_on sndcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (((continuous_on (\x. ((vector_add ((% (drop t)) (fstcart x))) (sndcart x)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T)) = (((continuous_on (\x. ((vector_add ((% (drop t)) (fstcart x))) (sndcart x)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T))
T c= c==> c/\ ccontinuous_on / c% cdrop f0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on part csndcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= ccontinuous_on / cvector_add c% cdrop f0 cfstcart b0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT c= ccontinuous_on / cvector_add c% cdrop f0 cfstcart b0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x))) = ((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) ==> q')))
T c==> c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 f2 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f2
+ |- ((((real_le (drop _734256)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((p ((vector_add (vec (NUMERAL _0))) _734256)) = t')) ==> (((~ ((real_le (drop _734256)) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add (vec (NUMERAL _0))) ((vector_sub _734256) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add (vec (NUMERAL _0))) _734256))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add (vec (NUMERAL _0))) _734256))) (p ((vector_add (vec (NUMERAL _0))) ((vector_sub _734256) (vec (NUMERAL (BIT1 _0))))))) = (((COND ((real_le (drop _734256)) (real_of_num (NUMERAL (BIT1 _0))))) t') e'))))
T c==> c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_add cvec cNUMERAL c_0 f0 f2 c==> c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop cvector_add cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add cvec cNUMERAL c_0 f0 * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f2 f3
+ (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) |- (?z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))))
T c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c? / c/\ c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c~ c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
+ ((real_le (real_of_num (NUMERAL _0))) (drop x)), ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0)))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (T = (((real_le (real_of_num (NUMERAL _0))) (drop t)) /\ (((real_le (drop t)) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 cdrop f0 c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cT c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 c/\ creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0
- (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le (real_of_num (NUMERAL _0))) (drop x)) = (((real_le (real_of_num (NUMERAL _0))) (drop t)) /\ ((real_le (real_of_num (NUMERAL _0))) (drop x))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_le creal_of_num cNUMERAL c_0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le creal_of_num cNUMERAL c_0 cdrop f1
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!f. (!u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)))))) p)
T * / ! ! ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b5 * b0 b6 * b3 b6 * b2 b5 ! c==> * b4 b5 ! c= c? / c/\ c= b6 cshiftpath * b1 b5 b0 b7 * b3 b7 c? / c/\ c= b6 * b0 b7 * b3 b7 ! ! c==> c/\ * b4 b5 * b3 b6 * b2 cshiftpath * b1 b5 b0 b6 cF f0
- |- ((~ (((I pathstart) p) = ((I pathstart) p))) ==> (((I pathstart) p) = ((I pathstart) p)))
T c==> c~ c= cI part cpathstart f0 cI part cpathstart f0 c= cI part cpathstart f0 cI part cpathstart f0
+ ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((((% (drop t)) x) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish p) = (pathstart p)))
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN c% cdrop f1 f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish f0 cpathstart f0
+ |- ((!x. (!y. ((((pastecart x) y) IN (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) = (((IMAGE (\z. ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c= ! ! c==> cIN cpastecart b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b3 cdrop csndcart b3 b3 cIN cvector_add c% cdrop f0 cfstcart cpastecart b0 b1 cvector_sub csndcart cpastecart b0 b1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE / cvector_add c% cdrop f0 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- (T = (((continuous_on sndcart) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) /\ ((continuous_on (\z. (vec (NUMERAL (BIT1 _0))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z)))))))
T c= cT c/\ ccontinuous_on part csndcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 ccontinuous_on / cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1
+ |- ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((((shiftpath ((% (drop t)) x)) p) y) IN s)))) = (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((((shiftpath ((% (drop t)) (fstcart ((pastecart x) y)))) p) (sndcart ((pastecart x) y))) IN s)))))
T c= ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN cshiftpath c% cdrop f0 b0 f1 b1 f2 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN cshiftpath c% cdrop f0 cfstcart cpastecart b0 b1 f1 csndcart cpastecart b0 b1 f2
- (~ F), (~ (u (((shiftpath (f x)) p) y))), ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))), ((s x) /\ (t y)) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 cshiftpath * f1 f2 f3 f4 c==> c/\ ! c\/ ! c\/ c~ c= b0 * f3 b1 c~ * f5 b1 * f0 b0 ! c\/ c~ * f6 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f1 b0 f3 * * f7 b0 b1 * f5 * * f7 b0 b1 ! c\/ c~ c= b1 * f3 b2 c~ * f5 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f1 b0 f3 b2 c~ * f5 b2 c/\ c= b1 * f3 * * f8 b0 b1 * f5 * * f8 b0 b1 c==> c/\ * f6 f2 * f5 f4 c/\ c~ cF cF
+ (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le (real_of_num (NUMERAL _0))) (drop x)) = T)
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_le creal_of_num cNUMERAL c_0 cdrop f0 cT
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (!x. ((!x. ((~ (x = ((I p) x))) \/ (~ (t x)))) \/ (u x)))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 ! c\/ ! c\/ c~ c= b0 cI f0 b1 c~ * f1 b1 * f2 b0
- |- ((!x'. ((~ (s x')) \/ ((!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ (?x. ((x = (p x)) /\ (t x)))))))) = ((!x. (~ (s x))) \/ ((!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ (?x. ((x = (p x)) /\ (t x))))))))
T c= ! c\/ c~ * f0 b0 c/\ ! c\/ c? / c/\ c= b1 cshiftpath * f1 f2 f3 b2 * f4 b2 ! c\/ c~ c= b1 * f3 b2 c~ * f4 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f1 f2 f3 b2 c~ * f4 b2 c? / c/\ c= b1 * f3 b2 * f4 b2 c\/ ! c~ * f0 b0 c/\ ! c\/ c? / c/\ c= b0 cshiftpath * f1 f2 f3 b1 * f4 b1 ! c\/ c~ c= b0 * f3 b1 c~ * f4 b1 ! c\/ ! c\/ c~ c= b0 cshiftpath * f1 f2 f3 b1 c~ * f4 b1 c? / c/\ c= b0 * f3 b1 * f4 b1
+ |- ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s)))) g)
T * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 b1 ccontinuous_on / cvector_add * f0 b2 * b0 b2 b1 f1
+ (~ ((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c~ c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))), (t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))) /\ ((continuous_on p) t))
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 c==> cSUBSET f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ccontinuous_on f0 f1
- (_734383 = _734385) |- ((_734384 = _734386) ==> (((I _734383) _734384) = ((I _734385) _734386)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (!x. (!y. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) (sndcart ((pastecart x) y))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> c/\ c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart cpastecart b0 b1 cdrop csndcart cpastecart b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% cdrop f0 cfstcart cpastecart b0 b1 csndcart cpastecart b0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ (path p) |- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t)))
T c==> cpath f0 ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0
- |- ((_734240 = _734242) ==> ((~ (_734241 = _734243)) \/ (((x'' _734240) _734241) = ((x'' _734242) _734243))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * f4 f0 f2 * * f4 f1 f3
+ |- (((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F) = F)
T c= c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF cF
- |- (((!p'. (!q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> b0 b1 * / ! c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> b0 b1 f3 * / ! c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 b1 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> b0 b1 f3
+ |- (((continuous_on sndcart) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) = T)
T c= ccontinuous_on part csndcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 cT
+ |- (((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = ((I p) ((x'' x) x))) /\ (t ((x'' x) x)))) = (!x. (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ ((x = ((I p) ((x'' x) x))) /\ (t ((x'' x) x))))))
T c= c\/ ! c\/ c~ c= f0 cshiftpath * f1 f2 f3 b0 c~ * f4 b0 c/\ c= f0 cI f3 * * f5 f2 f0 * f4 * * f5 f2 f0 ! c\/ c\/ c~ c= f0 cshiftpath * f1 f2 f3 b0 c~ * f4 b0 c/\ c= f0 cI f3 * * f5 f2 f0 * f4 * * f5 f2 f0
+ |- ((\x. (((vector_add (vec (NUMERAL _0))) x) = x)) x)
T * / c= cvector_add cvec cNUMERAL c_0 b0 b0 f0
- ((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) |- (((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))), ((pathfinish p) = (pathstart p)) |- ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> (~ (!x. (((vector_sub x) x) = (vec (NUMERAL _0))))))))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c= cpathfinish f1 cpathstart f1 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c~ ! c= cvector_sub b0 b0 cvec cNUMERAL c_0
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))), ((s x) /\ (t y)) |- ((~ (t ((x'' x) (((shiftpath (f x)) p) y)))) ==> (t ((x'' x) (((shiftpath (f x)) p) y))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c==> c/\ * f3 f7 * f1 f8 c==> c~ * f1 * * f6 f7 cshiftpath * f4 f7 f0 f8 * f1 * * f6 f7 cshiftpath * f4 f7 f0 f8
+ |- (((% x) (vec (NUMERAL (BIT1 _0)))) = (lift x))
T c= c% f0 cvec cNUMERAL cBIT1 c_0 clift f0
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le (real_of_num (NUMERAL _0))) (drop t)) /\ ((real_le (real_of_num (NUMERAL _0))) (drop x)))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le creal_of_num cNUMERAL c_0 cdrop f1
+ |- (((!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))) ==> ((\z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))) z)) = ((\z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))) z))
T c= c==> ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 b0 creal_le creal_mul f0 f2 creal_mul f1 b0 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 b0 creal_le creal_mul f0 f2 creal_mul f1 b0 f3 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 b0 creal_le creal_mul f0 f2 creal_mul f1 b0 f3
+ (~ (((real_add (a $ i)) ((real_sub (b $ i)) (c $ i))) = ((real_sub ((real_add (a $ i)) (b $ i))) (c $ i)))) |- ((~ (((real_add (a $ i)) ((real_sub (b $ i)) (c $ i))) = ((real_sub ((real_add (a $ i)) (b $ i))) (c $ i)))) /\ F)
T c==> c~ c= creal_add c$ f0 f1 creal_sub c$ f2 f1 c$ f3 f1 creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f3 f1 c/\ c~ c= creal_add c$ f0 f1 creal_sub c$ f2 f1 c$ f3 f1 creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f3 f1 cF
+ ((path_image p) SUBSET s) |- ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((path_image ((shiftpath ((% (drop t)) x)) p)) = (path_image p)))) = ((((IMAGE p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s) /\ (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((IMAGE ((shiftpath ((% (drop t)) x)) p)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((IMAGE p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))))
T c==> cSUBSET * part cpath_image f0 f1 c= ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * part cpath_image * * part cshiftpath c% cdrop f2 b0 f0 * part cpath_image f0 c/\ cSUBSET * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * * part cIMAGE * * part cshiftpath c% cdrop f2 b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- (_734250 = _734253), (_734252 = _734255) |- ((_734252 = _734255) /\ ((~ (_734251 = _734254)) \/ ((((shiftpath _734250) _734251) _734252) = (((shiftpath _734253) _734254) _734255))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c= cshiftpath f0 f4 f2 cshiftpath f1 f5 f3
- (~ ((((shiftpath (f x)) p) y) = ((I p) ((x'' x) (((shiftpath (f x)) p) y))))), ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))), ((s x) /\ (t y)) |- ((~ ((((shiftpath (f x)) p) y) = ((I p) ((x'' x) (((shiftpath (f x)) p) y))))) /\ ((((shiftpath (f x)) p) y) = ((I p) ((x'' x) (((shiftpath (f x)) p) y)))))
T c==> c~ c= cshiftpath * f0 f1 f2 f3 cI f2 * * f4 f1 cshiftpath * f0 f1 f2 f3 c==> c/\ ! c\/ ! c\/ c~ c= b0 * f2 b1 c~ * f5 b1 * f6 b0 ! c\/ c~ * f7 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f0 b0 f2 * * f8 b0 b1 * f5 * * f8 b0 b1 ! c\/ c~ c= b1 * f2 b2 c~ * f5 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f0 b0 f2 b2 c~ * f5 b2 c/\ c= b1 * f2 * * f4 b0 b1 * f5 * * f4 b0 b1 c==> c/\ * f7 f1 * f5 f3 c/\ c~ c= cshiftpath * f0 f1 f2 f3 cI f2 * * f4 f1 cshiftpath * f0 f1 f2 f3 c= cshiftpath * f0 f1 f2 f3 cI f2 * * f4 f1 cshiftpath * f0 f1 f2 f3
+ |- ((((~ (((real_le (real_of_num (NUMERAL _0))) ((real_add x) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) = ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) y)))) ==> F) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add x) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) = ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) y)))) = (((real_le (real_of_num (NUMERAL _0))) ((real_add x) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) = ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) y))))
T c= c==> c==> c~ c= creal_le creal_of_num cNUMERAL c_0 creal_add f0 creal_sub f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 f1 cF c= creal_le creal_of_num cNUMERAL c_0 creal_add f0 creal_sub f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 f1 c= creal_le creal_of_num cNUMERAL c_0 creal_add f0 creal_sub f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 f1
+ (!g. ((pathstart g) = (g (vec (NUMERAL _0))))) |- ((((I p) ((I vec) ((I NUMERAL) _0))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) = ((((I p) ((I vec) ((I NUMERAL) _0))) = ((I pathstart) p)) /\ (((I p) ((I vec) ((I NUMERAL) _0))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c= c= cI f0 cI part cvec cI part cNUMERAL c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c/\ c= cI f0 cI part cvec cI part cNUMERAL c_0 cI part cpathstart f0 c= cI f0 cI part cvec cI part cNUMERAL c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
+ |- ((((path p) /\ (((path_image p) SUBSET s) /\ (((pathfinish p) = (pathstart p)) /\ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) ==> (((homotopic_loops s) p) ((shiftpath t) p))) = T)
T c= c==> c/\ cpath f0 c/\ cSUBSET * part cpath_image f0 f1 c/\ c= cpathfinish f0 cpathstart f0 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chomotopic_loops f1 f0 * * part cshiftpath f2 f0 cT
+ |- ((\s. ((path p) ==> (((path_image p) SUBSET s) ==> (((pathfinish p) = (pathstart p)) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F))))))))))))))) s)
T * / c==> cpath f0 c==> cSUBSET * part cpath_image f0 b0 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c~ ! c==> c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart b1 csndcart b1 cvec cNUMERAL cBIT1 c_0 c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b1 * b1 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b1 * b1 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b1 * b1 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b1 * b1 cvec cNUMERAL c_0 c==> ! c= cpathstart b1 * b1 cvec cNUMERAL c_0 c==> ! c= cpathstart b1 * b1 cvec cNUMERAL c_0 c==> ! c= cvector_sub b1 b1 cvec cNUMERAL c_0 c==> ! c= cvector_sub b1 b1 cvec cNUMERAL c_0 c==> ! c= cvector_sub b1 b1 cvec cNUMERAL c_0 cF f2
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- ((!x. ((!x. ((~ (x = ((I p) x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = ((I p) x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = ((I p) ((x'' x) x))) /\ (t ((x'' x) x)))))))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c/\ ! c\/ ! c\/ c~ c= b0 cI f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 cI f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 cI f0 * * f6 b0 b1 * f1 * * f6 b0 b1
- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F))))))) = ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F)))))))
T c= c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF
- |- ((_734234 = _734235) ==> ((u _734235) \/ (~ (u _734234))))
T c==> c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ (~ (u (((shiftpath (f x)) p) y))), ((s x) /\ (t y)) |- (((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) ==> F)
T c==> c~ * f0 cshiftpath * f1 f2 f3 f4 c==> c/\ * f5 f2 * f6 f4 c==> c/\ ! c\/ ! c\/ c~ c= b0 * f3 b1 c~ * f6 b1 * f0 b0 ! c\/ c~ * f5 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f1 b0 f3 * * f7 b0 b1 * f6 * * f7 b0 b1 ! c\/ c~ c= b1 * f3 b2 c~ * f6 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f1 b0 f3 b2 c~ * f6 b2 c/\ c= b1 * f3 * * f8 b0 b1 * f6 * * f8 b0 b1 cF
- |- (((!n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) ==> ((\n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) n)) = ((\n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) n))
T c= c==> ! creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 * / creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 f0 * / creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 f0
- (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) |- ((~ (((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I vec) ((I NUMERAL) _0)))) ==> (((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I vec) ((I NUMERAL) _0))))
T c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c~ c= cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL c_0 c= cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL c_0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) |- ((\g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))) g)
T c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 * / c==> c/\ c= cpathfinish b0 cpathstart b0 cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f0 b0 cpathstart * * part cshiftpath f0 b0 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((\t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))) t)
T * / ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b2 * f0 b3 * b0 b3 * f1 b2 ! c==> * b1 b2 ! c= c? / c/\ c= b3 cshiftpath * f2 b2 f0 b4 * b0 b4 c? / c/\ c= b3 * f0 b4 * b0 b4 ! ! c==> c/\ * b1 b2 * b0 b3 * f1 cshiftpath * f2 b2 f0 b3 cF f3
+ |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x))) = ((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) ==> q')))) = (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x))) = ((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) ==> q'))))
T c= c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 f2 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 f2 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f2
+ |- (((continuous_on (\z. ((% (drop t)) (fstcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) = T)
T c= ccontinuous_on / c% cdrop f0 cfstcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 cT
+ (path p), ((path_image p) SUBSET s) |- (((pathfinish p) = (pathstart p)) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F))))))))))))
T c==> cpath f0 c==> cSUBSET * part cpath_image f0 f1 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f2 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF
+ |- ((\t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) t)
T * / ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 f1
- |- ((~ (_734240 = _734242)) \/ ((~ (_734241 = _734243)) \/ (((x'' _734240) _734241) = ((x'' _734242) _734243))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * f4 f0 f2 * * f4 f1 f3
+ (~ (u (((shiftpath (f x)) p) y))), ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))), ((s x) /\ (t y)) |- F
T c==> c~ * f0 cshiftpath * f1 f2 f3 f4 c==> c/\ ! c\/ ! c\/ c~ c= b0 * f3 b1 c~ * f5 b1 * f0 b0 ! c\/ c~ * f6 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f1 b0 f3 * * f7 b0 b1 * f5 * * f7 b0 b1 ! c\/ c~ c= b1 * f3 b2 c~ * f5 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f1 b0 f3 b2 c~ * f5 b2 c/\ c= b1 * f3 * * f8 b0 b1 * f5 * * f8 b0 b1 c==> c/\ * f6 f2 * f5 f4 cF
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (!x. (!y. ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop b0 creal_le cdrop b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop b1 creal_le cdrop b1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop b0 cdrop b1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f0 cdrop b0 creal_sub cdrop b1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f0 cdrop b0 creal_sub cdrop b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))), ((pathfinish p) = (pathstart p)) |- ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) /\ ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> (~ (!x. (((vector_sub x) x) = (vec (NUMERAL _0))))))))))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c= cpathfinish f1 cpathstart f1 c/\ ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c~ ! c= cvector_sub b0 b0 cvec cNUMERAL c_0
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- (((!c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s)))) ==> ((\c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s)))) c)) = ((\c. (!s. (((continuous_on f) s) ==> ((continuous_on (\x. ((% c) (f x)))) s)))) c))
T c= c==> ! ! c==> ccontinuous_on f0 b1 ccontinuous_on / c% b0 * f0 b2 b1 * / ! c==> ccontinuous_on f0 b1 ccontinuous_on / c% b0 * f0 b2 b1 f1 * / ! c==> ccontinuous_on f0 b1 ccontinuous_on / c% b0 * f0 b2 b1 f1
+ |- ((((continuous_on (\x. ((% (drop t)) (fstcart x)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((continuous_on sndcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (((continuous_on (\x. ((vector_add ((% (drop t)) (fstcart x))) (sndcart x)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = T))
T c==> c/\ ccontinuous_on / c% cdrop f0 cfstcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on part csndcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= ccontinuous_on / cvector_add c% cdrop f0 cfstcart b0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), ((pathfinish p) = (pathstart p)) |- (((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c= cpathfinish f0 cpathstart f0 c= cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (path p), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((continuous_on (\z. (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z)))))
T c==> cpath f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on / * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 b1
- |- ((\x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))))) x)
T * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le b1 b2 creal_le creal_mul f0 b1 creal_mul b0 b2 f1
- (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (~ (((I pathfinish) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) |- ((~ (((I pathfinish) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) /\ (((I pathfinish) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))
T c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> c~ c= cI part cpathfinish f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c/\ c~ c= cI part cpathfinish f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI part cpathfinish f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- (((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))))) ==> ((\a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))))) a)) = ((\a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))))) a))
T c= c==> ! c= * * part cshiftpath b0 f0 / cCOND creal_le cdrop cvector_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add b0 b1 * f0 cvector_add b0 cvector_sub b1 cvec cNUMERAL cBIT1 c_0 * / c= * * part cshiftpath b0 f0 / cCOND creal_le cdrop cvector_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add b0 b1 * f0 cvector_add b0 cvector_sub b1 cvec cNUMERAL cBIT1 c_0 f1 * / c= * * part cshiftpath b0 f0 / cCOND creal_le cdrop cvector_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add b0 b1 * f0 cvector_add b0 cvector_sub b1 cvec cNUMERAL cBIT1 c_0 f1
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((((IMAGE (\z. ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) ((IMAGE (\z. ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))))) = ((continuous_on p) ((IMAGE (\z. ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z)))))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> cSUBSET * * part cIMAGE / cvector_add c% cdrop f0 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 * * part cIMAGE / cvector_add c% cdrop f0 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 ccontinuous_on f1 * * part cIMAGE / cvector_add c% cdrop f0 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1
- |- ((\s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) s)
T * / c==> c~ c==> c/\ ! c==> c? / c/\ c= b1 * f0 b2 * f1 b2 * f2 b1 ! c==> * b0 b1 ! c= c? / c/\ c= b2 cshiftpath * f3 b1 f0 b3 * f1 b3 c? / c/\ c= b2 * f0 b3 * f1 b3 ! ! c==> c/\ * b0 b1 * f1 b2 * f2 cshiftpath * f3 b1 f0 b2 cF f4
- (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))), (((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) |- ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) /\ ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))
T c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 creal_le * f2 b1 f3 b1 c/\ ccontinuous_on f4 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 creal_le f3 * f2 b1 b1 c/\ ccontinuous_on * * part co part clift f2 f1 ! c==> c/\ cIN b0 f1 c= * f2 b0 f3 c= * f0 b0 * f4 b0 c/\ c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 creal_le * f2 b1 f3 b1 c/\ ccontinuous_on f4 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 creal_le f3 * f2 b1 b1 c/\ ccontinuous_on * * part co part clift f2 f1 ! c==> c/\ cIN b0 f1 c= * f2 b0 f3 c= * f0 b0 * f4 b0 ccontinuous_on / cCOND creal_le * f2 b0 f3 * f0 b0 * f4 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) ==> ((\s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) s)) = ((\s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) s))
T c= c==> ! c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 * / c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1 * / c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
+ |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) s)
T * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 f2
+ |- ((!t. (!s. ((path p) ==> (((path_image p) SUBSET s) ==> (((pathfinish p) = (pathstart p)) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> (~ (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))))))))))))))))))) = T)
T c= ! ! c==> cpath f0 c==> cSUBSET * part cpath_image f0 b1 c==> c= cpathfinish f0 cpathstart f0 c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c~ ! c==> c/\ cIN b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop b0 cfstcart b2 csndcart b2 cvec cNUMERAL cBIT1 c_0 c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b2 * b2 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b2 * b2 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b2 * b2 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b2 * b2 cvec cNUMERAL c_0 c==> ! c= cpathstart b2 * b2 cvec cNUMERAL c_0 c==> ! c= cpathstart b2 * b2 cvec cNUMERAL c_0 c==> ! c= cvector_sub b2 b2 cvec cNUMERAL c_0 c==> ! c= cvector_sub b2 b2 cvec cNUMERAL c_0 c~ ! c= cvector_sub b2 b2 cvec cNUMERAL c_0 cT
+ (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) |- ((((I ((I IN) z)) ((I ((I PCROSS) ((I closed_interval) ((I ((I CONS) ((I ((I ,) ((I vec) ((I NUMERAL) _0)))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) NIL)))) ((I closed_interval) ((I ((I CONS) ((I ((I ,) ((I vec) ((I NUMERAL) _0)))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) NIL)))) /\ (((I ((I vector_add) ((I ((I %) ((I drop) t))) ((I fstcart) z)))) ((I sndcart) z)) = ((I vec) ((I NUMERAL) ((I BIT1) _0))))) /\ (~ (((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))))
T c==> c/\ c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c~ c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c/\ c/\ cI * * part cI part cIN f0 * * part cI * * part cI part cPCROSS * * part cI part cclosed_interval cI * * part cI part cCONS cI * * part cI part c, cI part cvec cI part cNUMERAL c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cNIL * * part cI part cclosed_interval cI * * part cI part cCONS cI * * part cI part c, cI part cvec cI part cNUMERAL c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cNIL c= cI * * part cI part cvector_add cI * * part cI part c% cI part cdrop f1 cI part cfstcart f0 cI part csndcart f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c~ c= cI f2 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f2 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- (((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (lift (drop t))) p) x) = (((shiftpath t) p) x)))) /\ (!t'. ((t' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish ((shiftpath ((% (drop t)) t')) p)) = (pathstart ((shiftpath ((% (drop t)) t')) p))))))) = ((((IMAGE (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (lift (drop t))) p) x) = (((shiftpath t) p) x)))) /\ (!t'. ((t' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish ((shiftpath ((% (drop t)) t')) p)) = (pathstart ((shiftpath ((% (drop t)) t')) p)))))))))
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f0 f2 c= c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f0 b0 * f0 b0 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath clift cdrop f1 f0 b0 cshiftpath f1 f0 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath c% cdrop f1 b0 f0 cpathstart * * part cshiftpath c% cdrop f1 b0 f0 c/\ cSUBSET * * part cIMAGE / cshiftpath c% cdrop f1 cfstcart b0 f0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f0 b0 * f0 b0 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath clift cdrop f1 f0 b0 cshiftpath f1 f0 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath c% cdrop f1 b0 f0 cpathstart * * part cshiftpath c% cdrop f1 b0 f0
+ |- ((\g. (!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s)))) g)
T * / ! c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b1 creal_le * f1 b3 f2 b3 c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b1 creal_le f2 * f1 b3 b3 c/\ ccontinuous_on * * part co part clift f1 b1 ! c==> c/\ cIN b2 b1 c= * f1 b2 f2 c= * f0 b2 * b0 b2 ccontinuous_on / cCOND creal_le * f1 b2 f2 * f0 b2 * b0 b2 b1 f3
+ |- ((((I _734343) _734344) = ((I _734345) _734346)) \/ ((~ (_734344 = _734346)) \/ (~ (_734343 = _734345))))
T c\/ c= cI f0 f1 cI f2 f3 c\/ c~ c= f1 f3 c~ c= f0 f2
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_add (a $ i)) ((real_sub (b $ i)) (c $ i))) = ((real_sub ((real_add (a $ i)) (b $ i))) (c $ i))) = (((lambdai. ((real_add (a $ i)) ((lambdai. ((real_sub (b $ i)) (c $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_add (a $ i)) (b $ i))) $ i)) (c $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_add c$ f1 f0 creal_sub c$ f2 f0 c$ f3 f0 creal_sub creal_add c$ f1 f0 c$ f2 f0 c$ f3 f0 c= c$ clambda / creal_add c$ f1 b0 c$ clambda / creal_sub c$ f2 b1 c$ f3 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_add c$ f1 b1 c$ f2 b1 b0 c$ f3 b0 f0
+ |- (((~ (s x)) \/ (?x. (?x'. ((!x. (((x = (((shiftpath (f x)) p) (x x))) /\ (t (x x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p (x' x))) /\ (t (x' x))))))))) = (?x. ((~ (s x)) \/ (?x'. ((!x. (((x = (((shiftpath (f x)) p) (x x))) /\ (t (x x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p (x' x))) /\ (t (x' x))))))))))
T c= c\/ c~ * f0 f1 c? / c? / c/\ ! c\/ c/\ c= b2 cshiftpath * f2 f1 f3 * b0 b2 * f4 * b0 b2 ! c\/ c~ c= b2 * f3 b3 c~ * f4 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f2 f1 f3 b3 c~ * f4 b3 c/\ c= b2 * f3 * b1 b2 * f4 * b1 b2 c? / c\/ c~ * f0 f1 c? / c/\ ! c\/ c/\ c= b2 cshiftpath * f2 f1 f3 * b0 b2 * f4 * b0 b2 ! c\/ c~ c= b2 * f3 b3 c~ * f4 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f2 f1 f3 b3 c~ * f4 b3 c/\ c= b2 * f3 * b1 b2 * f4 * b1 b2
+ |- (((~ (s _734227)) \/ ((~ (_734228 = (((shiftpath (f _734227)) p) _734229))) \/ ((~ (t _734229)) \/ (t ((x'' _734227) _734228))))) = ((t ((x'' _734227) _734228)) \/ ((~ (s _734227)) \/ ((~ (_734228 = (((shiftpath (f _734227)) p) _734229))) \/ (~ (t _734229))))))
T c= c\/ c~ * f0 f1 c\/ c~ c= f2 cshiftpath * f3 f1 f4 f5 c\/ c~ * f6 f5 * f6 * * f7 f1 f2 c\/ * f6 * * f7 f1 f2 c\/ c~ * f0 f1 c\/ c~ c= f2 cshiftpath * f3 f1 f4 f5 c~ * f6 f5
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) |- (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))
T c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! c==> c/\ * f3 f5 * f1 b0 * f2 cshiftpath * f4 f5 f0 b0
+ |- ((\s. (!c. ((continuous_on (\x. c)) s))) s)
T * / ! ccontinuous_on / b1 b0 f0
+ |- (((!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t))))) ==> ((\x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t))))) x)) = ((\x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t))))) x))
T c= c==> ! ! c= cIN cpastecart b0 b1 * * part cPCROSS f0 f1 c/\ cIN b0 f0 cIN b1 f1 * / ! c= cIN cpastecart b0 b1 * * part cPCROSS f0 f1 c/\ cIN b0 f0 cIN b1 f1 f2 * / ! c= cIN cpastecart b0 b1 * * part cPCROSS f0 f1 c/\ cIN b0 f0 cIN b1 f1 f2
- |- ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))
T creal_le creal_of_num cNUMERAL c_0 creal_of_num f0
+ |- (T = (linear sndcart))
T c= cT clinear part csndcart
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (((s _734227) /\ ((_734228 = (((shiftpath (f _734227)) p) _734229)) /\ (t _734229))) ==> (t ((x'' _734227) _734228)))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c==> c/\ * f3 f7 c/\ c= f8 cshiftpath * f4 f7 f0 f9 * f1 f9 * f1 * * f6 f7 f8
+ |- (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))
T c==> c= c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 f3 c==> c==> f3 c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f4 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> f3 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((pathfinish p) = (pathstart p)) /\ (((% (drop t)) x) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ c= cpathfinish f0 cpathstart f0 cIN c% cdrop f1 f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- (((!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) ==> ((\s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) s)) = ((\s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) s))
T c= c==> ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b1 * f0 b2 * f1 b2 * f2 b1 ! c==> * b0 b1 ! c= c? / c/\ c= b2 cshiftpath * f3 b1 f0 b3 * f1 b3 c? / c/\ c= b2 * f0 b3 * f1 b3 ! ! c==> c/\ * b0 b1 * f1 b2 * f2 cshiftpath * f3 b1 f0 b2 cF * / c==> c~ c==> c/\ ! c==> c? / c/\ c= b1 * f0 b2 * f1 b2 * f2 b1 ! c==> * b0 b1 ! c= c? / c/\ c= b2 cshiftpath * f3 b1 f0 b3 * f1 b3 c? / c/\ c= b2 * f0 b3 * f1 b3 ! ! c==> c/\ * b0 b1 * f1 b2 * f2 cshiftpath * f3 b1 f0 b2 cF f4 * / c==> c~ c==> c/\ ! c==> c? / c/\ c= b1 * f0 b2 * f1 b2 * f2 b1 ! c==> * b0 b1 ! c= c? / c/\ c= b2 cshiftpath * f3 b1 f0 b3 * f1 b3 c? / c/\ c= b2 * f0 b3 * f1 b3 ! ! c==> c/\ * b0 b1 * f1 b2 * f2 cshiftpath * f3 b1 f0 b2 cF f4
+ |- (((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (?x. (?x'. (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x x) x))) /\ (t ((x x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x' x) x))) /\ (t ((x' x) x))))))))))) = (?x. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (?x'. (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x x) x))) /\ (t ((x x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x' x) x))) /\ (t ((x' x) x))))))))))))
T c= c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 c? / c? / ! c\/ c~ * f3 b2 c/\ ! c\/ c/\ c= b3 cshiftpath * f4 b2 f0 * * b0 b2 b3 * f1 * * b0 b2 b3 ! c\/ c~ c= b3 * f0 b4 c~ * f1 b4 ! c\/ ! c\/ c~ c= b3 cshiftpath * f4 b2 f0 b4 c~ * f1 b4 c/\ c= b3 * f0 * * b1 b2 b3 * f1 * * b1 b2 b3 c? / c/\ ! c\/ ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 * f2 b1 c? / ! c\/ c~ * f3 b2 c/\ ! c\/ c/\ c= b3 cshiftpath * f4 b2 f0 * * b0 b2 b3 * f1 * * b0 b2 b3 ! c\/ c~ c= b3 * f0 b4 c~ * f1 b4 ! c\/ ! c\/ c~ c= b3 cshiftpath * f4 b2 f0 b4 c~ * f1 b4 c/\ c= b3 * f0 * * b1 b2 b3 * f1 * * b1 b2 b3
- |- (((((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) ==> (((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))) = (((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF
+ |- ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) |- (((~ T) ==> ((p ((vector_sub x) (vec (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) (p x)) (p ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = (((COND T) (p x)) e')))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ cT c= * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f2 c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND cT * f1 f0 f2
+ |- (((!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))) ==> ((\y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))) y)) = ((\y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))) y))
T c= c==> ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 f1 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 f1
+ (~ ((real_le (drop _734256)) (real_of_num (NUMERAL (BIT1 _0))))) |- ((~ ((real_le (drop _734256)) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((p ((vector_add (vec (NUMERAL _0))) ((vector_sub _734256) (vec (NUMERAL (BIT1 _0)))))) = (p ((vector_sub _734256) (vec (NUMERAL (BIT1 _0)))))))
T c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((path_image p) SUBSET s) |- ((I ((I SUBSET) ((I path_image) p))) s)
T c==> cSUBSET * part cpath_image f0 f1 cI * * part cI part cSUBSET * * part cI part cpath_image f0 f1
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (((!x. (((~ (_734225 = ((I p) x))) \/ (~ (t x))) \/ (u _734225))) ==> ((\x. (((~ (_734225 = ((I p) x))) \/ (~ (t x))) \/ (u _734225))) _734226)) = ((\x. (((~ (_734225 = ((I p) x))) \/ (~ (t x))) \/ (u _734225))) _734226))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c= c==> ! c\/ c\/ c~ c= f7 cI f0 b0 c~ * f1 b0 * f2 f7 * / c\/ c\/ c~ c= f7 cI f0 b0 c~ * f1 b0 * f2 f7 f8 * / c\/ c\/ c~ c= f7 cI f0 b0 c~ * f1 b0 * f2 f7 f8
- |- ((?z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) = ((?z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0)))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))))
T c= c? / c/\ c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c~ c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c/\ c? / c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c~ c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
- |- ((~ (_734250 = _734253)) \/ ((~ (_734252 = _734255)) \/ ((~ (_734251 = _734254)) \/ ((((shiftpath _734250) _734251) _734252) = (((shiftpath _734253) _734254) _734255)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= cshiftpath f0 f4 f2 cshiftpath f1 f5 f3
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) |- (((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I vec) ((I NUMERAL) _0))))
T c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI part cvec cI part cNUMERAL c_0
- |- ((_734250 = _734253) ==> ((~ (_734252 = _734255)) \/ ((~ (_734251 = _734254)) \/ ((((shiftpath _734250) _734251) _734252) = (((shiftpath _734253) _734254) _734255)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= cshiftpath f0 f4 f2 cshiftpath f1 f5 f3
+ |- (((!x. (((x = (((shiftpath (f x)) p) (x x))) /\ (t (x x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (?x. (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p (x x))) /\ (t (x x))))))) = (?x'. ((!x. (((x = (((shiftpath (f x)) p) (x x))) /\ (t (x x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p (x' x))) /\ (t (x' x))))))))
T c= c/\ ! c\/ c/\ c= b0 cshiftpath * f0 f1 f2 * f3 b0 * f4 * f3 b0 ! c\/ c~ c= b0 * f2 b1 c~ * f4 b1 c? / ! c\/ ! c\/ c~ c= b1 cshiftpath * f0 f1 f2 b2 c~ * f4 b2 c/\ c= b1 * f2 * b0 b1 * f4 * b0 b1 c? / c/\ ! c\/ c/\ c= b1 cshiftpath * f0 f1 f2 * f3 b1 * f4 * f3 b1 ! c\/ c~ c= b1 * f2 b2 c~ * f4 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f0 f1 f2 b2 c~ * f4 b2 c/\ c= b1 * f2 * b0 b1 * f4 * b0 b1
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (path p), (((path_image p) SUBSET s) /\ (((pathfinish p) = (pathstart p)) /\ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))), ((path_image p) SUBSET s) |- (((homotopic_loops s) p) ((shiftpath t) p))
T c==> cpath f0 c==> c/\ cSUBSET * part cpath_image f0 f1 c/\ c= cpathfinish f0 cpathstart f0 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f0 f1 chomotopic_loops f1 f0 * * part cshiftpath f2 f0
+ |- ((\h. (!a. (!f. (!g. (!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) h)
T * / ! ! ! ! c==> c/\ ccontinuous_on b2 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b4 creal_le * b0 b6 b1 b6 c/\ ccontinuous_on b3 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b4 creal_le b1 * b0 b6 b6 c/\ ccontinuous_on * * part co part clift b0 b4 ! c==> c/\ cIN b5 b4 c= * b0 b5 b1 c= * b2 b5 * b3 b5 ccontinuous_on / cCOND creal_le * b0 b5 b1 * b2 b5 * b3 b5 b4 f0
+ |- ((\q'. (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y)))))) = p') ==> ((p' ==> ((((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y)))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop cfstcart cpastecart f0 f1 cdrop csndcart cpastecart f0 f1 f3 c==> c==> f3 c= cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop cfstcart cpastecart f0 f1 cdrop csndcart cpastecart f0 f1 cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f3 b0 f4
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- (((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y))) = T)
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 cT
+ (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- (((continuous_on (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath ((% (drop t)) (vec (NUMERAL _0)))) p) x) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath ((% (drop t)) (vec (NUMERAL (BIT1 _0))))) p) x) = (((shiftpath t) p) x)))) /\ (!t'. ((t' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish (\x. (((shiftpath ((% (drop t)) t')) p) x))) = (pathstart (\x. (((shiftpath ((% (drop t)) t')) p) x))))))))))
T c==> cpath f0 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f0 f2 c/\ ccontinuous_on / cshiftpath c% cdrop f1 cfstcart b0 f0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE / cshiftpath c% cdrop f1 cfstcart b0 f0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath c% cdrop f1 cvec cNUMERAL c_0 f0 b0 * f0 b0 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath c% cdrop f1 cvec cNUMERAL cBIT1 c_0 f0 b0 cshiftpath f1 f0 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish / cshiftpath c% cdrop f1 b0 f0 b1 cpathstart / cshiftpath c% cdrop f1 b0 f0 b1
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1
+ (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), ((pathfinish p) = (pathstart p)) |- ((((((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) /\ (((I pathstart) p) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) ==> (((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) = (((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c= cpathfinish f0 cpathstart f0 c= c==> c/\ c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI part cpathstart f0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- |- ((\n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n))) n)
T * / creal_le creal_of_num cNUMERAL c_0 creal_of_num b0 f0
- |- ((\p'. (!q'. (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) = p') ==> ((p' ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 b0 c==> c==> b0 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b1 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> b0 b1 f3
+ |- ((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b))))
T c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ creal_le cdrop f1 cdrop f0 creal_le cdrop f0 cdrop f2
+ |- ((!x. ((x IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z))) x) IN s))) = (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z))) ((pastecart x) y)) IN s)))))
T c= ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cshiftpath c% cdrop f0 cfstcart b1 f1 csndcart b1 b0 f2 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cshiftpath c% cdrop f0 cfstcart b2 f1 csndcart b2 cpastecart b0 b1 f2
- (_734396 = _734398) |- ((_734396 = _734398) /\ ((~ (_734395 = _734397)) \/ (((I _734395) _734396) = ((I _734397) _734398))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_le (real_of_num (NUMERAL _0))) (drop x)) = T)
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_of_num cNUMERAL c_0 cdrop f0 cT
+ |- (((((continuous_on (lift o (\z. (drop t)))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) /\ ((continuous_on fstcart) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z)))))) ==> (((continuous_on (\z. ((% (drop t)) (fstcart z)))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) = T)) = (((continuous_on (\z. ((% (drop t)) (fstcart z)))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) = T))
T c= c==> c/\ ccontinuous_on * * part co part clift / cdrop f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 ccontinuous_on part cfstcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 c= ccontinuous_on / c% cdrop f0 cfstcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 cT c= ccontinuous_on / c% cdrop f0 cfstcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 cT
+ ((x = y) = ((lift x) = (lift y))) |- (((lift x) = (lift y)) = (x = y))
T c==> c= c= f0 f1 c= clift f0 clift f1 c= c= clift f0 clift f1 c= f0 f1
+ |- (((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ ((~ (x = ((I p) x))) \/ (~ (t x))))) /\ (!x. (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ ((x = ((I p) ((x'' x) x))) /\ (t ((x'' x) x)))))) = (!x. ((((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ ((~ (x = ((I p) x))) \/ (~ (t x)))) /\ (((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))) \/ ((x = ((I p) ((x'' x) x))) /\ (t ((x'' x) x)))))))
T c= c/\ ! c\/ c/\ c= f0 cshiftpath * f1 f2 f3 * * f4 f2 f0 * f5 * * f4 f2 f0 c\/ c~ c= f0 cI f3 b0 c~ * f5 b0 ! c\/ c\/ c~ c= f0 cshiftpath * f1 f2 f3 b0 c~ * f5 b0 c/\ c= f0 cI f3 * * f6 f2 f0 * f5 * * f6 f2 f0 ! c/\ c\/ c/\ c= f0 cshiftpath * f1 f2 f3 * * f4 f2 f0 * f5 * * f4 f2 f0 c\/ c~ c= f0 cI f3 b0 c~ * f5 b0 c\/ c\/ c~ c= f0 cshiftpath * f1 f2 f3 b0 c~ * f5 b0 c/\ c= f0 cI f3 * * f6 f2 f0 * f5 * * f6 f2 f0
- (_734250 = _734253) |- ((_734250 = _734253) /\ ((~ (_734252 = _734255)) \/ ((~ (_734251 = _734254)) \/ ((((shiftpath _734250) _734251) _734252) = (((shiftpath _734253) _734254) _734255)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= cshiftpath f0 f4 f2 cshiftpath f1 f5 f3
+ ((s x) /\ (t y)) |- ((s x) /\ (((((shiftpath (f x)) p) y) = (((shiftpath (f x)) p) y)) /\ (t y)))
T c==> c/\ * f0 f1 * f2 f3 c/\ * f0 f1 c/\ c= cshiftpath * f4 f1 f5 f3 cshiftpath * f4 f1 f5 f3 * f2 f3
- (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))), (((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))
T c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 c==> c/\ c= cpathfinish f0 cpathstart f0 cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ c/\ c= cpathfinish f0 cpathstart f0 cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f1 f0 cpathstart * * part cshiftpath f1 f0
+ (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- ((\h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (((shiftpath t) p) x)))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish (h o (pastecart t))) = (pathstart (h o (pastecart t))))))))))) (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z))))
T c==> cpath f0 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f0 f2 * / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f0 b1 c/\ ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b0 cpastecart cvec cNUMERAL cBIT1 c_0 b1 cshiftpath f1 f0 b1 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part co b0 * part cpastecart b1 cpathstart * * part co b0 * part cpastecart b1 / cshiftpath c% cdrop f1 cfstcart b0 f0 csndcart b0
+ (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), (~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))), ((pathfinish p) = (pathstart p)) |- ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) /\ F)
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f1 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c= cpathfinish f1 cpathstart f1 c/\ ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF
+ (((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) |- ((!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))) = T)
T c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 c= ! c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 b0 creal_le * f1 b2 f2 b2 c/\ ccontinuous_on f3 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 b0 creal_le f2 * f1 b2 b2 c/\ ccontinuous_on * * part co part clift f1 b0 ! c==> c/\ cIN b1 b0 c= * f1 b1 f2 c= * f0 b1 * f3 b1 ccontinuous_on / cCOND creal_le * f1 b1 f2 * f0 b1 * f3 b1 b0 cT
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) ==> (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))))
T c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1
+ |- (((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) ==> ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) f)) = ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))))) f))
T c= c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 f0 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 b2 ccontinuous_on / cvector_sub * b0 b3 * b1 b3 b2 f0
+ ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish ((shiftpath ((% (drop t)) x)) p)) = (pathstart ((shiftpath ((% (drop t)) x)) p))))
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath c% cdrop f1 f2 f0 cpathstart * * part cshiftpath c% cdrop f1 f2 f0
- (((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))) |- ((((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))) /\ (((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))))
T c==> c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2 c/\ c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2 c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2
- |- (((!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))) ==> ((\y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))) y)) = ((\y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))) y))
T c= c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 b1 creal_le creal_mul f0 b0 creal_mul f1 b1 * / ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 b1 creal_le creal_mul f0 b0 creal_mul f1 b1 f2 * / ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 b1 creal_le creal_mul f0 b0 creal_mul f1 b1 f2
+ |- ((\y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))) y)
T * / c= clift creal_add f0 b0 cvector_add clift f0 clift b0 f1
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = ((I p) x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = ((I p) ((x'' x) x))) /\ (t ((x'' x) x))))))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 cI f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 cI f0 * * f6 b0 b1 * f1 * * f6 b0 b1
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ ((pathfinish p) = (pathstart p)) |- ((((real_le (real_of_num (NUMERAL _0))) ((real_mul (drop t)) (drop x))) /\ ((real_le ((real_mul (drop t)) (drop x))) (real_of_num (NUMERAL (BIT1 _0))))) = ((((% (drop t)) x) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish p) = (pathstart p))))
T c==> c= cpathfinish f0 cpathstart f0 c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul cdrop f1 cdrop f2 creal_le creal_mul cdrop f1 cdrop f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ cIN c% cdrop f1 f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish f0 cpathstart f0
+ |- ((\p. (!q. ((((homotopic_loops s) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x)))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish (h o (pastecart t))) = (pathstart (h o (pastecart t)))))))))))))) p)
T * / ! c= chomotopic_loops f0 b0 b1 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 c/\ ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b2 cpastecart cvec cNUMERAL cBIT1 c_0 b3 * b1 b3 ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part co b2 * part cpastecart b3 cpathstart * * part co b2 * part cpastecart b3 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (path p), (((path_image p) SUBSET s) /\ (((pathfinish p) = (pathstart p)) /\ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) |- (((homotopic_loops s) p) ((shiftpath t) p))
T c==> cpath f0 c==> c/\ cSUBSET * part cpath_image f0 f1 c/\ c= cpathfinish f0 cpathstart f0 cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chomotopic_loops f1 f0 * * part cshiftpath f2 f0
+ |- ((((continuous_on (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath ((% (drop t)) (vec (NUMERAL _0)))) p) x) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath ((% (drop t)) (vec (NUMERAL (BIT1 _0))))) p) x) = (((shiftpath t) p) x)))) /\ (!t'. ((t' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish (\x. (((shiftpath ((% (drop t)) t')) p) x))) = (pathstart (\x. (((shiftpath ((% (drop t)) t')) p) x)))))))))) = (((continuous_on (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z))) ((pastecart (vec (NUMERAL _0))) x)) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z))) ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (((shiftpath t) p) x)))) /\ (!t'. ((t' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish ((\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z))) o (pastecart t'))) = (pathstart ((\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z))) o (pastecart t')))))))))))
T c= c/\ ccontinuous_on / cshiftpath c% cdrop f0 cfstcart b0 f1 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE / cshiftpath c% cdrop f0 cfstcart b0 f1 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath c% cdrop f0 cvec cNUMERAL c_0 f1 b0 * f1 b0 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath c% cdrop f0 cvec cNUMERAL cBIT1 c_0 f1 b0 cshiftpath f0 f1 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish / cshiftpath c% cdrop f0 b0 f1 b1 cpathstart / cshiftpath c% cdrop f0 b0 f1 b1 c/\ ccontinuous_on / cshiftpath c% cdrop f0 cfstcart b0 f1 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE / cshiftpath c% cdrop f0 cfstcart b0 f1 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * / cshiftpath c% cdrop f0 cfstcart b1 f1 csndcart b1 cpastecart cvec cNUMERAL c_0 b0 * f1 b0 c/\ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * / cshiftpath c% cdrop f0 cfstcart b1 f1 csndcart b1 cpastecart cvec cNUMERAL cBIT1 c_0 b0 cshiftpath f0 f1 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part co / cshiftpath c% cdrop f0 cfstcart b1 f1 csndcart b1 * part cpastecart b0 cpathstart * * part co / cshiftpath c% cdrop f0 cfstcart b1 f1 csndcart b1 * part cpastecart b0
+ (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) |- ((((COND ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) (p x)) (p ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = (((COND T) (p x)) (p ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND cT * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0
+ (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) |- (~ (((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))))
T c==> c/\ c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c~ c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c~ c= cI f2 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f2 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
+ |- ((\y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))) y)
T * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 creal_add f0 b0 f1
+ ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((path_image ((shiftpath ((% (drop t)) x)) p)) = (path_image p))) = T)
T c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * part cpath_image * * part cshiftpath c% cdrop f1 f2 f0 * part cpath_image f0 cT
- (~ (u (((shiftpath (f x)) p) y))), ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))), ((s x) /\ (t y)) |- ((~ (u (((shiftpath (f x)) p) y))) /\ (u (((shiftpath (f x)) p) y)))
T c==> c~ * f0 cshiftpath * f1 f2 f3 f4 c==> c/\ ! c\/ ! c\/ c~ c= b0 * f3 b1 c~ * f5 b1 * f0 b0 ! c\/ c~ * f6 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f1 b0 f3 * * f7 b0 b1 * f5 * * f7 b0 b1 ! c\/ c~ c= b1 * f3 b2 c~ * f5 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f1 b0 f3 b2 c~ * f5 b2 c/\ c= b1 * f3 * * f8 b0 b1 * f5 * * f8 b0 b1 c==> c/\ * f6 f2 * f5 f4 c/\ c~ * f0 cshiftpath * f1 f2 f3 f4 * f0 cshiftpath * f1 f2 f3 f4
- |- ((!p. (!f. (!u. (!t. (!s. (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))))))) = (!p. (!f. (!u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)))))))
T c= ! ! ! ! ! c==> c/\ ! c==> c? / c/\ c= b5 * b0 b6 * b3 b6 * b2 b5 ! c==> * b4 b5 ! c= c? / c/\ c= b6 cshiftpath * b1 b5 b0 b7 * b3 b7 c? / c/\ c= b6 * b0 b7 * b3 b7 ! ! c==> c/\ * b4 b5 * b3 b6 * b2 cshiftpath * b1 b5 b0 b6 ! ! ! ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b5 * b0 b6 * b3 b6 * b2 b5 ! c==> * b4 b5 ! c= c? / c/\ c= b6 cshiftpath * b1 b5 b0 b7 * b3 b7 c? / c/\ c= b6 * b0 b7 * b3 b7 ! ! c==> c/\ * b4 b5 * b3 b6 * b2 cshiftpath * b1 b5 b0 b6 cF
- (((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!f. (!g. ((\x. (f (g x))) = (f o g)))) ==> ((\f. (!g. ((\x. (f (g x))) = (f o g)))) f)) = ((\f. (!g. ((\x. (f (g x))) = (f o g)))) f))
T c= c==> ! ! c= / * b0 * b1 b2 * * part co b0 b1 * / ! c= / * b0 * b1 b2 * * part co b0 b1 f0 * / ! c= / * b0 * b1 b2 * * part co b0 b1 f0
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (((!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) ==> ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s)) = ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 c= c==> ! ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
+ ((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) |- (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) /\ (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))
T c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 c/\ c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1
- |- ((!x'. ((~ (s x)) \/ (!x. (((?x. ((x = (((shiftpath (f x')) p) x)) /\ (t x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x))))) /\ ((!x. ((~ (x = (((shiftpath (f x')) p) x))) \/ (~ (t x)))) \/ (?x. ((x = (p x)) /\ (t x)))))))) = ((~ (s x)) \/ (!x. (!x. (((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x))))) /\ ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ (?x. ((x = (p x)) /\ (t x)))))))))
T c= ! c\/ c~ * f0 f1 ! c/\ c\/ c? / c/\ c= b1 cshiftpath * f2 b0 f3 b2 * f4 b2 ! c\/ c~ c= b1 * f3 b2 c~ * f4 b2 c\/ ! c\/ c~ c= b1 cshiftpath * f2 b0 f3 b2 c~ * f4 b2 c? / c/\ c= b1 * f3 b2 * f4 b2 c\/ c~ * f0 f1 ! ! c/\ c\/ c? / c/\ c= b1 cshiftpath * f2 b0 f3 b2 * f4 b2 ! c\/ c~ c= b1 * f3 b2 c~ * f4 b2 c\/ ! c\/ c~ c= b1 cshiftpath * f2 b0 f3 b2 c~ * f4 b2 c? / c/\ c= b1 * f3 b2 * f4 b2
+ (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) |- ((\a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))) a)
T c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 * / c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f1 creal_le * f2 b2 b0 b2 c/\ ccontinuous_on f3 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f1 creal_le b0 * f2 b2 b2 c/\ ccontinuous_on * * part co part clift f2 f1 ! c==> c/\ cIN b1 f1 c= * f2 b1 b0 c= * f0 b1 * f3 b1 ccontinuous_on / cCOND creal_le * f2 b1 b0 * f0 b1 * f3 b1 f1 f4
- (_734248 = _734249) |- ((_734248 = _734249) /\ ((f _734248) = (f _734249)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * f2 f0 * f2 f1
+ (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le (real_of_num (NUMERAL _0))) ((real_mul (drop t)) (drop x))) /\ ((real_le (real_of_num (NUMERAL _0))) (drop y)))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul cdrop f2 cdrop f0 creal_le creal_of_num cNUMERAL c_0 cdrop f1
+ (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_add (f x)) (g x)))) s))) s))
T c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_add * f0 b1 * f1 b1 b0 f2
+ |- (((!p. (!q. ((((homotopic_loops s) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x)))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish (h o (pastecart t))) = (pathstart (h o (pastecart t)))))))))))))) ==> ((\p. (!q. ((((homotopic_loops s) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x)))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish (h o (pastecart t))) = (pathstart (h o (pastecart t)))))))))))))) p)) = ((\p. (!q. ((((homotopic_loops s) p) q) = (?h. (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET s) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL _0))) x)) = (p x)))) /\ ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((h ((pastecart (vec (NUMERAL (BIT1 _0)))) x)) = (q x)))) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((pathfinish (h o (pastecart t))) = (pathstart (h o (pastecart t)))))))))))))) p))
T c= c==> ! ! c= chomotopic_loops f0 b0 b1 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 c/\ ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b2 cpastecart cvec cNUMERAL cBIT1 c_0 b3 * b1 b3 ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part co b2 * part cpastecart b3 cpathstart * * part co b2 * part cpastecart b3 * / ! c= chomotopic_loops f0 b0 b1 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 c/\ ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b2 cpastecart cvec cNUMERAL cBIT1 c_0 b3 * b1 b3 ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part co b2 * part cpastecart b3 cpathstart * * part co b2 * part cpastecart b3 f1 * / ! c= chomotopic_loops f0 b0 b1 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 c/\ ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * b2 cpastecart cvec cNUMERAL cBIT1 c_0 b3 * b1 b3 ! c==> cIN b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part co b2 * part cpastecart b3 cpathstart * * part co b2 * part cpastecart b3 f1
- (~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) |- F
T c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF
- |- ((!x'. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x')))) = ((~ (x = (((shiftpath (f x)) p) x))) \/ (!x. (~ (t x)))))
T c= ! c\/ c~ c= f0 cshiftpath * f1 f2 f3 f4 c~ * f5 b0 c\/ c~ c= f0 cshiftpath * f1 f2 f3 f4 ! c~ * f5 b0
+ |- ((\p'. (!q'. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> (((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 b1 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f1 f0 * f1 f0 c==> b0 b1 f2
+ |- (((continuous_on (\z. c)) s) = T)
T c= ccontinuous_on / f0 f1 cT
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t)
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((((real_le (real_of_num (NUMERAL _0))) (drop t)) /\ ((real_le (real_of_num (NUMERAL _0))) (drop x))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul (drop t)) (drop x))) = T)) = (((real_le (real_of_num (NUMERAL _0))) ((real_mul (drop t)) (drop x))) = T))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f2 creal_le creal_of_num cNUMERAL c_0 cdrop f0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul cdrop f2 cdrop f0 cT c= creal_le creal_of_num cNUMERAL c_0 creal_mul cdrop f2 cdrop f0 cT
+ ((real_le (real_of_num (NUMERAL _0))) (drop x)), ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0)))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le ((real_mul (drop t)) (drop x))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 cdrop f0 c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_le creal_mul cdrop f1 cdrop f0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cT
+ (path p), ((pathfinish p) = (pathstart p)), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((path_image p) SUBSET s) |- ((continuous_on (\z. (((shiftpath ((% (drop t)) (fstcart z))) p) (sndcart z)))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c==> cpath f0 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET * part cpath_image f0 f2 ccontinuous_on / cshiftpath c% cdrop f1 cfstcart b0 f0 csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- ((!x'. ((~ (x = (p x))) \/ (~ (t x')))) = ((~ (x = (p x))) \/ (!x. (~ (t x)))))
T c= ! c\/ c~ c= f0 * f1 f2 c~ * f3 b0 c\/ c~ c= f0 * f1 f2 ! c~ * f3 b0
+ |- ((!s. ((path p) ==> (((path_image p) SUBSET s) ==> (((pathfinish p) = (pathstart p)) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> (~ (!x. (((vector_sub x) x) = (vec (NUMERAL _0))))))))))))))))))) = T)
T c= ! c==> cpath f0 c==> cSUBSET * part cpath_image f0 b0 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c~ ! c==> c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart b1 csndcart b1 cvec cNUMERAL cBIT1 c_0 c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b1 * b1 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b1 * b1 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b1 * b1 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b1 * b1 cvec cNUMERAL c_0 c==> ! c= cpathstart b1 * b1 cvec cNUMERAL c_0 c==> ! c= cpathstart b1 * b1 cvec cNUMERAL c_0 c==> ! c= cvector_sub b1 b1 cvec cNUMERAL c_0 c==> ! c= cvector_sub b1 b1 cvec cNUMERAL c_0 c~ ! c= cvector_sub b1 b1 cvec cNUMERAL c_0 cT
+ |- ((\p'. (!q'. (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y)))))) = p') ==> ((p' ==> ((((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y)))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop cfstcart cpastecart f0 f1 cdrop csndcart cpastecart f0 f1 b0 c==> c==> b0 c= cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop cfstcart cpastecart f0 f1 cdrop csndcart cpastecart f0 f1 cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f3
+ ((path_image p) SUBSET s) |- (((path_image p) SUBSET s) /\ (((pathfinish p) = (pathstart p)) ==> ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((~ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!g. ((pathstart g) = (g (vec (NUMERAL _0))))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> (~ (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))))))))))))))))
T c==> cSUBSET * part cpath_image f0 f1 c/\ cSUBSET * part cpath_image f0 f1 c==> c= cpathfinish f0 cpathstart f0 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c~ ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f2 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c~ ! c= cvector_sub b0 b0 cvec cNUMERAL c_0
+ |- (T = (((continuous_on (\z. ((% (drop t)) (fstcart z)))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) /\ ((continuous_on sndcart) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z)))))))
T c= cT c/\ ccontinuous_on / c% cdrop f0 cfstcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 ccontinuous_on part csndcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1
+ |- (((continuous_on fstcart) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) = T)
T c= ccontinuous_on part cfstcart * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f0 cdrop cfstcart b1 cdrop csndcart b1 b1 cT
+ |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((vector_sub (f x)) (g x)))) s))) s)
T * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cvector_sub * f0 b1 * f1 b1 b0 f2
+ ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (!x. ((((~ (s _734227)) \/ ((_734228 = (((shiftpath (f _734227)) p) ((x' _734227) _734228))) \/ ((~ (_734228 = ((I p) x))) \/ (~ (t x))))) /\ ((~ (s _734227)) \/ ((t ((x' _734227) _734228)) \/ ((~ (_734228 = ((I p) x))) \/ (~ (t x)))))) /\ (((~ (s _734227)) \/ (((~ (_734228 = (((shiftpath (f _734227)) p) x))) \/ (~ (t x))) \/ (_734228 = ((I p) ((x'' _734227) _734228))))) /\ ((~ (s _734227)) \/ (((~ (_734228 = (((shiftpath (f _734227)) p) x))) \/ (~ (t x))) \/ (t ((x'' _734227) _734228)))))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 ! c/\ c/\ c\/ c~ * f3 f7 c\/ c= f8 cshiftpath * f4 f7 f0 * * f5 f7 f8 c\/ c~ c= f8 cI f0 b0 c~ * f1 b0 c\/ c~ * f3 f7 c\/ * f1 * * f5 f7 f8 c\/ c~ c= f8 cI f0 b0 c~ * f1 b0 c/\ c\/ c~ * f3 f7 c\/ c\/ c~ c= f8 cshiftpath * f4 f7 f0 b0 c~ * f1 b0 c= f8 cI f0 * * f6 f7 f8 c\/ c~ * f3 f7 c\/ c\/ c~ c= f8 cshiftpath * f4 f7 f0 b0 c~ * f1 b0 * f1 * * f6 f7 f8
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (T = (((real_le (real_of_num (NUMERAL _0))) (drop t)) /\ ((real_le (real_of_num (NUMERAL _0))) (drop x))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cT c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le creal_of_num cNUMERAL c_0 cdrop f1
+ (((% x) (vec (NUMERAL (BIT1 _0)))) = (lift x)) |- ((lift x) = ((% x) (vec (NUMERAL (BIT1 _0)))))
T c==> c= c% f0 cvec cNUMERAL cBIT1 c_0 clift f0 c= clift f0 c% f0 cvec cNUMERAL cBIT1 c_0
+ |- ((\x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) x)
T * / c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 f2
+ |- (((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F)) = ((!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) ==> F))
T c= c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 cF
+ (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))), (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0))))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y)))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) ((vector_sub (sndcart ((pastecart x) y))) (vec (NUMERAL (BIT1 _0))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop cfstcart cpastecart f0 f1 cdrop csndcart cpastecart f0 f1 cIN cvector_add c% cdrop f2 cfstcart cpastecart f0 f1 cvector_sub csndcart cpastecart f0 f1 cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x'. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) \/ (!x. ((~ (x' = (p x))) \/ (~ (t x)))))) = ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) \/ (!x. (!x. ((~ (x = (p x))) \/ (~ (t x)))))))
T c= ! c\/ c? / c/\ c= f0 cshiftpath * f1 f2 f3 b1 * f4 b1 ! c\/ c~ c= b0 * f3 b1 c~ * f4 b1 c\/ c? / c/\ c= f0 cshiftpath * f1 f2 f3 b0 * f4 b0 ! ! c\/ c~ c= b0 * f3 b1 c~ * f4 b1
+ (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), ((pathfinish p) = (pathstart p)) |- (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))
T c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> c= cpathfinish f0 cpathstart f0 c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
+ |- ((\f. (!g. (!s. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))) f)
T * / ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b2 creal_le * f0 b4 f1 b4 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 b2 creal_le f1 * f0 b4 b4 c/\ ccontinuous_on * * part co part clift f0 b2 ! c==> c/\ cIN b3 b2 c= * f0 b3 f1 c= * b0 b3 * b1 b3 ccontinuous_on / cCOND creal_le * f0 b3 f1 * b0 b3 * b1 b3 b2 f2
- ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F), (((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) |- (((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) /\ ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c/\ c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) (sndcart ((pastecart x) y))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)) ==> (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) (sndcart ((pastecart x) y))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) ==> T))) = (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) (sndcart ((pastecart x) y))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) ==> T)))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f2 creal_le cdrop f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f0 cdrop f1 cdrop f2 creal_of_num cNUMERAL cBIT1 c_0 c= cIN cvector_add c% cdrop f0 cfstcart cpastecart f1 f2 csndcart cpastecart f1 f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT c= c==> c/\ c/\ cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart cpastecart f1 f2 cdrop csndcart cpastecart f1 f2 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% cdrop f0 cfstcart cpastecart f1 f2 csndcart cpastecart f1 f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f2 creal_le cdrop f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f0 cdrop f1 cdrop f2 creal_of_num cNUMERAL cBIT1 c_0 cT c= c==> c/\ c/\ cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart cpastecart f1 f2 cdrop csndcart cpastecart f1 f2 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% cdrop f0 cfstcart cpastecart f1 f2 csndcart cpastecart f1 f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f2 creal_le cdrop f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f0 cdrop f1 cdrop f2 creal_of_num cNUMERAL cBIT1 c_0 cT
- |- ((!s. (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) = T)
T c= ! c==> c/\ ! c==> c? / c/\ c= b1 * f0 b2 * f1 b2 * f2 b1 ! c==> * b0 b1 ! c= c? / c/\ c= b2 cshiftpath * f3 b1 f0 b3 * f1 b3 c? / c/\ c= b2 * f0 b3 * f1 b3 ! ! c==> c/\ * b0 b1 * f1 b2 * f2 cshiftpath * f3 b1 f0 b2 cT
- |- ((_734379 = _734381) ==> ((~ (_734380 = _734382)) \/ (((I _734379) _734380) = ((I _734381) _734382))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
+ |- ((\x. (!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))) x)
T * / ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 f0
+ |- (((_734344 = _734346) /\ (_734343 = _734345)) ==> (((I _734343) _734344) = ((I _734345) _734346)))
T c==> c/\ c= f0 f1 c= f2 f3 c= cI f2 f0 cI f3 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> (((((shiftpath (vec (NUMERAL _0))) p) x) = (p x)) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((shiftpath (vec (NUMERAL _0))) p) x) = (p x))) = (p' ==> q'))))
T c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> c==> f1 c= c= cshiftpath cvec cNUMERAL c_0 f2 f0 * f2 f0 f3 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cshiftpath cvec cNUMERAL c_0 f2 f0 * f2 f0 c==> f1 f3
- |- ((((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = ((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_734279 = _734281), (_734280 = _734282) |- ((_734279 = _734281) /\ (((I _734281) _734282) \/ (~ ((I _734279) _734280))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cI f1 f3 c~ cI f0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (path p), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((((continuous_on (\z. (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) /\ (((continuous_on (lift o (\z. ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0))))))))))) = (((continuous_on (\z. (p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))))) (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) /\ (((continuous_on (\z. (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))) (GSPEC (\GEN%PVAR%1020. (?z. (((SETSPEC GEN%PVAR%1020) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) z))))) /\ (((continuous_on (lift o (\z. ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))))) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (!z. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_add ((% (drop t)) (fstcart z))) (sndcart z))) = (p ((vector_add ((% (drop t)) (fstcart z))) ((vector_sub (sndcart z)) (vec (NUMERAL (BIT1 _0)))))))))))))
T c==> cpath f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c/\ ccontinuous_on / * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 b1 c/\ ccontinuous_on * * part co part clift / creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 creal_of_num cNUMERAL cBIT1 c_0 c= * f0 cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 c/\ ccontinuous_on / * f0 cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 creal_of_num cNUMERAL cBIT1 c_0 b1 c/\ ccontinuous_on / * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f1 cdrop cfstcart b1 cdrop csndcart b1 b1 c/\ ccontinuous_on * * part co part clift / creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_add creal_mul cdrop f1 cdrop cfstcart b0 cdrop csndcart b0 creal_of_num cNUMERAL cBIT1 c_0 c= * f0 cvector_add c% cdrop f1 cfstcart b0 csndcart b0 * f0 cvector_add c% cdrop f1 cfstcart b0 cvector_sub csndcart b0 cvec cNUMERAL cBIT1 c_0
+ |- ((!x. (!y. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart ((pastecart x) y))))) (drop (sndcart ((pastecart x) y))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) (sndcart ((pastecart x) y))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) = (!x. (!y. ((((pastecart x) y) IN (GSPEC (\GEN%PVAR%1019. (?z. (((SETSPEC GEN%PVAR%1019) ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop (fstcart z)))) (drop (sndcart z)))) (real_of_num (NUMERAL (BIT1 _0)))))) z))))) ==> (((vector_add ((% (drop t)) (fstcart ((pastecart x) y)))) (sndcart ((pastecart x) y))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))
T c= ! ! c==> c/\ c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart cpastecart b0 b1 cdrop csndcart cpastecart b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% cdrop f0 cfstcart cpastecart b0 b1 csndcart cpastecart b0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> cIN cpastecart b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL creal_le creal_add creal_mul cdrop f0 cdrop cfstcart b3 cdrop csndcart b3 creal_of_num cNUMERAL cBIT1 c_0 b3 cIN cvector_add c% cdrop f0 cfstcart cpastecart b0 b1 csndcart cpastecart b0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) |- ((!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) /\ (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))))
T c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 c/\ ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1
- |- (((!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) ==> ((\w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) w)) = ((\w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) w))
T c= c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 * / ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 f0 * / ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 f0
- |- ((\x. ((drop (lift x)) = x)) x)
T * / c= cdrop clift b0 b0 f0
- |- ((real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!f. (!u. (!t. (!s. (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y)))))))))) = T)
T c= ! ! ! ! c==> c/\ ! c==> c? / c/\ c= b4 * f0 b5 * b2 b5 * b1 b4 ! c==> * b3 b4 ! c= c? / c/\ c= b5 cshiftpath * b0 b4 f0 b6 * b2 b6 c? / c/\ c= b5 * f0 b6 * b2 b6 ! ! c==> c/\ * b3 b4 * b2 b5 * b1 cshiftpath * b0 b4 f0 b5 cT
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))) ==> ((\q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))) q')) = ((\q'. ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= * f3 cvec cNUMERAL cBIT1 c_0 * f3 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f3 cvec cNUMERAL cBIT1 c_0 * f3 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> f2 b0 * / c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= * f3 cvec cNUMERAL cBIT1 c_0 * f3 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f3 cvec cNUMERAL cBIT1 c_0 * f3 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> f2 b0 f4 * / c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= * f3 cvec cNUMERAL cBIT1 c_0 * f3 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 b0 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f3 cvec cNUMERAL cBIT1 c_0 * f3 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> f2 b0 f4
- |- ((~ ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0))))) = (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))))
T c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (path p) |- (((!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))) ==> (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t)))) = (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))))
T c==> cpath f0 c= c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0
- (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) |- ((((COND ((real_le (drop ((vector_add (vec (NUMERAL _0))) x))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add (vec (NUMERAL _0))) x))) (p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) (p x)) (p ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND creal_le cdrop cvector_add cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add cvec cNUMERAL c_0 f0 * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND cT * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0
- |- (T = (((~ (_734344 = _734346)) \/ ((~ (_734343 = _734345)) \/ (((I _734343) _734344) = ((I _734345) _734346)))) = ((((I _734343) _734344) = ((I _734345) _734346)) \/ ((~ (_734344 = _734346)) \/ (~ (_734343 = _734345))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cI f2 f0 cI f3 f1 c\/ c= cI f2 f0 cI f3 f1 c\/ c~ c= f0 f1 c~ c= f2 f3
- |- ((?z'. (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) = (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (?z. (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))))
T c= c? / c/\ c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c~ c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c/\ c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c? / c~ c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- (((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 cT
- (!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) |- (((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))) = T)
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 f3 creal_le creal_mul f0 f2 creal_mul f1 f3 cT
- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) |- (((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) /\ ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c/\ c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_734248 = _734249) ==> ((f _734248) = (f _734249)))
T c==> c= f0 f1 c= * f2 f0 * f2 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x'. ((!x. ((~ (x' = (p x))) \/ (~ (t x)))) \/ (u x))) = ((!x. (!x. ((~ (x = (p x))) \/ (~ (t x))))) \/ (u x)))
T c= ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 f3 c\/ ! ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 f3
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- |- ((((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((p _734257) = t')) ==> (((~ ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))) = (((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) t') e'))))
T c==> c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 f0 f2 c==> c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f2 f3
- |- (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> q')))
T c==> c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f3 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 f3
- (t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))) ==> ((continuous_on p) t))
T c==> cSUBSET f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0 ccontinuous_on f1 f0
- (_734280 = _734282) |- ((_734280 = _734282) /\ ((~ (_734279 = _734281)) \/ (((I _734281) _734282) \/ (~ ((I _734279) _734280)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- |- ((((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))) = (((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))))
T c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0
- |- ((((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_734234 = _734235) |- ((_734234 = _734235) /\ ((u _734235) \/ (~ (u _734234))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) |- ((((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))) = T)
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish f1 cpathstart f1 c= * part cpath_image * * part cshiftpath f0 f1 * part cpath_image f1 cT
- |- ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b))))
T c= cIN f0 * part copen_interval c, f1 f2 c/\ creal_lt cdrop f1 cdrop f0 creal_lt cdrop f0 cdrop f2
- (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) ==> ((continuous_on (g o f)) s))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ccontinuous_on * * part co f2 f0 f1
- |- ((!u. (!t. (!s. (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))))) = T)
T c= ! ! ! c==> c/\ ! c==> c? / c/\ c= b3 * f0 b4 * b1 b4 * b0 b3 ! c==> * b2 b3 ! c= c? / c/\ c= b4 cshiftpath * f1 b3 f0 b5 * b1 b5 c? / c/\ c= b4 * f0 b5 * b1 b5 ! ! c==> c/\ * b2 b3 * b1 b4 * b0 cshiftpath * f1 b3 f0 b4 cT
- (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) |- ((!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) /\ (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))))
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 c/\ ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1
- (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))), (((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) /\ ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))
T c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 c==> c/\ c= cpathfinish f0 cpathstart f0 cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 c= cpathfinish * * part cshiftpath f1 f0 cpathstart * * part cshiftpath f1 f0
- (((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le (real_of_num (NUMERAL _0))) ((real_mul (drop t)) (drop x))) = T)
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_le creal_of_num cNUMERAL c_0 creal_mul cdrop f2 cdrop f0 cT
- |- ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((?x'. ((x = (((shiftpath (f x)) p) x')) /\ (t x))) = ((?x. (x = (((shiftpath (f x)) p) x))) /\ (t x)))
T c= c? / c/\ c= f0 cshiftpath * f1 f2 f3 b0 * f4 f5 c/\ c? / c= f0 cshiftpath * f1 f2 f3 b0 * f4 f5
- (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), (~ (((I p) ((I vec) ((I NUMERAL) _0))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) |- ((~ (((I p) ((I vec) ((I NUMERAL) _0))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) /\ (((I p) ((I vec) ((I NUMERAL) _0))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))))
T c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c~ c= cI f0 cI part cvec cI part cNUMERAL c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c/\ c~ c= cI f0 cI part cvec cI part cNUMERAL c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI f0 cI part cvec cI part cNUMERAL c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))), (t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((continuous_on p) t))
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 c==> cSUBSET f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 f1
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) |- ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\f. (!u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))))) f)
T * / ! ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b4 * f0 b5 * b2 b5 * b1 b4 ! c==> * b3 b4 ! c= c? / c/\ c= b5 cshiftpath * b0 b4 f0 b6 * b2 b6 c? / c/\ c= b5 * f0 b6 * b2 b6 ! ! c==> c/\ * b3 b4 * b2 b5 * b1 cshiftpath * b0 b4 f0 b5 cF f1
- |- (((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((!x'. ((~ (s x')) \/ (!x. (((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x))))) /\ ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ (?x. ((x = (p x)) /\ (t x)))))))) = ((!x. (~ (s x))) \/ (!x. (((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x))))) /\ ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ (?x. ((x = (p x)) /\ (t x))))))))
T c= ! c\/ c~ * f0 b0 ! c/\ c\/ c? / c/\ c= b1 cshiftpath * f1 f2 f3 b2 * f4 b2 ! c\/ c~ c= b1 * f3 b2 c~ * f4 b2 c\/ ! c\/ c~ c= b1 cshiftpath * f1 f2 f3 b2 c~ * f4 b2 c? / c/\ c= b1 * f3 b2 * f4 b2 c\/ ! c~ * f0 b0 ! c/\ c\/ c? / c/\ c= b0 cshiftpath * f1 f2 f3 b1 * f4 b1 ! c\/ c~ c= b0 * f3 b1 c~ * f4 b1 c\/ ! c\/ c~ c= b0 cshiftpath * f1 f2 f3 b1 c~ * f4 b1 c? / c/\ c= b0 * f3 b1 * f4 b1
- (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))), ((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) |- ((!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) /\ ((path_image ((shiftpath a) g)) = (path_image g)))
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish f1 cpathstart f1 c/\ ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 c= * part cpath_image * * part cshiftpath f0 f1 * part cpath_image f1
- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (_734240 = _734242), (_734241 = _734243) |- ((_734241 = _734243) /\ (((x'' _734240) _734241) = ((x'' _734242) _734243)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * f4 f0 f2 * * f4 f1 f3
- (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((I ((I IN) t)) ((I closed_interval) ((I ((I CONS) ((I ((I ,) ((I vec) ((I NUMERAL) _0)))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) NIL)))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cI * * part cI part cIN f0 * * part cI part cclosed_interval cI * * part cI part cCONS cI * * part cI part c, cI part cvec cI part cNUMERAL c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cNIL
- |- ((!x'. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ (?x. ((x' = (p x)) /\ (t x))))) = ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ (!x. (?x. ((x = (p x)) /\ (t x))))))
T c= ! c\/ ! c\/ c~ c= f0 cshiftpath * f1 f2 f3 b1 c~ * f4 b1 c? / c/\ c= b0 * f3 b1 * f4 b1 c\/ ! c\/ c~ c= f0 cshiftpath * f1 f2 f3 b0 c~ * f4 b0 ! c? / c/\ c= b0 * f3 b1 * f4 b1
- (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) |- (((!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))) ==> ((\g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))) g)) = ((\g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))) g))
T c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 c= c==> ! c==> c/\ c= cpathfinish b0 cpathstart b0 cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f0 b0 cpathstart * * part cshiftpath f0 b0 * / c==> c/\ c= cpathfinish b0 cpathstart b0 cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f0 b0 cpathstart * * part cshiftpath f0 b0 f1 * / c==> c/\ c= cpathfinish b0 cpathstart b0 cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f0 b0 cpathstart * * part cshiftpath f0 b0 f1
- (!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) |- (((!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))) ==> ((\z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))) z)) = ((\z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))) z))
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 c= c==> ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 b0 creal_le creal_mul f0 f2 creal_mul f1 b0 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 b0 creal_le creal_mul f0 f2 creal_mul f1 b0 f3 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 b0 creal_le creal_mul f0 f2 creal_mul f1 b0 f3
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))), (((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))) |- ((((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))) /\ (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u)))))
T c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 c==> c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2 c/\ c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2
- (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) |- ((~ (((I p) ((I vec) ((I NUMERAL) _0))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) ==> (((I p) ((I vec) ((I NUMERAL) _0))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))))
T c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c~ c= cI f0 cI part cvec cI part cNUMERAL c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI f0 cI part cvec cI part cNUMERAL c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) |- (((I ((I IN) z)) ((I ((I PCROSS) ((I closed_interval) ((I ((I CONS) ((I ((I ,) ((I vec) ((I NUMERAL) _0)))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) NIL)))) ((I closed_interval) ((I ((I CONS) ((I ((I ,) ((I vec) ((I NUMERAL) _0)))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) NIL)))) /\ (((I ((I vector_add) ((I ((I %) ((I drop) t))) ((I fstcart) z)))) ((I sndcart) z)) = ((I vec) ((I NUMERAL) ((I BIT1) _0)))))
T c==> c/\ c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c~ c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c/\ cI * * part cI part cIN f0 * * part cI * * part cI part cPCROSS * * part cI part cclosed_interval cI * * part cI part cCONS cI * * part cI part c, cI part cvec cI part cNUMERAL c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cNIL * * part cI part cclosed_interval cI * * part cI part cCONS cI * * part cI part c, cI part cvec cI part cNUMERAL c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cNIL c= cI * * part cI part cvector_add cI * * part cI part c% cI part cdrop f1 cI part cfstcart f0 cI part csndcart f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- |- ((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((p _734257) = t')) ==> (((~ ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))) = (((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) t') e'))))) = ((((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((p _734257) = t')) ==> (((~ ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))) = (((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) t') e')))))
T c= c==> c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 f0 f2 c==> c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c==> c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 f0 f2 c==> c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f2 f3
- (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (~ (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) _0))))) |- ((~ (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) _0))))) /\ (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) _0)))))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> c~ c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL c_0 c/\ c~ c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL c_0 c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL c_0
- ((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))), (((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) ==> (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u))))) |- (((((IMAGE p) t) SUBSET u) /\ (!x. ((x IN s) ==> (((IMAGE ((shiftpath (f x)) p)) t) = ((IMAGE p) t))))) /\ (!x. (!y. (((x IN s) /\ (y IN t)) ==> ((((shiftpath (f x)) p) y) IN u)))))
T c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 c==> c==> c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2 c/\ c/\ cSUBSET * * part cIMAGE f0 f1 f2 ! c==> cIN b0 f3 c= * * part cIMAGE * * part cshiftpath * f4 b0 f0 f1 * * part cIMAGE f0 f1 ! ! c==> c/\ cIN b0 f3 cIN b1 f1 cIN cshiftpath * f4 b0 f0 b1 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) |- ((!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) ==> ((path_image ((shiftpath a) g)) = (path_image g)))
T c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish f1 cpathstart f1 c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 c= * part cpath_image * * part cshiftpath f0 f1 * part cpath_image f1
- (?x''. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x)))))))))), (~ (u (((shiftpath (f x)) p) y))), ((s x) /\ (t y)) |- ((?x''. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x)))))))))) /\ F)
T c==> c? / c/\ ! c\/ ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 * f2 b1 ! c\/ c~ * f3 b1 c/\ ! c\/ c/\ c= b2 cshiftpath * f4 b1 f0 * * f5 b1 b2 * f1 * * f5 b1 b2 ! c\/ c~ c= b2 * f0 b3 c~ * f1 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f4 b1 f0 b3 c~ * f1 b3 c/\ c= b2 * f0 * * b0 b1 b2 * f1 * * b0 b1 b2 c==> c~ * f2 cshiftpath * f4 f6 f0 f7 c==> c/\ * f3 f6 * f1 f7 c/\ c? / c/\ ! c\/ ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 * f2 b1 ! c\/ c~ * f3 b1 c/\ ! c\/ c/\ c= b2 cshiftpath * f4 b1 f0 * * f5 b1 b2 * f1 * * f5 b1 b2 ! c\/ c~ c= b2 * f0 b3 c~ * f1 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f4 b1 f0 b3 c~ * f1 b3 c/\ c= b2 * f0 * * b0 b1 b2 * f1 * * b0 b1 b2 cF
- |- (((!f. (!u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))))) ==> ((\f. (!u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))))) f)) = ((\f. (!u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))))) f))
T c= c==> ! ! ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b4 * f0 b5 * b2 b5 * b1 b4 ! c==> * b3 b4 ! c= c? / c/\ c= b5 cshiftpath * b0 b4 f0 b6 * b2 b6 c? / c/\ c= b5 * f0 b6 * b2 b6 ! ! c==> c/\ * b3 b4 * b2 b5 * b1 cshiftpath * b0 b4 f0 b5 cF * / ! ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b4 * f0 b5 * b2 b5 * b1 b4 ! c==> * b3 b4 ! c= c? / c/\ c= b5 cshiftpath * b0 b4 f0 b6 * b2 b6 c? / c/\ c= b5 * f0 b6 * b2 b6 ! ! c==> c/\ * b3 b4 * b2 b5 * b1 cshiftpath * b0 b4 f0 b5 cF f1 * / ! ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b4 * f0 b5 * b2 b5 * b1 b4 ! c==> * b3 b4 ! c= c? / c/\ c= b5 cshiftpath * b0 b4 f0 b6 * b2 b6 c? / c/\ c= b5 * f0 b6 * b2 b6 ! ! c==> c/\ * b3 b4 * b2 b5 * b1 cshiftpath * b0 b4 f0 b5 cF f1
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- ((real_le (real_of_num (NUMERAL _0))) (drop y))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_of_num cNUMERAL c_0 cdrop f1
- |- (((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((p _734257) = (p _734257)))
T c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 f0 * f1 f0
- |- ((~ (_734383 = _734385)) \/ ((~ (_734384 = _734386)) \/ (((I _734383) _734384) = ((I _734385) _734386))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))), ((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) |- ((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))) |- (((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t)) = T)
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 c= c==> cSUBSET f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 f1 cT
- |- (((real_le (real_of_num (NUMERAL _0))) (real_of_num n)) = T)
T c= creal_le creal_of_num cNUMERAL c_0 creal_of_num f0 cT
- T |- (T /\ ((p ((vector_add (vec (NUMERAL _0))) x)) = (p x)))
T c==> cT c/\ cT c= * f0 cvector_add cvec cNUMERAL c_0 f1 * f0 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)) ==> (((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- (((real_le (real_of_num (NUMERAL _0))) (drop y)) = T)
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= creal_le creal_of_num cNUMERAL c_0 cdrop f1 cT
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (_734279 = _734281), (_734280 = _734282) |- (((I _734281) _734282) \/ (~ ((I _734279) _734280)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
- (((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) |- ((!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))
T c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 creal_le * f2 b1 f3 b1 c/\ ccontinuous_on f4 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 creal_le f3 * f2 b1 b1 c/\ ccontinuous_on * * part co part clift f2 f1 ! c==> c/\ cIN b0 f1 c= * f2 b0 f3 c= * f0 b0 * f4 b0 c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 ccontinuous_on / cCOND creal_le * f2 b0 f3 * f0 b0 * f4 b0 f1
- |- ((~ (((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) ==> (((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))))
T c==> c~ c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- (!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))), (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) |- ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) /\ ((real_le ((real_mul w) y)) ((real_mul x) z)))
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 f3 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 f3 creal_le creal_mul f0 f2 creal_mul f1 f3
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) |- ((\a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) a)
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 * / ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 f0
- |- (((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), (~ F), ((pathfinish p) = (pathstart p)), (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) |- ((~ F) /\ F)
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c~ cF c==> c= cpathfinish f0 cpathstart f0 c==> c/\ c/\ cIN f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f2 cfstcart f1 csndcart f1 cvec cNUMERAL cBIT1 c_0 c~ c= * f0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c/\ c~ cF cF
- |- ((~ (_734248 = _734249)) \/ ((f _734248) = (f _734249)))
T c\/ c~ c= f0 f1 c= * f2 f0 * f2 f1
- (?x''. ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x)))))))))), (~ (u (((shiftpath (f x)) p) y))), ((s x) /\ (t y)) |- F
T c==> c? / c/\ ! c\/ ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 * f2 b1 ! c\/ c~ * f3 b1 c/\ ! c\/ c/\ c= b2 cshiftpath * f4 b1 f0 * * f5 b1 b2 * f1 * * f5 b1 b2 ! c\/ c~ c= b2 * f0 b3 c~ * f1 b3 ! c\/ ! c\/ c~ c= b2 cshiftpath * f4 b1 f0 b3 c~ * f1 b3 c/\ c= b2 * f0 * * b0 b1 b2 * f1 * * b0 b1 b2 c==> c~ * f2 cshiftpath * f4 f6 f0 f7 c==> c/\ * f3 f6 * f1 f7 cF
- |- ((((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y)))))) = T)
T c= c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cT
- |- (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) = p') ==> ((p' ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = (p' ==> q'))))
T c==> c= c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 f3 c==> c==> f3 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f4 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> f3 f4
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (~ ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) |- (((I ((I vector_add) ((I ((I %) ((I drop) t))) ((I fstcart) z)))) ((I sndcart) z)) = ((I vec) ((I NUMERAL) ((I BIT1) _0))))
T c==> c/\ c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c~ c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c= cI * * part cI part cvector_add cI * * part cI part c% cI part cdrop f1 cI part cfstcart f0 cI part csndcart f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))) = ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))))))
T c= c==> c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- (((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) |- (((~ T) ==> ((p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add (vec (NUMERAL _0))) x))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add (vec (NUMERAL _0))) x))) (p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) (p x)) e')))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ cT c= * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f2 c= cCOND creal_le cdrop cvector_add cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add cvec cNUMERAL c_0 f0 * f1 cvector_add cvec cNUMERAL c_0 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND cT * f1 f0 f2
- |- ((((~ T) ==> ((p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = (p ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) ==> ((((COND ((real_le (drop ((vector_add (vec (NUMERAL _0))) x))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add (vec (NUMERAL _0))) x))) (p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) (p x)) (p ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))) = ((((COND ((real_le (drop ((vector_add (vec (NUMERAL _0))) x))) (real_of_num (NUMERAL (BIT1 _0))))) (p ((vector_add (vec (NUMERAL _0))) x))) (p ((vector_add (vec (NUMERAL _0))) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) (p x)) (p ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))))
T c= c==> c==> c~ cT c= * f0 cvector_add cvec cNUMERAL c_0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 * f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 c= cCOND creal_le cdrop cvector_add cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add cvec cNUMERAL c_0 f1 * f0 cvector_add cvec cNUMERAL c_0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND cT * f0 f1 * f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 c= cCOND creal_le cdrop cvector_add cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add cvec cNUMERAL c_0 f1 * f0 cvector_add cvec cNUMERAL c_0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND cT * f0 f1 * f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0
- (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) |- (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))
T c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 ! c==> c/\ c= cpathfinish b0 cpathstart b0 cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f0 b0 cpathstart * * part cshiftpath f0 b0
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le (real_of_num (NUMERAL _0))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_mul (drop t)) (drop x))) /\ ((real_le (real_of_num (NUMERAL _0))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= creal_le creal_of_num cNUMERAL c_0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul cdrop f2 cdrop f0 creal_le creal_of_num cNUMERAL c_0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) |- ((\g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g)))) g)
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 * / c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b0 cpathstart b0 c= * part cpath_image * * part cshiftpath f0 b0 * part cpath_image b0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (t ((x'' x) (((shiftpath (f x)) p) y)))), ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))), ((s x) /\ (t y)) |- ((~ (t ((x'' x) (((shiftpath (f x)) p) y)))) /\ (t ((x'' x) (((shiftpath (f x)) p) y))))
T c==> c~ * f0 * * f1 f2 cshiftpath * f3 f2 f4 f5 c==> c/\ ! c\/ ! c\/ c~ c= b0 * f4 b1 c~ * f0 b1 * f6 b0 ! c\/ c~ * f7 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f3 b0 f4 * * f8 b0 b1 * f0 * * f8 b0 b1 ! c\/ c~ c= b1 * f4 b2 c~ * f0 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f3 b0 f4 b2 c~ * f0 b2 c/\ c= b1 * f4 * * f1 b0 b1 * f0 * * f1 b0 b1 c==> c/\ * f7 f2 * f0 f5 c/\ c~ * f0 * * f1 f2 cshiftpath * f3 f2 f4 f5 * f0 * * f1 f2 cshiftpath * f3 f2 f4 f5
- |- ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= * f3 cvec cNUMERAL cBIT1 c_0 * f3 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 f4 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f3 cvec cNUMERAL cBIT1 c_0 * f3 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> f2 f4
- |- ((_734280 = _734282) ==> ((~ (_734279 = _734281)) \/ (((I _734281) _734282) \/ (~ ((I _734279) _734280)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- (_734379 = _734381) |- ((_734379 = _734381) /\ ((~ (_734380 = _734382)) \/ (((I _734379) _734380) = ((I _734381) _734382))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- |- ((?z'. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z'))) (sndcart z')) = (vec (NUMERAL (BIT1 _0)))))) = ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (?z. (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0)))))))
T c= c? / c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0 c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c? / c= cvector_add c% cdrop f1 cfstcart b0 csndcart b0 cvec cNUMERAL cBIT1 c_0
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- (((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c= creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 cT
- |- (((!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))) ==> ((\t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))) t)) = ((\t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))) t))
T c= c==> ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b2 * f0 b3 * b0 b3 * f1 b2 ! c==> * b1 b2 ! c= c? / c/\ c= b3 cshiftpath * f2 b2 f0 b4 * b0 b4 c? / c/\ c= b3 * f0 b4 * b0 b4 ! ! c==> c/\ * b1 b2 * b0 b3 * f1 cshiftpath * f2 b2 f0 b3 cF * / ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b2 * f0 b3 * b0 b3 * f1 b2 ! c==> * b1 b2 ! c= c? / c/\ c= b3 cshiftpath * f2 b2 f0 b4 * b0 b4 c? / c/\ c= b3 * f0 b4 * b0 b4 ! ! c==> c/\ * b1 b2 * b0 b3 * f1 cshiftpath * f2 b2 f0 b3 cF f3 * / ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b2 * f0 b3 * b0 b3 * f1 b2 ! c==> * b1 b2 ! c= c? / c/\ c= b3 cshiftpath * f2 b2 f0 b4 * b0 b4 c? / c/\ c= b3 * f0 b4 * b0 b4 ! ! c==> c/\ * b1 b2 * b0 b3 * f1 cshiftpath * f2 b2 f0 b3 cF f3
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) |- ((~ ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0))))) = (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))))
T c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) |- ((real_le (real_of_num (NUMERAL _0))) (drop x))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_of_num cNUMERAL c_0 cdrop f0
- (~ (t y)), ((s x) /\ (t y)) |- ((~ (t y)) /\ (t y))
T c==> c~ * f0 f1 c==> c/\ * f2 f3 * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- (((!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))))) ==> ((\x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))))) x)) = ((\x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))))) x))
T c= c==> ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le b1 b2 creal_le creal_mul f0 b1 creal_mul b0 b2 * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le b1 b2 creal_le creal_mul f0 b1 creal_mul b0 b2 f1 * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le b1 b2 creal_le creal_mul f0 b1 creal_mul b0 b2 f1
- ((s x) /\ (t y)) |- ((~ (t y)) ==> (t y))
T c==> c/\ * f0 f1 * f2 f3 c==> c~ * f2 f3 * f2 f3
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((~ ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0))))) = (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0))))))) ==> ((((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))) = (((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))))) = ((((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))) = (((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0))))))))
T c= c==> c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0
- |- ((!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))) ==> (!a. (!g. (((a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((pathfinish g) = (pathstart g))) ==> ((path_image ((shiftpath a) g)) = (path_image g))))))
T c==> ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish b1 cpathstart b1 c= * part cpath_image * * part cshiftpath b0 b1 * part cpath_image b1
- (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), (~ (((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))), ((pathfinish p) = (pathstart p)) |- ((~ (((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) /\ (((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c~ c= cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c==> c= cpathfinish f0 cpathstart f0 c/\ c~ c= cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- |- (((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F) ==> ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF c==> c~ c==> c/\ ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! c==> * f3 b0 ! c= c? / c/\ c= b1 cshiftpath * f4 b0 f0 b2 * f1 b2 c? / c/\ c= b1 * f0 b2 * f1 b2 ! ! c==> c/\ * f3 b0 * f1 b1 * f2 cshiftpath * f4 b0 f0 b1 cF
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- ((~ (_734379 = _734381)) \/ ((~ (_734380 = _734382)) \/ (((I _734379) _734380) = ((I _734381) _734382))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))
T c==> c/\ c= cpathfinish f0 cpathstart f0 cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 c= cpathfinish * * part cshiftpath f1 f0 cpathstart * * part cshiftpath f1 f0
- ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- (((~ (s _734227)) \/ ((_734228 = (((shiftpath (f _734227)) p) ((x' _734227) _734228))) \/ ((~ (_734228 = ((I p) _734229))) \/ (~ (t _734229))))) /\ ((~ (s _734227)) \/ ((t ((x' _734227) _734228)) \/ ((~ (_734228 = ((I p) _734229))) \/ (~ (t _734229))))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c/\ c\/ c~ * f3 f7 c\/ c= f8 cshiftpath * f4 f7 f0 * * f5 f7 f8 c\/ c~ c= f8 cI f0 f9 c~ * f1 f9 c\/ c~ * f3 f7 c\/ * f1 * * f5 f7 f8 c\/ c~ c= f8 cI f0 f9 c~ * f1 f9
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))), (((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))
T c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 c==> c/\ c= cpathfinish f0 cpathstart f0 cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f1 f0 cpathstart * * part cshiftpath f1 f0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_734280 = _734282) |- ((_734279 = _734281) ==> (((I _734281) _734282) \/ (~ ((I _734279) _734280))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- |- ((!g. (P g)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_734379 = _734381) |- ((_734380 = _734382) ==> (((I _734379) _734380) = ((I _734381) _734382)))
T c==> c= f0 f1 c==> c= f2 f3 c= cI f0 f2 cI f1 f3
- |- ((?x'. ((x = (p x')) /\ (t x))) = ((?x. (x = (p x))) /\ (t x)))
T c= c? / c/\ c= f0 * f1 b0 * f2 f3 c/\ c? / c= f0 * f1 b0 * f2 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = q')) ==> ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> q')))
T c==> c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 f3 c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 f3
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le ((real_add ((real_mul (drop t)) (drop x))) (drop y))) (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 cT
- (((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) |- (((((real_le ((real_mul t) x)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_le y) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_le ((real_add ((real_mul t) x)) ((real_sub y) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c/\ creal_le creal_mul f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le f2 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_mul f0 f1 creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((continuous_on (g o f)) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (~ (((I p) ((I vec) ((I NUMERAL) _0))) = ((I pathstart) p))) |- ((~ (((I p) ((I vec) ((I NUMERAL) _0))) = ((I pathstart) p))) /\ (((I p) ((I vec) ((I NUMERAL) _0))) = ((I pathstart) p)))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> c~ c= cI f0 cI part cvec cI part cNUMERAL c_0 cI part cpathstart f0 c/\ c~ c= cI f0 cI part cvec cI part cNUMERAL c_0 cI part cpathstart f0 c= cI f0 cI part cvec cI part cNUMERAL c_0 cI part cpathstart f0
- (!g. ((pathstart g) = (g (vec (NUMERAL _0))))) |- ((~ (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) _0))))) ==> (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) _0)))))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> c~ c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL c_0 c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL c_0
- (~ T) |- (T = F)
T c==> c~ cT c= cT cF
- (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) |- (((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))) = T)
T c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 c= c==> c/\ c= cpathfinish f0 cpathstart f0 cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f1 f0 cpathstart * * part cshiftpath f1 f0 cT
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1 cT
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), ((pathfinish p) = (pathstart p)) |- ((~ (((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) ==> (((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c= cpathfinish f0 cpathstart f0 c==> c~ c= cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- |- ((!x'. ((~ (s x)) \/ ((!x. ((?x. ((x = (((shiftpath (f x')) p) x)) /\ (t x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x')) p) x))) \/ (~ (t x)))) \/ (?x. ((x = (p x)) /\ (t x)))))))) = ((~ (s x)) \/ (!x. ((!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ (?x. ((x = (p x)) /\ (t x)))))))))
T c= ! c\/ c~ * f0 f1 c/\ ! c\/ c? / c/\ c= b1 cshiftpath * f2 b0 f3 b2 * f4 b2 ! c\/ c~ c= b1 * f3 b2 c~ * f4 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f2 b0 f3 b2 c~ * f4 b2 c? / c/\ c= b1 * f3 b2 * f4 b2 c\/ c~ * f0 f1 ! c/\ ! c\/ c? / c/\ c= b1 cshiftpath * f2 b0 f3 b2 * f4 b2 ! c\/ c~ c= b1 * f3 b2 c~ * f4 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f2 b0 f3 b2 c~ * f4 b2 c? / c/\ c= b1 * f3 b2 * f4 b2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_734383 = _734385) |- ((_734383 = _734385) /\ ((~ (_734384 = _734386)) \/ (((I _734383) _734384) = ((I _734385) _734386))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- ((((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))) = (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) ==> ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))
T c= c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
- |- ((?z. (P /\ (Q z))) = (P /\ (?z. (Q z))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((real_le (real_of_num (NUMERAL _0))) (drop t)) /\ ((real_le (real_of_num (NUMERAL _0))) (drop x)))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f2 creal_le creal_of_num cNUMERAL c_0 cdrop f0
- |- ((~ ((((shiftpath (f x)) p) y) = (((shiftpath (f x)) p) y))) ==> ((((shiftpath (f x)) p) y) = (((shiftpath (f x)) p) y)))
T c==> c~ c= cshiftpath * f0 f1 f2 f3 cshiftpath * f0 f1 f2 f3 c= cshiftpath * f0 f1 f2 f3 cshiftpath * f0 f1 f2 f3
- ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))) |- ((~ (s _734227)) \/ ((_734228 = (((shiftpath (f _734227)) p) ((x' _734227) _734228))) \/ ((~ (_734228 = ((I p) _734229))) \/ (~ (t _734229)))))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c\/ c~ * f3 f7 c\/ c= f8 cshiftpath * f4 f7 f0 * * f5 f7 f8 c\/ c~ c= f8 cI f0 f9 c~ * f1 f9
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))) |- ((~ (((I pathstart) p) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) ==> (((I pathstart) p) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c~ c= cI part cpathstart f0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI part cpathstart f0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) |- (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))) /\ (((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0)))))) = ((p (vec (NUMERAL (BIT1 _0)))) = (p ((vector_sub (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL (BIT1 _0))))))))
T c==> c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c/\ c/\ cIN f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f1 cfstcart f0 csndcart f0 cvec cNUMERAL cBIT1 c_0 c= c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0 c= * f2 cvec cNUMERAL cBIT1 c_0 * f2 cvector_sub cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL cBIT1 c_0
- |- ((\q'. (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) = p') ==> ((p' ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 f3 c==> c==> f3 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> f3 b0 f4
- (_734234 = _734235) |- ((((u _734234) = (u _734235)) ==> ((u _734235) \/ (~ (u _734234)))) = ((u _734235) \/ (~ (u _734234))))
T c==> c= f0 f1 c= c==> c= * f2 f0 * f2 f1 c\/ * f2 f1 c~ * f2 f0 c\/ * f2 f1 c~ * f2 f0
- (~ (p = p)) |- ((~ (p = p)) /\ (p = p))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- |- ((?z'. ((z' IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0)))))) = ((?z. (z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) /\ (((vector_add ((% (drop t)) (fstcart z))) (sndcart z)) = (vec (NUMERAL (BIT1 _0))))))
T c= c? / c/\ cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart f1 csndcart f1 cvec cNUMERAL cBIT1 c_0 c/\ c? / cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cvector_add c% cdrop f0 cfstcart f1 csndcart f1 cvec cNUMERAL cBIT1 c_0
- |- ((~ (_734234 = _734235)) \/ ((u _734235) \/ (~ (u _734234))))
T c\/ c~ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))) = (((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) e')))
T c==> c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f2 c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 f2
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) |- ((!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))) = T)
T c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 c= ! c==> c/\ c= cpathfinish b0 cpathstart b0 cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath f0 b0 cpathstart * * part cshiftpath f0 b0 cT
- (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) |- ((\a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) a)
T c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 * / ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 f0
- (!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))), (((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) |- ((!f. (!g. (!h. (!s. (!a. ((((continuous_on f) (GSPEC (\GEN%PVAR%1019. (?t. (((SETSPEC GEN%PVAR%1019) ((t IN s) /\ ((real_le (h t)) a))) t))))) /\ (((continuous_on g) (GSPEC (\GEN%PVAR%1020. (?t. (((SETSPEC GEN%PVAR%1020) ((t IN s) /\ ((real_le a) (h t)))) t))))) /\ (((continuous_on (lift o h)) s) /\ (!t. (((t IN s) /\ ((h t) = a)) ==> ((f t) = (g t))))))) ==> ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))))))) /\ ((continuous_on (\t. (((COND ((real_le (h t)) a)) (f t)) (g t)))) s))
T c==> ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 c==> c/\ ccontinuous_on f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 creal_le * f2 b1 f3 b1 c/\ ccontinuous_on f4 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f1 creal_le f3 * f2 b1 b1 c/\ ccontinuous_on * * part co part clift f2 f1 ! c==> c/\ cIN b0 f1 c= * f2 b0 f3 c= * f0 b0 * f4 b0 c/\ ! ! ! ! ! c==> c/\ ccontinuous_on b0 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le * b2 b6 b4 b6 c/\ ccontinuous_on b1 * part cGSPEC / c? / cSETSPEC b5 c/\ cIN b6 b3 creal_le b4 * b2 b6 b6 c/\ ccontinuous_on * * part co part clift b2 b3 ! c==> c/\ cIN b5 b3 c= * b2 b5 b4 c= * b0 b5 * b1 b5 ccontinuous_on / cCOND creal_le * b2 b5 b4 * b0 b5 * b1 b5 b3 ccontinuous_on / cCOND creal_le * f2 b0 f3 * f0 b0 * f4 b0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((!x'. ((~ (x = (((shiftpath (f x)) p) x'))) \/ (~ (t x)))) = ((!x. (~ (x = (((shiftpath (f x)) p) x)))) \/ (~ (t x))))
T c= ! c\/ c~ c= f0 cshiftpath * f1 f2 f3 b0 c~ * f4 f5 c\/ ! c~ c= f0 cshiftpath * f1 f2 f3 b0 c~ * f4 f5
- |- (((!p. (!f. (!u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)))))) ==> ((\p. (!f. (!u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)))))) p)) = ((\p. (!f. (!u. (!t. (!s. ((~ (((!x. ((?x. ((x = (p x)) /\ (t x))) ==> (u x))) /\ (!x. ((s x) ==> (!x. ((?x. ((x = (((shiftpath (f x)) p) x)) /\ (t x))) = (?x. ((x = (p x)) /\ (t x)))))))) ==> (!x. (!y. (((s x) /\ (t y)) ==> (u (((shiftpath (f x)) p) y))))))) ==> F)))))) p))
T c= c==> ! ! ! ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b5 * b0 b6 * b3 b6 * b2 b5 ! c==> * b4 b5 ! c= c? / c/\ c= b6 cshiftpath * b1 b5 b0 b7 * b3 b7 c? / c/\ c= b6 * b0 b7 * b3 b7 ! ! c==> c/\ * b4 b5 * b3 b6 * b2 cshiftpath * b1 b5 b0 b6 cF * / ! ! ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b5 * b0 b6 * b3 b6 * b2 b5 ! c==> * b4 b5 ! c= c? / c/\ c= b6 cshiftpath * b1 b5 b0 b7 * b3 b7 c? / c/\ c= b6 * b0 b7 * b3 b7 ! ! c==> c/\ * b4 b5 * b3 b6 * b2 cshiftpath * b1 b5 b0 b6 cF f0 * / ! ! ! ! c==> c~ c==> c/\ ! c==> c? / c/\ c= b5 * b0 b6 * b3 b6 * b2 b5 ! c==> * b4 b5 ! c= c? / c/\ c= b6 cshiftpath * b1 b5 b0 b7 * b3 b7 c? / c/\ c= b6 * b0 b7 * b3 b7 ! ! c==> c/\ * b4 b5 * b3 b6 * b2 cshiftpath * b1 b5 b0 b6 cF f0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (_734240 = _734242) |- ((_734241 = _734243) ==> (((x'' _734240) _734241) = ((x'' _734242) _734243)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * f4 f0 f2 * * f4 f1 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) x))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul t) x)) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 f1 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f2 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!p'. (!q'. (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) = p') ==> ((p' ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) = p') ==> ((p' ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) = p') ==> ((p' ==> (((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = q')) ==> (((((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))) ==> ((real_le ((real_add ((real_mul (drop t)) (drop x))) ((real_sub (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 b0 c==> c==> b0 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b1 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> b0 b1 * / ! c==> c= c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 b0 c==> c==> b0 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b1 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> b0 b1 f3 * / ! c==> c= c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 b0 c==> c==> b0 c= creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b1 c= c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 creal_le creal_add creal_mul cdrop f2 cdrop f0 creal_sub cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> b0 b1 f3
- (!g. ((pathfinish g) = (g (vec (NUMERAL (BIT1 _0)))))), (~ (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))), ((pathfinish p) = (pathstart p)) |- ((~ (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))) /\ (((I pathstart) p) = ((I p) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))
T c==> ! c= cpathfinish b0 * b0 cvec cNUMERAL cBIT1 c_0 c==> c~ c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c==> c= cpathfinish f0 cpathstart f0 c/\ c~ c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI part cpathstart f0 cI f0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- |- (((real_gt ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!w. (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))))) |- ((\z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z)))) z)
T c==> ! ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le b0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 b3 creal_le creal_mul b0 b2 creal_mul b1 b3 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_le f2 b0 creal_le creal_mul f0 f2 creal_mul f1 b0 f3
- |- ((!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))) ==> (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on p) t))))
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0
- |- ((?z. ((P z) /\ Q)) = ((?z. (P z)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- (~ (s x)), ((s x) /\ (t y)) |- ((~ (s x)) /\ (s x))
T c==> c~ * f0 f1 c==> c/\ * f0 f1 * f2 f3 c/\ c~ * f0 f1 * f0 f1
- |- (((!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))) ==> (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g))))))) = (!a. (!g. ((((pathfinish g) = (pathstart g)) /\ (a IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((pathfinish ((shiftpath a) g)) = (pathstart ((shiftpath a) g)))))))
T c= c==> ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1 ! ! c==> c/\ c= cpathfinish b1 cpathstart b1 cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpathfinish * * part cshiftpath b0 b1 cpathstart * * part cshiftpath b0 b1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- (((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add x) ((real_add y) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!g. ((pathstart g) = (g (vec (NUMERAL _0))))), (!x. (((vector_sub x) x) = (vec (NUMERAL _0)))), (~ (((I pathstart) p) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) |- ((~ (((I pathstart) p) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0))))))) /\ (((I pathstart) p) = ((I p) ((I ((I vector_sub) ((I vec) ((I NUMERAL) ((I BIT1) _0))))) ((I vec) ((I NUMERAL) ((I BIT1) _0)))))))
T c==> ! c= cpathstart b0 * b0 cvec cNUMERAL c_0 c==> ! c= cvector_sub b0 b0 cvec cNUMERAL c_0 c==> c~ c= cI part cpathstart f0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c/\ c~ c= cI part cpathstart f0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0 c= cI part cpathstart f0 cI f0 cI * * part cI part cvector_sub cI part cvec cI part cNUMERAL cI part cBIT1 c_0 cI part cvec cI part cNUMERAL cI part cBIT1 c_0
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((~ (_734396 = _734398)) \/ ((~ (_734395 = _734397)) \/ (((I _734395) _734396) = ((I _734397) _734398))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
- (((((real_le (real_of_num (NUMERAL _0))) (drop x)) /\ ((real_le (drop x)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (NUMERAL _0))) (drop y)) /\ ((real_le (drop y)) (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (drop t)) (drop x))) (drop y)))), (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (T = (((real_le (real_of_num (NUMERAL _0))) (drop t)) /\ ((real_le (real_of_num (NUMERAL _0))) (drop x))))
T c==> c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f1 creal_le cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul cdrop f2 cdrop f0 cdrop f1 c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cT c/\ creal_le creal_of_num cNUMERAL c_0 cdrop f2 creal_le creal_of_num cNUMERAL c_0 cdrop f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\y. (!z. ((((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le w) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ ((real_le y) z)))) ==> ((real_le ((real_mul w) y)) ((real_mul x) z))))) y)
T * / ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 b1 creal_le creal_mul f0 b0 creal_mul f1 b1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x'. ((!x. ((~ (x' = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ (?x. ((x = (p x)) /\ (t x))))) = ((!x. (!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x))))) \/ (?x. ((x = (p x)) /\ (t x)))))
T c= ! c\/ ! c\/ c~ c= b0 cshiftpath * f0 f1 f2 b1 c~ * f3 b1 c? / c/\ c= f4 * f2 b1 * f3 b1 c\/ ! ! c\/ c~ c= b0 cshiftpath * f0 f1 f2 b1 c~ * f3 b1 c? / c/\ c= f4 * f2 b0 * f3 b0
- |- (((((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((p _734257) = (p _734257))) ==> (((~ ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))) = (((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) e')))) = (((~ ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) (p ((vector_sub _734257) (vec (NUMERAL (BIT1 _0)))))) = (((COND ((real_le (drop _734257)) (real_of_num (NUMERAL (BIT1 _0))))) (p _734257)) e'))))
T c= c==> c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 f0 * f1 f0 c==> c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f2 c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 f2 c==> c==> c~ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 f2 c= cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 * f1 cvector_sub f0 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 * f1 f0 f2
- ((!x. ((!x. ((~ (x = (p x))) \/ (~ (t x)))) \/ (u x))) /\ (!x. ((~ (s x)) \/ ((!x. (((x = (((shiftpath (f x)) p) ((x' x) x))) /\ (t ((x' x) x))) \/ (!x. ((~ (x = (p x))) \/ (~ (t x)))))) /\ (!x. ((!x. ((~ (x = (((shiftpath (f x)) p) x))) \/ (~ (t x)))) \/ ((x = (p ((x'' x) x))) /\ (t ((x'' x) x))))))))), ((s x) /\ (t y)) |- ((~ (u (((shiftpath (f x)) p) y))) ==> (u (((shiftpath (f x)) p) y)))
T c==> c/\ ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 ! c\/ c~ * f3 b0 c/\ ! c\/ c/\ c= b1 cshiftpath * f4 b0 f0 * * f5 b0 b1 * f1 * * f5 b0 b1 ! c\/ c~ c= b1 * f0 b2 c~ * f1 b2 ! c\/ ! c\/ c~ c= b1 cshiftpath * f4 b0 f0 b2 c~ * f1 b2 c/\ c= b1 * f0 * * f6 b0 b1 * f1 * * f6 b0 b1 c==> c/\ * f3 f7 * f1 f8 c==> c~ * f2 cshiftpath * f4 f7 f0 f8 * f2 cshiftpath * f4 f7 f0 f8
