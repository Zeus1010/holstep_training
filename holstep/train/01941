N MONOIDAL_VECTOR_ADD
C |- (monoidal vector_add)
T cmonoidal part cvector_add
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D monoidal
A |- (!op. ((monoidal op) = ((!x. (!y. (((op x) y) = ((op y) x)))) /\ ((!x. (!y. (!z. (((op x) ((op y) z)) = ((op ((op x) y)) z))))) /\ (!x. (((op (neutral op)) x) = x))))))
T c= cmonoidal f0 c/\ ! ! c= * * f0 b0 b1 * * f0 b1 b0 c/\ ! ! ! c= * * f0 b0 * * f0 b1 b2 * * f0 * * f0 b0 b1 b2 ! c= * * f0 cneutral f0 b0 b0
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D VECTOR_ADD_SYM
A |- (!x. (!y. (((vector_add x) y) = ((vector_add y) x))))
T c= cvector_add f0 f1 cvector_add f1 f0
D Trigonometry.WHIAXYD2
A |- (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))
T c= cvector_add f0 cvector_add f1 f2 cvector_add cvector_add f0 f1 f2
D NEUTRAL_VECTOR_ADD
A |- ((neutral vector_add) = (vec (NUMERAL _0)))
T c= cneutral part cvector_add cvec cNUMERAL c_0
- |- ((real_neg ((real_sub ((real_add (real_of_num (NUMERAL _0))) (x $ i))) (x $ i))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_of_num cNUMERAL c_0 c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add (x $ i)) ((lambdai. ((real_add (y $ i)) (z $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_add (x $ i)) (y $ i))) $ i)) (z $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add x) ((vector_add y) z)) $ i) = (((vector_add ((vector_add x) y)) z) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ f1 b0 c$ clambda / creal_add c$ f2 b1 c$ f3 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_add c$ f1 b1 c$ f2 b1 b0 c$ f3 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 f0 c$ cvector_add cvector_add f1 f2 f3 f0
- |- ((~ (((real_add (x $ i)) (y $ i)) = ((real_add (y $ i)) (x $ i)))) ==> F)
T c==> c~ c= creal_add c$ f0 f1 c$ f2 f1 creal_add c$ f2 f1 c$ f0 f1 cF
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vec (NUMERAL _0))) x) $ i) = (x $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvec cNUMERAL c_0 f1 f0 c$ f1 f0 cT
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_add ((lambdai. (real_of_num (NUMERAL _0))) $ i)) (x $ i))) $ i) = (x $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_of_num cNUMERAL c_0 b0 c$ f1 b0 f0 c$ f1 f0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vec (NUMERAL _0))) x) $ i) = (x $ i)))) = (((vector_add (vec (NUMERAL _0))) x) = x))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add cvec cNUMERAL c_0 f0 b0 c$ f0 b0 c= cvector_add cvec cNUMERAL c_0 f0 f0
+ |- ((\op. ((monoidal op) = ((!x. (!y. (((op x) y) = ((op y) x)))) /\ ((!x. (!y. (!z. (((op x) ((op y) z)) = ((op ((op x) y)) z))))) /\ (!x. (((op (neutral op)) x) = x)))))) op)
T * / c= cmonoidal b0 c/\ ! ! c= * * b0 b1 b2 * * b0 b2 b1 c/\ ! ! ! c= * * b0 b1 * * b0 b2 b3 * * b0 * * b0 b1 b2 b3 ! c= * * b0 cneutral b0 b1 b1 f0
- (~ (((real_add (real_of_num (NUMERAL _0))) (x $ i)) = (x $ i))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_of_num cNUMERAL c_0 c$ f0 f1 c$ f0 f1 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. (real_of_num (NUMERAL _0))) $ i)) (x $ i))) $ i) = (x $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vec (NUMERAL _0))) x) $ i) = (x $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_of_num cNUMERAL c_0 b0 c$ f1 b0 f0 c$ f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvec cNUMERAL c_0 f1 f0 c$ f1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (vec (NUMERAL _0))) x) $ i) = (x $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvec cNUMERAL c_0 f1 f0 c$ f1 f0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_add (x $ i)) (y $ i))) $ i) = ((lambdai. ((real_add (y $ i)) (x $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ f1 b0 c$ f2 b0 f0 c$ clambda / creal_add c$ f2 b0 c$ f1 b0 f0
- |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add x) ((vector_add y) z)) $ i) = (((vector_add ((vector_add x) y)) z) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 f0 c$ cvector_add cvector_add f1 f2 f3 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
+ |- ((!x. (!y. (((vector_add x) y) = ((vector_add y) x)))) /\ ((!x. (!y. (!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))))) /\ (!x. (((vector_add (vec (NUMERAL _0))) x) = x))))
T c/\ ! ! c= cvector_add b0 b1 cvector_add b1 b0 c/\ ! ! ! c= cvector_add b0 cvector_add b1 b2 cvector_add cvector_add b0 b1 b2 ! c= cvector_add cvec cNUMERAL c_0 b0 b0
+ |- ((!y. (!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z)))) = T)
T c= ! ! c= cvector_add f0 cvector_add b0 b1 cvector_add cvector_add f0 b0 b1 cT
- |- ((!i. t) = t)
T c= ! f0 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (((!x. (!y. (!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))))) /\ (!x. (((vector_add (vec (NUMERAL _0))) x) = x))) = ((!x. (!y. (((vector_add x) y) = ((vector_add y) x)))) /\ ((!x. (!y. (!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))))) /\ (!x. (((vector_add (vec (NUMERAL _0))) x) = x)))))
T c= c/\ ! ! ! c= cvector_add b0 cvector_add b1 b2 cvector_add cvector_add b0 b1 b2 ! c= cvector_add cvec cNUMERAL c_0 b0 b0 c/\ ! ! c= cvector_add b0 b1 cvector_add b1 b0 c/\ ! ! ! c= cvector_add b0 cvector_add b1 b2 cvector_add cvector_add b0 b1 b2 ! c= cvector_add cvec cNUMERAL c_0 b0 b0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add x) ((vector_add y) z)) $ i) = (((vector_add ((vector_add x) y)) z) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 cvector_add f2 f3 f0 c$ cvector_add cvector_add f1 f2 f3 f0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add (x $ i)) (y $ i)) = ((real_add (y $ i)) (x $ i)))
T c= creal_add c$ f0 f1 c$ f2 f1 creal_add c$ f2 f1 c$ f0 f1
- |- ((((vector_add x) y) = ((vector_add y) x)) = T)
T c= c= cvector_add f0 f1 cvector_add f1 f0 cT
- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((!x. (((vector_add (vec (NUMERAL _0))) x) = x)) = ((!x. (!y. (!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))))) /\ (!x. (((vector_add (vec (NUMERAL _0))) x) = x))))
T c= ! c= cvector_add cvec cNUMERAL c_0 b0 b0 c/\ ! ! ! c= cvector_add b0 cvector_add b1 b2 cvector_add cvector_add b0 b1 b2 ! c= cvector_add cvec cNUMERAL c_0 b0 b0
- |- ((((~ (((real_add (x $ i)) ((real_add (y $ i)) (z $ i))) = ((real_add ((real_add (x $ i)) (y $ i))) (z $ i)))) ==> F) ==> (((real_add (x $ i)) ((real_add (y $ i)) (z $ i))) = ((real_add ((real_add (x $ i)) (y $ i))) (z $ i)))) = (((real_add (x $ i)) ((real_add (y $ i)) (z $ i))) = ((real_add ((real_add (x $ i)) (y $ i))) (z $ i))))
T c= c==> c==> c~ c= creal_add c$ f0 f1 creal_add c$ f2 f1 c$ f3 f1 creal_add creal_add c$ f0 f1 c$ f2 f1 c$ f3 f1 cF c= creal_add c$ f0 f1 creal_add c$ f2 f1 c$ f3 f1 creal_add creal_add c$ f0 f1 c$ f2 f1 c$ f3 f1 c= creal_add c$ f0 f1 creal_add c$ f2 f1 c$ f3 f1 creal_add creal_add c$ f0 f1 c$ f2 f1 c$ f3 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_add (x $ i)) (y $ i)) = ((real_add (y $ i)) (x $ i))) = (((lambdai. ((real_add (x $ i)) (y $ i))) $ i) = ((lambdai. ((real_add (y $ i)) (x $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_add c$ f1 f0 c$ f2 f0 creal_add c$ f2 f0 c$ f1 f0 c= c$ clambda / creal_add c$ f1 b0 c$ f2 b0 f0 c$ clambda / creal_add c$ f2 b0 c$ f1 b0 f0
+ |- (((!x. (!y. (((vector_add x) y) = ((vector_add y) x)))) /\ ((!x. (!y. (!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))))) /\ (!x. (((vector_add (vec (NUMERAL _0))) x) = x)))) = (monoidal vector_add))
T c= c/\ ! ! c= cvector_add b0 b1 cvector_add b1 b0 c/\ ! ! ! c= cvector_add b0 cvector_add b1 b2 cvector_add cvector_add b0 b1 b2 ! c= cvector_add cvec cNUMERAL c_0 b0 b0 cmonoidal part cvector_add
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. (real_of_num (NUMERAL _0))) $ i)) (x $ i))) $ i) = (x $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_of_num cNUMERAL c_0 b0 c$ f1 b0 f0 c$ f1 f0
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_add (real_of_num (NUMERAL _0))) (x $ i)) = (x $ i)) = (((lambdai. ((real_add ((lambdai. (real_of_num (NUMERAL _0))) $ i)) (x $ i))) $ i) = (x $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_add creal_of_num cNUMERAL c_0 c$ f1 f0 c$ f1 f0 c= c$ clambda / creal_add c$ clambda / creal_of_num cNUMERAL c_0 b0 c$ f1 b0 f0 c$ f1 f0
+ |- ((((vector_add (vec (NUMERAL _0))) x) = x) = T)
T c= c= cvector_add cvec cNUMERAL c_0 f0 f0 cT
+ |- ((((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z)) = T)
T c= c= cvector_add f0 cvector_add f1 f2 cvector_add cvector_add f0 f1 f2 cT
+ |- ((!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))) = T)
T c= ! c= cvector_add f0 cvector_add f1 b0 cvector_add cvector_add f0 f1 b0 cT
+ |- (((!op. ((monoidal op) = ((!x. (!y. (((op x) y) = ((op y) x)))) /\ ((!x. (!y. (!z. (((op x) ((op y) z)) = ((op ((op x) y)) z))))) /\ (!x. (((op (neutral op)) x) = x)))))) ==> ((\op. ((monoidal op) = ((!x. (!y. (((op x) y) = ((op y) x)))) /\ ((!x. (!y. (!z. (((op x) ((op y) z)) = ((op ((op x) y)) z))))) /\ (!x. (((op (neutral op)) x) = x)))))) op)) = ((\op. ((monoidal op) = ((!x. (!y. (((op x) y) = ((op y) x)))) /\ ((!x. (!y. (!z. (((op x) ((op y) z)) = ((op ((op x) y)) z))))) /\ (!x. (((op (neutral op)) x) = x)))))) op))
T c= c==> ! c= cmonoidal b0 c/\ ! ! c= * * b0 b1 b2 * * b0 b2 b1 c/\ ! ! ! c= * * b0 b1 * * b0 b2 b3 * * b0 * * b0 b1 b2 b3 ! c= * * b0 cneutral b0 b1 b1 * / c= cmonoidal b0 c/\ ! ! c= * * b0 b1 b2 * * b0 b2 b1 c/\ ! ! ! c= * * b0 b1 * * b0 b2 b3 * * b0 * * b0 b1 b2 b3 ! c= * * b0 cneutral b0 b1 b1 f0 * / c= cmonoidal b0 c/\ ! ! c= * * b0 b1 b2 * * b0 b2 b1 c/\ ! ! ! c= * * b0 b1 * * b0 b2 b3 * * b0 * * b0 b1 b2 b3 ! c= * * b0 cneutral b0 b1 b1 f0
+ |- (!x. (((vector_add (vec (NUMERAL _0))) x) = x))
T c= cvector_add cvec cNUMERAL c_0 f0 f0
+ |- ((!x. (!y. (!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))))) /\ (!x. (((vector_add (vec (NUMERAL _0))) x) = x)))
T c/\ ! ! ! c= cvector_add b0 cvector_add b1 b2 cvector_add cvector_add b0 b1 b2 ! c= cvector_add cvec cNUMERAL c_0 b0 b0
