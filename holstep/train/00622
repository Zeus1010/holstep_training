N Bump.set_of_list3
C |- (!ul. (((LENGTH ul) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> c= cLENGTH f0 cNUMERAL cBIT1 cBIT1 c_0 c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
D set_of_list
A |- (((set_of_list NIL) = EMPTY) /\ ((set_of_list ((CONS h) t)) = (h INSERT (set_of_list t))))
T c/\ c= * part cset_of_list cNIL part cEMPTY c= * part cset_of_list cCONS f0 f1 * * part cINSERT f0 * part cset_of_list f1
D Basics.LENGTH3
A |- (!ul. (((LENGTH ul) = (NUMERAL (BIT1 (BIT1 _0)))) ==> (ul = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL))))))
T c==> c= cLENGTH f0 cNUMERAL cBIT1 cBIT1 c_0 c= f0 cCONS cEL cNUMERAL c_0 f0 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL
- ((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) c) |- (((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) c) /\ (?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)))
T c==> * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 f1 c/\ * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 f1 c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0
- |- ((((EL (NUMERAL (BIT1 _0))) ul) = b) = ((\b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) b))
T c= c= cEL cNUMERAL cBIT1 c_0 f0 f1 * / c= cEL cNUMERAL cBIT1 c_0 f0 b0 f1
- (((EL (NUMERAL (BIT1 _0))) ul) = b) |- ((((EL (NUMERAL (BIT1 _0))) ul) = b) /\ (?b. (((EL (NUMERAL (BIT1 _0))) ul) = b)))
T c==> c= cEL cNUMERAL cBIT1 c_0 f0 f1 c/\ c= cEL cNUMERAL cBIT1 c_0 f0 f1 c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0
+ |- ((((EL (NUMERAL (BIT1 _0))) ul) = b) ==> ((ul = ((CONS a) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> c= cEL cNUMERAL cBIT1 c_0 f0 f1 c==> c= f0 cCONS f2 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ |- (!c. (((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) c) ==> ((ul = ((CONS a) ((CONS b) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (b INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))))))
T c==> * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 f1 c==> c= f0 cCONS f2 cCONS f3 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ |- (!a. (((\a. (((EL (NUMERAL _0)) ul) = a)) a) ==> ((ul = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))))))
T c==> * / c= cEL cNUMERAL c_0 f0 b0 f1 c==> c= f0 cCONS cEL cNUMERAL c_0 f0 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ |- ((((\b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) b) ==> ((ul = ((CONS a) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))))) = T)
T c= c==> * / c= cEL cNUMERAL cBIT1 c_0 f0 b0 f1 c==> c= f0 cCONS f2 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY cT
+ |- ((ul = ((CONS a) ((CONS b) ((CONS c) NIL)))) ==> ((set_of_list ul) = (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cset_of_list f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c))
T c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0
- |- ((?b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) ==> (?b. (((EL (NUMERAL (BIT1 _0))) ul) = b)))
T c==> c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0 c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0
- |- ((((EL (NUMERAL _0)) ul) = a) = ((\a. (((EL (NUMERAL _0)) ul) = a)) a))
T c= c= cEL cNUMERAL c_0 f0 f1 * / c= cEL cNUMERAL c_0 f0 b0 f1
- |- ((((\b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) b) ==> (?b. (((EL (NUMERAL (BIT1 _0))) ul) = b))) = T)
T c= c==> * / c= cEL cNUMERAL cBIT1 c_0 f0 b0 f1 c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0 cT
- |- ((((\a. (((EL (NUMERAL _0)) ul) = a)) a) ==> (?a. (((EL (NUMERAL _0)) ul) = a))) = T)
T c= c==> * / c= cEL cNUMERAL c_0 f0 b0 f1 c? / c= cEL cNUMERAL c_0 f0 b0 cT
- (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c) |- ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c) /\ (?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)))
T c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0
+ |- ((((EL (NUMERAL _0)) ul) = ((EL (NUMERAL _0)) ul)) = ((\a. (((EL (NUMERAL _0)) ul) = a)) ((EL (NUMERAL _0)) ul)))
T c= c= cEL cNUMERAL c_0 f0 cEL cNUMERAL c_0 f0 * / c= cEL cNUMERAL c_0 f0 b0 cEL cNUMERAL c_0 f0
+ |- ((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul))
T * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 f0
+ ((\b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) b) |- (((EL (NUMERAL (BIT1 _0))) ul) = b)
T c==> * / c= cEL cNUMERAL cBIT1 c_0 f0 b0 f1 c= cEL cNUMERAL cBIT1 c_0 f0 f1
- |- ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c) ==> (?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)))
T c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0
- |- ((((EL (NUMERAL (BIT1 _0))) ul) = b) ==> (?b. (((EL (NUMERAL (BIT1 _0))) ul) = b)))
T c==> c= cEL cNUMERAL cBIT1 c_0 f0 f1 c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0
+ ((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) c) |- (((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) c) /\ ((ul = ((CONS a) ((CONS b) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (b INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 f1 c/\ * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 f1 c==> c= f0 cCONS f2 cCONS f3 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ |- (((?b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) ==> ((ul = ((CONS a) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))))) = ((ul = ((CONS a) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c= c==> c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0 c==> c= f0 cCONS f1 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY c==> c= f0 cCONS f1 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
- (((EL (NUMERAL (BIT1 _0))) ul) = b) |- ((\b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) b)
T c==> c= cEL cNUMERAL cBIT1 c_0 f0 f1 * / c= cEL cNUMERAL cBIT1 c_0 f0 b0 f1
+ (ul = ((CONS a) ((CONS b) ((CONS c) NIL)))) |- (((set_of_list ul) = (a INSERT (b INSERT (c INSERT EMPTY)))) = ((set_of_list ((CONS a) ((CONS b) ((CONS c) NIL)))) = (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= c= * part cset_of_list f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cset_of_list cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c) = ((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) c))
T c= c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 f1 * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 f1
+ (((EL (NUMERAL _0)) ul) = a) |- ((((EL (NUMERAL _0)) ul) = a) /\ ((ul = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> c= cEL cNUMERAL c_0 f0 f1 c/\ c= cEL cNUMERAL c_0 f0 f1 c==> c= f0 cCONS cEL cNUMERAL c_0 f0 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (!b. (((\b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) b) ==> (?b. (((EL (NUMERAL (BIT1 _0))) ul) = b))))
T c==> * / c= cEL cNUMERAL cBIT1 c_0 f0 b0 f1 c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0
+ |- ((ul = ((CONS a) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))))
T c==> c= f0 cCONS f1 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ (((EL (NUMERAL _0)) ul) = a) |- (((ul = ((CONS a) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))) = ((ul = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> c= cEL cNUMERAL c_0 f0 f1 c= c==> c= f0 cCONS f1 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY c==> c= f0 cCONS cEL cNUMERAL c_0 f0 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
- ((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) c) |- (((((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c) ==> (?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c))) = (?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)))
T c==> * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 f1 c= c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0
+ |- ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) = ((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)))
T c= c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cEL cNUMERAL cBIT0 cBIT1 c_0 f0 * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((?a. (((EL (NUMERAL _0)) ul) = a)) ==> ((ul = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))))) = ((ul = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c= c==> c? / c= cEL cNUMERAL c_0 f0 b0 c==> c= f0 cCONS cEL cNUMERAL c_0 f0 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY c==> c= f0 cCONS cEL cNUMERAL c_0 f0 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ |- ((ul = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))))
T c==> c= f0 cCONS cEL cNUMERAL c_0 f0 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ ((\a. (((EL (NUMERAL _0)) ul) = a)) a) |- (((EL (NUMERAL _0)) ul) = a)
T c==> * / c= cEL cNUMERAL c_0 f0 b0 f1 c= cEL cNUMERAL c_0 f0 f1
- |- (!c. (((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) c) ==> (?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c))))
T c==> * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 f1 c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0
+ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c) |- ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c) /\ ((ul = ((CONS a) ((CONS b) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (b INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c==> c= f0 cCONS f2 cCONS f3 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ |- (!b. (((\b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) b) ==> ((ul = ((CONS a) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))))))
T c==> * / c= cEL cNUMERAL cBIT1 c_0 f0 b0 f1 c==> c= f0 cCONS f2 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
- ((\a. (((EL (NUMERAL _0)) ul) = a)) a) |- (((\a. (((EL (NUMERAL _0)) ul) = a)) a) /\ (?a. (((EL (NUMERAL _0)) ul) = a)))
T c==> * / c= cEL cNUMERAL c_0 f0 b0 f1 c/\ * / c= cEL cNUMERAL c_0 f0 b0 f1 c? / c= cEL cNUMERAL c_0 f0 b0
+ |- ((?a. (((EL (NUMERAL _0)) ul) = a)) ==> ((ul = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> c? / c= cEL cNUMERAL c_0 f0 b0 c==> c= f0 cCONS cEL cNUMERAL c_0 f0 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ |- ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c) ==> ((ul = ((CONS a) ((CONS b) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (b INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c==> c= f0 cCONS f2 cCONS f3 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
- (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c) |- ((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) c)
T c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 f1 * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 f1
- |- ((?a. (((EL (NUMERAL _0)) ul) = a)) ==> (?a. (((EL (NUMERAL _0)) ul) = a)))
T c==> c? / c= cEL cNUMERAL c_0 f0 b0 c? / c= cEL cNUMERAL c_0 f0 b0
+ |- ((((EL (NUMERAL _0)) ul) = a) ==> ((ul = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> c= cEL cNUMERAL c_0 f0 f1 c==> c= f0 cCONS cEL cNUMERAL c_0 f0 cCONS cEL cNUMERAL cBIT1 c_0 f0 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ |- (((?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) ==> ((ul = ((CONS a) ((CONS b) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (b INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))))) = ((ul = ((CONS a) ((CONS b) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (b INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c= c==> c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c==> c= f0 cCONS f1 cCONS f2 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY c==> c= f0 cCONS f1 cCONS f2 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ ((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) c) |- (((((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c) ==> ((ul = ((CONS a) ((CONS b) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (b INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))))) = ((ul = ((CONS a) ((CONS b) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (b INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 f1 c= c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c==> c= f0 cCONS f2 cCONS f3 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY c==> c= f0 cCONS f2 cCONS f3 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ (ul = ((CONS a) ((CONS b) ((CONS c) NIL)))) |- (((set_of_list ((CONS a) ((CONS b) ((CONS c) NIL)))) = (a INSERT (b INSERT (c INSERT EMPTY)))) = ((set_of_list ul) = (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= c= * part cset_of_list cCONS f1 cCONS f2 cCONS f3 cNIL * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cset_of_list f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (((EL (NUMERAL _0)) ul) = a) |- ((\a. (((EL (NUMERAL _0)) ul) = a)) a)
T c==> c= cEL cNUMERAL c_0 f0 f1 * / c= cEL cNUMERAL c_0 f0 b0 f1
+ (ul = ((CONS a) ((CONS b) ((CONS c) NIL)))) |- ((ul = ((CONS a) ((CONS b) ((CONS c) NIL)))) /\ ((set_of_list ul) = (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cNIL c/\ c= f0 cCONS f1 cCONS f2 cCONS f3 cNIL c= * part cset_of_list f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((LENGTH ul) = (NUMERAL (BIT1 (BIT1 _0)))) |- (((LENGTH ul) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY)))))
T c==> c= cLENGTH f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cLENGTH f0 cNUMERAL cBIT1 cBIT1 c_0 c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c) |- (((ul = ((CONS a) ((CONS b) ((CONS c) NIL)))) ==> ((set_of_list ul) = (a INSERT (b INSERT (c INSERT EMPTY))))) = ((ul = ((CONS a) ((CONS b) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (b INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c= c==> c= f0 cCONS f2 cCONS f3 cCONS f1 cNIL c= * part cset_of_list f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c==> c= f0 cCONS f2 cCONS f3 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
+ |- ((((LENGTH ul) = (NUMERAL (BIT1 (BIT1 _0)))) ==> ((set_of_list ul) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))) = T)
T c= c==> c= cLENGTH f0 cNUMERAL cBIT1 cBIT1 c_0 c= * part cset_of_list f0 * * part cINSERT cEL cNUMERAL c_0 f0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f0 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY cT
+ |- ((?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) ==> ((ul = ((CONS a) ((CONS b) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) NIL)))) ==> ((set_of_list ul) = (a INSERT (b INSERT (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) INSERT EMPTY))))))
T c==> c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c==> c= f0 cCONS f1 cCONS f2 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL c= * part cset_of_list f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT cEL cNUMERAL cBIT0 cBIT1 c_0 f0 part cEMPTY
- ((\a. (((EL (NUMERAL _0)) ul) = a)) a) |- (((((EL (NUMERAL _0)) ul) = a) ==> (?a. (((EL (NUMERAL _0)) ul) = a))) = (?a. (((EL (NUMERAL _0)) ul) = a)))
T c==> * / c= cEL cNUMERAL c_0 f0 b0 f1 c= c==> c= cEL cNUMERAL c_0 f0 f1 c? / c= cEL cNUMERAL c_0 f0 b0 c? / c= cEL cNUMERAL c_0 f0 b0
- |- ((((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) c) ==> (?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c))) = T)
T c= c==> * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 f1 c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 cT
- |- (((!x. (((\c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) x) ==> (?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)))) ==> ((?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) ==> (?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)))) = ((?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) ==> (?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c))))
T c= c==> ! c==> * / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b1 b0 c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c==> c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c==> c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0
- |- ((?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)) ==> (?c. (((EL (NUMERAL (BIT0 (BIT1 _0)))) ul) = c)))
T c==> c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c? / c= cEL cNUMERAL cBIT0 cBIT1 c_0 f0 b0
- |- ((((EL (NUMERAL _0)) ul) = a) ==> (?a. (((EL (NUMERAL _0)) ul) = a)))
T c==> c= cEL cNUMERAL c_0 f0 f1 c? / c= cEL cNUMERAL c_0 f0 b0
- ((\b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) b) |- (((\b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) b) /\ (?b. (((EL (NUMERAL (BIT1 _0))) ul) = b)))
T c==> * / c= cEL cNUMERAL cBIT1 c_0 f0 b0 f1 c/\ * / c= cEL cNUMERAL cBIT1 c_0 f0 b0 f1 c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0
- (((EL (NUMERAL _0)) ul) = a) |- ((((EL (NUMERAL _0)) ul) = a) /\ (?a. (((EL (NUMERAL _0)) ul) = a)))
T c==> c= cEL cNUMERAL c_0 f0 f1 c/\ c= cEL cNUMERAL c_0 f0 f1 c? / c= cEL cNUMERAL c_0 f0 b0
- |- (!a. (((\a. (((EL (NUMERAL _0)) ul) = a)) a) ==> (?a. (((EL (NUMERAL _0)) ul) = a))))
T c==> * / c= cEL cNUMERAL c_0 f0 b0 f1 c? / c= cEL cNUMERAL c_0 f0 b0
- ((\b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) b) |- (((((EL (NUMERAL (BIT1 _0))) ul) = b) ==> (?b. (((EL (NUMERAL (BIT1 _0))) ul) = b))) = (?b. (((EL (NUMERAL (BIT1 _0))) ul) = b)))
T c==> * / c= cEL cNUMERAL cBIT1 c_0 f0 b0 f1 c= c==> c= cEL cNUMERAL cBIT1 c_0 f0 f1 c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0 c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0
- |- (T = ((set_of_list ((CONS a) ((CONS b) ((CONS c) NIL)))) = (a INSERT (b INSERT (c INSERT EMPTY)))))
T c= cT c= * part cset_of_list cCONS f0 cCONS f1 cCONS f2 cNIL * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!x. (((\a. (((EL (NUMERAL _0)) ul) = a)) x) ==> (?a. (((EL (NUMERAL _0)) ul) = a)))) ==> ((?a. (((EL (NUMERAL _0)) ul) = a)) ==> (?a. (((EL (NUMERAL _0)) ul) = a)))) = ((?a. (((EL (NUMERAL _0)) ul) = a)) ==> (?a. (((EL (NUMERAL _0)) ul) = a))))
T c= c==> ! c==> * / c= cEL cNUMERAL c_0 f0 b1 b0 c? / c= cEL cNUMERAL c_0 f0 b1 c==> c? / c= cEL cNUMERAL c_0 f0 b0 c? / c= cEL cNUMERAL c_0 f0 b0 c==> c? / c= cEL cNUMERAL c_0 f0 b0 c? / c= cEL cNUMERAL c_0 f0 b0
- |- (((!x. (((\b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) x) ==> (?b. (((EL (NUMERAL (BIT1 _0))) ul) = b)))) ==> ((?b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) ==> (?b. (((EL (NUMERAL (BIT1 _0))) ul) = b)))) = ((?b. (((EL (NUMERAL (BIT1 _0))) ul) = b)) ==> (?b. (((EL (NUMERAL (BIT1 _0))) ul) = b))))
T c= c==> ! c==> * / c= cEL cNUMERAL cBIT1 c_0 f0 b1 b0 c? / c= cEL cNUMERAL cBIT1 c_0 f0 b1 c==> c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0 c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0 c==> c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0 c? / c= cEL cNUMERAL cBIT1 c_0 f0 b0
