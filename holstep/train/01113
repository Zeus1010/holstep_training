N VSUM_CLAUSES_NUMSEG
C |- ((!m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) /\ (!m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))))
T c/\ ! c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 ! ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D FINITE_NUMSEG
A |- (!m. (!n. (FINITE (m .. n))))
T cFINITE * * part c.. f0 f1
D IN_NUMSEG
A |- (!m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))))
T c= cIN f0 * * part c.. f1 f2 c/\ c<= f1 f0 c<= f0 f2
D NUMSEG_CLAUSES
A |- ((!m. ((m .. (NUMERAL _0)) = (((COND (m = (NUMERAL _0))) ((NUMERAL _0) INSERT EMPTY)) EMPTY))) /\ (!m. (!n. ((m .. (SUC n)) = (((COND (m <= (SUC n))) ((SUC n) INSERT (m .. n))) (m .. n))))))
T c/\ ! c= * * part c.. b0 cNUMERAL c_0 * * * part cCOND c= b0 cNUMERAL c_0 * * part cINSERT cNUMERAL c_0 part cEMPTY part cEMPTY ! ! c= * * part c.. b0 cSUC b1 * * * part cCOND c<= b0 cSUC b1 * * part cINSERT cSUC b1 * * part c.. b0 b1 * * part c.. b0 b1
D VECTOR_ADD_AC
A |- ((((vector_add m) n) = ((vector_add n) m)) /\ ((((vector_add ((vector_add m) n)) p) = ((vector_add m) ((vector_add n) p))) /\ (((vector_add m) ((vector_add n) p)) = ((vector_add n) ((vector_add m) p)))))
T c/\ c= cvector_add f0 f1 cvector_add f1 f0 c/\ c= cvector_add cvector_add f0 f1 f2 cvector_add f0 cvector_add f1 f2 c= cvector_add f0 cvector_add f1 f2 cvector_add f1 cvector_add f0 f2
D VSUM_CLAUSES
A |- ((!f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) /\ (!x. (!f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))))))
T c/\ ! c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 ! ! ! c==> cFINITE b2 c= cvsum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 cvsum b2 b1 cvector_add * b1 b0 cvsum b2 b1
D VSUM_SING
A |- (!f. (!x. (((vsum (x INSERT EMPTY)) f) = (f x))))
T c= cvsum * * part cINSERT f0 part cEMPTY f1 * f1 f0
+ (~ (m = (NUMERAL _0))) |- ((((vsum EMPTY) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0)))) = (((vsum EMPTY) f) = (((COND F) (f (NUMERAL _0))) (vec (NUMERAL _0)))))
T c==> c~ c= f0 cNUMERAL c_0 c= c= cvsum part cEMPTY f1 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 c= cvsum part cEMPTY f1 cCOND cF * f1 cNUMERAL c_0 cvec cNUMERAL c_0
+ (~ (m <= (SUC n))) |- ((m <= (SUC n)) = F)
T c==> c~ c<= f0 cSUC f1 c= c<= f0 cSUC f1 cF
+ |- ((\e'. ((((SUC n) IN (m .. n)) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) IN (m .. n))) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN cSUC f0 * * part c.. f1 f0 f2 c==> c==> f2 c= cvsum * * part c.. f1 f0 f3 f4 c==> c==> c~ f2 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f1 f0 f3 b0 c= cCOND cIN cSUC f0 * * part c.. f1 f0 cvsum * * part c.. f1 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f1 f0 f3 cCOND f2 f4 b0 f5
+ ((SUC n) <= n) |- (((SUC n) <= n) /\ (((vsum (m .. n)) f) = ((vsum (m .. n)) f)))
T c==> c<= cSUC f0 f0 c/\ c<= cSUC f0 f0 c= cvsum * * part c.. f1 f0 f2 cvsum * * part c.. f1 f0 f2
+ |- ((\x. (((vsum (x INSERT EMPTY)) f) = (f x))) x)
T * / c= cvsum * * part cINSERT b0 part cEMPTY f0 * f0 b0 f1
- (FINITE s) |- ((FINITE s) /\ (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))
T c==> cFINITE f0 c/\ cFINITE f0 c= cvsum * * part cINSERT f1 f0 f2 cCOND cIN f1 f0 cvsum f0 f2 cvector_add * f2 f1 cvsum f0 f2
+ |- (T = (((vsum ((NUMERAL _0) INSERT EMPTY)) f) = (((COND T) (f (NUMERAL _0))) (vec (NUMERAL _0)))))
T c= cT c= cvsum * * part cINSERT cNUMERAL c_0 part cEMPTY f0 cCOND cT * f0 cNUMERAL c_0 cvec cNUMERAL c_0
- (~ (m = (NUMERAL _0))) |- (((~ ((NUMERAL _0) = m)) ==> (((NUMERAL _0) = m) = F)) = (((NUMERAL _0) = m) = F))
T c==> c~ c= f0 cNUMERAL c_0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- (((~ (m <= (SUC n))) ==> (((vsum (m .. n)) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) = (((m <= (SUC n)) ==> (((vsum ((SUC n) INSERT (m .. n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) /\ ((~ (m <= (SUC n))) ==> (((vsum (m .. n)) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))))
T c= c==> c~ c<= f0 cSUC f1 c= cvsum * * part c.. f0 f1 f2 cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2 c/\ c==> c<= f0 cSUC f1 c= cvsum * * part cINSERT cSUC f1 * * part c.. f0 f1 f2 cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2 c==> c~ c<= f0 cSUC f1 c= cvsum * * part c.. f0 f1 f2 cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2
+ (~ (m <= (SUC n))) |- ((((vsum (m .. n)) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))) = (((vsum (m .. n)) f) = (((COND F) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))
T c==> c~ c<= f0 cSUC f1 c= c= cvsum * * part c.. f0 f1 f2 cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2 c= cvsum * * part c.. f0 f1 f2 cCOND cF cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2
+ |- (((!f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) ==> ((\f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) f)) = ((\f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) f))
T c= c==> ! c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 * / c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 f0 * / c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 f0
- |- (((((SUC n) <= n) ==> (((vsum (m .. n)) f) = ((vsum (m .. n)) f))) ==> (((~ ((SUC n) <= n)) ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) e')))) = (((~ ((SUC n) <= n)) ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) e'))))
T c= c==> c==> c<= cSUC f0 f0 c= cvsum * * part c.. f1 f0 f2 cvsum * * part c.. f1 f0 f2 c==> c==> c~ c<= cSUC f0 f0 c= cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 f3 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 f3 c==> c==> c~ c<= cSUC f0 f0 c= cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 f3 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 f3
+ |- ((\s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))) s)
T * / c==> cFINITE b0 c= cvsum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 cvsum b0 f1 cvector_add * f1 f0 cvsum b0 f1 f2
+ |- (((!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))) ==> ((\p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))) p)) = ((\p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))) p))
T c= c==> ! c= cIN b0 * * part c.. f0 f1 c/\ c<= f0 b0 c<= b0 f1 * / c= cIN b0 * * part c.. f0 f1 c/\ c<= f0 b0 c<= b0 f1 f2 * / c= cIN b0 * * part c.. f0 f1 c/\ c<= f0 b0 c<= b0 f1 f2
+ |- (((vsum ((SUC n) INSERT (m .. n))) f) = (((COND ((SUC n) IN (m .. n))) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))))
T c= cvsum * * part cINSERT cSUC f0 * * part c.. f1 f0 f2 cCOND cIN cSUC f0 * * part c.. f1 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _156468)) /\ ((real_le ((real_add (real_of_int _156468)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _156468))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _156468)) /\ ((real_le ((real_add (real_of_int _156468)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _156468))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _156468)) /\ ((real_le ((real_add (real_of_int _156468)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _156468)))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ ((SUC n) <= n)) ==> (((SUC n) <= n) = F)) = (((SUC n) <= n) = F))
T c= c==> c~ c<= cSUC f0 f0 c= c<= cSUC f0 f0 cF c= c<= cSUC f0 f0 cF
+ |- (((SUC n) <= n) ==> (((vsum (m .. n)) f) = ((vsum (m .. n)) f)))
T c==> c<= cSUC f0 f0 c= cvsum * * part c.. f1 f0 f2 cvsum * * part c.. f1 f0 f2
+ |- (T = (((vsum (m .. n)) f) = (((COND F) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))
T c= cT c= cvsum * * part c.. f0 f1 f2 cCOND cF cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2
+ |- (((((SUC n) <= n) ==> (((vsum (m .. n)) f) = ((vsum (m .. n)) f))) ==> (((~ ((SUC n) <= n)) ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) IN (m .. n))) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) e')))) = (((~ ((SUC n) <= n)) ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) IN (m .. n))) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) e'))))
T c= c==> c==> c<= cSUC f0 f0 c= cvsum * * part c.. f1 f0 f2 cvsum * * part c.. f1 f0 f2 c==> c==> c~ c<= cSUC f0 f0 c= cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 f3 c= cCOND cIN cSUC f0 * * part c.. f1 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 f3 c==> c==> c~ c<= cSUC f0 f0 c= cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 f3 c= cCOND cIN cSUC f0 * * part c.. f1 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 f3
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!n. ((m .. (SUC n)) = (((COND (m <= (SUC n))) ((SUC n) INSERT (m .. n))) (m .. n)))) ==> ((\n. ((m .. (SUC n)) = (((COND (m <= (SUC n))) ((SUC n) INSERT (m .. n))) (m .. n)))) n)) = ((\n. ((m .. (SUC n)) = (((COND (m <= (SUC n))) ((SUC n) INSERT (m .. n))) (m .. n)))) n))
T c= c==> ! c= * * part c.. f0 cSUC b0 * * * part cCOND c<= f0 cSUC b0 * * part cINSERT cSUC b0 * * part c.. f0 b0 * * part c.. f0 b0 * / c= * * part c.. f0 cSUC b0 * * * part cCOND c<= f0 cSUC b0 * * part cINSERT cSUC b0 * * part c.. f0 b0 * * part c.. f0 b0 f1 * / c= * * part c.. f0 cSUC b0 * * * part cCOND c<= f0 cSUC b0 * * part cINSERT cSUC b0 * * part c.. f0 b0 * * part c.. f0 b0 f1
+ |- ((~ ((SUC n) <= n)) ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = ((vector_add (f (SUC n))) ((vsum (m .. n)) f))))
T c==> c~ c<= cSUC f0 f0 c= cvector_add * f1 cSUC f0 cvsum * * part c.. f2 f0 f1 cvector_add * f1 cSUC f0 cvsum * * part c.. f2 f0 f1
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _156468) ==> (~ ((int_le ((int_add _156468) (int_of_num (NUMERAL (BIT1 _0))))) _156468)))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c~ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))
T c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvsum * * part c.. f2 f0 f3 f4 c==> c==> c~ f1 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 f5 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 cCOND f1 f4 f5
+ |- (((vsum EMPTY) f) = (vec (NUMERAL _0)))
T c= cvsum part cEMPTY f0 cvec cNUMERAL c_0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ |- (((!f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f))))))) ==> ((\f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f))))))) f)) = ((\f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f))))))) f))
T c= c==> ! ! c==> cFINITE b1 c= cvsum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 cvsum b1 b0 cvector_add * b0 f0 cvsum b1 b0 * / ! c==> cFINITE b1 c= cvsum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 cvsum b1 b0 cvector_add * b0 f0 cvsum b1 b0 f1 * / ! c==> cFINITE b1 c= cvsum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 cvsum b1 b0 cvector_add * b0 f0 cvsum b1 b0 f1
- |- ((!n. t) = t)
T c= ! f0 f0
+ |- (((!n. (FINITE (m .. n))) ==> ((\n. (FINITE (m .. n))) n)) = ((\n. (FINITE (m .. n))) n))
T c= c==> ! cFINITE * * part c.. f0 b0 * / cFINITE * * part c.. f0 b0 f1 * / cFINITE * * part c.. f0 b0 f1
+ (m <= (SUC n)) |- ((((SUC n) <= n) ==> (((vsum (m .. n)) f) = t')) ==> (((~ ((SUC n) <= n)) ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) IN (m .. n))) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND ((SUC n) <= n)) t') e'))))
T c==> c<= f0 cSUC f1 c==> c==> c<= cSUC f1 f1 c= cvsum * * part c.. f0 f1 f2 f3 c==> c==> c~ c<= cSUC f1 f1 c= cvector_add * f2 cSUC f1 cvsum * * part c.. f0 f1 f2 f4 c= cCOND cIN cSUC f1 * * part c.. f0 f1 cvsum * * part c.. f0 f1 f2 cvector_add * f2 cSUC f1 cvsum * * part c.. f0 f1 f2 cCOND c<= cSUC f1 f1 f3 f4
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ (m <= (SUC n)) |- ((((vsum ((SUC n) INSERT (m .. n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))) = (((vsum ((SUC n) INSERT (m .. n))) f) = (((COND T) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))
T c==> c<= f0 cSUC f1 c= c= cvsum * * part cINSERT cSUC f1 * * part c.. f0 f1 f2 cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2 c= cvsum * * part cINSERT cSUC f1 * * part c.. f0 f1 f2 cCOND cT cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2
- |- (((~ ((SUC n) <= n)) ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) e')))
T c==> c==> c~ c<= cSUC f0 f0 c= cvector_add * f1 cSUC f0 cvsum * * part c.. f2 f0 f1 f3 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f1 cvector_add * f1 cSUC f0 cvsum * * part c.. f2 f0 f1 cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f1 f3
+ |- ((\n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))) n)
T * / ! c= cIN b1 * * part c.. f0 b0 c/\ c<= f0 b1 c<= b1 b0 f1
+ |- ((\p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))) p)
T * / c= cIN b0 * * part c.. f0 f1 c/\ c<= f0 b0 c<= b0 f1 f2
+ |- ((\f. (!x. (((vsum (x INSERT EMPTY)) f) = (f x)))) f)
T * / ! c= cvsum * * part cINSERT b1 part cEMPTY b0 * b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (m = (NUMERAL _0))) |- (~ ((NUMERAL _0) = m))
T c==> c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL c_0 f0
+ |- (((!m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))))) ==> ((\m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))))) m)) = ((\m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))))) m))
T c= c==> ! ! ! c= cIN b2 * * part c.. b0 b1 c/\ c<= b0 b2 c<= b2 b1 * / ! ! c= cIN b2 * * part c.. b0 b1 c/\ c<= b0 b2 c<= b2 b1 f0 * / ! ! c= cIN b2 * * part c.. b0 b1 c/\ c<= b0 b2 c<= b2 b1 f0
+ |- (((SUC n) <= n) = F)
T c= c<= cSUC f0 f0 cF
- |- ((\e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))) e')
T * / c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvsum * * part c.. f2 f0 f3 f4 c==> c==> c~ f1 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 b0 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 cCOND f1 f4 b0 f5
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _156468)) /\ ((real_le ((real_add (real_of_int _156468)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _156468))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _156468)) /\ ((real_le ((real_add (real_of_int _156468)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _156468))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _156468)) /\ ((real_le ((real_add (real_of_int _156468)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _156468))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
- |- ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))))
T c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2
+ |- ((~ (m <= (SUC n))) ==> (((vsum (m .. n)) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))
T c==> c~ c<= f0 cSUC f1 c= cvsum * * part c.. f0 f1 f2 cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2
+ |- ((((SUC n) IN (m .. n)) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) IN (m .. n))) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))
T c==> c= cIN cSUC f0 * * part c.. f1 f0 f2 c==> c==> f2 c= cvsum * * part c.. f1 f0 f3 f4 c==> c==> c~ f2 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f1 f0 f3 f5 c= cCOND cIN cSUC f0 * * part c.. f1 f0 cvsum * * part c.. f1 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f1 f0 f3 cCOND f2 f4 f5
+ |- ((((m = (NUMERAL _0)) ==> (((vsum ((NUMERAL _0) INSERT EMPTY)) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) /\ ((~ (m = (NUMERAL _0))) ==> (((vsum EMPTY) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0)))))) = (((vsum (((COND (m = (NUMERAL _0))) ((NUMERAL _0) INSERT EMPTY)) EMPTY)) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0)))))
T c= c/\ c==> c= f0 cNUMERAL c_0 c= cvsum * * part cINSERT cNUMERAL c_0 part cEMPTY f1 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 c==> c~ c= f0 cNUMERAL c_0 c= cvsum part cEMPTY f1 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 c= cvsum * * * part cCOND c= f0 cNUMERAL c_0 * * part cINSERT cNUMERAL c_0 part cEMPTY part cEMPTY f1 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0
+ |- (!m. (!n. (((vsum (((COND (m <= (SUC n))) ((SUC n) INSERT (m .. n))) (m .. n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))))
T c= cvsum * * * part cCOND c<= f0 cSUC f1 * * part cINSERT cSUC f1 * * part c.. f0 f1 * * part c.. f0 f1 f2 cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2
+ (m = (NUMERAL _0)) |- ((((vsum ((NUMERAL _0) INSERT EMPTY)) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0)))) = (((vsum ((NUMERAL _0) INSERT EMPTY)) f) = (((COND T) (f (NUMERAL _0))) (vec (NUMERAL _0)))))
T c==> c= f0 cNUMERAL c_0 c= c= cvsum * * part cINSERT cNUMERAL c_0 part cEMPTY f1 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0 c= cvsum * * part cINSERT cNUMERAL c_0 part cEMPTY f1 cCOND cT * f1 cNUMERAL c_0 cvec cNUMERAL c_0
+ (~ ((SUC n) <= n)) |- ((~ ((SUC n) <= n)) /\ (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = ((vector_add (f (SUC n))) ((vsum (m .. n)) f))))
T c==> c~ c<= cSUC f0 f0 c/\ c~ c<= cSUC f0 f0 c= cvector_add * f1 cSUC f0 cvsum * * part c.. f2 f0 f1 cvector_add * f1 cSUC f0 cvsum * * part c.. f2 f0 f1
+ |- (((!e'. ((((SUC n) IN (m .. n)) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) IN (m .. n))) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))) ==> ((\e'. ((((SUC n) IN (m .. n)) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) IN (m .. n))) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))) e')) = ((\e'. ((((SUC n) IN (m .. n)) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) IN (m .. n))) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN cSUC f0 * * part c.. f1 f0 f2 c==> c==> f2 c= cvsum * * part c.. f1 f0 f3 f4 c==> c==> c~ f2 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f1 f0 f3 b0 c= cCOND cIN cSUC f0 * * part c.. f1 f0 cvsum * * part c.. f1 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f1 f0 f3 cCOND f2 f4 b0 * / c==> c= cIN cSUC f0 * * part c.. f1 f0 f2 c==> c==> f2 c= cvsum * * part c.. f1 f0 f3 f4 c==> c==> c~ f2 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f1 f0 f3 b0 c= cCOND cIN cSUC f0 * * part c.. f1 f0 cvsum * * part c.. f1 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f1 f0 f3 cCOND f2 f4 b0 f5 * / c==> c= cIN cSUC f0 * * part c.. f1 f0 f2 c==> c==> f2 c= cvsum * * part c.. f1 f0 f3 f4 c==> c==> c~ f2 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f1 f0 f3 b0 c= cCOND cIN cSUC f0 * * part c.. f1 f0 cvsum * * part c.. f1 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f1 f0 f3 cCOND f2 f4 b0 f5
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\x. (!f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))))) x)
T * / ! ! c==> cFINITE b2 c= cvsum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 cvsum b2 b1 cvector_add * b1 b0 cvsum b2 b1 f0
+ |- (~ ((int_le ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num n)))
T c~ cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0
+ |- ((\m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))))) m)
T * / ! ! c= cIN b2 * * part c.. b0 b1 c/\ c<= b0 b2 c<= b2 b1 f0
+ |- (T = ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))))
T c= cT c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cvector_add cvsum * * part c.. f1 f0 f2 * f2 cSUC f0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- (~ ((SUC n) <= n)) |- (((SUC n) <= n) = F)
T c==> c~ c<= cSUC f0 f0 c= c<= cSUC f0 f0 cF
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (~ (m = (NUMERAL _0))) |- ((~ (m = (NUMERAL _0))) /\ (((vsum EMPTY) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0)))))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c= cvsum part cEMPTY f1 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (m = (NUMERAL _0)) |- ((m = (NUMERAL _0)) /\ (((vsum ((NUMERAL _0) INSERT EMPTY)) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0)))))
T c==> c= f0 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= cvsum * * part cINSERT cNUMERAL c_0 part cEMPTY f1 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0
- (m = (NUMERAL _0)) |- ((NUMERAL _0) = m)
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
- |- ((\g'. (!t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c<= cSUC f0 f0 b0 c==> c==> b0 c= cvsum * * part c.. f1 f0 f2 b1 c==> c==> c~ b0 c= cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 b2 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND b0 b1 b2 f3
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- (T = (FINITE (m .. n)))
T c= cT cFINITE * * part c.. f0 f1
- |- (((!g'. (!t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c<= cSUC f0 f0 b0 c==> c==> b0 c= cvsum * * part c.. f1 f0 f2 b1 c==> c==> c~ b0 c= cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 b2 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND b0 b1 b2 * / ! ! c==> c= c<= cSUC f0 f0 b0 c==> c==> b0 c= cvsum * * part c.. f1 f0 f2 b1 c==> c==> c~ b0 c= cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 b2 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= c<= cSUC f0 f0 b0 c==> c==> b0 c= cvsum * * part c.. f1 f0 f2 b1 c==> c==> c~ b0 c= cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 b2 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND b0 b1 b2 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ ((SUC n) <= n)) ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = ((vector_add (f (SUC n))) ((vsum (m .. n)) f)))) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))))) = ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f)))))
T c= c==> c==> c~ c<= cSUC f0 f0 c= cvector_add * f1 cSUC f0 cvsum * * part c.. f2 f0 f1 cvector_add * f1 cSUC f0 cvsum * * part c.. f2 f0 f1 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f1 cvector_add * f1 cSUC f0 cvsum * * part c.. f2 f0 f1 cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f1 cvector_add * f1 cSUC f0 cvsum * * part c.. f2 f0 f1 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f1 cvector_add * f1 cSUC f0 cvsum * * part c.. f2 f0 f1 cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f1 cvector_add * f1 cSUC f0 cvsum * * part c.. f2 f0 f1
- |- ((((vector_add ((vector_add m) n)) p) = ((vector_add m) ((vector_add n) p))) /\ (((vector_add m) ((vector_add n) p)) = ((vector_add n) ((vector_add m) p))))
T c/\ c= cvector_add cvector_add f0 f1 f2 cvector_add f0 cvector_add f1 f2 c= cvector_add f0 cvector_add f1 f2 cvector_add f1 cvector_add f0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((SUC n) <= n) |- (((SUC n) <= n) = T)
T c==> c<= cSUC f0 f0 c= c<= cSUC f0 f0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((vector_add m) ((vector_add n) p)) = ((vector_add n) ((vector_add m) p)))
T c= cvector_add f0 cvector_add f1 f2 cvector_add f1 cvector_add f0 f2
- ((NUMERAL _0) = m) |- (m = (NUMERAL _0))
T c==> c= cNUMERAL c_0 f0 c= f0 cNUMERAL c_0
- |- ((((SUC n) <= n) ==> (((vsum (m .. n)) f) = t')) ==> (((~ ((SUC n) <= n)) ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND ((SUC n) <= n)) t') e'))))
T c==> c==> c<= cSUC f0 f0 c= cvsum * * part c.. f1 f0 f2 f3 c==> c==> c~ c<= cSUC f0 f0 c= cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 f4 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND c<= cSUC f0 f0 f3 f4
- |- (((vector_add ((vector_add m) n)) p) = ((vector_add m) ((vector_add n) p)))
T c= cvector_add cvector_add f0 f1 f2 cvector_add f0 cvector_add f1 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvsum * * part c.. f2 f0 f3 b0 c==> c==> c~ f1 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 b1 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 cCOND f1 b0 b1 f4
- |- ((FINITE (m .. n)) = T)
T c= cFINITE * * part c.. f0 f1 cT
- (~ (m = (NUMERAL _0))) |- (((NUMERAL _0) = m) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= cNUMERAL c_0 f0 cF
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvsum * * part c.. f2 f0 f3 b0 c==> c==> c~ f1 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 b1 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 cCOND f1 b0 b1 * / ! c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvsum * * part c.. f2 f0 f3 b0 c==> c==> c~ f1 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 b1 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 cCOND f1 b0 b1 f4 * / ! c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvsum * * part c.. f2 f0 f3 b0 c==> c==> c~ f1 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 b1 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 cCOND f1 b0 b1 f4
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((!e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))) ==> ((\e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))) e')) = ((\e'. ((((SUC n) <= n) = g') ==> ((g' ==> (((vsum (m .. n)) f) = t')) ==> (((~ g') ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvsum * * part c.. f2 f0 f3 f4 c==> c==> c~ f1 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 b0 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 cCOND f1 f4 b0 * / c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvsum * * part c.. f2 f0 f3 f4 c==> c==> c~ f1 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 b0 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 cCOND f1 f4 b0 f5 * / c==> c= c<= cSUC f0 f0 f1 c==> c==> f1 c= cvsum * * part c.. f2 f0 f3 f4 c==> c==> c~ f1 c= cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 b0 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f2 f0 f3 cvector_add * f3 cSUC f0 cvsum * * part c.. f2 f0 f3 cCOND f1 f4 b0 f5
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((SUC n) <= n) = ((SUC n) <= n)) ==> ((((SUC n) <= n) ==> (((vsum (m .. n)) f) = t')) ==> (((~ ((SUC n) <= n)) ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND ((SUC n) <= n)) t') e'))))) = ((((SUC n) <= n) ==> (((vsum (m .. n)) f) = t')) ==> (((~ ((SUC n) <= n)) ==> (((vector_add (f (SUC n))) ((vsum (m .. n)) f)) = e')) ==> ((((COND ((SUC n) <= n)) ((vsum (m .. n)) f)) ((vector_add (f (SUC n))) ((vsum (m .. n)) f))) = (((COND ((SUC n) <= n)) t') e')))))
T c= c==> c= c<= cSUC f0 f0 c<= cSUC f0 f0 c==> c==> c<= cSUC f0 f0 c= cvsum * * part c.. f1 f0 f2 f3 c==> c==> c~ c<= cSUC f0 f0 c= cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 f4 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND c<= cSUC f0 f0 f3 f4 c==> c==> c<= cSUC f0 f0 c= cvsum * * part c.. f1 f0 f2 f3 c==> c==> c~ c<= cSUC f0 f0 c= cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 f4 c= cCOND c<= cSUC f0 f0 cvsum * * part c.. f1 f0 f2 cvector_add * f2 cSUC f0 cvsum * * part c.. f1 f0 f2 cCOND c<= cSUC f0 f0 f3 f4
