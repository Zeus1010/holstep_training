N More_lemma2.next_power_core_pre
C |- (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_eq
A |- (!x. (!y. ((x = y) = ((real_of_int x) = (real_of_int y)))))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hypermap.COM_POWER
A |- (!n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))))
T c= * * part cPOWER f0 cSUC f1 * * part co f0 * * part cPOWER f0 f1
D Hypermap.LE_SUC_PRE
A |- (!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n)))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cSUC cPRE f0 f0
D List_hypermap.dart_in_face
A |- (!d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))))
T c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Pwssrat.f_list_power_next_el
A |- (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
D Pplhulj.ztran_me_f
A |- (!L. (!N. (!r. (!x. (!d. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))))))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= f4 cfind_face f0 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f5 cMEM cztrans f0 f1 f2 f3 f5 f4
D Pnxvwfs.PNXVWFS2
A |- (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((marked_list L) N) r) x))))) ==> ((MEM (((((ztrans L) N) r) x) i)) r)))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cmarked_list f0 f1 f2 f3 cMEM cztrans f0 f1 f2 f3 f4 f2
D Kbwpbhq.transform_count_not
A |- ((j < ((((transform_count L) N) r) x)) ==> (~ ((final_list L) (((((rtrans L) N) r) x) j))))
T c==> c< f0 ctransform_count f1 f2 f3 f4 c~ cfinal_list f1 crtrans f1 f2 f3 f4 f0
D Kbwpbhq.CASES2
A |- (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t)))))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c/\ c= cnext_el f4 f3 f5 c/\ c< cNUMERAL c_0 f6 c/\ c= ctransform_count f0 f1 f2 f3 f6 c<= f7 cindexf cztrans f0 f1 f2 f3 cPRE f6 f5 f4 c= cPOWER * part cnext_el f2 f7 cztrans f0 f1 f2 f3 cPRE f6 cPOWER * part cnext_el f4 f7 cztrans f0 f1 f2 f3 cPRE f6
D Aq8.MEM_POWER_NEXT_EL
A |- (!k. (((MEM x) r) ==> ((MEM (((POWER (next_el r)) k) x)) r)))
T c==> cMEM f0 f1 cMEM cPOWER * part cnext_el f1 f2 f0 f1
D Reduction2.trans0
A |- (!L. (!N. (!r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))))))))
T c/\ c= crtrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cntrans f0 f1 f2 f3 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 f3 cNUMERAL c_0 cl'y f0 f2 f3 c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cl'z f0 f1 f2 f3
D Reduction2.transform_assumption_v2_lemma
A |- (!L. (transform_assumption_v2 L))
T ctransform_assumption_v2 f0
D More_lemma2.next_core_FST
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 f2 c= cf_list f0 f4 cnext_el f2 f4 c= cnext_el ccore f0 f2 cFST f4 cFST cnext_el f2 f4
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ (((SUC n) <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))) |- ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= cSUC f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
+ (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x), ((\d. ((((POWER (next_el r)) n) zk) = d)) d) |- (((\d. ((((POWER (next_el r)) n) zk) = d)) d) /\ (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) zk))) = (FST ((next_el r) (((POWER (next_el r)) n) zk)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cztrans f0 f7 f1 f5 cPRE f8 f3 c==> c= ctransform_count f0 f7 f1 f5 f8 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f8 c==> cmarked_list f0 f7 f1 f5 c==> * / c= cPOWER * part cnext_el f1 f2 f3 b0 f9 c/\ * / c= cPOWER * part cnext_el f1 f2 f3 b0 f9 c= cnext_el ccore f0 f1 cFST cPOWER * part cnext_el f1 f2 f3 cFST cnext_el f1 cPOWER * part cnext_el f1 f2 f3
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d)
T * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0
- |- ((\w. (!f. (!n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t))))))))))))) w)
T * / ! ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b4 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cfind_face b4 b7 b1 c/\ c= cnext_el b1 b7 b0 c/\ c< cNUMERAL c_0 b3 c/\ c= ctransform_count b4 b5 b6 b7 b3 c<= b2 cindexf cztrans b4 b5 b6 b7 cPRE b3 b0 b1 c= cPOWER * part cnext_el b6 b2 cztrans b4 b5 b6 b7 cPRE b3 cPOWER * part cnext_el b1 b2 cztrans b4 b5 b6 b7 cPRE b3 f0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143757)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143758)) /\ (((real_le ((real_add (real_of_int _11143757)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758)) /\ ((real_le ((real_add (real_of_int _11143758)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((MEM d) r), ((MEM zk) r), ((((marked_list L) N) r) x) |- ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> (((f_list L) d) = ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cnext_el f1 f5 f6 f9 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c<= f5 cindexf f6 f8 f7 c==> c<= cSUC f5 cindexf f6 f8 f7 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cMEM f9 f1 c==> cMEM f6 f1 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el f1 f9 cnext_el f7 cPOWER * part cnext_el f7 f5 f6 c= cf_list f0 f9 cnext_el f1 f9
+ |- (((!B. (((SUC n) <= B) ==> (n <= B))) ==> ((\B. (((SUC n) <= B) ==> (n <= B))) (((indexf zk) w) f))) = ((\B. (((SUC n) <= B) ==> (n <= B))) (((indexf zk) w) f)))
T c= c==> ! c==> c<= cSUC f0 b0 c<= f0 b0 * / c==> c<= cSUC f0 b0 c<= f0 b0 cindexf f1 f2 f3 * / c==> c<= cSUC f0 b0 c<= f0 b0 cindexf f1 f2 f3
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143751)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143752)) /\ ((((real_add (real_of_int _11143751)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_int _11143752)) /\ ((real_le (real_of_int _11143752)) (real_of_int _11143751))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c= creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_of_int f1 creal_of_int f0 cF
+ |- (((!x. (((\x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) x) ==> ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))) ==> ((?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) ==> ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))) = ((?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) ==> ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))
T c= c==> ! c==> * / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b1 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 b0 c==> ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ cMEM f3 b3 c= cf_list b1 f3 cnext_el b3 f3 c= cnext_el ccore b1 b3 cFST f3 cFST cnext_el b3 f3 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3 c==> c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f3 b2 c= cf_list b0 f3 cnext_el b2 f3 c= cnext_el ccore b0 b2 cFST f3 cFST cnext_el b2 f3 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3 c==> c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f3 b2 c= cf_list b0 f3 cnext_el b2 f3 c= cnext_el ccore b0 b2 cFST f3 cFST cnext_el b2 f3 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3
+ ((((POWER (next_el r)) n) zk) = d), ((MEM zk) r) |- ((((MEM d) r) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))) = ((((MEM zk) r) ==> ((MEM (((POWER (next_el r)) n) zk)) r)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> c= cPOWER * part cnext_el f0 f1 f2 f3 c==> cMEM f2 f0 c= c==> cMEM f3 f0 c/\ cMEM f3 f0 c= cf_list f4 f3 cnext_el f0 f3 c==> c==> cMEM f2 f0 cMEM cPOWER * part cnext_el f0 f1 f2 f0 c/\ cMEM f3 f0 c= cf_list f4 f3 cnext_el f0 f3
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
- (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f5 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f6 cindexf f7 f8 f5 c/\ c= cfind_face f0 f3 f5 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f7 c= cnext_el f5 f3 f8 c= cPOWER * part cnext_el ccore f0 f2 f6 cFST f7 cFST cPOWER * part cnext_el f2 f6 f7 c==> c<= cSUC f6 cindexf f7 f8 f5 c==> c< cNUMERAL c_0 f4 c==> cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f5 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f7 c==> c= cnext_el f5 f3 f8 c==> c<= f6 cindexf f7 f8 f5 c= cPOWER * part cnext_el ccore f0 f2 cSUC f6 cFST f7 cFST cPOWER * part cnext_el f2 cSUC f6 f7
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((((marked_list L) N) r) x) |- (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cnext_el f1 f5 f6 f9 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c<= f5 cindexf f6 f8 f7 c==> c<= cSUC f5 cindexf f6 f8 f7 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f6 f1 c==> cMEM f9 f1 c==> c= cnext_el f1 f9 cnext_el f7 cPOWER * part cnext_el f7 f5 f6 c==> c= f9 cPOWER * part cnext_el f7 f5 f6 c==> cMEM f6 f7 c==> cMEM cPOWER * part cnext_el f7 f5 f6 f7 c= cf_list f0 cPOWER * part cnext_el f7 f5 f6 cnext_el f7 cPOWER * part cnext_el f7 f5 f6
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((((marked_list L) N) r) x) |- ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cnext_el f1 f5 f6 f9 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c<= f5 cindexf f6 f8 f7 c==> c<= cSUC f5 cindexf f6 f8 f7 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c/\ cMEM f9 f1 c= cf_list f0 f9 cnext_el f1 f9
+ (good_list L), (((find_face L) x) = f) |- (((SUC (PRE k)) = k) ==> (((PRE k) < k) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))))))))))
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> c= cSUC cPRE f3 f3 c==> c< cPRE f3 f3 c==> c~ cfinal_list f0 crtrans f0 f4 f5 f1 cPRE f3 c==> cMEM f6 f5 c==> cMEM f7 f5 c==> c= cnext_el f5 f7 cnext_el f2 cPOWER * part cnext_el f2 f8 f6 c==> c= f7 cPOWER * part cnext_el f2 f8 f6 c==> cMEM f6 f2 c==> cMEM cPOWER * part cnext_el f2 f8 f6 f2 c= cf_list f0 cPOWER * part cnext_el f2 f8 f6 cnext_el f2 cPOWER * part cnext_el f2 f8 f6
- ((((POWER (next_el r)) n) zk) = d) |- (((((POWER (next_el r)) n) zk) = d) /\ (?d. ((((POWER (next_el r)) n) zk) = d)))
T c==> c= cPOWER * part cnext_el f0 f1 f2 f3 c/\ c= cPOWER * part cnext_el f0 f1 f2 f3 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
+ (!i. ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))), (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (d = (((POWER (next_el f)) n) zk)), (((next_el f) x) = w), (((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((MEM d) r), ((MEM zk) r), ((((marked_list L) N) r) x) |- ((!i. ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))) /\ (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))
T c==> ! c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 cMEM cztrans f0 f1 f2 f3 b0 f4 c==> c~ cfinal_list f0 f2 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 cPRE f5 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f2 f6 cFST f7 cFST cPOWER * part cnext_el f2 f6 f7 c==> c= f8 cPOWER * part cnext_el f4 f6 f7 c==> c= cnext_el f4 f3 f9 c==> c= cnext_el f2 f8 cnext_el f4 cPOWER * part cnext_el f4 f6 f7 c==> c= cPOWER * part cnext_el f2 f6 f7 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f5 f7 c==> c= cSUC cPRE f5 f5 c==> c= ctransform_count f0 f1 f2 f3 f5 c==> c= cfind_face f0 f3 f4 c==> c<= f6 cindexf f7 f9 f4 c==> c<= cSUC f6 cindexf f7 f9 f4 c==> c< cNUMERAL c_0 f5 c==> c< cPRE f5 f5 c==> cMEM f8 f2 c==> cMEM f7 f2 c==> cmarked_list f0 f1 f2 f3 c/\ ! c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 cMEM cztrans f0 f1 f2 f3 b0 f4 c= cf_list f0 cPOWER * part cnext_el f4 f6 f7 cnext_el f4 cPOWER * part cnext_el f4 f6 f7
+ |- ((\x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < k) /\ ((((((transform_count L) N) r) x) = k) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE k))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE k))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE k)))))) x)
T * / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 f3 c/\ c= cnext_el f3 b0 f4 c/\ c< cNUMERAL c_0 f5 c/\ c= ctransform_count f0 f1 f2 b0 f5 c<= f6 cindexf cztrans f0 f1 f2 b0 cPRE f5 f4 f3 c= cPOWER * part cnext_el f2 f6 cztrans f0 f1 f2 b0 cPRE f5 cPOWER * part cnext_el f3 f6 cztrans f0 f1 f2 b0 cPRE f5 f7
+ (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> c= cztrans f0 f8 f1 f5 cPRE f9 f3 c==> c= ctransform_count f0 f8 f1 f5 f9 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f9 c==> cmarked_list f0 f8 f1 f5 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f8 f1 f5 c/\ c~ cfinal_list f0 f1 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
+ (good_list L), (((find_face L) x) = f) |- ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))))
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> c= cnext_el f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f5 f6 c==> c= f4 cPOWER * part cnext_el f2 f5 f6 c==> cMEM f6 f2 c==> cMEM cPOWER * part cnext_el f2 f5 f6 f2 c= cf_list f0 cPOWER * part cnext_el f2 f5 f6 cnext_el f2 cPOWER * part cnext_el f2 f5 f6
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- (((\d. ((((POWER (next_el r)) n) zk) = d)) d) ==> (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) zk))) = (FST ((next_el r) (((POWER (next_el r)) n) zk)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cztrans f0 f7 f1 f5 cPRE f8 f3 c==> c= ctransform_count f0 f7 f1 f5 f8 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f8 c==> cmarked_list f0 f7 f1 f5 c==> * / c= cPOWER * part cnext_el f1 f2 f3 b0 f9 c= cnext_el ccore f0 f1 cFST cPOWER * part cnext_el f1 f2 f3 cFST cnext_el f1 cPOWER * part cnext_el f1 f2 f3
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _11143751)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143752)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _11143751)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((transform_assumption_v2 L) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> c= cztrans f0 f8 f1 f5 cPRE f9 f3 c==> c= ctransform_count f0 f8 f1 f5 f9 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f9 c==> cmarked_list f0 f8 f1 f5 c/\ ctransform_assumption_v2 f0 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- |- (((!w. (!f. (!n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t))))))))))))) ==> ((\w. (!f. (!n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t))))))))))))) w)) = ((\w. (!f. (!n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t))))))))))))) w))
T c= c==> ! ! ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b4 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cfind_face b4 b7 b1 c/\ c= cnext_el b1 b7 b0 c/\ c< cNUMERAL c_0 b3 c/\ c= ctransform_count b4 b5 b6 b7 b3 c<= b2 cindexf cztrans b4 b5 b6 b7 cPRE b3 b0 b1 c= cPOWER * part cnext_el b6 b2 cztrans b4 b5 b6 b7 cPRE b3 cPOWER * part cnext_el b1 b2 cztrans b4 b5 b6 b7 cPRE b3 * / ! ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b4 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cfind_face b4 b7 b1 c/\ c= cnext_el b1 b7 b0 c/\ c< cNUMERAL c_0 b3 c/\ c= ctransform_count b4 b5 b6 b7 b3 c<= b2 cindexf cztrans b4 b5 b6 b7 cPRE b3 b0 b1 c= cPOWER * part cnext_el b6 b2 cztrans b4 b5 b6 b7 cPRE b3 cPOWER * part cnext_el b1 b2 cztrans b4 b5 b6 b7 cPRE b3 f0 * / ! ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b4 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cfind_face b4 b7 b1 c/\ c= cnext_el b1 b7 b0 c/\ c< cNUMERAL c_0 b3 c/\ c= ctransform_count b4 b5 b6 b7 b3 c<= b2 cindexf cztrans b4 b5 b6 b7 cPRE b3 b0 b1 c= cPOWER * part cnext_el b6 b2 cztrans b4 b5 b6 b7 cPRE b3 cPOWER * part cnext_el b1 b2 cztrans b4 b5 b6 b7 cPRE b3 f0
+ |- (((((PRE k) < ((((transform_count L) N) r) x)) ==> (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k))))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))) = (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c= c==> c==> c< cPRE f0 ctransform_count f1 f2 f3 f4 c~ cfinal_list f1 crtrans f1 f2 f3 f4 cPRE f0 c/\ cMEM f5 f3 c= cf_list f1 f5 cnext_el f3 f5 c/\ cMEM f5 f3 c= cf_list f1 f5 cnext_el f3 f5
+ |- ((\f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))) f)
T * / c= * * part cPOWER b0 cSUC f0 * * part co b0 * * part cPOWER b0 f0 f1
+ (uniq (list_of_darts L)), (d = (((POWER (next_el f)) n) zk)), (((find_face L) x) = f), ((MEM (((POWER (next_el f)) n) zk)) f) |- ((((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) x))) ==> (((find_face L) d) = ((find_face L) x))) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))
T c==> cuniq clist_of_darts f0 c==> c= f1 cPOWER * part cnext_el f2 f3 f4 c==> c= cfind_face f0 f5 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f4 f2 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f5 c= cfind_face f0 f1 cfind_face f0 f5 c= cf_list f0 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4
+ (good_list L), (((next_el f) x) = w), (((find_face L) x) = f) |- ((((next_el f) x) = w) /\ ((n <= (((indexf zk) w) f)) ==> (((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST d)) ==> (((((POWER (next_el r)) n) zk) = d) ==> ((~ ((final_list L) r)) ==> ((transform_assumption_v2 L) ==> (((SUC (PRE k)) = k) ==> (((PRE k) < k) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))))))))))))))))
T c==> cgood_list f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c/\ c= cnext_el f1 f2 f3 c==> c<= f4 cindexf f5 f3 f1 c==> c= cPOWER * part cnext_el ccore f0 f6 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f6 f4 f5 f7 c==> c~ cfinal_list f0 f6 c==> ctransform_assumption_v2 f0 c==> c= cSUC cPRE f8 f8 c==> c< cPRE f8 f8 c==> c~ cfinal_list f0 crtrans f0 f9 f6 f2 cPRE f8 c==> cMEM f5 f6 c==> cMEM f7 f6 c==> c= cnext_el f6 f7 cnext_el f1 cPOWER * part cnext_el f1 f4 f5 c==> c= f7 cPOWER * part cnext_el f1 f4 f5 c==> cMEM f5 f1 c==> cMEM cPOWER * part cnext_el f1 f4 f5 f1 c= cf_list f0 cPOWER * part cnext_el f1 f4 f5 cnext_el f1 cPOWER * part cnext_el f1 f4 f5
+ (good_list L), (((find_face L) x) = f), ((PRE k) < k) |- (((PRE k) < k) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))))))))
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> c< cPRE f3 f3 c/\ c< cPRE f3 f3 c==> c~ cfinal_list f0 crtrans f0 f4 f5 f1 cPRE f3 c==> cMEM f6 f5 c==> cMEM f7 f5 c==> c= cnext_el f5 f7 cnext_el f2 cPOWER * part cnext_el f2 f8 f6 c==> c= f7 cPOWER * part cnext_el f2 f8 f6 c==> cMEM f6 f2 c==> cMEM cPOWER * part cnext_el f2 f8 f6 f2 c= cf_list f0 cPOWER * part cnext_el f2 f8 f6 cnext_el f2 cPOWER * part cnext_el f2 f8 f6
+ (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), (((SUC n) <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w)))), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c/\ c<= cSUC f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c< cNUMERAL c_0 f4 c==> cmarked_list f0 f1 f2 f3 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
+ |- ((((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((\t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ ((SUC n) <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) (SUC n)) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) (SUC n)) (((((ztrans L) N) r) x) (PRE t)))))))))) k)
T * / ! ! ! ! c==> c/\ ctransform_assumption_v2 b1 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cfind_face b1 b4 f0 c/\ c= cnext_el f0 b4 f1 c/\ c< cNUMERAL c_0 b0 c/\ c= ctransform_count b1 b2 b3 b4 b0 c<= cSUC f2 cindexf cztrans b1 b2 b3 b4 cPRE b0 f1 f0 c= cPOWER * part cnext_el b3 cSUC f2 cztrans b1 b2 b3 b4 cPRE b0 cPOWER * part cnext_el f0 cSUC f2 cztrans b1 b2 b3 b4 cPRE b0 f3
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((((((transform_count L) N) r) x) = k) ==> (((NUMERAL _0) < k) ==> (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> (((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST d)) ==> (((((POWER (next_el r)) n) zk) = d) ==> ((~ ((final_list L) r)) ==> ((transform_assumption_v2 L) ==> (((SUC (PRE k)) = k) ==> (((PRE k) < k) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c< cNUMERAL c_0 f4 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c==> c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST f9 c==> c= cPOWER * part cnext_el f2 f5 f6 f9 c==> c~ cfinal_list f0 f2 c==> ctransform_assumption_v2 f0 c==> c= cSUC cPRE f4 f4 c==> c< cPRE f4 f4 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 cPRE f4 c==> cMEM f6 f2 c==> cMEM f9 f2 c==> c= cnext_el f2 f9 cnext_el f8 cPOWER * part cnext_el f8 f5 f6 c==> c= f9 cPOWER * part cnext_el f8 f5 f6 c==> cMEM f6 f8 c==> cMEM cPOWER * part cnext_el f8 f5 f6 f8 c= cf_list f0 cPOWER * part cnext_el f8 f5 f6 cnext_el f8 cPOWER * part cnext_el f8 f5 f6
+ (good_list L), (((find_face L) x) = f) |- (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))))))
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f4 c==> cMEM f5 f4 c==> c= cnext_el f4 f5 cnext_el f2 cPOWER * part cnext_el f2 f6 f3 c==> c= f5 cPOWER * part cnext_el f2 f6 f3 c==> cMEM f3 f2 c==> cMEM cPOWER * part cnext_el f2 f6 f3 f2 c= cf_list f0 cPOWER * part cnext_el f2 f6 f3 cnext_el f2 cPOWER * part cnext_el f2 f6 f3
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
+ (((real_ge (real_of_int _11143751)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143752)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _11143751)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0)))))) |- (((((real_add (real_of_int _11143751)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add (real_of_int _11143751)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add (real_of_int _11143751)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((MEM d) r), ((MEM zk) r), ((((marked_list L) N) r) x) |- ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cnext_el f1 f5 f6 f9 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c<= f5 cindexf f6 f8 f7 c==> c<= cSUC f5 cindexf f6 f8 f7 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cMEM f9 f1 c==> cMEM f6 f1 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el f1 f9 cnext_el f7 cPOWER * part cnext_el f7 f5 f6 c==> c= f9 cPOWER * part cnext_el f7 f5 f6 c==> cMEM f6 f7 c==> cMEM cPOWER * part cnext_el f7 f5 f6 f7 c= cf_list f0 cPOWER * part cnext_el f7 f5 f6 cnext_el f7 cPOWER * part cnext_el f7 f5 f6
- (good_list L), (good_list_nodes L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))) |- (((((marked_list L) N) r) x) ==> ((((((transform_count L) N) r) x) = k) ==> (((NUMERAL _0) < k) ==> (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> cmarked_list f0 f1 f2 f3 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c< cNUMERAL c_0 f4 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
+ (((real_ge (real_of_int _11143757)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) ==> ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) d)) = ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) d))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ |- ((((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))) = ((good_list L) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))
T c= c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= cf_list f0 cPOWER * part cnext_el f1 f2 f3 cnext_el f1 cPOWER * part cnext_el f1 f2 f3 c==> cgood_list f0 c= cf_list f0 cPOWER * part cnext_el f1 f2 f3 cnext_el f1 cPOWER * part cnext_el f1 f2 f3
+ (d = (((POWER (next_el f)) n) zk)), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((MEM (((POWER (next_el f)) n) zk)) f) |- (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))
T c==> c= f0 cPOWER * part cnext_el f1 f2 f3 c==> c= cfind_face f4 f5 f1 c==> c/\ cuniq clist_of_darts f4 c/\ call / c~ c= b0 cNIL f4 ! c==> cMEM b0 clist_of_darts f4 cMEM c, cSND b0 cFST b0 clist_of_darts f4 c==> cMEM cPOWER * part cnext_el f1 f2 f3 f1 c= cf_list f4 cPOWER * part cnext_el f1 f2 f3 cnext_el f1 cPOWER * part cnext_el f1 f2 f3
+ (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cztrans f0 f4 f5 f2 cPRE f6 f7 c==> c= ctransform_count f0 f4 f5 f2 f6 c==> c= cfind_face f0 f2 f1 c==> c<= f8 cindexf f7 f3 f1 c==> c< cNUMERAL c_0 f6 c==> cmarked_list f0 f4 f5 f2 c= c==> c= cPOWER * part cnext_el ccore f0 f5 f8 cFST f7 cFST cPOWER * part cnext_el f5 f8 f7 c= cPOWER * part cnext_el ccore f0 f5 cSUC f8 cFST f7 cFST cPOWER * part cnext_el f5 cSUC f8 f7 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f5 f2 c/\ c= ctransform_count f0 f4 f5 f2 f6 c/\ c< cNUMERAL c_0 f6 c/\ c<= f8 cindexf f7 f3 f1 c/\ c= cfind_face f0 f2 f1 c/\ c= cztrans f0 f4 f5 f2 cPRE f6 f7 c= cnext_el f1 f2 f3 c= cPOWER * part cnext_el ccore f0 f5 f8 cFST f7 cFST cPOWER * part cnext_el f5 f8 f7 c= cPOWER * part cnext_el ccore f0 f5 cSUC f8 cFST f7 cFST cPOWER * part cnext_el f5 cSUC f8 f7
+ |- (((int_le (int_of_num (NUMERAL _0))) _11143757) ==> (((int_le (int_of_num (NUMERAL _0))) _11143758) ==> ((~ ((int_le ((int_add _11143757) (int_of_num (NUMERAL (BIT1 _0))))) _11143758)) \/ ((int_le _11143757) _11143758))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le f0 f1
+ ((SUC (PRE k)) = k) |- ((((PRE k) < k) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))) = ((((SUC (PRE k)) = k) ==> ((PRE k) < k)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> c= cSUC cPRE f0 f0 c= c==> c< cPRE f0 f0 c/\ cMEM f1 f2 c= cf_list f3 f1 cnext_el f2 f1 c==> c==> c= cSUC cPRE f0 f0 c< cPRE f0 f0 c/\ cMEM f1 f2 c= cf_list f3 f1 cnext_el f2 f1
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (d = (((POWER (next_el f)) n) zk)), (((next_el f) x) = w), (((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((MEM d) r), ((MEM zk) r), ((((marked_list L) N) r) x) |- ((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))))))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= f7 cPOWER * part cnext_el f8 f5 f6 c==> c= cnext_el f8 f3 f9 c==> c= cnext_el f1 f7 cnext_el f8 cPOWER * part cnext_el f8 f5 f6 c==> c= cPOWER * part cnext_el f1 f5 f6 f7 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f8 c==> c<= f5 cindexf f6 f9 f8 c==> c<= cSUC f5 cindexf f6 f9 f8 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cMEM f7 f1 c==> cMEM f6 f1 c==> cmarked_list f0 f2 f1 f3 c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= f8 cfind_face f0 f3 c~ cfinal_list f0 crtrans f0 f2 f1 f3 b0 cMEM cztrans f0 f2 f1 f3 b0 f8 c= cf_list f0 cPOWER * part cnext_el f8 f5 f6 cnext_el f8 cPOWER * part cnext_el f8 f5 f6
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num b)) ==> ((~ (((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))) = (int_of_num b))) \/ ((int_lt (int_of_num a)) (int_of_num b))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c~ c= cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0 cint_lt cint_of_num f1 cint_of_num f0
+ (good_list L), (((find_face L) x) = f) |- ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))))
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> c= f3 cPOWER * part cnext_el f2 f4 f5 c==> cMEM f5 f2 c==> cMEM cPOWER * part cnext_el f2 f4 f5 f2 c= cf_list f0 cPOWER * part cnext_el f2 f4 f5 cnext_el f2 cPOWER * part cnext_el f2 f4 f5
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (d = (((POWER (next_el f)) n) zk)), (((next_el f) x) = w), (((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((MEM d) r), ((MEM zk) r), ((((marked_list L) N) r) x) |- ((!i. ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= f7 cPOWER * part cnext_el f8 f5 f6 c==> c= cnext_el f8 f3 f9 c==> c= cnext_el f1 f7 cnext_el f8 cPOWER * part cnext_el f8 f5 f6 c==> c= cPOWER * part cnext_el f1 f5 f6 f7 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f8 c==> c<= f5 cindexf f6 f9 f8 c==> c<= cSUC f5 cindexf f6 f9 f8 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cMEM f7 f1 c==> cMEM f6 f1 c==> cmarked_list f0 f2 f1 f3 c==> ! c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 b0 cMEM cztrans f0 f2 f1 f3 b0 f8 c= cf_list f0 cPOWER * part cnext_el f8 f5 f6 cnext_el f8 cPOWER * part cnext_el f8 f5 f6
- (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c< cNUMERAL c_0 f4 c==> cmarked_list f0 f1 f2 f3 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
- (((real_ge (real_of_int _11143757)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))))) ==> ((\x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))))) x)) = ((\x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))))) x))
T c= c==> ! c/\ c= crtrans f0 f1 f2 b0 cNUMERAL c_0 f2 c/\ c= cntrans f0 f1 f2 b0 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 b0 cNUMERAL c_0 cl'y f0 f2 b0 c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cl'z f0 f1 f2 b0 * / c/\ c= crtrans f0 f1 f2 b0 cNUMERAL c_0 f2 c/\ c= cntrans f0 f1 f2 b0 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 b0 cNUMERAL c_0 cl'y f0 f2 b0 c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cl'z f0 f1 f2 b0 f3 * / c/\ c= crtrans f0 f1 f2 b0 cNUMERAL c_0 f2 c/\ c= cntrans f0 f1 f2 b0 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 b0 cNUMERAL c_0 cl'y f0 f2 b0 c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cl'z f0 f1 f2 b0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- (((PRE k) < k) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> c= cztrans f0 f8 f1 f5 cPRE f9 f3 c==> c= cSUC cPRE f9 f9 c==> c= ctransform_count f0 f8 f1 f5 f9 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f9 c==> cmarked_list f0 f8 f1 f5 c==> c< cPRE f9 f9 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
+ (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), (((NUMERAL _0) < k) /\ (((SUC n) <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((((marked_list L) N) r) x) |- ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c/\ c< cNUMERAL c_0 f4 c/\ c<= cSUC f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> cmarked_list f0 f1 f2 f3 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
+ (good_list L), (d = (((POWER (next_el f)) n) zk)), (((find_face L) x) = f), ((MEM zk) f) |- (((MEM zk) f) /\ (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))
T c==> cgood_list f0 c==> c= f1 cPOWER * part cnext_el f2 f3 f4 c==> c= cfind_face f0 f5 f2 c==> cMEM f4 f2 c/\ cMEM f4 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f4 f2 c= cf_list f0 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4
+ |- ((!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t)))))))))) = T)
T c= ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b1 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cfind_face b1 b4 f0 c/\ c= cnext_el f0 b4 f1 c/\ c< cNUMERAL c_0 b0 c/\ c= ctransform_count b1 b2 b3 b4 b0 c<= f2 cindexf cztrans b1 b2 b3 b4 cPRE b0 f1 f0 c= cPOWER * part cnext_el b3 f2 cztrans b1 b2 b3 b4 cPRE b0 cPOWER * part cnext_el f0 f2 cztrans b1 b2 b3 b4 cPRE b0 cT
+ (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> c= cztrans f0 f8 f1 f5 cPRE f9 f3 c==> c= ctransform_count f0 f8 f1 f5 f9 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f9 c==> cmarked_list f0 f8 f1 f5 c==> c~ cfinal_list f0 f1 c/\ c~ cfinal_list f0 f1 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
+ |- (((!L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) ==> ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L)) = ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0
+ |- ((\n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t))))))))))) (SUC n))
T * / ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cfind_face b2 b5 f0 c/\ c= cnext_el f0 b5 f1 c/\ c< cNUMERAL c_0 b1 c/\ c= ctransform_count b2 b3 b4 b5 b1 c<= b0 cindexf cztrans b2 b3 b4 b5 cPRE b1 f1 f0 c= cPOWER * part cnext_el b4 b0 cztrans b2 b3 b4 b5 cPRE b1 cPOWER * part cnext_el f0 b0 cztrans b2 b3 b4 b5 cPRE b1 cSUC f2
- (((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (good_list L), (d = (((POWER (next_el f)) n) zk)), (((find_face L) x) = f) |- (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))
T c==> cgood_list f0 c==> c= f1 cPOWER * part cnext_el f2 f3 f4 c==> c= cfind_face f0 f5 f2 c==> cMEM f4 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f4 f2 c= cf_list f0 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\f. (!L. (!N. (!r. (!x. (!d. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((f = ((find_face L) x)) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))))))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))))))))) f)
T * / ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b1 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= b0 cfind_face b1 b4 c~ cfinal_list b1 crtrans b1 b2 b3 b4 b6 cMEM cztrans b1 b2 b3 b4 b6 b0 f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) d2))) ==> (((find_face L) d) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) d2))) ==> (((find_face L) d) = ((find_face L) d2))))) x)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) d2))) ==> (((find_face L) d) = ((find_face L) d2))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
+ (transform_assumption_v2 L) |- ((transform_assumption_v2 L) = T)
T c==> ctransform_assumption_v2 f0 c= ctransform_assumption_v2 f0 cT
+ |- (((NUMERAL _0) < ((((transform_count L) N) r) x)) ==> (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL _0)))))
T c==> c< cNUMERAL c_0 ctransform_count f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 cNUMERAL c_0
+ |- (((!r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))))))) ==> ((\r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))))))) r)) = ((\r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))))))) r))
T c= c==> ! ! c/\ c= crtrans f0 f1 b0 b1 cNUMERAL c_0 b0 c/\ c= cntrans f0 f1 b0 b1 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 b0 b1 cNUMERAL c_0 cl'y f0 b0 b1 c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cl'z f0 f1 b0 b1 * / ! c/\ c= crtrans f0 f1 b0 b1 cNUMERAL c_0 b0 c/\ c= cntrans f0 f1 b0 b1 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 b0 b1 cNUMERAL c_0 cl'y f0 b0 b1 c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cl'z f0 f1 b0 b1 f2 * / ! c/\ c= crtrans f0 f1 b0 b1 cNUMERAL c_0 b0 c/\ c= cntrans f0 f1 b0 b1 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 b0 b1 cNUMERAL c_0 cl'y f0 b0 b1 c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cl'z f0 f1 b0 b1 f2
+ |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ (((NUMERAL _0) <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) (NUMERAL _0)) (FST zk)) = (FST (((POWER (next_el r)) (NUMERAL _0)) zk)))) /\ (!n. ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))) ==> (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ (((SUC n) <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))))))
T c/\ c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= cNUMERAL c_0 cindexf f5 f6 f7 c/\ c= cfind_face f0 f3 f7 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f5 c= cnext_el f7 f3 f6 c= cPOWER * part cnext_el ccore f0 f2 cNUMERAL c_0 cFST f5 cFST cPOWER * part cnext_el f2 cNUMERAL c_0 f5 ! c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= b0 cindexf f5 f6 f7 c/\ c= cfind_face f0 f3 f7 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f5 c= cnext_el f7 f3 f6 c= cPOWER * part cnext_el ccore f0 f2 b0 cFST f5 cFST cPOWER * part cnext_el f2 b0 f5 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= cSUC b0 cindexf f5 f6 f7 c/\ c= cfind_face f0 f3 f7 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f5 c= cnext_el f7 f3 f6 c= cPOWER * part cnext_el ccore f0 f2 cSUC b0 cFST f5 cFST cPOWER * part cnext_el f2 cSUC b0 f5
+ (good_list L), ((SUC n) <= (((indexf zk) w) f)) |- (((SUC n) <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> (((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST d)) ==> (((((POWER (next_el r)) n) zk) = d) ==> ((~ ((final_list L) r)) ==> ((transform_assumption_v2 L) ==> (((SUC (PRE k)) = k) ==> (((PRE k) < k) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))))))))))))))))))
T c==> cgood_list f0 c==> c<= cSUC f1 cindexf f2 f3 f4 c/\ c<= cSUC f1 cindexf f2 f3 f4 c==> c= cfind_face f0 f5 f4 c==> c= cztrans f0 f6 f7 f5 cPRE f8 f2 c==> c= cnext_el f4 f5 f3 c==> c<= f1 cindexf f2 f3 f4 c==> c= cPOWER * part cnext_el ccore f0 f7 f1 cFST f2 cFST f9 c==> c= cPOWER * part cnext_el f7 f1 f2 f9 c==> c~ cfinal_list f0 f7 c==> ctransform_assumption_v2 f0 c==> c= cSUC cPRE f8 f8 c==> c< cPRE f8 f8 c==> c~ cfinal_list f0 crtrans f0 f6 f7 f5 cPRE f8 c==> cMEM f2 f7 c==> cMEM f9 f7 c==> c= cnext_el f7 f9 cnext_el f4 cPOWER * part cnext_el f4 f1 f2 c==> c= f9 cPOWER * part cnext_el f4 f1 f2 c==> cMEM f2 f4 c==> cMEM cPOWER * part cnext_el f4 f1 f2 f4 c= cf_list f0 cPOWER * part cnext_el f4 f1 f2 cnext_el f4 cPOWER * part cnext_el f4 f1 f2
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ |- (((!k. (((MEM zk) f) ==> ((MEM (((POWER (next_el f)) k) zk)) f))) ==> ((\k. (((MEM zk) f) ==> ((MEM (((POWER (next_el f)) k) zk)) f))) n)) = ((\k. (((MEM zk) f) ==> ((MEM (((POWER (next_el f)) k) zk)) f))) n))
T c= c==> ! c==> cMEM f0 f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 * / c==> cMEM f0 f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 f2 * / c==> cMEM f0 f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 f2
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (d = (((POWER (next_el f)) n) zk)), (((next_el f) x) = w), (((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((MEM d) r), ((MEM zk) f), ((MEM zk) r), ((((marked_list L) N) r) x) |- (((MEM zk) f) /\ (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= f7 cPOWER * part cnext_el f8 f5 f6 c==> c= cnext_el f8 f3 f9 c==> c= cnext_el f1 f7 cnext_el f8 cPOWER * part cnext_el f8 f5 f6 c==> c= cPOWER * part cnext_el f1 f5 f6 f7 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f8 c==> c<= f5 cindexf f6 f9 f8 c==> c<= cSUC f5 cindexf f6 f9 f8 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cMEM f7 f1 c==> cMEM f6 f8 c==> cMEM f6 f1 c==> cmarked_list f0 f2 f1 f3 c/\ cMEM f6 f8 c= cf_list f0 cPOWER * part cnext_el f8 f5 f6 cnext_el f8 cPOWER * part cnext_el f8 f5 f6
+ |- (((!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((marked_list L) N) r) x))))) ==> ((MEM (((((ztrans L) N) r) x) i)) r)))) ==> ((\x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((marked_list L) N) r) x))))) ==> ((MEM (((((ztrans L) N) r) x) i)) r)))) x)) = ((\x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((marked_list L) N) r) x))))) ==> ((MEM (((((ztrans L) N) r) x) i)) r)))) x))
T c= c==> ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 b0 b1 cmarked_list f0 f1 f2 b0 cMEM cztrans f0 f1 f2 b0 b1 f2 * / ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 b0 b1 cmarked_list f0 f1 f2 b0 cMEM cztrans f0 f1 f2 b0 b1 f2 f3 * / ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 b0 b1 cmarked_list f0 f1 f2 b0 cMEM cztrans f0 f1 f2 b0 b1 f2 f3
+ |- ((\x. (!r. (!k. (((MEM x) r) ==> ((MEM (((POWER (next_el r)) k) x)) r))))) zk)
T * / ! ! c==> cMEM b0 b1 cMEM cPOWER * part cnext_el b1 b2 b0 b1 f0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (d = (((POWER (next_el f)) n) zk)), (((next_el f) x) = w), (((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((MEM d) r), ((MEM zk) r), ((((marked_list L) N) r) x) |- ((d = (((POWER (next_el f)) n) zk)) /\ (((f_list L) d) = ((next_el f) (((POWER (next_el f)) n) zk))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= f7 cPOWER * part cnext_el f8 f5 f6 c==> c= cnext_el f8 f3 f9 c==> c= cnext_el f1 f7 cnext_el f8 cPOWER * part cnext_el f8 f5 f6 c==> c= cPOWER * part cnext_el f1 f5 f6 f7 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f8 c==> c<= f5 cindexf f6 f9 f8 c==> c<= cSUC f5 cindexf f6 f9 f8 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cMEM f7 f1 c==> cMEM f6 f1 c==> cmarked_list f0 f2 f1 f3 c/\ c= f7 cPOWER * part cnext_el f8 f5 f6 c= cf_list f0 f7 cnext_el f8 cPOWER * part cnext_el f8 f5 f6
- (((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143755)) /\ ((((real_le ((real_add (real_of_int _11143755)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le (real_of_int _11143755)) (real_of_num (NUMERAL _0)))) /\ (((real_le (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _11143755)) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _11143755) ==> ((((int_le (int_of_num (NUMERAL (BIT1 _0)))) _11143755) /\ ((int_lt (int_of_num (NUMERAL _0))) _11143755)) \/ ((~ ((int_le (int_of_num (NUMERAL (BIT1 _0)))) _11143755)) /\ (~ ((int_lt (int_of_num (NUMERAL _0))) _11143755)))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c/\ cint_le cint_of_num cNUMERAL cBIT1 c_0 f0 cint_lt cint_of_num cNUMERAL c_0 f0 c/\ c~ cint_le cint_of_num cNUMERAL cBIT1 c_0 f0 c~ cint_lt cint_of_num cNUMERAL c_0 f0
+ (((real_ge (real_of_int _11143751)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143752)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _11143751)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((((marked_list L) N) r) x) |- (((MEM zk) r) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cnext_el f1 f5 f6 f9 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c<= f5 cindexf f6 f8 f7 c==> c<= cSUC f5 cindexf f6 f8 f7 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f6 f1 c/\ cMEM f9 f1 c= cf_list f0 f9 cnext_el f1 f9
+ |- (((!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < k) /\ ((((((transform_count L) N) r) x) = k) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE k))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE k))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE k)))))) ==> ((\x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < k) /\ ((((((transform_count L) N) r) x) = k) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE k))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE k))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE k)))))) x)) = ((\x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < k) /\ ((((((transform_count L) N) r) x) = k) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE k))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE k))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE k)))))) x))
T c= c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 f3 c/\ c= cnext_el f3 b0 f4 c/\ c< cNUMERAL c_0 f5 c/\ c= ctransform_count f0 f1 f2 b0 f5 c<= f6 cindexf cztrans f0 f1 f2 b0 cPRE f5 f4 f3 c= cPOWER * part cnext_el f2 f6 cztrans f0 f1 f2 b0 cPRE f5 cPOWER * part cnext_el f3 f6 cztrans f0 f1 f2 b0 cPRE f5 * / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 f3 c/\ c= cnext_el f3 b0 f4 c/\ c< cNUMERAL c_0 f5 c/\ c= ctransform_count f0 f1 f2 b0 f5 c<= f6 cindexf cztrans f0 f1 f2 b0 cPRE f5 f4 f3 c= cPOWER * part cnext_el f2 f6 cztrans f0 f1 f2 b0 cPRE f5 cPOWER * part cnext_el f3 f6 cztrans f0 f1 f2 b0 cPRE f5 f7 * / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 f3 c/\ c= cnext_el f3 b0 f4 c/\ c< cNUMERAL c_0 f5 c/\ c= ctransform_count f0 f1 f2 b0 f5 c<= f6 cindexf cztrans f0 f1 f2 b0 cPRE f5 f4 f3 c= cPOWER * part cnext_el f2 f6 cztrans f0 f1 f2 b0 cPRE f5 cPOWER * part cnext_el f3 f6 cztrans f0 f1 f2 b0 cPRE f5 f7
+ |- ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> ((SUC (PRE n)) = n))) k)
T * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cSUC cPRE b0 b0 f0
- (((real_ge (real_of_int _11143757)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), (((NUMERAL _0) < k) /\ (((SUC n) <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c/\ c< cNUMERAL c_0 f4 c/\ c<= cSUC f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> c< cNUMERAL c_0 f4 c==> cmarked_list f0 f1 f2 f3 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((n <= (((indexf zk) w) f)) ==> (((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST d)) ==> (((((POWER (next_el r)) n) zk) = d) ==> ((~ ((final_list L) r)) ==> ((transform_assumption_v2 L) ==> (((SUC (PRE k)) = k) ==> (((PRE k) < k) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cztrans f0 f4 f5 f2 cPRE f6 f7 c==> c= ctransform_count f0 f4 f5 f2 f6 c==> c= cfind_face f0 f2 f1 c==> c<= cSUC f8 cindexf f7 f3 f1 c==> c< cNUMERAL c_0 f6 c==> cmarked_list f0 f4 f5 f2 c==> c<= f8 cindexf f7 f3 f1 c==> c= cPOWER * part cnext_el ccore f0 f5 f8 cFST f7 cFST f9 c==> c= cPOWER * part cnext_el f5 f8 f7 f9 c==> c~ cfinal_list f0 f5 c==> ctransform_assumption_v2 f0 c==> c= cSUC cPRE f6 f6 c==> c< cPRE f6 f6 c==> c~ cfinal_list f0 crtrans f0 f4 f5 f2 cPRE f6 c==> cMEM f7 f5 c==> cMEM f9 f5 c==> c= cnext_el f5 f9 cnext_el f1 cPOWER * part cnext_el f1 f8 f7 c==> c= f9 cPOWER * part cnext_el f1 f8 f7 c==> cMEM f7 f1 c==> cMEM cPOWER * part cnext_el f1 f8 f7 f1 c= cf_list f0 cPOWER * part cnext_el f1 f8 f7 cnext_el f1 cPOWER * part cnext_el f1 f8 f7
- (!i. ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))) |- ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))
T c==> ! c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 cMEM cztrans f0 f1 f2 f3 b0 f4 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f5 cMEM cztrans f0 f1 f2 f3 f5 f4
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((marked_list L) N) r) x))))) ==> ((MEM (((((ztrans L) N) r) x) i)) r))))))) ==> ((\L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((marked_list L) N) r) x))))) ==> ((MEM (((((ztrans L) N) r) x) i)) r))))))) L)) = ((\L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((marked_list L) N) r) x))))) ==> ((MEM (((((ztrans L) N) r) x) i)) r))))))) L))
T c= c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cmarked_list b0 b1 b2 b3 cMEM cztrans b0 b1 b2 b3 b4 b2 * / ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cmarked_list b0 b1 b2 b3 cMEM cztrans b0 b1 b2 b3 b4 b2 f0 * / ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 cmarked_list b0 b1 b2 b3 cMEM cztrans b0 b1 b2 b3 b4 b2 f0
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- (((d = (((POWER (next_el f)) n) zk)) ==> (((f_list L) d) = ((next_el f) (((POWER (next_el f)) n) zk)))) = ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < k) /\ ((((((transform_count L) N) r) x) = k) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE k))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE k))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE k))))) ==> (((f_list L) d) = ((next_el f) (((POWER (next_el f)) n) zk)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f1 f2 f3 c==> c= cPOWER * part cnext_el f4 f5 f6 f7 c==> c= cztrans f0 f8 f4 f2 cPRE f9 f6 c==> c= ctransform_count f0 f8 f4 f2 f9 c==> c= cfind_face f0 f2 f1 c==> c<= f5 cindexf f6 f3 f1 c==> c< cNUMERAL c_0 f9 c==> cmarked_list f0 f8 f4 f2 c= c==> c= f7 cPOWER * part cnext_el f1 f5 f6 c= cf_list f0 f7 cnext_el f1 cPOWER * part cnext_el f1 f5 f6 c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f8 f4 f2 c/\ c= cfind_face f0 f2 f1 c/\ c= cnext_el f1 f2 f3 c/\ c< cNUMERAL c_0 f9 c/\ c= ctransform_count f0 f8 f4 f2 f9 c<= f5 cindexf cztrans f0 f8 f4 f2 cPRE f9 f3 f1 c= cPOWER * part cnext_el f4 f5 cztrans f0 f8 f4 f2 cPRE f9 cPOWER * part cnext_el f1 f5 cztrans f0 f8 f4 f2 cPRE f9 c= cf_list f0 f7 cnext_el f1 cPOWER * part cnext_el f1 f5 f6
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- (((!r. (!x. (!j. ((j < ((((transform_count L) N) r) x)) ==> (~ ((final_list L) (((((rtrans L) N) r) x) j))))))) ==> ((\r. (!x. (!j. ((j < ((((transform_count L) N) r) x)) ==> (~ ((final_list L) (((((rtrans L) N) r) x) j))))))) r)) = ((\r. (!x. (!j. ((j < ((((transform_count L) N) r) x)) ==> (~ ((final_list L) (((((rtrans L) N) r) x) j))))))) r))
T c= c==> ! ! ! c==> c< b2 ctransform_count f0 f1 b0 b1 c~ cfinal_list f0 crtrans f0 f1 b0 b1 b2 * / ! ! c==> c< b2 ctransform_count f0 f1 b0 b1 c~ cfinal_list f0 crtrans f0 f1 b0 b1 b2 f2 * / ! ! c==> c< b2 ctransform_count f0 f1 b0 b1 c~ cfinal_list f0 crtrans f0 f1 b0 b1 b2 f2
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> c= cztrans f0 f8 f1 f5 cPRE f9 f3 c==> c= ctransform_count f0 f8 f1 f5 f9 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f9 c==> cmarked_list f0 f8 f1 f5 c/\ c~ cfinal_list f0 f1 c/\ c~ cfinal_list f0 f1 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
+ |- (!n. ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))) ==> (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ (((SUC n) <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk))))))
T c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= cSUC f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
- (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> c< cNUMERAL c_0 f4 c==> cmarked_list f0 f1 f2 f3 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
+ |- (((!j. ((j < ((((transform_count L) N) r) x)) ==> (~ ((final_list L) (((((rtrans L) N) r) x) j))))) ==> ((\j. ((j < ((((transform_count L) N) r) x)) ==> (~ ((final_list L) (((((rtrans L) N) r) x) j))))) (PRE k))) = ((\j. ((j < ((((transform_count L) N) r) x)) ==> (~ ((final_list L) (((((rtrans L) N) r) x) j))))) (PRE k)))
T c= c==> ! c==> c< b0 ctransform_count f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 * / c==> c< b0 ctransform_count f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 cPRE f4 * / c==> c< b0 ctransform_count f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 cPRE f4
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (d = (((POWER (next_el f)) n) zk)), (((next_el f) x) = w), (((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((MEM d) r), ((MEM zk) r), ((((marked_list L) N) r) x) |- (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= f7 cPOWER * part cnext_el f8 f5 f6 c==> c= cnext_el f8 f3 f9 c==> c= cnext_el f1 f7 cnext_el f8 cPOWER * part cnext_el f8 f5 f6 c==> c= cPOWER * part cnext_el f1 f5 f6 f7 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f8 c==> c<= f5 cindexf f6 f9 f8 c==> c<= cSUC f5 cindexf f6 f9 f8 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cMEM f7 f1 c==> cMEM f6 f1 c==> cmarked_list f0 f2 f1 f3 c= cf_list f0 cPOWER * part cnext_el f8 f5 f6 cnext_el f8 cPOWER * part cnext_el f8 f5 f6
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((?d. ((((POWER (next_el r)) n) zk) = d)) ==> (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) zk))) = (FST ((next_el r) (((POWER (next_el r)) n) zk)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cztrans f0 f7 f1 f5 cPRE f8 f3 c==> c= ctransform_count f0 f7 f1 f5 f8 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f8 c==> cmarked_list f0 f7 f1 f5 c==> c? / c= cPOWER * part cnext_el f1 f2 f3 b0 c= cnext_el ccore f0 f1 cFST cPOWER * part cnext_el f1 f2 f3 cFST cnext_el f1 cPOWER * part cnext_el f1 f2 f3
+ (((real_ge (real_of_int _11143751)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143752)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _11143751)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (good_list L), ((NUMERAL _0) < k) |- (((NUMERAL _0) < k) /\ (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> (((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST d)) ==> (((((POWER (next_el r)) n) zk) = d) ==> ((~ ((final_list L) r)) ==> ((transform_assumption_v2 L) ==> (((SUC (PRE k)) = k) ==> (((PRE k) < k) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))))))))))))))))))))
T c==> cgood_list f0 c==> c< cNUMERAL c_0 f1 c/\ c< cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 f4 f5 c==> c= cfind_face f0 f6 f5 c==> c= cztrans f0 f7 f8 f6 cPRE f1 f3 c==> c= cnext_el f5 f6 f4 c==> c<= f2 cindexf f3 f4 f5 c==> c= cPOWER * part cnext_el ccore f0 f8 f2 cFST f3 cFST f9 c==> c= cPOWER * part cnext_el f8 f2 f3 f9 c==> c~ cfinal_list f0 f8 c==> ctransform_assumption_v2 f0 c==> c= cSUC cPRE f1 f1 c==> c< cPRE f1 f1 c==> c~ cfinal_list f0 crtrans f0 f7 f8 f6 cPRE f1 c==> cMEM f3 f8 c==> cMEM f9 f8 c==> c= cnext_el f8 f9 cnext_el f5 cPOWER * part cnext_el f5 f2 f3 c==> c= f9 cPOWER * part cnext_el f5 f2 f3 c==> cMEM f3 f5 c==> cMEM cPOWER * part cnext_el f5 f2 f3 f5 c= cf_list f0 cPOWER * part cnext_el f5 f2 f3 cnext_el f5 cPOWER * part cnext_el f5 f2 f3
- |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143757)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143758)) /\ (((real_le ((real_add (real_of_int _11143757)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758)) /\ ((real_le ((real_add (real_of_int _11143758)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143757)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143758)) /\ (((real_le ((real_add (real_of_int _11143757)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758)) /\ ((real_le ((real_add (real_of_int _11143758)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ |- (((!L. (transform_assumption_v2 L)) ==> ((\L. (transform_assumption_v2 L)) L)) = ((\L. (transform_assumption_v2 L)) L))
T c= c==> ! ctransform_assumption_v2 b0 * / ctransform_assumption_v2 b0 f0 * / ctransform_assumption_v2 b0 f0
+ (((((transform_count L) N) r) x) = k), ((NUMERAL _0) < k) |- (((~ ((final_list L) r)) ==> ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))) = ((((NUMERAL _0) < ((((transform_count L) N) r) x)) ==> (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL _0))))) ==> ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))
T c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c< cNUMERAL c_0 f4 c= c==> c~ cfinal_list f0 f2 c/\ c~ cfinal_list f0 f2 c/\ cMEM f5 f2 c= cf_list f0 f5 cnext_el f2 f5 c==> c==> c< cNUMERAL c_0 ctransform_count f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f5 f2 c= cf_list f0 f5 cnext_el f2 f5
- |- (((!x. (((\d. ((((POWER (next_el r)) n) zk) = d)) x) ==> (?d. ((((POWER (next_el r)) n) zk) = d)))) ==> ((?d. ((((POWER (next_el r)) n) zk) = d)) ==> (?d. ((((POWER (next_el r)) n) zk) = d)))) = ((?d. ((((POWER (next_el r)) n) zk) = d)) ==> (?d. ((((POWER (next_el r)) n) zk) = d))))
T c= c==> ! c==> * / c= cPOWER * part cnext_el f0 f1 f2 b1 b0 c? / c= cPOWER * part cnext_el f0 f1 f2 b1 c==> c? / c= cPOWER * part cnext_el f0 f1 f2 b0 c? / c= cPOWER * part cnext_el f0 f1 f2 b0 c==> c? / c= cPOWER * part cnext_el f0 f1 f2 b0 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((MEM d) r), ((MEM zk) r), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cnext_el f1 f5 f6 f9 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c<= f5 cindexf f6 f8 f7 c==> c<= cSUC f5 cindexf f6 f8 f7 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cMEM f9 f1 c==> cMEM f6 f1 c==> cmarked_list f0 f2 f1 f3 c/\ cMEM f9 f1 c/\ cMEM f9 f1 c= cf_list f0 f9 cnext_el f1 f9
+ (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((((transform_count L) N) r) x) = k) ==> (((NUMERAL _0) < k) ==> (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> (((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST d)) ==> (((((POWER (next_el r)) n) zk) = d) ==> ((~ ((final_list L) r)) ==> ((transform_assumption_v2 L) ==> (((SUC (PRE k)) = k) ==> (((PRE k) < k) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c< cNUMERAL c_0 f4 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c==> c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST f9 c==> c= cPOWER * part cnext_el f2 f5 f6 f9 c==> c~ cfinal_list f0 f2 c==> ctransform_assumption_v2 f0 c==> c= cSUC cPRE f4 f4 c==> c< cPRE f4 f4 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 cPRE f4 c==> cMEM f6 f2 c==> cMEM f9 f2 c==> c= cnext_el f2 f9 cnext_el f8 cPOWER * part cnext_el f8 f5 f6 c==> c= f9 cPOWER * part cnext_el f8 f5 f6 c==> cMEM f6 f8 c==> cMEM cPOWER * part cnext_el f8 f5 f6 f8 c= cf_list f0 cPOWER * part cnext_el f8 f5 f6 cnext_el f8 cPOWER * part cnext_el f8 f5 f6
+ |- (((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < k) /\ ((((((transform_count L) N) r) x) = k) /\ ((SUC n) <= (((indexf (((((ztrans L) N) r) x) (PRE k))) w) f)))))))))) ==> ((((POWER (next_el r)) (SUC n)) (((((ztrans L) N) r) x) (PRE k))) = (((POWER (next_el f)) (SUC n)) (((((ztrans L) N) r) x) (PRE k))))) ==> (((f_list L) d) = ((next_el r) d))) = (((f_list L) d) = ((next_el r) d)))
T c= c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c/\ c= cnext_el f4 f3 f5 c/\ c< cNUMERAL c_0 f6 c/\ c= ctransform_count f0 f1 f2 f3 f6 c<= cSUC f7 cindexf cztrans f0 f1 f2 f3 cPRE f6 f5 f4 c= cPOWER * part cnext_el f2 cSUC f7 cztrans f0 f1 f2 f3 cPRE f6 cPOWER * part cnext_el f4 cSUC f7 cztrans f0 f1 f2 f3 cPRE f6 c= cf_list f0 f8 cnext_el f2 f8 c= cf_list f0 f8 cnext_el f2 f8
+ (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> c= cztrans f0 f8 f1 f5 cPRE f9 f3 c==> c= ctransform_count f0 f8 f1 f5 f9 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f9 c==> cmarked_list f0 f8 f1 f5 c/\ c~ cfinal_list f0 f1 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- |- ((!d. t) = t)
T c= ! f0 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((\x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) x)
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> c= cztrans f0 f8 f1 f5 cPRE f9 f3 c==> c= ctransform_count f0 f8 f1 f5 f9 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f9 c==> cmarked_list f0 f8 f1 f5 * / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f8 f1 b0 c/\ c~ cfinal_list f0 f1 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7 f5
+ |- (((~ (((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))) = (int_of_num b))) \/ ((int_lt (int_of_num a)) (int_of_num b))) = T)
T c= c\/ c~ c= cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f1 cint_lt cint_of_num f0 cint_of_num f1 cT
+ (~ ((final_list L) r)) |- ((((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))) = ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c= c/\ cMEM f2 f1 c= cf_list f0 f2 cnext_el f1 f2 c/\ c~ cfinal_list f0 f1 c/\ cMEM f2 f1 c= cf_list f0 f2 cnext_el f1 f2
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _11143751) ==> (((int_le (int_of_num (NUMERAL _0))) _11143752) ==> ((~ (((int_add _11143751) (int_of_num (NUMERAL (BIT1 _0)))) = _11143752)) \/ ((int_lt _11143751) _11143752))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ c= cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_lt f0 f1
+ (((real_ge (real_of_int _11143757)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\m. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((((POWER (f_list L)) m) d) = (((POWER (next_el ((find_face L) d))) m) d)))) (SUC (NUMERAL _0)))
T * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 cSUC cNUMERAL c_0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ ((\d. ((((POWER (next_el r)) n) zk) = d)) d) |- ((((((POWER (next_el r)) n) zk) = d) ==> (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) zk))) = (FST ((next_el r) (((POWER (next_el r)) n) zk))))) = (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) zk))) = (FST ((next_el r) (((POWER (next_el r)) n) zk)))))
T c==> * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3 c= c==> c= cPOWER * part cnext_el f0 f1 f2 f3 c= cnext_el ccore f4 f0 cFST cPOWER * part cnext_el f0 f1 f2 cFST cnext_el f0 cPOWER * part cnext_el f0 f1 f2 c= cnext_el ccore f4 f0 cFST cPOWER * part cnext_el f0 f1 f2 cFST cnext_el f0 cPOWER * part cnext_el f0 f1 f2
+ ((MEM d) r) |- ((((f_list L) d) = ((next_el r) d)) = (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> cMEM f0 f1 c= c= cf_list f2 f0 cnext_el f1 f0 c/\ cMEM f0 f1 c= cf_list f2 f0 cnext_el f1 f0
+ (good_list L) |- (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> (((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST d)) ==> (((((POWER (next_el r)) n) zk) = d) ==> ((~ ((final_list L) r)) ==> ((transform_assumption_v2 L) ==> (((SUC (PRE k)) = k) ==> (((PRE k) < k) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))))))))))))))))))
T c==> cgood_list f0 c==> c<= cSUC f1 cindexf f2 f3 f4 c==> c= cfind_face f0 f5 f4 c==> c= cztrans f0 f6 f7 f5 cPRE f8 f2 c==> c= cnext_el f4 f5 f3 c==> c<= f1 cindexf f2 f3 f4 c==> c= cPOWER * part cnext_el ccore f0 f7 f1 cFST f2 cFST f9 c==> c= cPOWER * part cnext_el f7 f1 f2 f9 c==> c~ cfinal_list f0 f7 c==> ctransform_assumption_v2 f0 c==> c= cSUC cPRE f8 f8 c==> c< cPRE f8 f8 c==> c~ cfinal_list f0 crtrans f0 f6 f7 f5 cPRE f8 c==> cMEM f2 f7 c==> cMEM f9 f7 c==> c= cnext_el f7 f9 cnext_el f4 cPOWER * part cnext_el f4 f1 f2 c==> c= f9 cPOWER * part cnext_el f4 f1 f2 c==> cMEM f2 f4 c==> cMEM cPOWER * part cnext_el f4 f1 f2 f4 c= cf_list f0 cPOWER * part cnext_el f4 f1 f2 cnext_el f4 cPOWER * part cnext_el f4 f1 f2
+ ((NUMERAL _0) < k) |- (((NUMERAL _0) < k) = T)
T c==> c< cNUMERAL c_0 f0 c= c< cNUMERAL c_0 f0 cT
+ (((real_ge (real_of_int _11143751)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143752)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _11143751)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0)))))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _11143751)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))) (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) d)
T * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ (((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((PRE k) < ((((transform_count L) N) r) x)) ==> (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))))
T c==> c< cPRE f0 ctransform_count f1 f2 f3 f4 c~ cfinal_list f1 crtrans f1 f2 f3 f4 cPRE f0
+ (good_list L), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((find_face L) x) = f) |- (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> (((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST d)) ==> (((((POWER (next_el r)) n) zk) = d) ==> ((~ ((final_list L) r)) ==> ((transform_assumption_v2 L) ==> (((SUC (PRE k)) = k) ==> (((PRE k) < k) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))))))))))))))))
T c==> cgood_list f0 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f5 c==> c= cfind_face f0 f3 f6 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f5 c==> c= cnext_el f6 f3 f7 c==> c<= f8 cindexf f5 f7 f6 c==> c= cPOWER * part cnext_el ccore f0 f2 f8 cFST f5 cFST f9 c==> c= cPOWER * part cnext_el f2 f8 f5 f9 c==> c~ cfinal_list f0 f2 c==> ctransform_assumption_v2 f0 c==> c= cSUC cPRE f4 f4 c==> c< cPRE f4 f4 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 cPRE f4 c==> cMEM f5 f2 c==> cMEM f9 f2 c==> c= cnext_el f2 f9 cnext_el f6 cPOWER * part cnext_el f6 f8 f5 c==> c= f9 cPOWER * part cnext_el f6 f8 f5 c==> cMEM f5 f6 c==> cMEM cPOWER * part cnext_el f6 f8 f5 f6 c= cf_list f0 cPOWER * part cnext_el f6 f8 f5 cnext_el f6 cPOWER * part cnext_el f6 f8 f5
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) x))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f0 b2 c= cf_list b0 f0 cnext_el b2 f0 c= cnext_el ccore b0 b2 cFST f0 cFST cnext_el b2 f0 c= c==> ! c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f2 f3 b0 c/\ c~ cfinal_list f1 f3 c/\ cMEM f0 f3 c= cf_list f1 f0 cnext_el f3 f0 c= cnext_el ccore f1 f3 cFST f0 cFST cnext_el f3 f0 * / c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f2 f3 b0 c/\ c~ cfinal_list f1 f3 c/\ cMEM f0 f3 c= cf_list f1 f0 cnext_el f3 f0 c= cnext_el ccore f1 f3 cFST f0 cFST cnext_el f3 f0 f4 * / c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f2 f3 b0 c/\ c~ cfinal_list f1 f3 c/\ cMEM f0 f3 c= cf_list f1 f0 cnext_el f3 f0 c= cnext_el ccore f1 f3 cFST f0 cFST cnext_el f3 f0 f4
+ |- (((!a. (!b. (((SUC a) = b) ==> (a < b)))) ==> ((\a. (!b. (((SUC a) = b) ==> (a < b)))) (PRE k))) = ((\a. (!b. (((SUC a) = b) ==> (a < b)))) (PRE k)))
T c= c==> ! ! c==> c= cSUC b0 b1 c< b0 b1 * / ! c==> c= cSUC b0 b1 c< b0 b1 cPRE f0 * / ! c==> c= cSUC b0 b1 c< b0 b1 cPRE f0
+ ((((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))) /\ F)
T c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), (((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((MEM d) r), ((MEM zk) r), ((((marked_list L) N) r) x) |- (((f_list L) d) = ((next_el r) d))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= cnext_el f7 f3 f8 c==> c= cnext_el f1 f9 cnext_el f7 cPOWER * part cnext_el f7 f5 f6 c==> c= cPOWER * part cnext_el f1 f5 f6 f9 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c<= f5 cindexf f6 f8 f7 c==> c<= cSUC f5 cindexf f6 f8 f7 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cMEM f9 f1 c==> cMEM f6 f1 c==> cmarked_list f0 f2 f1 f3 c= cf_list f0 f9 cnext_el f1 f9
+ |- ((!j. ((j < ((((transform_count L) N) r) x)) ==> (~ ((final_list L) (((((rtrans L) N) r) x) j))))) = T)
T c= ! c==> c< b0 ctransform_count f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((((NUMERAL (BIT1 _0)) <= k) ==> ((SUC (PRE k)) = k)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> c= cztrans f0 f8 f1 f5 cPRE f9 f3 c==> c= ctransform_count f0 f8 f1 f5 f9 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f9 c==> cmarked_list f0 f8 f1 f5 c==> c==> c<= cNUMERAL cBIT1 c_0 f9 c= cSUC cPRE f9 f9 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
+ (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- (((?N. (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))) = (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> c= cztrans f0 f8 f1 f5 cPRE f9 f3 c==> c= ctransform_count f0 f8 f1 f5 f9 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f9 c==> cmarked_list f0 f8 f1 f5 c= c==> c? / c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 f1 b1 c/\ c~ cfinal_list f0 f1 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7 c= cnext_el ccore f0 f1 cFST f7 cFST cnext_el f1 f7 c= cnext_el ccore f0 f1 cFST f7 cFST cnext_el f1 f7
+ (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- (((!x. (((\d. ((((POWER (next_el r)) n) zk) = d)) x) ==> (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) zk))) = (FST ((next_el r) (((POWER (next_el r)) n) zk)))))) ==> ((?d. ((((POWER (next_el r)) n) zk) = d)) ==> (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) zk))) = (FST ((next_el r) (((POWER (next_el r)) n) zk)))))) = ((?d. ((((POWER (next_el r)) n) zk) = d)) ==> (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) zk))) = (FST ((next_el r) (((POWER (next_el r)) n) zk))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cztrans f0 f7 f1 f5 cPRE f8 f3 c==> c= ctransform_count f0 f7 f1 f5 f8 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f8 c==> cmarked_list f0 f7 f1 f5 c= c==> ! c==> * / c= cPOWER * part cnext_el f1 f2 f3 b1 b0 c= cnext_el ccore f0 f1 cFST cPOWER * part cnext_el f1 f2 f3 cFST cnext_el f1 cPOWER * part cnext_el f1 f2 f3 c==> c? / c= cPOWER * part cnext_el f1 f2 f3 b0 c= cnext_el ccore f0 f1 cFST cPOWER * part cnext_el f1 f2 f3 cFST cnext_el f1 cPOWER * part cnext_el f1 f2 f3 c==> c? / c= cPOWER * part cnext_el f1 f2 f3 b0 c= cnext_el ccore f0 f1 cFST cPOWER * part cnext_el f1 f2 f3 cFST cnext_el f1 cPOWER * part cnext_el f1 f2 f3
+ (good_list L), (((find_face L) x) = f) |- ((n <= (((indexf zk) w) f)) ==> (((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST d)) ==> (((((POWER (next_el r)) n) zk) = d) ==> ((~ ((final_list L) r)) ==> ((transform_assumption_v2 L) ==> (((SUC (PRE k)) = k) ==> (((PRE k) < k) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))))))))))))))))
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> c<= f3 cindexf f4 f5 f2 c==> c= cPOWER * part cnext_el ccore f0 f6 f3 cFST f4 cFST f7 c==> c= cPOWER * part cnext_el f6 f3 f4 f7 c==> c~ cfinal_list f0 f6 c==> ctransform_assumption_v2 f0 c==> c= cSUC cPRE f8 f8 c==> c< cPRE f8 f8 c==> c~ cfinal_list f0 crtrans f0 f9 f6 f1 cPRE f8 c==> cMEM f4 f6 c==> cMEM f7 f6 c==> c= cnext_el f6 f7 cnext_el f2 cPOWER * part cnext_el f2 f3 f4 c==> c= f7 cPOWER * part cnext_el f2 f3 f4 c==> cMEM f4 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f4 f2 c= cf_list f0 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) = ((\x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) x))
T c= c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 f2 c= cf_list f0 f4 cnext_el f2 f4 * / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 f2 c= cf_list f0 f4 cnext_el f2 f4 f3
- ((all (\l. (~ (l = NIL)))) L) |- (((all (\l. (~ (l = NIL)))) L) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
+ |- (!b. (((SUC (PRE k)) = b) ==> ((PRE k) < b)))
T c==> c= cSUC cPRE f0 f1 c< cPRE f0 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((POWER (next_el r)) n) zk) = d) |- ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) zk))) = (FST ((next_el r) (((POWER (next_el r)) n) zk)))))
T c==> c= cPOWER * part cnext_el f0 f1 f2 f3 c= c= cnext_el ccore f4 f0 cFST f3 cFST cnext_el f0 f3 c= cnext_el ccore f4 f0 cFST cPOWER * part cnext_el f0 f1 f2 cFST cnext_el f0 cPOWER * part cnext_el f0 f1 f2
+ (good_list L), (((find_face L) x) = f) |- ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))))))))
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c==> c~ cfinal_list f0 crtrans f0 f3 f4 f1 cPRE f5 c==> cMEM f6 f4 c==> cMEM f7 f4 c==> c= cnext_el f4 f7 cnext_el f2 cPOWER * part cnext_el f2 f8 f6 c==> c= f7 cPOWER * part cnext_el f2 f8 f6 c==> cMEM f6 f2 c==> cMEM cPOWER * part cnext_el f2 f8 f6 f2 c= cf_list f0 cPOWER * part cnext_el f2 f8 f6 cnext_el f2 cPOWER * part cnext_el f2 f8 f6
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))) ==> (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ (((SUC n) <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk))))) = T)
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= cSUC f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((marked_list L) N) r) x))))) ==> ((MEM (((((ztrans L) N) r) x) i)) r)))) x)
T * / ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 b0 b1 cmarked_list f0 f1 f2 b0 cMEM cztrans f0 f1 f2 b0 b1 f2 f3
+ |- ((\k. (((MEM zk) f) ==> ((MEM (((POWER (next_el f)) k) zk)) f))) n)
T * / c==> cMEM f0 f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 f2
- (((real_ge (real_of_int _11143757)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))) |- ((((next_el ((core L) r)) (FST (((POWER (next_el r)) n) zk))) = (FST ((next_el r) (((POWER (next_el r)) n) zk)))) = ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk))))
T c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c= c= cnext_el ccore f0 f1 cFST cPOWER * part cnext_el f1 f2 f3 cFST cnext_el f1 cPOWER * part cnext_el f1 f2 f3 c= cPOWER * part cnext_el ccore f0 f1 cSUC f2 cFST f3 cFST cPOWER * part cnext_el f1 cSUC f2 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (((next_el f) x) = w), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((((marked_list L) N) r) x) |- ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> c= cztrans f0 f8 f1 f5 cPRE f9 f3 c==> c= cSUC cPRE f9 f9 c==> c= ctransform_count f0 f8 f1 f5 f9 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 f6 f4 c==> c<= cSUC f2 cindexf f3 f6 f4 c==> c< cNUMERAL c_0 f9 c==> c< cPRE f9 f9 c==> cmarked_list f0 f8 f1 f5 c==> c~ cfinal_list f0 crtrans f0 f8 f1 f5 cPRE f9 c==> cMEM f3 f1 c==> cMEM f7 f1 c==> c= cnext_el f1 f7 cnext_el f4 cPOWER * part cnext_el f4 f2 f3 c==> c= f7 cPOWER * part cnext_el f4 f2 f3 c==> cMEM f3 f4 c==> cMEM cPOWER * part cnext_el f4 f2 f3 f4 c= cf_list f0 cPOWER * part cnext_el f4 f2 f3 cnext_el f4 cPOWER * part cnext_el f4 f2 f3
+ (good_list L), (((find_face L) x) = f) |- ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> (((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST d)) ==> (((((POWER (next_el r)) n) zk) = d) ==> ((~ ((final_list L) r)) ==> ((transform_assumption_v2 L) ==> (((SUC (PRE k)) = k) ==> (((PRE k) < k) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))) ==> (((MEM zk) r) ==> (((MEM d) r) ==> ((((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))) ==> ((d = (((POWER (next_el f)) n) zk)) ==> (((MEM zk) f) ==> (((MEM (((POWER (next_el f)) n) zk)) f) ==> (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))))))))))))))))))
T c==> cgood_list f0 c==> c= cfind_face f0 f1 f2 c/\ c= cfind_face f0 f1 f2 c==> c= cztrans f0 f3 f4 f1 cPRE f5 f6 c==> c= cnext_el f2 f1 f7 c==> c<= f8 cindexf f6 f7 f2 c==> c= cPOWER * part cnext_el ccore f0 f4 f8 cFST f6 cFST f9 c==> c= cPOWER * part cnext_el f4 f8 f6 f9 c==> c~ cfinal_list f0 f4 c==> ctransform_assumption_v2 f0 c==> c= cSUC cPRE f5 f5 c==> c< cPRE f5 f5 c==> c~ cfinal_list f0 crtrans f0 f3 f4 f1 cPRE f5 c==> cMEM f6 f4 c==> cMEM f9 f4 c==> c= cnext_el f4 f9 cnext_el f2 cPOWER * part cnext_el f2 f8 f6 c==> c= f9 cPOWER * part cnext_el f2 f8 f6 c==> cMEM f6 f2 c==> cMEM cPOWER * part cnext_el f2 f8 f6 f2 c= cf_list f0 cPOWER * part cnext_el f2 f8 f6 cnext_el f2 cPOWER * part cnext_el f2 f8 f6
- |- (((!f. (!n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t)))))))))))) ==> ((\f. (!n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t)))))))))))) f)) = ((\f. (!n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t)))))))))))) f))
T c= c==> ! ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b3 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cfind_face b3 b6 b0 c/\ c= cnext_el b0 b6 f0 c/\ c< cNUMERAL c_0 b2 c/\ c= ctransform_count b3 b4 b5 b6 b2 c<= b1 cindexf cztrans b3 b4 b5 b6 cPRE b2 f0 b0 c= cPOWER * part cnext_el b5 b1 cztrans b3 b4 b5 b6 cPRE b2 cPOWER * part cnext_el b0 b1 cztrans b3 b4 b5 b6 cPRE b2 * / ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b3 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cfind_face b3 b6 b0 c/\ c= cnext_el b0 b6 f0 c/\ c< cNUMERAL c_0 b2 c/\ c= ctransform_count b3 b4 b5 b6 b2 c<= b1 cindexf cztrans b3 b4 b5 b6 cPRE b2 f0 b0 c= cPOWER * part cnext_el b5 b1 cztrans b3 b4 b5 b6 cPRE b2 cPOWER * part cnext_el b0 b1 cztrans b3 b4 b5 b6 cPRE b2 f1 * / ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b3 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cfind_face b3 b6 b0 c/\ c= cnext_el b0 b6 f0 c/\ c< cNUMERAL c_0 b2 c/\ c= ctransform_count b3 b4 b5 b6 b2 c<= b1 cindexf cztrans b3 b4 b5 b6 cPRE b2 f0 b0 c= cPOWER * part cnext_el b5 b1 cztrans b3 b4 b5 b6 cPRE b2 cPOWER * part cnext_el b0 b1 cztrans b3 b4 b5 b6 cPRE b2 f1
- |- (!d. (((\d. ((((POWER (next_el r)) n) zk) = d)) d) ==> (?d. ((((POWER (next_el r)) n) zk) = d))))
T c==> * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
- (((real_ge (real_of_int _11143757)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _11143751)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143752)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _11143751)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))) = T)
T c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 cT
- |- ((((\d. ((((POWER (next_el r)) n) zk) = d)) d) ==> (?d. ((((POWER (next_el r)) n) zk) = d))) = T)
T c= c==> * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3 c? / c= cPOWER * part cnext_el f0 f1 f2 b0 cT
- (!i. ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))) |- ((\i. ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))) i)
T c==> ! c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 cMEM cztrans f0 f1 f2 f3 b0 f4 * / c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 cMEM cztrans f0 f1 f2 f3 b0 f4 f5
- (((real_ge (real_of_int _11143757)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (d = (((POWER (next_el f)) n) zk)), (((next_el f) x) = w), (((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((MEM d) r), ((MEM zk) f), ((MEM zk) r), ((MEM (((POWER (next_el f)) n) zk)) f), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el f)) n) zk)) f) /\ (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= f7 cPOWER * part cnext_el f8 f5 f6 c==> c= cnext_el f8 f3 f9 c==> c= cnext_el f1 f7 cnext_el f8 cPOWER * part cnext_el f8 f5 f6 c==> c= cPOWER * part cnext_el f1 f5 f6 f7 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f8 c==> c<= f5 cindexf f6 f9 f8 c==> c<= cSUC f5 cindexf f6 f9 f8 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cMEM f7 f1 c==> cMEM f6 f8 c==> cMEM f6 f1 c==> cMEM cPOWER * part cnext_el f8 f5 f6 f8 c==> cmarked_list f0 f2 f1 f3 c/\ cMEM cPOWER * part cnext_el f8 f5 f6 f8 c= cf_list f0 cPOWER * part cnext_el f8 f5 f6 cnext_el f8 cPOWER * part cnext_el f8 f5 f6
- (good_list L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))) |- ((good_list L) /\ ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((((((transform_count L) N) r) x) = k) ==> (((NUMERAL _0) < k) ==> (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))))))))))))
T c==> cgood_list f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c/\ cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c< cNUMERAL c_0 f4 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- (((SUC n) <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c< cNUMERAL c_0 f4 c==> cmarked_list f0 f1 f2 f3 c/\ c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
- (good_list L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((((((transform_count L) N) r) x) = k) ==> (((NUMERAL _0) < k) ==> (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk))))))))))))
T c==> cgood_list f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c< cNUMERAL c_0 f4 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!i. ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((MEM (((((ztrans L) N) r) x) i)) f))) |- (((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((MEM (((((ztrans L) N) r) x) i)) f)) = T)
T c==> ! c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 cMEM cztrans f0 f1 f2 f3 b0 f4 c= c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f5 cMEM cztrans f0 f1 f2 f3 f5 f4 cT
- |- (((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))
T c/\ c= cytrans f0 f1 f2 f3 cNUMERAL c_0 cl'y f0 f2 f3 c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cl'z f0 f1 f2 f3
- (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((((marked_list L) N) r) x) |- (((NUMERAL _0) < k) ==> (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> cmarked_list f0 f1 f2 f3 c==> c< cNUMERAL c_0 f4 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L), (good_list_nodes L), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f5 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f6 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f7 cindexf f5 f8 f6 c/\ c= cfind_face f0 f3 f6 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f5 c= cnext_el f6 f3 f8 c= cPOWER * part cnext_el ccore f0 f2 f7 cFST f5 cFST cPOWER * part cnext_el f2 f7 f5 c==> c<= cSUC f7 cindexf f5 f8 f6 c==> c< cNUMERAL c_0 f4 c==> cmarked_list f0 f1 f2 f3 c==> c= cnext_el f6 f3 f8 c==> c<= f7 cindexf f5 f8 f6 c= cPOWER * part cnext_el ccore f0 f2 cSUC f7 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f7 f5
- (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f5 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f6 cindexf f7 f8 f5 c/\ c= cfind_face f0 f3 f5 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f7 c= cnext_el f5 f3 f8 c= cPOWER * part cnext_el ccore f0 f2 f6 cFST f7 cFST cPOWER * part cnext_el f2 f6 f7 c==> c<= cSUC f6 cindexf f7 f8 f5 c==> c< cNUMERAL c_0 f4 c==> cmarked_list f0 f1 f2 f3 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f7 c==> c= cnext_el f5 f3 f8 c==> c<= f6 cindexf f7 f8 f5 c= cPOWER * part cnext_el ccore f0 f2 cSUC f6 cFST f7 cFST cPOWER * part cnext_el f2 cSUC f6 f7
- ((\d. ((((POWER (next_el r)) n) zk) = d)) d) |- ((((((POWER (next_el r)) n) zk) = d) ==> (?d. ((((POWER (next_el r)) n) zk) = d))) = (?d. ((((POWER (next_el r)) n) zk) = d)))
T c==> * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3 c= c==> c= cPOWER * part cnext_el f0 f1 f2 f3 c? / c= cPOWER * part cnext_el f0 f1 f2 b0 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
- |- ((!n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t))))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cfind_face b2 b5 f0 c/\ c= cnext_el f0 b5 f1 c/\ c< cNUMERAL c_0 b1 c/\ c= ctransform_count b2 b3 b4 b5 b1 c<= b0 cindexf cztrans b2 b3 b4 b5 cPRE b1 f1 f0 c= cPOWER * part cnext_el b4 b0 cztrans b2 b3 b4 b5 cPRE b1 cPOWER * part cnext_el f0 b0 cztrans b2 b3 b4 b5 cPRE b1 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- (((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((\f. (!n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t)))))))))))) f)
T * / ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b3 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cfind_face b3 b6 b0 c/\ c= cnext_el b0 b6 f0 c/\ c< cNUMERAL c_0 b2 c/\ c= ctransform_count b3 b4 b5 b6 b2 c<= b1 cindexf cztrans b3 b4 b5 b6 cPRE b2 f0 b0 c= cPOWER * part cnext_el b5 b1 cztrans b3 b4 b5 b6 cPRE b2 cPOWER * part cnext_el b0 b1 cztrans b3 b4 b5 b6 cPRE b2 f1
- (((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (PRE k)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk))), (d = (((POWER (next_el f)) n) zk)), (((next_el f) x) = w), (((next_el r) d) = ((next_el f) (((POWER (next_el f)) n) zk))), ((((POWER (next_el r)) n) zk) = d), ((((((ztrans L) N) r) x) (PRE k)) = zk), ((SUC (PRE k)) = k), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (n <= (((indexf zk) w) f)), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((PRE k) < k), ((MEM d) r), ((MEM zk) f), ((MEM zk) r), ((MEM (((POWER (next_el f)) n) zk)) f), ((((marked_list L) N) r) x) |- (((f_list L) (((POWER (next_el f)) n) zk)) = ((next_el f) (((POWER (next_el f)) n) zk)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cPRE f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c= f7 cPOWER * part cnext_el f8 f5 f6 c==> c= cnext_el f8 f3 f9 c==> c= cnext_el f1 f7 cnext_el f8 cPOWER * part cnext_el f8 f5 f6 c==> c= cPOWER * part cnext_el f1 f5 f6 f7 c==> c= cztrans f0 f2 f1 f3 cPRE f4 f6 c==> c= cSUC cPRE f4 f4 c==> c= ctransform_count f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f8 c==> c<= f5 cindexf f6 f9 f8 c==> c<= cSUC f5 cindexf f6 f9 f8 c==> c< cNUMERAL c_0 f4 c==> c< cPRE f4 f4 c==> cMEM f7 f1 c==> cMEM f6 f8 c==> cMEM f6 f1 c==> cMEM cPOWER * part cnext_el f8 f5 f6 f8 c==> cmarked_list f0 f2 f1 f3 c= cf_list f0 cPOWER * part cnext_el f8 f5 f6 cnext_el f8 cPOWER * part cnext_el f8 f5 f6
- |- (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))))
T c/\ c= cntrans f0 f1 f2 f3 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 f3 cNUMERAL c_0 cl'y f0 f2 f3 c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cl'z f0 f1 f2 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- (good_list L), (good_list_nodes L), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f5 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c= cfind_face f0 f3 f6 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f7 cindexf f5 f8 f6 c/\ c= cfind_face f0 f3 f6 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f5 c= cnext_el f6 f3 f8 c= cPOWER * part cnext_el ccore f0 f2 f7 cFST f5 cFST cPOWER * part cnext_el f2 f7 f5 c==> c<= cSUC f7 cindexf f5 f8 f6 c==> c< cNUMERAL c_0 f4 c==> cmarked_list f0 f1 f2 f3 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f5 c==> c= cnext_el f6 f3 f8 c==> c<= f7 cindexf f5 f8 f6 c= cPOWER * part cnext_el ccore f0 f2 cSUC f7 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f7 f5
- |- (((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((POWER (next_el r)) n) zk) = d) = ((\d. ((((POWER (next_el r)) n) zk) = d)) d))
T c= c= cPOWER * part cnext_el f0 f1 f2 f3 * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t))))))))))) n)
T * / ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cfind_face b2 b5 f0 c/\ c= cnext_el f0 b5 f1 c/\ c< cNUMERAL c_0 b1 c/\ c= ctransform_count b2 b3 b4 b5 b1 c<= b0 cindexf cztrans b2 b3 b4 b5 cPRE b1 f1 f0 c= cPOWER * part cnext_el b4 b0 cztrans b2 b3 b4 b5 cPRE b1 cPOWER * part cnext_el f0 b0 cztrans b2 b3 b4 b5 cPRE b1 f2
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _11143757)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((POWER (next_el r)) n) zk) = d) ==> (?d. ((((POWER (next_el r)) n) zk) = d)))
T c==> c= cPOWER * part cnext_el f0 f1 f2 f3 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
- (((real_ge (real_of_int _11143751)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143752)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _11143751)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _11143752)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- (((NUMERAL _0) < k) /\ (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> c< cNUMERAL c_0 f4 c==> cmarked_list f0 f1 f2 f3 c/\ c< cNUMERAL c_0 f4 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
- |- ((?d. ((((POWER (next_el r)) n) zk) = d)) ==> (?d. ((((POWER (next_el r)) n) zk) = d)))
T c==> c? / c= cPOWER * part cnext_el f0 f1 f2 b0 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
- ((\d. ((((POWER (next_el r)) n) zk) = d)) d) |- (((\d. ((((POWER (next_el r)) n) zk) = d)) d) /\ (?d. ((((POWER (next_el r)) n) zk) = d)))
T c==> * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3 c/\ * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
- (((real_ge (real_of_int _11143757)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t))))))))))) ==> ((\n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t))))))))))) n)) = ((\n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t))))))))))) n))
T c= c==> ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cfind_face b2 b5 f0 c/\ c= cnext_el f0 b5 f1 c/\ c< cNUMERAL c_0 b1 c/\ c= ctransform_count b2 b3 b4 b5 b1 c<= b0 cindexf cztrans b2 b3 b4 b5 cPRE b1 f1 f0 c= cPOWER * part cnext_el b4 b0 cztrans b2 b3 b4 b5 cPRE b1 cPOWER * part cnext_el f0 b0 cztrans b2 b3 b4 b5 cPRE b1 * / ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cfind_face b2 b5 f0 c/\ c= cnext_el f0 b5 f1 c/\ c< cNUMERAL c_0 b1 c/\ c= ctransform_count b2 b3 b4 b5 b1 c<= b0 cindexf cztrans b2 b3 b4 b5 cPRE b1 f1 f0 c= cPOWER * part cnext_el b4 b0 cztrans b2 b3 b4 b5 cPRE b1 cPOWER * part cnext_el f0 b0 cztrans b2 b3 b4 b5 cPRE b1 f2 * / ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cfind_face b2 b5 f0 c/\ c= cnext_el f0 b5 f1 c/\ c< cNUMERAL c_0 b1 c/\ c= ctransform_count b2 b3 b4 b5 b1 c<= b0 cindexf cztrans b2 b3 b4 b5 cPRE b1 f1 f0 c= cPOWER * part cnext_el b4 b0 cztrans b2 b3 b4 b5 cPRE b1 cPOWER * part cnext_el f0 b0 cztrans b2 b3 b4 b5 cPRE b1 f2
- |- ((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x))
T c= cytrans f0 f1 f2 f3 cNUMERAL c_0 cl'y f0 f2 f3
- (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((((ztrans L) N) r) x) (PRE k)) = zk), (((((transform_count L) N) r) x) = k), (((find_face L) x) = f), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((SUC n) <= (((indexf zk) w) f)), ((NUMERAL _0) < k), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cztrans f0 f4 f5 f2 cPRE f6 f7 c==> c= ctransform_count f0 f4 f5 f2 f6 c==> c= cfind_face f0 f2 f1 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f5 f2 c/\ c= ctransform_count f0 f4 f5 f2 f6 c/\ c< cNUMERAL c_0 f6 c/\ c<= f8 cindexf f7 f3 f1 c/\ c= cfind_face f0 f2 f1 c/\ c= cztrans f0 f4 f5 f2 cPRE f6 f7 c= cnext_el f1 f2 f3 c= cPOWER * part cnext_el ccore f0 f5 f8 cFST f7 cFST cPOWER * part cnext_el f5 f8 f7 c==> c<= cSUC f8 cindexf f7 f3 f1 c==> c< cNUMERAL c_0 f6 c==> cmarked_list f0 f4 f5 f2 c/\ c= cnext_el f1 f2 f3 c==> c<= f8 cindexf f7 f3 f1 c= cPOWER * part cnext_el ccore f0 f5 cSUC f8 cFST f7 cFST cPOWER * part cnext_el f5 cSUC f8 f7
- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))) |- ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((((((transform_count L) N) r) x) = k) ==> (((NUMERAL _0) < k) ==> (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))))))))))))
T c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c< cNUMERAL c_0 f4 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L), (good_list_nodes L), (((((transform_count L) N) r) x) = k), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((((marked_list L) N) r) x) |- ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) ==> (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c==> c< cNUMERAL c_0 f4 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L), (good_list_nodes L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((((((transform_count L) N) r) x) = k) ==> (((NUMERAL _0) < k) ==> (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c< cNUMERAL c_0 f4 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) |- ((?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) /\ ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 c/\ c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f3 b2 c= cf_list b0 f3 cnext_el b2 f3 c= cnext_el ccore b0 b2 cFST f3 cFST cnext_el b2 f3 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _11143757)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L), (good_list_nodes L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) /\ (((NUMERAL _0) < k) /\ ((n <= (((indexf zk) w) f)) /\ ((((find_face L) x) = f) /\ (((((((ztrans L) N) r) x) (PRE k)) = zk) /\ (((next_el f) x) = w))))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST zk)) = (FST (((POWER (next_el r)) n) zk)))), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((((((transform_count L) N) r) x) = k) ==> (((NUMERAL _0) < k) ==> (((SUC n) <= (((indexf zk) w) f)) ==> ((((find_face L) x) = f) ==> (((((((ztrans L) N) r) x) (PRE k)) = zk) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf zk) w) f)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST zk)) = (FST (((POWER (next_el r)) (SUC n)) zk)))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= ctransform_count f0 f1 f2 f3 f4 c/\ c< cNUMERAL c_0 f4 c/\ c<= f5 cindexf f6 f7 f8 c/\ c= cfind_face f0 f3 f8 c/\ c= cztrans f0 f1 f2 f3 cPRE f4 f6 c= cnext_el f8 f3 f7 c= cPOWER * part cnext_el ccore f0 f2 f5 cFST f6 cFST cPOWER * part cnext_el f2 f5 f6 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c= ctransform_count f0 f1 f2 f3 f4 c==> c< cNUMERAL c_0 f4 c==> c<= cSUC f5 cindexf f6 f7 f8 c==> c= cfind_face f0 f3 f8 c==> c= cztrans f0 f1 f2 f3 cPRE f4 f6 c==> c= cnext_el f8 f3 f7 c==> c<= f5 cindexf f6 f7 f8 c= cPOWER * part cnext_el ccore f0 f2 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f2 cSUC f5 f6
- (((real_ge (real_of_int _11143757)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _11143757)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143757))) ((real_add (real_of_int _11143758)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143757)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143758))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _11143758)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _11143755)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143755)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143755)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _11143751)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143752)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _11143751)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752)))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _11143751)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143752))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((((((ntrans L) N) r) x) (NUMERAL _0)) = N)
T c= cntrans f0 f1 f2 f3 cNUMERAL c_0 f1
- |- ((!f. (!n. (!t. (!L. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (((NUMERAL _0) < t) /\ ((((((transform_count L) N) r) x) = t) /\ (n <= (((indexf (((((ztrans L) N) r) x) (PRE t))) w) f)))))))))) ==> ((((POWER (next_el r)) n) (((((ztrans L) N) r) x) (PRE t))) = (((POWER (next_el f)) n) (((((ztrans L) N) r) x) (PRE t)))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b3 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cfind_face b3 b6 b0 c/\ c= cnext_el b0 b6 f0 c/\ c< cNUMERAL c_0 b2 c/\ c= ctransform_count b3 b4 b5 b6 b2 c<= b1 cindexf cztrans b3 b4 b5 b6 cPRE b2 f0 b0 c= cPOWER * part cnext_el b5 b1 cztrans b3 b4 b5 b6 cPRE b2 cPOWER * part cnext_el b0 b1 cztrans b3 b4 b5 b6 cPRE b2 cT
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))
T c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cl'z f0 f1 f2 f3
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((POWER (next_el r)) n) zk) = d) |- ((\d. ((((POWER (next_el r)) n) zk) = d)) d)
T c==> c= cPOWER * part cnext_el f0 f1 f2 f3 * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3
