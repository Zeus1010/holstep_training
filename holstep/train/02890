N MEASURE_INTERVAL_3
C |- ((!a. (!b. ((measure (closed_interval ((CONS (a , b)) NIL))) = (((COND (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) /\ (((real_le (a $ (NUMERAL (BIT0 (BIT1 _0))))) (b $ (NUMERAL (BIT0 (BIT1 _0))))) /\ ((real_le (a $ (NUMERAL (BIT1 (BIT1 _0))))) (b $ (NUMERAL (BIT1 (BIT1 _0)))))))) ((real_mul ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) ((real_mul ((real_sub (b $ (NUMERAL (BIT0 (BIT1 _0))))) (a $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (b $ (NUMERAL (BIT1 (BIT1 _0))))) (a $ (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))) /\ (!a. (!b. ((measure (open_interval (a , b))) = (((COND (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) /\ (((real_le (a $ (NUMERAL (BIT0 (BIT1 _0))))) (b $ (NUMERAL (BIT0 (BIT1 _0))))) /\ ((real_le (a $ (NUMERAL (BIT1 (BIT1 _0))))) (b $ (NUMERAL (BIT1 (BIT1 _0)))))))) ((real_mul ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) ((real_mul ((real_sub (b $ (NUMERAL (BIT0 (BIT1 _0))))) (a $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (b $ (NUMERAL (BIT1 (BIT1 _0))))) (a $ (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))))
T c/\ ! ! c= cmeasure * part cclosed_interval cCONS c, b0 b1 cNIL cCOND c/\ creal_le c$ b0 cNUMERAL cBIT1 c_0 c$ b1 cNUMERAL cBIT1 c_0 c/\ creal_le c$ b0 cNUMERAL cBIT0 cBIT1 c_0 c$ b1 cNUMERAL cBIT0 cBIT1 c_0 creal_le c$ b0 cNUMERAL cBIT1 cBIT1 c_0 c$ b1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_sub c$ b1 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_sub c$ b1 cNUMERAL cBIT0 cBIT1 c_0 c$ b0 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ b1 cNUMERAL cBIT1 cBIT1 c_0 c$ b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 ! ! c= cmeasure * part copen_interval c, b0 b1 cCOND c/\ creal_le c$ b0 cNUMERAL cBIT1 c_0 c$ b1 cNUMERAL cBIT1 c_0 c/\ creal_le c$ b0 cNUMERAL cBIT0 cBIT1 c_0 c$ b1 cNUMERAL cBIT0 cBIT1 c_0 creal_le c$ b0 cNUMERAL cBIT1 cBIT1 c_0 c$ b1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_sub c$ b1 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_sub c$ b1 cNUMERAL cBIT0 cBIT1 c_0 c$ b0 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ b1 cNUMERAL cBIT1 cBIT1 c_0 c$ b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
D TRUTH
A |- T
T cT
D DIMINDEX_3
A |- ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0))))
T c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0
D FORALL_3
A |- (!P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ ((P (NUMERAL (BIT0 (BIT1 _0)))) /\ (P (NUMERAL (BIT1 (BIT1 _0))))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0 c/\ * f0 cNUMERAL cBIT1 c_0 c/\ * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
D PRODUCT_3
A |- (!t. (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 (BIT1 _0))))) t) = ((real_mul (t (NUMERAL (BIT1 _0)))) ((real_mul (t (NUMERAL (BIT0 (BIT1 _0))))) (t (NUMERAL (BIT1 (BIT1 _0))))))))
T c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 creal_mul * f0 cNUMERAL cBIT1 c_0 creal_mul * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
D CONTENT_CLOSED_INTERVAL_CASES
A |- (!a. (!b. ((content (closed_interval ((CONS (a , b)) NIL))) = (((COND (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))))) ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i))))) (real_of_num (NUMERAL _0))))))
T c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL cCOND ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_le c$ f0 b0 c$ f1 b0 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f1 b0 c$ f0 b0 creal_of_num cNUMERAL c_0
D MEASURE_INTERVAL
A |- ((!a. (!b. ((measure (closed_interval ((CONS (a , b)) NIL))) = (content (closed_interval ((CONS (a , b)) NIL)))))) /\ (!a. (!b. ((measure (open_interval (a , b))) = (content (closed_interval ((CONS (a , b)) NIL)))))))
T c/\ ! ! c= cmeasure * part cclosed_interval cCONS c, b0 b1 cNIL ccontent * part cclosed_interval cCONS c, b0 b1 cNIL ! ! c= cmeasure * part copen_interval c, b0 b1 ccontent * part cclosed_interval cCONS c, b0 b1 cNIL
+ |- ((\P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ ((P (NUMERAL (BIT0 (BIT1 _0)))) /\ (P (NUMERAL (BIT1 (BIT1 _0)))))))) P)
T * / c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 c/\ * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((\a. (!b. ((content (closed_interval ((CONS (a , b)) NIL))) = (((COND (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))))) ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i))))) (real_of_num (NUMERAL _0)))))) a)
T * / ! c= ccontent * part cclosed_interval cCONS c, b0 b1 cNIL cCOND ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV creal_le c$ b0 b2 c$ b1 b2 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ b1 b2 c$ b0 b2 creal_of_num cNUMERAL c_0 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
