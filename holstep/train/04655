N Collect_geom2.VBVYGGT
C |- (!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) /\ ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))))))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D LEFT_OR_FORALL_THM
A |- (!P. (!Q. (((!x. (P x)) \/ Q) = (!x. ((P x) \/ Q)))))
T c= c\/ ! * f0 b0 f1 ! c\/ * f0 b0 f1
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D FORALL_IN_CLAUSES
A |- ((!P. ((!x. ((x IN EMPTY) ==> (P x))) = T)) /\ (!P. (!a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x)))))))))
T c/\ ! c= ! c==> cIN b1 part cEMPTY * b0 b1 cT ! ! ! c= ! c==> cIN b3 * * part cINSERT b1 b2 * b0 b3 c/\ * b0 b1 ! c==> cIN b3 b2 * b0 b3
D POW_2_SQRT
A |- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x)))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0
D DIST_POS_LE
A |- (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y)))))
T creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1
D Collect_geom.dist3
A |- (!v. (!w. (((dist3 v) w) = (distance (v , w)))))
T c= cdist3 f0 f1 cdistance c, f0 f1
D Collect_geom2.POS_EQ_NOT_COPLANANR
A |- (((real_lt (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (x1 , x2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x3 , x4))) (NUMERAL (BIT0 (BIT1 _0)))))) = (~ (coplanar_alt (x1 INSERT (x2 INSERT (x3 INSERT (x4 INSERT EMPTY)))))))
T c= creal_lt creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D Collect_geom2.PROVE_DIST_FROM_V1
A |- ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> (((real_pow ((dist3 p) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 c= creal_pow cdist3 f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b0 b1 b2 b3 b4 b5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
D Collect_geom2.PROVE_EQ_DIST_FROM4
A |- ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> ((((real_pow ((dist3 p) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))) /\ ((((real_pow ((dist3 p) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))) /\ (((real_pow ((dist3 p) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 c/\ c= creal_pow cdist3 f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b0 b1 b2 b3 b4 b5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 c/\ c= creal_pow cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b0 b1 b2 b3 b4 b5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 c= creal_pow cdist3 f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b0 b1 b2 b3 b4 b5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
D Collect_geom2.NOT_COPLANAR_IMP_EXISTS_CIR
A |- (!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v))))))))))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1
D Collect_geom2.UNIQUE_EXISISTING_PROPERTY_C4
A |- (!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D Collect_geom2.PROVE_IN_AFFINE_HULL_4
A |- ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% ((((((chi x12) x13) x14) x23) x24) x34)) v1)) ((vector_add ((% ((((((chi x12) x24) x23) x14) x13) x34)) v2)) ((vector_add ((% ((((((chi x34) x13) x23) x14) x24) x12)) v3)) ((% ((((((chi x34) x24) x14) x23) x13) x12)) v4))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 cIN c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% cchi f0 f1 f2 f3 f4 f5 f6 cvector_add c% cchi f0 f4 f3 f2 f1 f5 f7 cvector_add c% cchi f5 f1 f3 f2 f4 f0 f8 c% cchi f5 f4 f2 f3 f1 f0 f9 * * part chull part caffine * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY
- ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) |- ((((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F))))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))))
T c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF
+ |- ((\v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) v3)
T * / ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b3 cdistance c, b2 b4 c= b2 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ |- (((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) = (((a = b) ==> (P a)) = ((a = b) ==> (P b))))
T c= c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f4 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f5 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f3 c/\ c= b1 cdistance c, b0 f4 c= b1 cdistance c, b0 f5 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0
+ (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) /\ F)
T c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c/\ c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 cF
+ (?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) /\ ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))
T c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ ((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) |- (((P a) ==> F) = F)
T c==> c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c= c==> * f1 f0 cF cF
+ |- ((!b1. (!a. ((((a /\ (b1 /\ T)) /\ T) ==> (b1 /\ (T /\ (T /\ F)))) = ((a /\ (b1 /\ (T /\ T))) ==> F)))) = ((!a. ((((a /\ (T /\ T)) /\ T) ==> (T /\ (T /\ (T /\ F)))) = ((a /\ (T /\ (T /\ T))) ==> F))) /\ (!a. ((((a /\ (F /\ T)) /\ T) ==> (F /\ (T /\ (T /\ F)))) = ((a /\ (F /\ (T /\ T))) ==> F)))))
T c= ! ! c= c==> c/\ c/\ b1 c/\ b0 cT cT c/\ b0 c/\ cT c/\ cT cF c==> c/\ b1 c/\ b0 c/\ cT cT cF c/\ ! c= c==> c/\ c/\ b0 c/\ cT cT cT c/\ cT c/\ cT c/\ cT cF c==> c/\ b0 c/\ cT c/\ cT cT cF ! c= c==> c/\ c/\ b0 c/\ cF cT cT c/\ cF c/\ cT c/\ cT cF c==> c/\ b0 c/\ cF c/\ cT cT cF
+ |- ((chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) = ((\chi44. (chi44 = ((((((chi x34) x24) x14) x23) x13) x12))) chi44))
T c= c= f0 cchi f1 f2 f3 f4 f5 f6 * / c= b0 cchi f1 f2 f3 f4 f5 f6 f0
+ |- ((!d. (!b. (!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))))))) = ((!b. (!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ T)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> T)))))) /\ (!b. (!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ F)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> F))))))))
T c= ! ! ! ! ! c= c==> c/\ c/\ b4 c/\ b3 b2 b1 c/\ b3 c/\ b2 c/\ b1 b0 c==> c/\ b4 c/\ b3 c/\ b2 b1 b0 c/\ ! ! ! ! c= c==> c/\ c/\ b3 c/\ b2 b1 b0 c/\ b2 c/\ b1 c/\ b0 cT c==> c/\ b3 c/\ b2 c/\ b1 b0 cT ! ! ! ! c= c==> c/\ c/\ b3 c/\ b2 b1 b0 c/\ b2 c/\ b1 c/\ b0 cF c==> c/\ b3 c/\ b2 c/\ b1 b0 cF
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- (F = F)
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= cF cF
+ (~ ((!x. ((x = a) ==> (P x))) = (P a))) |- ((~ ((!x. ((x = a) ==> (P x))) = (P a))) /\ F)
T c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 c/\ c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF
+ (((((((chi x12) x13) x14) x23) x24) x34) = chi11) |- ((((((((chi x12) x13) x14) x23) x24) x34) = chi11) /\ ((((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34) ==> ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) ==> ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) ==> ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))))))))))))
T c==> c= cchi f0 f1 f2 f3 f4 f5 f6 c/\ c= cchi f0 f1 f2 f3 f4 f5 f6 c==> c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f9 f8 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= creal_pow cdistance c, f9 f7 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c= creal_pow cdistance c, f10 f8 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f10 f7 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c= creal_pow cdistance c, f10 f9 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c= cCARD * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f0 f1 f2 f3 f4 f5 c==> c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 c==> cIN f11 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c==> c= creal_pow cdist3 f11 f9 cNUMERAL cBIT0 cBIT1 c_0 f12 c==> c= creal_pow cdist3 f11 f7 cNUMERAL cBIT0 cBIT1 c_0 f12 c==> c= creal_pow cdist3 f11 f8 cNUMERAL cBIT0 cBIT1 c_0 f12 c==> c= creal_pow cdist3 f11 f10 cNUMERAL cBIT0 cBIT1 c_0 f12 c==> cIN ccircumcenter * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c= ccircumcenter * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f11
- ((\rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) rr) |- (((((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr) ==> (?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr))) = (?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)))
T c==> * / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 f6 c= c==> c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 f6 c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0
- ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) |- (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) /\ ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))
T c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c/\ c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
- |- ((\v4. (!v3. (!v2. (!v1. (!rr. ((~ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) ==> F)))))) v4)
T * / ! ! ! ! c==> c~ c==> cIN f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 b2 cNUMERAL cBIT0 cBIT1 c_0 b4 c= cdistance c, f0 b2 csqrt b4 c==> c/\ c= creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 b4 c= cdistance c, f0 b1 csqrt b4 c==> c/\ c= creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b4 c= cdistance c, f0 b0 csqrt b4 c==> c/\ c= creal_pow cdistance c, f0 b3 cNUMERAL cBIT0 cBIT1 c_0 b4 c= cdistance c, f0 b3 csqrt b4 c==> cIN ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c? / c/\ c= b5 cdistance c, ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c/\ c= b5 cdistance c, ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 c/\ c= b5 cdistance c, ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 c= b5 cdistance c, ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b0 c==> ! c==> cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c? / c/\ c= b6 cdistance c, b5 b3 c/\ c= b6 cdistance c, b5 b2 c/\ c= b6 cdistance c, b5 b1 c= b6 cdistance c, b5 b0 c= b5 ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1
+ (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- F
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 cF
- (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- ((P b) = (P b))
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c= * f2 f1 * f2 f1
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) |- (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v3))) /\ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c/\ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f4
- |- ((~ (_2176609 = _2176611)) \/ ((~ (_2176608 = _2176610)) \/ (((hull _2176608) _2176609) = ((hull _2176610) _2176611))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F), (((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) |- ((((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) /\ ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F))
T c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c/\ c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF
- (~ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) |- F
T c==> c~ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f3 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f4 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f1 csqrt f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 cF
- (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr) |- ((\rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) rr)
T c==> c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 f6 * / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 f6
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (!r. (((\r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) r) ==> F))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> * / c/\ c= b1 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b1 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b1 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b1 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 b0 cF
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (w = w)) ==> (w = w))
T c==> c~ c= f0 f0 c= f0 f0
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) |- (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4))) = (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v3))) /\ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4)))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c= c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f4 c/\ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f4
+ |- ((((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) ==> F)
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 cF
- |- ((~ (_2176586 = _2176587)) \/ ((BIT1 _2176586) = (BIT1 _2176587)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (~ ((!x. ((x = a) ==> (P x))) = (P a))) |- (?x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a))))
T c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 c? / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= c= creal_pow cdistance c, f5 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cdistance c, f5 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0
- |- ((_2176596 = _2176598) ==> ((~ (_2176597 = _2176599)) \/ ((_2176596 , _2176597) = (_2176598 , _2176599))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))))))
T c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= cCARD * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f4 f2 f6 f7 f8 f9 c==> c~ c= cdelta f4 f2 f6 f7 f8 f9 creal_of_num cNUMERAL c_0 c==> cIN f10 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c= creal_pow cdist3 f10 f3 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f1 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f5 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f0 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c= ccircumcenter * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f10
+ |- ((\v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))))) v3)
T * / ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b2 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 f2
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4
- ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F), (((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) |- ((((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) /\ ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F))
T c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c/\ c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) |- ((\p. (!r. ((~ (p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (((~ (r = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4))))))) \/ (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))) _2176516)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c\/ c~ c= b1 cdistance c, b0 f0 c\/ c~ c= b1 cdistance c, b0 f1 c\/ c~ c= b1 cdistance c, b0 f2 c~ c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (!w. (((\w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) w) ==> (?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w))))
T c==> * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 f14 c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0
+ (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- ((((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a) = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
+ |- (((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((~ (_2176517 = (distance (_2176516 , v1)))) \/ ((~ (_2176517 = (distance (_2176516 , v2)))) \/ ((~ (_2176517 = (distance (_2176516 , v3)))) \/ ((~ (_2176517 = (distance (_2176516 , v4)))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) = ((_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) \/ ((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((~ (_2176517 = (distance (_2176516 , v1)))) \/ ((~ (_2176517 = (distance (_2176516 , v2)))) \/ ((~ (_2176517 = (distance (_2176516 , v3)))) \/ (~ (_2176517 = (distance (_2176516 , v4))))))))))
T c= c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c~ c= f5 cdistance c, f0 f1 c\/ c~ c= f5 cdistance c, f0 f2 c\/ c~ c= f5 cdistance c, f0 f3 c\/ c~ c= f5 cdistance c, f0 f4 c= f0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c= f0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c~ c= f5 cdistance c, f0 f1 c\/ c~ c= f5 cdistance c, f0 f2 c\/ c~ c= f5 cdistance c, f0 f3 c~ c= f5 cdistance c, f0 f4
- (~ ((sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))) = (sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))))) |- ((~ ((sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))) = (sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))) = (sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ |- (((((real_lt (real_of_num (NUMERAL _0))) a) ==> (~ (a = (real_of_num (NUMERAL _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) a) = (((real_lt (real_of_num (NUMERAL _0))) a) /\ (~ (a = (real_of_num (NUMERAL _0))))))) = (((real_lt (real_of_num (NUMERAL _0))) a) = (((real_lt (real_of_num (NUMERAL _0))) a) /\ (~ (a = (real_of_num (NUMERAL _0)))))))
T c= c==> c==> creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= f0 creal_of_num cNUMERAL c_0
+ (((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) |- ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) /\ ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))))))
T c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= cCARD * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f4 f2 f6 f7 f8 f9 c==> c~ c= cdelta f4 f2 f6 f7 f8 f9 creal_of_num cNUMERAL c_0 c==> cIN f10 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c= creal_pow cdist3 f10 f3 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f1 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f5 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f0 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c= ccircumcenter * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f10
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) = (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= c= f3 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5 c= f3 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f5
+ (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
+ |- ((!c. (!b. (!a. (((a /\ b) ==> c) = (a ==> (b ==> c)))))) = ((!b. (!a. (((a /\ b) ==> T) = (a ==> (b ==> T))))) /\ (!b. (!a. (((a /\ b) ==> F) = (a ==> (b ==> F)))))))
T c= ! ! ! c= c==> c/\ b2 b1 b0 c==> b2 c==> b1 b0 c/\ ! ! c= c==> c/\ b1 b0 cT c==> b1 c==> b0 cT ! ! c= c==> c/\ b1 b0 cF c==> b1 c==> b0 cF
+ |- (((?x. ((x = a) /\ (~ (P x)))) /\ (P a)) = (?x. (((x = a) /\ (~ (P x))) /\ (P a))))
T c= c/\ c? / c/\ c= b0 f0 c~ * f1 b0 * f1 f0 c? / c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2)))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1
+ |- ((?x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))) ==> F)
T c==> c? / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0 cF
+ |- ((!v. ((v IN (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v))))) = ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ (!v. ((v IN (v3 INSERT (v4 INSERT EMPTY))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c= f3 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) |- (!x. ((~ ((real_le (real_of_num (NUMERAL _0))) x)) \/ ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x)))
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 ! c\/ c~ creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0
- ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((~ ((distance (w , v1)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((distance (w , v1)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c~ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0
+ |- (T = (((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((~ (_2176517 = (distance (_2176516 , v1)))) \/ ((~ (_2176517 = (distance (_2176516 , v2)))) \/ ((~ (_2176517 = (distance (_2176516 , v3)))) \/ ((~ (_2176517 = (distance (_2176516 , v4)))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) = ((_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) \/ ((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((~ (_2176517 = (distance (_2176516 , v1)))) \/ ((~ (_2176517 = (distance (_2176516 , v2)))) \/ ((~ (_2176517 = (distance (_2176516 , v3)))) \/ (~ (_2176517 = (distance (_2176516 , v4)))))))))))
T c= cT c= c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c~ c= f5 cdistance c, f0 f1 c\/ c~ c= f5 cdistance c, f0 f2 c\/ c~ c= f5 cdistance c, f0 f3 c\/ c~ c= f5 cdistance c, f0 f4 c= f0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c= f0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c~ c= f5 cdistance c, f0 f1 c\/ c~ c= f5 cdistance c, f0 f2 c\/ c~ c= f5 cdistance c, f0 f3 c~ c= f5 cdistance c, f0 f4
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- ((distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)) = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2)))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
- |- ((!a. (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) = T)
T c= ! c= c==> c= b0 f0 * f1 b0 c==> c= b0 f0 * f1 f0 cT
- |- (((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F))
T c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF
+ |- ((!p. (P ==> (Q p))) = (P ==> (!p. (Q p))))
T c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)) /\ F)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cF
- |- ((((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr) ==> (?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)))
T c==> c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 f6 c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ |- (((!b2. (!b1. (!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)))) ==> ((\b2. (!b1. (!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)))) b2)) = ((\b2. (!b1. (!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)))) b2))
T c= c==> ! ! ! c==> c~ c= c==> c/\ c/\ b2 c/\ b1 b0 f0 c/\ b1 c/\ b0 c/\ f0 f1 c==> c/\ b2 c/\ b1 c/\ b0 f0 f1 cF * / ! ! c==> c~ c= c==> c/\ c/\ b2 c/\ b1 b0 f0 c/\ b1 c/\ b0 c/\ f0 f1 c==> c/\ b2 c/\ b1 c/\ b0 f0 f1 cF f2 * / ! ! c==> c~ c= c==> c/\ c/\ b2 c/\ b1 b0 f0 c/\ b1 c/\ b0 c/\ f0 f1 c==> c/\ b2 c/\ b1 c/\ b0 f0 f1 cF f2
+ |- (((!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) ==> ((\a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) a)) = ((\a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) a))
T c= c==> ! c==> c~ c= c==> c/\ c/\ b0 c/\ f0 f1 f2 c/\ f0 c/\ f1 c/\ f2 f3 c==> c/\ b0 c/\ f0 c/\ f1 f2 f3 cF * / c==> c~ c= c==> c/\ c/\ b0 c/\ f0 f1 f2 c/\ f0 c/\ f1 c/\ f2 f3 c==> c/\ b0 c/\ f0 c/\ f1 f2 f3 cF f4 * / c==> c~ c= c==> c/\ c/\ b0 c/\ f0 f1 f2 c/\ f0 c/\ f1 c/\ f2 f3 c==> c/\ b0 c/\ f0 c/\ f1 f2 f3 cF f4
- (~ (P a)), (((x = a) /\ (~ (P x))) /\ (P a)) |- ((~ (P a)) /\ (P a))
T c==> c~ * f0 f1 c==> c/\ c/\ c= f2 f1 c~ * f0 f2 * f0 f1 c/\ c~ * f0 f1 * f0 f1
- ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) |- ((((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F))
T c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= c= creal_pow cdistance c, f5 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cdistance c, f5 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!p. ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> (((real_pow ((dist3 p) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr))) = (((real_pow ((dist3 ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr))
T c= ! c==> c= b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 c= creal_pow cdist3 b0 f7 cNUMERAL cBIT0 cBIT1 c_0 f14 c= creal_pow cdist3 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 f7 cNUMERAL cBIT0 cBIT1 c_0 f14
+ |- ((((~ (((real_lt (real_of_num (NUMERAL _0))) a) ==> (~ (a = (real_of_num (NUMERAL _0)))))) ==> F) ==> (((real_lt (real_of_num (NUMERAL _0))) a) ==> (~ (a = (real_of_num (NUMERAL _0)))))) = (((real_lt (real_of_num (NUMERAL _0))) a) ==> (~ (a = (real_of_num (NUMERAL _0))))))
T c= c==> c==> c~ c==> creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= f0 creal_of_num cNUMERAL c_0 cF c==> creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= f0 creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= f0 creal_of_num cNUMERAL c_0
+ |- (((!b1. (!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F))) ==> ((\b1. (!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F))) b1)) = ((\b1. (!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F))) b1))
T c= c==> ! ! c==> c~ c= c==> c/\ c/\ b1 c/\ b0 f0 f1 c/\ b0 c/\ f0 c/\ f1 f2 c==> c/\ b1 c/\ b0 c/\ f0 f1 f2 cF * / ! c==> c~ c= c==> c/\ c/\ b1 c/\ b0 f0 f1 c/\ b0 c/\ f0 c/\ f1 f2 c==> c/\ b1 c/\ b0 c/\ f0 f1 f2 cF f3 * / ! c==> c~ c= c==> c/\ c/\ b1 c/\ b0 f0 f1 c/\ b0 c/\ f0 c/\ f1 f2 c==> c/\ b1 c/\ b0 c/\ f0 f1 f2 cF f3
- |- ((((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F))))) = ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))))
T c= c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) /\ (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> cIN ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f4 c= b0 cdistance c, ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f5 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f3 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f4 c= b1 cdistance c, b0 f5 c= b0 ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)) ==> F)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cF
- |- ((!x'. ((~ ((real_le (real_of_num (NUMERAL _0))) x')) \/ ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) = ((!x. (~ ((real_le (real_of_num (NUMERAL _0))) x))) \/ ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x)))
T c= ! c\/ c~ creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ ! c~ creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((!P. (!a. (((a = b) ==> (P a)) = ((a = b) ==> (P b))))) = T)
T c= ! ! c= c==> c= b1 f0 * b0 b1 c==> c= b1 f0 * b0 f0 cT
- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))), (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) |- ((~ ((sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (x , y)))) ==> ((sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (x , y))))
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1
- |- (T = (((~ (_2176279 = a)) \/ (P _2176279)) = ((P _2176279) \/ (~ (_2176279 = a)))))
T c= cT c= c\/ c~ c= f0 f1 * f2 f0 c\/ * f2 f0 c~ c= f0 f1
+ |- (((!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) ==> ((\v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) v3)) = ((\v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) v3))
T c= c==> ! ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b3 cdistance c, b2 b4 c= b2 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b3 cdistance c, b2 b4 c= b2 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b3 cdistance c, b2 b4 c= b2 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (a = b)), (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- ((~ F) ==> F)
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c==> c~ cF cF
+ |- ((((\x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))) x) ==> F) = T)
T c= c==> * / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0 f2 cF cT
+ (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))), ((P a) ==> F) |- F
T c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c==> c==> * f2 f0 cF cF
+ |- ((!a. (((a /\ F) ==> T) = (a ==> (F ==> T)))) = ((((T /\ F) ==> T) = (T ==> (F ==> T))) /\ (((F /\ F) ==> T) = (F ==> (F ==> T)))))
T c= ! c= c==> c/\ b0 cF cT c==> b0 c==> cF cT c/\ c= c==> c/\ cT cF cT c==> cT c==> cF cT c= c==> c/\ cF cF cT c==> cF c==> cF cT
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) /\ (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c/\ c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> cIN ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f4 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f5 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f4 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f5 c= b0 ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c= ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((!b. (!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ F)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> F)))))) = ((!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ T) ==> (b1 /\ (b2 /\ (T /\ F)))) = ((a /\ (b1 /\ (b2 /\ T))) ==> F))))) /\ (!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ F) ==> (b1 /\ (b2 /\ (F /\ F)))) = ((a /\ (b1 /\ (b2 /\ F))) ==> F)))))))
T c= ! ! ! ! c= c==> c/\ c/\ b3 c/\ b2 b1 b0 c/\ b2 c/\ b1 c/\ b0 cF c==> c/\ b3 c/\ b2 c/\ b1 b0 cF c/\ ! ! ! c= c==> c/\ c/\ b2 c/\ b1 b0 cT c/\ b1 c/\ b0 c/\ cT cF c==> c/\ b2 c/\ b1 c/\ b0 cT cF ! ! ! c= c==> c/\ c/\ b2 c/\ b1 b0 cF c/\ b1 c/\ b0 c/\ cF cF c==> c/\ b2 c/\ b1 c/\ b0 cF cF
- (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) |- ((((((((chi x12) x13) x14) x23) x24) x34) = chi11) = (((((((chi x12) x13) x14) x23) x24) x34) = chi11))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c= c= cchi f6 f5 f3 f4 f2 f1 f7 c= cchi f6 f5 f3 f4 f2 f1 f7
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) |- (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2))) /\ (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v3))) /\ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4)))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c/\ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f4
- (((x = a) /\ (~ (P x))) /\ (P a)) |- ((~ (P a)) ==> (P a))
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 c==> c~ * f2 f1 * f2 f1
- |- ((?r. (P r)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4
+ |- ((((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))) = ((\rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))))
T c= c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 * / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5
+ |- (((!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))))) ==> ((\v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))))) v1)) = ((\v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))))) v1))
T c= c==> ! ! ! ! c==> c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b5 cdistance c, b4 b6 c= b4 ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b5 cdistance c, b4 b6 c= b4 ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / ! ! ! c==> c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b5 cdistance c, b4 b6 c= b4 ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- (_2176581 = _2176583), (_2176580 = _2176582) |- ((((_2176580 IN _2176581) = (_2176582 IN _2176583)) ==> ((_2176582 IN _2176583) \/ (~ (_2176580 IN _2176581)))) = ((_2176582 IN _2176583) \/ (~ (_2176580 IN _2176581))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cIN f2 f0 cIN f3 f1 c\/ cIN f3 f1 c~ cIN f2 f0 c\/ cIN f3 f1 c~ cIN f2 f0
+ |- ((!a. ((((a /\ (F /\ F)) /\ F) ==> (F /\ (F /\ (F /\ T)))) = ((a /\ (F /\ (F /\ F))) ==> T))) = (((((T /\ (F /\ F)) /\ F) ==> (F /\ (F /\ (F /\ T)))) = ((T /\ (F /\ (F /\ F))) ==> T)) /\ ((((F /\ (F /\ F)) /\ F) ==> (F /\ (F /\ (F /\ T)))) = ((F /\ (F /\ (F /\ F))) ==> T))))
T c= ! c= c==> c/\ c/\ b0 c/\ cF cF cF c/\ cF c/\ cF c/\ cF cT c==> c/\ b0 c/\ cF c/\ cF cF cT c/\ c= c==> c/\ c/\ cT c/\ cF cF cF c/\ cF c/\ cF c/\ cF cT c==> c/\ cT c/\ cF c/\ cF cF cT c= c==> c/\ c/\ cF c/\ cF cF cF c/\ cF c/\ cF c/\ cF cT c==> c/\ cF c/\ cF c/\ cF cF cT
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) |- ((distance (w , v3)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c= cdistance c, f0 f3 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
- (_2176221 = _2176223), (_2176222 = _2176224) |- ((_2176222 = _2176224) /\ (((real_le _2176223) _2176224) \/ (~ ((real_le _2176221) _2176222))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
+ ((\x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))) x) |- (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))
T c==> * / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0 f2 c\/ c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c/\ c/\ c= f2 f0 c~ * f1 f2 * f1 f0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((?x. (P x)) /\ Q) = (?x. ((P x) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- (((distance (w , v2)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = ((distance (w , v2)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= c= cdistance c, f5 f2 csqrt creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f5 f2 csqrt creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0
- (~ F), (~ (a = b)), (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= f0 f1 c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c/\ c~ cF cF
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> cIN ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f4 c= b0 cdistance c, ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f5 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f3 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f4 c= b1 cdistance c, b0 f5 c= b0 ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0
- |- ((\v1. (!rr. ((~ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) ==> F))) v1)
T * / ! c==> c~ c==> cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 c= cdistance c, f0 f1 csqrt b1 c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b1 c= cdistance c, f0 f2 csqrt b1 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 b1 c= cdistance c, f0 f3 csqrt b1 c==> c/\ c= creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b1 c= cdistance c, f0 b0 csqrt b1 c==> cIN ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b2 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ c= b2 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b2 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b2 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> ! c==> cIN b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b3 cdistance c, b2 b0 c/\ c= b3 cdistance c, b2 f1 c/\ c= b3 cdistance c, b2 f2 c= b3 cdistance c, b2 f3 c= b2 ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 cF f4
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- (_2176596 = _2176598), (_2176597 = _2176599) |- ((_2176597 = _2176599) /\ ((_2176596 , _2176597) = (_2176598 , _2176599)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- ((((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))) ==> ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v))))))))))
T c= c==> c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1
- (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) |- ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) = (((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23))
T c==> c= f0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_pow cdistance c, f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f4 c= creal_pow cdistance c, f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f4
+ |- ((((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a))) ==> F)
T c==> c\/ c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c/\ c/\ c= f2 f0 c~ * f1 f2 * f1 f0 cF
+ ((\w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) w) |- (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)
T c==> * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 f14 c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 f14
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))) ==> ((\v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))) v4)) = ((\v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))) v4))
T c= c==> ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b1 b3 c= b1 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * / c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b1 b3 c= b1 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3 * / c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b1 b3 c= b1 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
- (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w) |- ((\w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) w)
T c==> c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 f14 * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 f14
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((distance (w , v1)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((a /\ b) ==> c) = (a ==> (b ==> c)))
T c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ |- ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))))
T c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) /\ (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c==> cIN ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f5 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0
- (((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) |- ((((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) /\ (((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)))
T c==> c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c/\ c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) |- (((_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((_2176517 = (distance (_2176516 , v1))) /\ ((_2176517 = (distance (_2176516 , v2))) /\ ((_2176517 = (distance (_2176516 , v3))) /\ (_2176517 = (distance (_2176516 , v4))))))) ==> (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f5 cdistance c, f4 f0 c/\ c= f5 cdistance c, f4 f1 c/\ c= f5 cdistance c, f4 f2 c= f5 cdistance c, f4 f3 c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))), ((~ (a = b)) ==> F), ((P b) ==> F) |- F
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c==> c==> c~ c= f0 f1 cF c==> c==> * f2 f1 cF cF
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) = ((distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)) = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((!v. ((v IN (v4 INSERT EMPTY)) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v))))) = ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))) /\ (!v. ((v IN EMPTY) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))
T c= ! c==> cIN b0 * * part cINSERT f0 part cEMPTY c= f1 cdistance c, ccircumcenter * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f0 part cEMPTY b0 c/\ c= f1 cdistance c, ccircumcenter * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f0 part cEMPTY f0 ! c==> cIN b0 part cEMPTY c= f1 cdistance c, ccircumcenter * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f0 part cEMPTY b0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
+ |- ((\w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))
T * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> F)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 cF
- ((\w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) w) |- (((((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w) ==> (?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w))) = (?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)))
T c==> * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 f14 c= c==> c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 f14 c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0
+ |- ((((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))))
T c= c==> c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (((x = a) /\ (~ (P x))) /\ (P a)) |- (F = F)
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 c= cF cF
- |- (((!b. (!P. (!a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)))) ==> ((\b. (!P. (!a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)))) b)) = ((\b. (!P. (!a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)))) b))
T c= c==> ! ! ! c==> c~ c= c==> c= b2 b0 * b1 b2 c==> c= b2 b0 * b1 b0 cF * / ! ! c==> c~ c= c==> c= b2 b0 * b1 b2 c==> c= b2 b0 * b1 b0 cF f0 * / ! ! c==> c~ c= c==> c= b2 b0 * b1 b2 c==> c= b2 b0 * b1 b0 cF f0
+ |- ((!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ T) ==> (b1 /\ (b2 /\ (T /\ T)))) = ((a /\ (b1 /\ (b2 /\ T))) ==> T))))) = ((!b1. (!a. ((((a /\ (b1 /\ T)) /\ T) ==> (b1 /\ (T /\ (T /\ T)))) = ((a /\ (b1 /\ (T /\ T))) ==> T)))) /\ (!b1. (!a. ((((a /\ (b1 /\ F)) /\ T) ==> (b1 /\ (F /\ (T /\ T)))) = ((a /\ (b1 /\ (F /\ T))) ==> T))))))
T c= ! ! ! c= c==> c/\ c/\ b2 c/\ b1 b0 cT c/\ b1 c/\ b0 c/\ cT cT c==> c/\ b2 c/\ b1 c/\ b0 cT cT c/\ ! ! c= c==> c/\ c/\ b1 c/\ b0 cT cT c/\ b0 c/\ cT c/\ cT cT c==> c/\ b1 c/\ b0 c/\ cT cT cT ! ! c= c==> c/\ c/\ b1 c/\ b0 cF cT c/\ b0 c/\ cF c/\ cT cT c==> c/\ b1 c/\ b0 c/\ cF cT cT
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) |- (((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) /\ ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F))
T c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c/\ c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF
+ |- (T = ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c= cT c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- (~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) |- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) /\ F)
T c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 c/\ c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) |- ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) = (((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12))
T c==> c= f0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c= creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 f5
- ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F), (((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) |- (((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) /\ ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F))
T c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c/\ c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF
- |- ((!rr. t) = t)
T c= ! f0 f0
- |- ((~ (_2176243 = _2176244)) \/ ((real_of_num _2176243) = (real_of_num _2176244)))
T c\/ c~ c= f0 f1 c= creal_of_num f0 creal_of_num f1
- |- ((_2176588 = _2176589) ==> ((BIT0 _2176588) = (BIT0 _2176589)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((!p'. ((~ (p' IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((!r. ((~ (r = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4)))))))) \/ (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) = ((!p. (~ (p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) \/ ((!r. ((~ (r = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4)))))))) \/ (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c= ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ ! c\/ c~ c= b1 cdistance c, f4 f0 c\/ c~ c= b1 cdistance c, f4 f1 c\/ c~ c= b1 cdistance c, f4 f2 c~ c= b1 cdistance c, f4 f3 c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ ! c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ ! c\/ c~ c= b0 cdistance c, f4 f0 c\/ c~ c= b0 cdistance c, f4 f1 c\/ c~ c= b0 cdistance c, f4 f2 c~ c= b0 cdistance c, f4 f3 c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) |- ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) = (((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24))
T c==> c= f0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 f4 c= creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 f4
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- (((((distance (w , v2)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((distance (w , v2)) = (distance (w , v2)))) ==> ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2)))) = ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= c==> c/\ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 cdistance c, f0 f1 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1
+ |- (((!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))))))) ==> ((\v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))))))) v1)) = ((\v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))))))) v1))
T c= c==> ! ! ! ! c==> c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b5 * / ! ! ! c==> c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b5 f0 * / ! ! ! c==> c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b5 f0
- ((\rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) rr) |- (((\rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) rr) /\ (?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)))
T c==> * / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 f6 c/\ * / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 f6 c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0
- |- ((?x'. ((x' = a) /\ (~ (P x)))) = ((?x. (x = a)) /\ (~ (P x))))
T c= c? / c/\ c= b0 f0 c~ * f1 f2 c/\ c? / c= b0 f0 c~ * f1 f2
+ |- ((!v. ((v IN (v3 INSERT (v4 INSERT EMPTY))) ==> (r = (distance (p , v))))) = ((r = (distance (p , v3))) /\ (!v. ((v IN (v4 INSERT EMPTY)) ==> (r = (distance (p , v)))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= f2 cdistance c, f3 b0 c/\ c= f2 cdistance c, f3 f0 ! c==> cIN b0 * * part cINSERT f1 part cEMPTY c= f2 cdistance c, f3 b0
+ (((x = a) /\ (~ (P x))) /\ (P a)) |- ((P a) ==> F)
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 c==> * f2 f1 cF
- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) /\ (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- ((!b1. (!a. ((((a /\ (b1 /\ T)) /\ T) ==> (b1 /\ (T /\ (T /\ T)))) = ((a /\ (b1 /\ (T /\ T))) ==> T)))) = ((!a. ((((a /\ (T /\ T)) /\ T) ==> (T /\ (T /\ (T /\ T)))) = ((a /\ (T /\ (T /\ T))) ==> T))) /\ (!a. ((((a /\ (F /\ T)) /\ T) ==> (F /\ (T /\ (T /\ T)))) = ((a /\ (F /\ (T /\ T))) ==> T)))))
T c= ! ! c= c==> c/\ c/\ b1 c/\ b0 cT cT c/\ b0 c/\ cT c/\ cT cT c==> c/\ b1 c/\ b0 c/\ cT cT cT c/\ ! c= c==> c/\ c/\ b0 c/\ cT cT cT c/\ cT c/\ cT c/\ cT cT c==> c/\ b0 c/\ cT c/\ cT cT cT ! c= c==> c/\ c/\ b0 c/\ cF cT cT c/\ cF c/\ cT c/\ cT cT c==> c/\ b0 c/\ cF c/\ cT cT cT
+ (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- (a = b)
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c= f0 f1
- (~ ((distance (w , v2)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((~ ((distance (w , v2)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((distance (w , v2)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c/\ c~ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!b1. (!a. ((((a /\ (b1 /\ T)) /\ F) ==> (b1 /\ (T /\ (F /\ F)))) = ((a /\ (b1 /\ (T /\ F))) ==> F)))) = ((!a. ((((a /\ (T /\ T)) /\ F) ==> (T /\ (T /\ (F /\ F)))) = ((a /\ (T /\ (T /\ F))) ==> F))) /\ (!a. ((((a /\ (F /\ T)) /\ F) ==> (F /\ (T /\ (F /\ F)))) = ((a /\ (F /\ (T /\ F))) ==> F)))))
T c= ! ! c= c==> c/\ c/\ b1 c/\ b0 cT cF c/\ b0 c/\ cT c/\ cF cF c==> c/\ b1 c/\ b0 c/\ cT cF cF c/\ ! c= c==> c/\ c/\ b0 c/\ cT cT cF c/\ cT c/\ cT c/\ cF cF c==> c/\ b0 c/\ cT c/\ cT cF cF ! c= c==> c/\ c/\ b0 c/\ cF cT cF c/\ cF c/\ cT c/\ cF cF c==> c/\ b0 c/\ cF c/\ cT cF cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) a)
T * / c==> c~ c= c==> c= b0 f0 * f1 b0 c==> c= b0 f0 * f1 f0 cF f2
- |- ((~ (_2176580 = _2176582)) \/ ((~ (_2176581 = _2176583)) \/ ((_2176582 IN _2176583) \/ (~ (_2176580 IN _2176581)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((!v. ((v IN (v4 INSERT EMPTY)) ==> (r = (distance (p , v))))) = ((r = (distance (p , v4))) /\ (!v. ((v IN EMPTY) ==> (r = (distance (p , v)))))))
T c= ! c==> cIN b0 * * part cINSERT f0 part cEMPTY c= f1 cdistance c, f2 b0 c/\ c= f1 cdistance c, f2 f0 ! c==> cIN b0 part cEMPTY c= f1 cdistance c, f2 b0
+ (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) |- ((chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) /\ (?chi44. (chi44 = ((((((chi x34) x24) x14) x23) x13) x12))))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c/\ c= f0 cchi f1 f2 f3 f4 f5 f6 c? / c= b0 cchi f1 f2 f3 f4 f5 f6
+ |- ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (!p. ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> (((real_pow ((dist3 p) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c= b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cvector_add c% b7 f0 cvector_add c% b8 f1 cvector_add c% b9 f2 c% b10 f3 c= creal_pow cdist3 b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b1 b2 b3 b4 b5 b6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cchi b6 b5 b3 b4 b2 b1 cchi b6 b2 b4 b3 b5 b1 cchi b1 b5 b4 b3 b2 b6 cchi b1 b2 b3 b4 b5 b6 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr))
T c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) = (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= c= f3 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c= f3 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1
+ |- ((F = t) = (~ t))
T c= c= cF f0 c~ f0
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2))) /\ (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v3))) /\ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4))))) = (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v1))) /\ (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2))) /\ (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v3))) /\ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4)))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c= c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3 c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f4 c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f5 c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3 c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f4 c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f5
- (_2176608 = _2176610), (_2176609 = _2176611) |- ((_2176608 = _2176610) /\ (((hull _2176608) _2176609) = ((hull _2176610) _2176611)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part chull f0 f2 * * part chull f1 f3
+ |- (((!P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) ==> ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P)) = ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P))
T c= c==> ! ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0 * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0
- |- ((!v4. (!v3. (!v2. (!v1. (!rr. ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))))))) = T)
T c= ! ! ! ! ! c==> cIN f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 b2 cNUMERAL cBIT0 cBIT1 c_0 b4 c= cdistance c, f0 b2 csqrt b4 c==> c/\ c= creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 b4 c= cdistance c, f0 b1 csqrt b4 c==> c/\ c= creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b4 c= cdistance c, f0 b0 csqrt b4 c==> c/\ c= creal_pow cdistance c, f0 b3 cNUMERAL cBIT0 cBIT1 c_0 b4 c= cdistance c, f0 b3 csqrt b4 c==> cIN ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c? / c/\ c= b5 cdistance c, ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c/\ c= b5 cdistance c, ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 c/\ c= b5 cdistance c, ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 c= b5 cdistance c, ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b0 c==> ! c==> cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c? / c/\ c= b6 cdistance c, b5 b3 c/\ c= b6 cdistance c, b5 b2 c/\ c= b6 cdistance c, b5 b1 c= b6 cdistance c, b5 b0 c= b5 ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= ccircumcenter * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cT
- |- ((\v3. (!v2. (!v1. (!rr. ((~ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) ==> F))))) v3)
T * / ! ! ! c==> c~ c==> cIN f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 b3 c= cdistance c, f0 b1 csqrt b3 c==> c/\ c= creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b3 c= cdistance c, f0 b0 csqrt b3 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b3 c= cdistance c, f0 f1 csqrt b3 c==> c/\ c= creal_pow cdistance c, f0 b2 cNUMERAL cBIT0 cBIT1 c_0 b3 c= cdistance c, f0 b2 csqrt b3 c==> cIN ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> c? / c/\ c= b4 cdistance c, ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b2 c/\ c= b4 cdistance c, ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b1 c/\ c= b4 cdistance c, ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b0 c= b4 cdistance c, ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f1 c==> ! c==> cIN b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> c? / c/\ c= b5 cdistance c, b4 b2 c/\ c= b5 cdistance c, b4 b1 c/\ c= b5 cdistance c, b4 b0 c= b5 cdistance c, b4 f1 c= b4 ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c= ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 cF f2
+ |- (((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F) = F)
T c= c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF cF
+ |- (((!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))))) ==> ((\v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))))) v3)) = ((\v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))))) v3))
T c= c==> ! ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b2 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 * / ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b2 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 f2 * / ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b2 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 f2
+ |- ((\rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))))
T * / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- (((distance (w , v1)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((distance (w , v1)) = (distance (w , v1))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c/\ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 cdistance c, f0 f1
+ |- ((!b1. (!a. ((((a /\ (b1 /\ T)) /\ F) ==> (b1 /\ (T /\ (F /\ T)))) = ((a /\ (b1 /\ (T /\ F))) ==> T)))) = ((!a. ((((a /\ (T /\ T)) /\ F) ==> (T /\ (T /\ (F /\ T)))) = ((a /\ (T /\ (T /\ F))) ==> T))) /\ (!a. ((((a /\ (F /\ T)) /\ F) ==> (F /\ (T /\ (F /\ T)))) = ((a /\ (F /\ (T /\ F))) ==> T)))))
T c= ! ! c= c==> c/\ c/\ b1 c/\ b0 cT cF c/\ b0 c/\ cT c/\ cF cT c==> c/\ b1 c/\ b0 c/\ cT cF cT c/\ ! c= c==> c/\ c/\ b0 c/\ cT cT cF c/\ cT c/\ cT c/\ cF cT c==> c/\ b0 c/\ cT c/\ cT cF cT ! c= c==> c/\ c/\ b0 c/\ cF cT cF c/\ cF c/\ cT c/\ cF cT c==> c/\ b0 c/\ cF c/\ cT cF cT
- (_2176581 = _2176583), (_2176580 = _2176582) |- ((_2176582 IN _2176583) \/ (~ (_2176580 IN _2176581)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f3 f1 c~ cIN f2 f0
- |- ((!r'. ((~ (r = (distance (p , v1)))) \/ ((~ (r' = (distance (p , v2)))) \/ ((~ (r' = (distance (p , v3)))) \/ (~ (r' = (distance (p , v4)))))))) = ((~ (r = (distance (p , v1)))) \/ (!r. ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4)))))))))
T c= ! c\/ c~ c= f0 cdistance c, f1 f2 c\/ c~ c= b0 cdistance c, f1 f3 c\/ c~ c= b0 cdistance c, f1 f4 c~ c= b0 cdistance c, f1 f5 c\/ c~ c= f0 cdistance c, f1 f2 ! c\/ c~ c= b0 cdistance c, f1 f3 c\/ c~ c= b0 cdistance c, f1 f4 c~ c= b0 cdistance c, f1 f5
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?r. t) = t)
T c= c? / f0 f0
+ |- (((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) = ((!x. ((x = a) ==> (P x))) = (P a)))
T c= c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c= ! c==> c= b0 f0 * f1 b0 * f1 f0
+ |- ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))
T c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4
- (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ (((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) |- ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) /\ ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))))))))
T c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f6 c==> c= creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 f7 c==> c= cCARD * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f7 f6 f5 f2 f8 f9 c==> c~ c= cdelta f7 f6 f5 f2 f8 f9 creal_of_num cNUMERAL c_0 c==> cIN f10 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c= creal_pow cdist3 f10 f0 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f1 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f4 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f3 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> cIN ccircumcenter * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f10
+ |- ((!b1. (!a. ((((a /\ (b1 /\ F)) /\ T) ==> (b1 /\ (F /\ (T /\ F)))) = ((a /\ (b1 /\ (F /\ T))) ==> F)))) = ((!a. ((((a /\ (T /\ F)) /\ T) ==> (T /\ (F /\ (T /\ F)))) = ((a /\ (T /\ (F /\ T))) ==> F))) /\ (!a. ((((a /\ (F /\ F)) /\ T) ==> (F /\ (F /\ (T /\ F)))) = ((a /\ (F /\ (F /\ T))) ==> F)))))
T c= ! ! c= c==> c/\ c/\ b1 c/\ b0 cF cT c/\ b0 c/\ cF c/\ cT cF c==> c/\ b1 c/\ b0 c/\ cF cT cF c/\ ! c= c==> c/\ c/\ b0 c/\ cT cF cT c/\ cT c/\ cF c/\ cT cF c==> c/\ b0 c/\ cT c/\ cF cT cF ! c= c==> c/\ c/\ b0 c/\ cF cF cT c/\ cF c/\ cF c/\ cT cF c==> c/\ b0 c/\ cF c/\ cF cT cF
- |- ((_2176600 = _2176601) ==> ((distance _2176600) = (distance _2176601)))
T c==> c= f0 f1 c= cdistance f0 cdistance f1
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) |- ((_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) \/ ((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((~ (_2176517 = (distance (_2176516 , v1)))) \/ ((~ (_2176517 = (distance (_2176516 , v2)))) \/ ((~ (_2176517 = (distance (_2176516 , v3)))) \/ (~ (_2176517 = (distance (_2176516 , v4)))))))))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f5 cdistance c, f4 f0 c\/ c~ c= f5 cdistance c, f4 f1 c\/ c~ c= f5 cdistance c, f4 f2 c~ c= f5 cdistance c, f4 f3
- |- ((~ (_2176221 = _2176223)) \/ ((~ (_2176222 = _2176224)) \/ (((real_le _2176223) _2176224) \/ (~ ((real_le _2176221) _2176222)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
- |- ((!b. (!P. (!a. (((a = b) ==> (P a)) = ((a = b) ==> (P b)))))) = (!b. (!P. (!a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)))))
T c= ! ! ! c= c==> c= b2 b0 * b1 b2 c==> c= b2 b0 * b1 b0 ! ! ! c==> c~ c= c==> c= b2 b0 * b1 b2 c==> c= b2 b0 * b1 b0 cF
+ |- (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f0 f1 f2 f3 f4 f5 c==> c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 c==> cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c= creal_pow cdist3 f6 f8 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f6 f9 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f6 f10 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f6 f7 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> cIN ccircumcenter * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= ccircumcenter * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY f6
+ |- ((!a. (((a /\ F) ==> F) = (a ==> (F ==> F)))) = ((((T /\ F) ==> F) = (T ==> (F ==> F))) /\ (((F /\ F) ==> F) = (F ==> (F ==> F)))))
T c= ! c= c==> c/\ b0 cF cF c==> b0 c==> cF cF c/\ c= c==> c/\ cT cF cF c==> cT c==> cF cF c= c==> c/\ cF cF cF c==> cF c==> cF cF
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v1)))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1
- ((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) |- ((~ F) ==> F)
T c==> c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c==> c~ cF cF
- (~ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4)))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) |- ((~ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4)))) /\ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4))))
T c==> c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f3 c= cdistance c, f0 f1 csqrt f3 c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c= cdistance c, f0 f2 csqrt f3 c/\ c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))))))))
T c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f6 c==> c= cCARD * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f6 f4 f2 f7 f8 f9 c==> c~ c= cdelta f6 f4 f2 f7 f8 f9 creal_of_num cNUMERAL c_0 c==> cIN f10 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c==> c= creal_pow cdist3 f10 f5 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f3 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f1 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f0 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c= ccircumcenter * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f10
+ |- ((\c. (!b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))) c)
T * / ! ! c==> c~ c= c==> c/\ b2 b1 b0 c==> b2 c==> b1 b0 cF f0
- |- ((~ (_2176596 = _2176598)) \/ ((~ (_2176597 = _2176599)) \/ ((_2176596 , _2176597) = (_2176598 , _2176599))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- ((((((((chi x12) x24) x23) x14) x13) x34) = chi22) ==> ((((((((chi x12) x13) x14) x23) x24) x34) = chi11) ==> ((((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34) ==> ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) ==> ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) ==> ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))))))))))))
T c==> c= cchi f0 f1 f2 f3 f4 f5 f6 c==> c= cchi f0 f4 f3 f2 f1 f5 f7 c==> c= creal_pow cdistance c, f8 f9 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f10 f9 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c= creal_pow cdistance c, f10 f8 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f11 f9 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c= creal_pow cdistance c, f11 f8 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= creal_pow cdistance c, f11 f10 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c= cCARD * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f0 f4 f3 f2 f1 f5 c==> c~ c= cdelta f0 f4 f3 f2 f1 f5 creal_of_num cNUMERAL c_0 c==> cIN f12 * * part chull part caffine * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> c= creal_pow cdist3 f12 f10 cNUMERAL cBIT0 cBIT1 c_0 f13 c==> c= creal_pow cdist3 f12 f8 cNUMERAL cBIT0 cBIT1 c_0 f13 c==> c= creal_pow cdist3 f12 f9 cNUMERAL cBIT0 cBIT1 c_0 f13 c==> c= creal_pow cdist3 f12 f11 cNUMERAL cBIT0 cBIT1 c_0 f13 c==> cIN ccircumcenter * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY * * part chull part caffine * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c= ccircumcenter * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f12
- (P a), (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((~ F) ==> F)
T c==> * f0 f1 c==> c/\ c\/ c~ c= f1 f2 * f0 f1 c/\ c= f1 f2 c~ * f0 f2 c==> c~ cF cF
- |- (((((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F))))) ==> (((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))))) = (((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F))))))
T c= c==> c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF
+ (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- (((real_gt a) (real_of_num (NUMERAL _0))) = ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a) = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 c= creal_gt f0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- (_2176609 = _2176611) |- ((_2176608 = _2176610) ==> (((hull _2176608) _2176609) = ((hull _2176610) _2176611)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- (F = F)
T c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c= cF cF
+ ((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) |- ((\x. ((~ (x = a)) \/ (P x))) _2176279)
T c==> c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 * / c\/ c~ c= b0 f0 * f1 b0 f2
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((~ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v1)))) ==> ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v1))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c~ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))), ((\r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) r) |- (((\r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) r) /\ F)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> * / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 f6 c/\ * / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 f6 cF
+ |- ((((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (?x. (((x = a) /\ (~ (P x))) /\ (P a)))) = (?x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))))
T c= c\/ c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c? / c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0 c? / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) |- ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4)))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3
+ ((\chi11. (chi11 = ((((((chi x12) x13) x14) x23) x24) x34))) chi11) |- (chi11 = ((((((chi x12) x13) x14) x23) x24) x34))
T c==> * / c= b0 cchi f0 f1 f2 f3 f4 f5 f6 c= f6 cchi f0 f1 f2 f3 f4 f5
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v1))) /\ (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2))) /\ (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v3))) /\ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4)))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3 c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f4 c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f5
- ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))), (((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F))))) |- ((((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F))))) /\ ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))))
T c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c/\ c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) |- ((\r. ((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (((~ (r = (distance (_2176516 , v1)))) \/ ((~ (r = (distance (_2176516 , v2)))) \/ ((~ (r = (distance (_2176516 , v3)))) \/ (~ (r = (distance (_2176516 , v4))))))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) _2176517)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c\/ c~ c= b0 cdistance c, f4 f0 c\/ c~ c= b0 cdistance c, f4 f1 c\/ c~ c= b0 cdistance c, f4 f2 c~ c= b0 cdistance c, f4 f3 c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5
- |- ((((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F))))) ==> (((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F))))))
T c==> c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF
- (_2176221 = _2176223) |- ((_2176221 = _2176223) /\ ((~ (_2176222 = _2176224)) \/ (((real_le _2176223) _2176224) \/ (~ ((real_le _2176221) _2176222)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((~ (_2176593 = _2176595)) \/ ((~ (_2176592 = _2176594)) \/ (((real_pow _2176592) _2176593) = ((real_pow _2176594) _2176595))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= creal_pow f2 f0 creal_pow f3 f1
- (_2176221 = _2176223) |- ((_2176222 = _2176224) ==> (((real_le _2176223) _2176224) \/ (~ ((real_le _2176221) _2176222))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
+ |- ((chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) ==> (?chi44. (chi44 = ((((((chi x34) x24) x14) x23) x13) x12))))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c? / c= b0 cchi f1 f2 f3 f4 f5 f6
- (x24 = ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) |- ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) = (((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23))
T c==> c= f0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 f4 c= creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 f4
- (((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) |- ((((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) /\ (((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)))
T c==> c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c/\ c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF
+ (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- (a = b)
T c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c= f0 f1
+ |- ((!a. ((((a /\ (T /\ T)) /\ F) ==> (T /\ (T /\ (F /\ F)))) = ((a /\ (T /\ (T /\ F))) ==> F))) = (((((T /\ (T /\ T)) /\ F) ==> (T /\ (T /\ (F /\ F)))) = ((T /\ (T /\ (T /\ F))) ==> F)) /\ ((((F /\ (T /\ T)) /\ F) ==> (T /\ (T /\ (F /\ F)))) = ((F /\ (T /\ (T /\ F))) ==> F))))
T c= ! c= c==> c/\ c/\ b0 c/\ cT cT cF c/\ cT c/\ cT c/\ cF cF c==> c/\ b0 c/\ cT c/\ cT cF cF c/\ c= c==> c/\ c/\ cT c/\ cT cT cF c/\ cT c/\ cT c/\ cF cF c==> c/\ cT c/\ cT c/\ cT cF cF c= c==> c/\ c/\ cF c/\ cT cT cF c/\ cT c/\ cT c/\ cF cF c==> c/\ cF c/\ cT c/\ cT cF cF
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- (((((distance (w , v1)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((distance (w , v1)) = (distance (w , v1)))) ==> ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v1)))) = ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v1))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c= c==> c/\ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 cdistance c, f0 f1 c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1
- ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) |- ((((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F))
T c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF
- |- ((\v2. (!v1. (!rr. ((~ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) ==> F)))) v2)
T * / ! ! c==> c~ c==> cIN f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b2 c= cdistance c, f0 b0 csqrt b2 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b2 c= cdistance c, f0 f1 csqrt b2 c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b2 c= cdistance c, f0 f2 csqrt b2 c==> c/\ c= creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 b2 c= cdistance c, f0 b1 csqrt b2 c==> cIN ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c? / c/\ c= b3 cdistance c, ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c/\ c= b3 cdistance c, ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c= b3 cdistance c, ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c= b3 cdistance c, ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> ! c==> cIN b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c? / c/\ c= b4 cdistance c, b3 b1 c/\ c= b4 cdistance c, b3 b0 c/\ c= b4 cdistance c, b3 f1 c= b4 cdistance c, b3 f2 c= b3 ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cF f3
+ |- ((!b. ((F ==> b) ==> (F = (F /\ b)))) = (((F ==> T) ==> (F = (F /\ T))) /\ ((F ==> F) ==> (F = (F /\ F)))))
T c= ! c==> c==> cF b0 c= cF c/\ cF b0 c/\ c==> c==> cF cT c= cF c/\ cF cT c==> c==> cF cF c= cF c/\ cF cF
- |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- ((?r'. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r' = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r' = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r' = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) = ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ (?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))))
T c= c? / c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4
- |- ((_2176609 = _2176611) ==> ((~ (_2176608 = _2176610)) \/ (((hull _2176608) _2176609) = ((hull _2176610) _2176611))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- ((~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)) = (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= c~ c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c~ c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
+ (~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) |- ((((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) \/ (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))))
T c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 c\/ c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1
- |- (((~ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) ==> F) = ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))
T c= c==> c~ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f3 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f4 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f1 csqrt f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 cF c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f3 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f4 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f1 csqrt f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((w = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (w = w))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 f4
+ |- ((!a. ((((a /\ (F /\ T)) /\ F) ==> (F /\ (T /\ (F /\ T)))) = ((a /\ (F /\ (T /\ F))) ==> T))) = (((((T /\ (F /\ T)) /\ F) ==> (F /\ (T /\ (F /\ T)))) = ((T /\ (F /\ (T /\ F))) ==> T)) /\ ((((F /\ (F /\ T)) /\ F) ==> (F /\ (T /\ (F /\ T)))) = ((F /\ (F /\ (T /\ F))) ==> T))))
T c= ! c= c==> c/\ c/\ b0 c/\ cF cT cF c/\ cF c/\ cT c/\ cF cT c==> c/\ b0 c/\ cF c/\ cT cF cT c/\ c= c==> c/\ c/\ cT c/\ cF cT cF c/\ cF c/\ cT c/\ cF cT c==> c/\ cT c/\ cF c/\ cT cF cT c= c==> c/\ c/\ cF c/\ cF cT cF c/\ cF c/\ cT c/\ cF cT c==> c/\ cF c/\ cF c/\ cT cF cT
- |- ((_2176286 = _2176287) ==> ((P _2176287) \/ (~ (P _2176286))))
T c==> c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ |- ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) = ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) /\ ((distance (x , y)) = (sqrt r))))
T c= c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2
+ |- (!v1. (!v2. (!v3. (!v4. ((((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))) /\ (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) /\ ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))))))))
T c==> c/\ c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) ==> (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))
T c==> c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
- (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ |- (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))))
T c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f4 f5 f6 f7 f8 f9 c==> c~ c= cdelta f4 f5 f6 f7 f8 f9 creal_of_num cNUMERAL c_0 c==> cIN f10 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= creal_pow cdist3 f10 f1 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f2 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f3 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f0 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f10
+ (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((P a) ==> F)
T c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c==> * f2 f0 cF
+ |- ((!a. ((((a /\ (T /\ T)) /\ F) ==> (T /\ (T /\ (F /\ T)))) = ((a /\ (T /\ (T /\ F))) ==> T))) = (((((T /\ (T /\ T)) /\ F) ==> (T /\ (T /\ (F /\ T)))) = ((T /\ (T /\ (T /\ F))) ==> T)) /\ ((((F /\ (T /\ T)) /\ F) ==> (T /\ (T /\ (F /\ T)))) = ((F /\ (T /\ (T /\ F))) ==> T))))
T c= ! c= c==> c/\ c/\ b0 c/\ cT cT cF c/\ cT c/\ cT c/\ cF cT c==> c/\ b0 c/\ cT c/\ cT cF cT c/\ c= c==> c/\ c/\ cT c/\ cT cT cF c/\ cT c/\ cT c/\ cF cT c==> c/\ cT c/\ cT c/\ cT cF cT c= c==> c/\ c/\ cF c/\ cT cT cF c/\ cT c/\ cT c/\ cF cT c==> c/\ cF c/\ cT c/\ cT cF cT
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((~ (((real_lt (real_of_num (NUMERAL _0))) a) ==> (~ (a = (real_of_num (NUMERAL _0)))))) ==> F)
T c==> c~ c==> creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= f0 creal_of_num cNUMERAL c_0 cF
- (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) |- ((((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34) = (((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c= c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f1 c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f1
- |- ((!rr. ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) = T)
T c= ! c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c= cdistance c, f0 f2 csqrt b0 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 b0 c= cdistance c, f0 f3 csqrt b0 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 b0 c= cdistance c, f0 f4 csqrt b0 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 c= cdistance c, f0 f1 csqrt b0 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b1 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b1 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b1 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b2 cdistance c, b1 f1 c/\ c= b2 cdistance c, b1 f2 c/\ c= b2 cdistance c, b1 f3 c= b2 cdistance c, b1 f4 c= b1 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 cT
+ |- ((\d. (!b. (!b2. (!b1. (!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)))))) d)
T * / ! ! ! ! c==> c~ c= c==> c/\ c/\ b4 c/\ b3 b2 b1 c/\ b3 c/\ b2 c/\ b1 b0 c==> c/\ b4 c/\ b3 c/\ b2 b1 b0 cF f0
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((\b. (!P. (!a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)))) b)
T * / ! ! c==> c~ c= c==> c= b2 b0 * b1 b2 c==> c= b2 b0 * b1 b0 cF f0
- |- ((!r. ((P r) \/ Q)) = ((!r. (P r)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- |- (!rr. (((\rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) rr) ==> (?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr))))
T c==> * / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 f6 c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) = ((distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)) = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c= cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1
+ |- (?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w))
T c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0
+ (~ (a = b)), (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- (~ (b = b))
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c~ c= f1 f1
+ |- ((\v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v))))))))) v4)
T * / c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= b1 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY b2 f3
- (~ (P b)), (P a), (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((~ (P b)) /\ (P b))
T c==> c~ * f0 f1 c==> * f0 f2 c==> c/\ c\/ c~ c= f2 f1 * f0 f2 c/\ c= f2 f1 c~ * f0 f1 c/\ c~ * f0 f1 * f0 f1
+ |- ((!a. ((((a /\ (T /\ T)) /\ T) ==> (T /\ (T /\ (T /\ F)))) = ((a /\ (T /\ (T /\ T))) ==> F))) = (((((T /\ (T /\ T)) /\ T) ==> (T /\ (T /\ (T /\ F)))) = ((T /\ (T /\ (T /\ T))) ==> F)) /\ ((((F /\ (T /\ T)) /\ T) ==> (T /\ (T /\ (T /\ F)))) = ((F /\ (T /\ (T /\ T))) ==> F))))
T c= ! c= c==> c/\ c/\ b0 c/\ cT cT cT c/\ cT c/\ cT c/\ cT cF c==> c/\ b0 c/\ cT c/\ cT cT cF c/\ c= c==> c/\ c/\ cT c/\ cT cT cT c/\ cT c/\ cT c/\ cT cF c==> c/\ cT c/\ cT c/\ cT cT cF c= c==> c/\ c/\ cF c/\ cT cT cT c/\ cT c/\ cT c/\ cT cF c==> c/\ cF c/\ cT c/\ cT cT cF
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- F
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- |- ((~ (_2176584 = _2176585)) \/ ((sqrt _2176584) = (sqrt _2176585)))
T c\/ c~ c= f0 f1 c= csqrt f0 csqrt f1
+ ((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) |- (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) /\ F)
T c==> c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c/\ c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 cF
+ (P a), (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- F
T c==> * f0 f1 c==> c/\ c\/ c~ c= f1 f2 * f0 f1 c/\ c= f1 f2 c~ * f0 f2 cF
+ (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) |- (((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) /\ ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F))
T c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c/\ c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F), (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- (T = (!c. (!b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))))
T c= cT ! ! ! c==> c~ c= c==> c/\ b2 b1 b0 c==> b2 c==> b1 b0 cF
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((~ ((distance (w , v2)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((distance (w , v2)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c~ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) ==> ((\a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) a)) = ((\a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) a))
T c= c==> ! c==> c~ c= c==> c/\ b0 f0 f1 c==> b0 c==> f0 f1 cF * / c==> c~ c= c==> c/\ b0 f0 f1 c==> b0 c==> f0 f1 cF f2 * / c==> c~ c= c==> c/\ b0 f0 f1 c==> b0 c==> f0 f1 cF f2
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- ((distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)) = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3)))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))), ((P b) ==> F) |- F
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c==> c==> * f2 f1 cF cF
- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))), (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))), (~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) |- ((~ F) ==> F)
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c~ cF cF
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) = (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= c= f3 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f4 c= f3 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f4
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) = (((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
- (((x = a) /\ (~ (P x))) /\ (P a)) |- ((P a) = (P a))
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 c= * f2 f1 * f2 f1
+ (~ (a = b)), (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- ((~ (a = b)) /\ F)
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c/\ c~ c= f0 f1 cF
- ((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) |- ((~ (P a)) ==> (P a))
T c==> c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c==> c~ * f1 f0 * f1 f0
+ (((((((chi x12) x24) x23) x14) x13) x34) = chi22) |- ((((((((chi x12) x24) x23) x14) x13) x34) = chi22) /\ ((((((((chi x12) x13) x14) x23) x24) x34) = chi11) ==> ((((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34) ==> ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) ==> ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) ==> ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))))))))))))
T c==> c= cchi f0 f1 f2 f3 f4 f5 f6 c/\ c= cchi f0 f1 f2 f3 f4 f5 f6 c==> c= cchi f0 f4 f3 f2 f1 f5 f7 c==> c= creal_pow cdistance c, f8 f9 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f10 f9 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c= creal_pow cdistance c, f10 f8 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f11 f9 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c= creal_pow cdistance c, f11 f8 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= creal_pow cdistance c, f11 f10 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c= cCARD * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f0 f4 f3 f2 f1 f5 c==> c~ c= cdelta f0 f4 f3 f2 f1 f5 creal_of_num cNUMERAL c_0 c==> cIN f12 * * part chull part caffine * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> c= creal_pow cdist3 f12 f10 cNUMERAL cBIT0 cBIT1 c_0 f13 c==> c= creal_pow cdist3 f12 f8 cNUMERAL cBIT0 cBIT1 c_0 f13 c==> c= creal_pow cdist3 f12 f9 cNUMERAL cBIT0 cBIT1 c_0 f13 c==> c= creal_pow cdist3 f12 f11 cNUMERAL cBIT0 cBIT1 c_0 f13 c==> cIN ccircumcenter * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY * * part chull part caffine * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c= ccircumcenter * * part cINSERT f11 * * part cINSERT f10 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f12
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) |- ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) = (((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c= c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f3 c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f3
+ (((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) |- ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) /\ (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))))))
T c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f2 f5 f6 f7 f8 f9 c==> c~ c= cdelta f2 f5 f6 f7 f8 f9 creal_of_num cNUMERAL c_0 c==> cIN f10 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c= creal_pow cdist3 f10 f1 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f3 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f4 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f0 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f10
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- (((distance (w , v3)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = ((distance (w , v3)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= c= cdistance c, f5 f3 csqrt creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f5 f3 csqrt creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((b = b) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ (chi11 = ((((((chi x12) x13) x14) x23) x24) x34)), (chi22 = ((((((chi x12) x24) x23) x14) x13) x34)), (chi33 = ((((((chi x34) x13) x23) x14) x24) x12)), (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)), (x12 = ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))), (x13 = ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))), (x14 = ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0))))), (x23 = ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))), (x24 = ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0))))), (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) |- (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (!p. ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> ((((real_pow ((dist3 p) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((((real_pow ((dist3 p) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ (((real_pow ((dist3 p) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr)))))) /\ (!p. ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> (((real_pow ((dist3 p) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr))))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c==> c= f7 cchi f1 f5 f4 f3 f2 f6 c==> c= f8 cchi f6 f2 f4 f3 f5 f1 c==> c= f9 cchi f6 f5 f3 f4 f2 f1 c==> c= f1 creal_pow cdistance c, f10 f11 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f2 creal_pow cdistance c, f10 f12 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f3 creal_pow cdistance c, f10 f13 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f4 creal_pow cdistance c, f11 f12 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f5 creal_pow cdistance c, f11 f13 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f6 creal_pow cdistance c, f12 f13 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c/\ c= cCARD * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c/\ c~ ccoplanar_alt * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY ! c==> c= b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13 c/\ c= creal_pow cdist3 b0 f11 cNUMERAL cBIT0 cBIT1 c_0 f14 c/\ c= creal_pow cdist3 b0 f12 cNUMERAL cBIT0 cBIT1 c_0 f14 c= creal_pow cdist3 b0 f13 cNUMERAL cBIT0 cBIT1 c_0 f14 ! c==> c= b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13 c= creal_pow cdist3 b0 f10 cNUMERAL cBIT0 cBIT1 c_0 f14 c/\ cIN ccircumcenter * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY b1 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c= ccircumcenter * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13
- (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ F), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((~ F) /\ F)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cF c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ cF cF
+ |- ((\s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x)))))) s)
T * / c= ! c==> cIN b1 * * part cINSERT f0 b0 * f1 b1 c/\ * f1 f0 ! c==> cIN b1 b0 * f1 b1 f2
+ |- ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0
+ |- (((!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))))) ==> ((\v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))))) v2)) = ((\v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))))) v2))
T c= c==> ! ! ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 c= b3 ccircumcenter * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 c= b3 ccircumcenter * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 c= b3 ccircumcenter * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
+ |- (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) ==> F)
T c==> c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 cF
+ ((\x12. (x12 = ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) x12) |- (x12 = ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))
T c==> * / c= b0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= f2 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ F) ==> (b1 /\ (b2 /\ (F /\ F)))) = ((a /\ (b1 /\ (b2 /\ F))) ==> F))))) = ((!b1. (!a. ((((a /\ (b1 /\ T)) /\ F) ==> (b1 /\ (T /\ (F /\ F)))) = ((a /\ (b1 /\ (T /\ F))) ==> F)))) /\ (!b1. (!a. ((((a /\ (b1 /\ F)) /\ F) ==> (b1 /\ (F /\ (F /\ F)))) = ((a /\ (b1 /\ (F /\ F))) ==> F))))))
T c= ! ! ! c= c==> c/\ c/\ b2 c/\ b1 b0 cF c/\ b1 c/\ b0 c/\ cF cF c==> c/\ b2 c/\ b1 c/\ b0 cF cF c/\ ! ! c= c==> c/\ c/\ b1 c/\ b0 cT cF c/\ b0 c/\ cT c/\ cF cF c==> c/\ b1 c/\ b0 c/\ cT cF cF ! ! c= c==> c/\ c/\ b1 c/\ b0 cF cF c/\ b0 c/\ cF c/\ cF cF c==> c/\ b1 c/\ b0 c/\ cF cF cF
- |- ((((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) = ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))
T c= c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
- |- ((!P. ((!x. ((x = a) ==> (P x))) = (P a))) = T)
T c= ! c= ! c==> c= b1 f0 * b0 b1 * b0 f0 cT
- |- ((((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w) ==> (?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)))
T c==> c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 f14 c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (T ==> (?chi44. (chi44 = ((((((chi x34) x24) x14) x23) x13) x12))))
T c==> cT c? / c= b0 cchi f0 f1 f2 f3 f4 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!v. ((v IN (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))) ==> (r = (distance (p , v))))) = ((r = (distance (p , v2))) /\ (!v. ((v IN (v3 INSERT (v4 INSERT EMPTY))) ==> (r = (distance (p , v)))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c/\ c= f3 cdistance c, f4 f0 ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0
+ |- (((!a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x))))))) ==> ((\a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x))))))) a)) = ((\a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x))))))) a))
T c= c==> ! ! c= ! c==> cIN b2 * * part cINSERT b0 b1 * f0 b2 c/\ * f0 b0 ! c==> cIN b2 b1 * f0 b2 * / ! c= ! c==> cIN b2 * * part cINSERT b0 b1 * f0 b2 c/\ * f0 b0 ! c==> cIN b2 b1 * f0 b2 f1 * / ! c= ! c==> cIN b2 * * part cINSERT b0 b1 * f0 b2 c/\ * f0 b0 ! c==> cIN b2 b1 * f0 b2 f1
- (~ F), ((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c/\ c~ cF cF
- |- ((~ (_2176602 = _2176603)) \/ ((circumcenter _2176602) = (circumcenter _2176603)))
T c\/ c~ c= f0 f1 c= ccircumcenter f0 ccircumcenter f1
- |- ((_2176580 = _2176582) ==> ((~ (_2176581 = _2176583)) \/ ((_2176582 IN _2176583) \/ (~ (_2176580 IN _2176581)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= cIN ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (_2176590 = _2176591) |- ((_2176590 = _2176591) /\ ((NUMERAL _2176590) = (NUMERAL _2176591)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- ((\b. ((a ==> b) ==> (a = (a /\ b)))) b)
T * / c==> c==> f0 b0 c= f0 c/\ f0 b0 f1
+ |- ((T ==> (?x34. (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0))))))) = (?x34. (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c==> cT c? / c= b0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c? / c= b0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
- ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))), (((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F))))) |- (((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) /\ ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))))
T c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c/\ c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF
- (~ F), (((x = a) /\ (~ (P x))) /\ (P a)) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 c/\ c~ cF cF
+ |- ((\a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x))))))) a)
T * / ! c= ! c==> cIN b2 * * part cINSERT b0 b1 * f0 b2 c/\ * f0 b0 ! c==> cIN b2 b1 * f0 b2 f1
- (_2176586 = _2176587) |- ((_2176586 = _2176587) /\ ((BIT1 _2176586) = (BIT1 _2176587)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ (w = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((~ (w = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (w = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\P. ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) P)
T * / c==> c~ c= ! c==> c= b1 f0 * b0 b1 * b0 f0 cF f1
+ |- ((\P. (!a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x)))))))) P)
T * / ! ! c= ! c==> cIN b3 * * part cINSERT b1 b2 * b0 b3 c/\ * b0 b1 ! c==> cIN b3 b2 * b0 b3 f0
- (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) |- ((((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) /\ (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))
T c==> c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c/\ c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
+ |- ((!b. (!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ T)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> T)))))) = ((!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ T) ==> (b1 /\ (b2 /\ (T /\ T)))) = ((a /\ (b1 /\ (b2 /\ T))) ==> T))))) /\ (!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ F) ==> (b1 /\ (b2 /\ (F /\ T)))) = ((a /\ (b1 /\ (b2 /\ F))) ==> T)))))))
T c= ! ! ! ! c= c==> c/\ c/\ b3 c/\ b2 b1 b0 c/\ b2 c/\ b1 c/\ b0 cT c==> c/\ b3 c/\ b2 c/\ b1 b0 cT c/\ ! ! ! c= c==> c/\ c/\ b2 c/\ b1 b0 cT c/\ b1 c/\ b0 c/\ cT cT c==> c/\ b2 c/\ b1 c/\ b0 cT cT ! ! ! c= c==> c/\ c/\ b2 c/\ b1 b0 cF c/\ b1 c/\ b0 c/\ cF cT c==> c/\ b2 c/\ b1 c/\ b0 cF cT
- |- ((~ (_2176590 = _2176591)) \/ ((NUMERAL _2176590) = (NUMERAL _2176591)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) |- ((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (((~ (_2176517 = (distance (_2176516 , v1)))) \/ ((~ (_2176517 = (distance (_2176516 , v2)))) \/ ((~ (_2176517 = (distance (_2176516 , v3)))) \/ (~ (_2176517 = (distance (_2176516 , v4))))))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c\/ c~ c= f5 cdistance c, f4 f0 c\/ c~ c= f5 cdistance c, f4 f1 c\/ c~ c= f5 cdistance c, f4 f2 c~ c= f5 cdistance c, f4 f3 c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((_2176604 = _2176606) ==> ((~ (_2176605 = _2176607)) \/ ((_2176604 INSERT _2176605) = (_2176606 INSERT _2176607))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_2176605 = _2176607), (_2176604 = _2176606) |- ((_2176605 = _2176607) /\ ((_2176604 INSERT _2176605) = (_2176606 INSERT _2176607)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
+ (~ (a = b)), (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((b = b) ==> F)
T c==> c~ c= f0 f1 c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c==> c= f1 f1 cF
+ |- (((!c. (!b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))) ==> ((\c. (!b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))) c)) = ((\c. (!b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))) c))
T c= c==> ! ! ! c==> c~ c= c==> c/\ b2 b1 b0 c==> b2 c==> b1 b0 cF * / ! ! c==> c~ c= c==> c/\ b2 b1 b0 c==> b2 c==> b1 b0 cF f0 * / ! ! c==> c~ c= c==> c/\ b2 b1 b0 c==> b2 c==> b1 b0 cF f0
+ |- (?chi44. (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)))
T c? / c= b0 cchi f0 f1 f2 f3 f4 f5
+ ((\x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))) x) |- (((((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a))) ==> F) = F)
T c==> * / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0 f2 c= c==> c\/ c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c/\ c/\ c= f2 f0 c~ * f1 f2 * f1 f0 cF cF
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w) |- ((((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w) /\ (?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)))
T c==> c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 f14 c/\ c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 f14 c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0
+ |- ((a ==> b) ==> (a = (a /\ b)))
T c==> c==> f0 f1 c= f0 c/\ f0 f1
+ |- ((((((((chi x34) x13) x23) x14) x24) x12) = chi33) ==> ((((((((chi x12) x24) x23) x14) x13) x34) = chi22) ==> ((((((((chi x12) x13) x14) x23) x24) x34) = chi11) ==> ((((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34) ==> ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) ==> ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) ==> ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))))))))))))))
T c==> c= cchi f0 f1 f2 f3 f4 f5 f6 c==> c= cchi f5 f4 f2 f3 f1 f0 f7 c==> c= cchi f5 f1 f3 f2 f4 f0 f8 c==> c= creal_pow cdistance c, f9 f10 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c= creal_pow cdistance c, f11 f10 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= creal_pow cdistance c, f11 f9 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f12 f10 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c= creal_pow cdistance c, f12 f9 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c= creal_pow cdistance c, f12 f11 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= cCARD * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f5 f1 f3 f2 f4 f0 c==> c~ c= cdelta f5 f1 f3 f2 f4 f0 creal_of_num cNUMERAL c_0 c==> cIN f13 * * part chull part caffine * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c= creal_pow cdist3 f13 f11 cNUMERAL cBIT0 cBIT1 c_0 f14 c==> c= creal_pow cdist3 f13 f9 cNUMERAL cBIT0 cBIT1 c_0 f14 c==> c= creal_pow cdist3 f13 f10 cNUMERAL cBIT0 cBIT1 c_0 f14 c==> c= creal_pow cdist3 f13 f12 cNUMERAL cBIT0 cBIT1 c_0 f14 c==> cIN ccircumcenter * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY * * part chull part caffine * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= ccircumcenter * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY f13
+ (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- ((~ (a = b)) ==> F)
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c==> c~ c= f0 f1 cF
- ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) |- (((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) /\ ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))))
T c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c/\ c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF
- ((\w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) w) |- (((\w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) w) /\ (?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)))
T c==> * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 f14 c/\ * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 f14 c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
- (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) a)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ |- ((!a. ((((a /\ (F /\ F)) /\ F) ==> (F /\ (F /\ (F /\ F)))) = ((a /\ (F /\ (F /\ F))) ==> F))) = (((((T /\ (F /\ F)) /\ F) ==> (F /\ (F /\ (F /\ F)))) = ((T /\ (F /\ (F /\ F))) ==> F)) /\ ((((F /\ (F /\ F)) /\ F) ==> (F /\ (F /\ (F /\ F)))) = ((F /\ (F /\ (F /\ F))) ==> F))))
T c= ! c= c==> c/\ c/\ b0 c/\ cF cF cF c/\ cF c/\ cF c/\ cF cF c==> c/\ b0 c/\ cF c/\ cF cF cF c/\ c= c==> c/\ c/\ cT c/\ cF cF cF c/\ cF c/\ cF c/\ cF cF c==> c/\ cT c/\ cF c/\ cF cF cF c= c==> c/\ c/\ cF c/\ cF cF cF c/\ cF c/\ cF c/\ cF cF c==> c/\ cF c/\ cF c/\ cF cF cF
+ |- ((((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% ((((((chi x12) x13) x14) x23) x24) x34)) v1)) ((vector_add ((% ((((((chi x12) x24) x23) x14) x13) x34)) v2)) ((vector_add ((% ((((((chi x34) x13) x23) x14) x24) x12)) v3)) ((% ((((((chi x34) x24) x14) x23) x13) x12)) v4))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) = ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) /\ (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% ((((((chi x12) x13) x14) x23) x24) x34)) v1)) ((vector_add ((% ((((((chi x12) x24) x23) x14) x13) x34)) v2)) ((vector_add ((% ((((((chi x34) x13) x23) x14) x24) x12)) v3)) ((% ((((((chi x34) x24) x14) x23) x13) x12)) v4))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) = ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) = ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) /\ (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% ((((((chi x12) x13) x14) x23) x24) x34)) v1)) ((vector_add ((% ((((((chi x12) x24) x23) x14) x13) x34)) v2)) ((vector_add ((% ((((((chi x34) x13) x23) x14) x24) x12)) v3)) ((% ((((((chi x34) x24) x14) x23) x13) x12)) v4))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c= c==> c==> c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 cIN c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% cchi f0 f1 f2 f3 f4 f5 f6 cvector_add c% cchi f0 f4 f3 f2 f1 f5 f7 cvector_add c% cchi f5 f1 f3 f2 f4 f0 f8 c% cchi f5 f4 f2 f3 f1 f0 f9 * * part chull part caffine * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c= c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 c/\ c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 cIN c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% cchi f0 f1 f2 f3 f4 f5 f6 cvector_add c% cchi f0 f4 f3 f2 f1 f5 f7 cvector_add c% cchi f5 f1 f3 f2 f4 f0 f8 c% cchi f5 f4 f2 f3 f1 f0 f9 * * part chull part caffine * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c= c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 c/\ c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 cIN c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% cchi f0 f1 f2 f3 f4 f5 f6 cvector_add c% cchi f0 f4 f3 f2 f1 f5 f7 cvector_add c% cchi f5 f1 f3 f2 f4 f0 f8 c% cchi f5 f4 f2 f3 f1 f0 f9 * * part chull part caffine * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) |- (((!p. (!r. ((~ (p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (((~ (r = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4))))))) \/ (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))) ==> ((\p. (!r. ((~ (p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (((~ (r = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4))))))) \/ (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))) _2176516)) = ((\p. (!r. ((~ (p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (((~ (r = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4))))))) \/ (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))) _2176516))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c\/ c~ c= b1 cdistance c, b0 f0 c\/ c~ c= b1 cdistance c, b0 f1 c\/ c~ c= b1 cdistance c, b0 f2 c~ c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c\/ c~ c= b1 cdistance c, b0 f0 c\/ c~ c= b1 cdistance c, b0 f1 c\/ c~ c= b1 cdistance c, b0 f2 c~ c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 * / ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c\/ c~ c= b1 cdistance c, b0 f0 c\/ c~ c= b1 cdistance c, b0 f1 c\/ c~ c= b1 cdistance c, b0 f2 c~ c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ |- ((x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) = ((\x34. (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))) x34))
T c= c= f0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 * / c= b0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> ((((real_pow ((dist3 p) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))) /\ ((((real_pow ((dist3 p) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))) /\ (((real_pow ((dist3 p) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c= c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 c/\ c= creal_pow cdist3 f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b0 b1 b2 b3 b4 b5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 c/\ c= creal_pow cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b0 b1 b2 b3 b4 b5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 c= creal_pow cdist3 f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b0 b1 b2 b3 b4 b5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cT
- (_2176584 = _2176585) |- ((_2176584 = _2176585) /\ ((sqrt _2176584) = (sqrt _2176585)))
T c==> c= f0 f1 c/\ c= f0 f1 c= csqrt f0 csqrt f1
- |- ((_2176590 = _2176591) ==> ((NUMERAL _2176590) = (NUMERAL _2176591)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))), ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f4 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f5 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f3 c/\ c= b1 cdistance c, b0 f4 c= b1 cdistance c, b0 f5 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0
- (P a), (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((~ (P b)) ==> (P b))
T c==> * f0 f1 c==> c/\ c\/ c~ c= f1 f2 * f0 f1 c/\ c= f1 f2 c~ * f0 f2 c==> c~ * f0 f2 * f0 f2
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) = ((distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)) = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
+ (~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))), ((((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) ==> F), ((((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) ==> F) |- F
T c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 c==> c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 cF c==> c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 cF cF
- ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F), (((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) |- (((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) /\ ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F))
T c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c/\ c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF
+ (((x = a) /\ (~ (P x))) /\ (P a)) |- ((((x = a) /\ (~ (P x))) /\ (P a)) /\ F)
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 c/\ c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 cF
- |- ((~ (_2176600 = _2176601)) \/ ((distance _2176600) = (distance _2176601)))
T c\/ c~ c= f0 f1 c= cdistance f0 cdistance f1
- |- ((((\rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) rr) ==> (?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr))) = T)
T c= c==> * / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 f6 c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 cT
- |- (((!x. (((\w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) x) ==> (?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)))) ==> ((?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) ==> (?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)))) = ((?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) ==> (?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w))))
T c= c==> ! c==> * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b1 b0 c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b1 c==> c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 c==> c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0
+ |- (((!b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))) ==> ((\b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))) b)) = ((\b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))) b))
T c= c==> ! ! c==> c~ c= c==> c/\ b1 b0 f0 c==> b1 c==> b0 f0 cF * / ! c==> c~ c= c==> c/\ b1 b0 f0 c==> b1 c==> b0 f0 cF f1 * / ! c==> c~ c= c==> c/\ b1 b0 f0 c==> b1 c==> b0 f0 cF f1
+ ((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) |- ((P _2176279) \/ (~ (_2176279 = a)))
T c==> c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c\/ * f1 f2 c~ c= f2 f0
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))) = (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= c= f3 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6 c= f3 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f6
- |- (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))
T c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
- |- ((~ (_2176604 = _2176606)) \/ ((~ (_2176605 = _2176607)) \/ ((_2176604 INSERT _2176605) = (_2176606 INSERT _2176607))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) |- (((distance (w , v4)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((distance (w , v4)) = (distance (w , v4))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c/\ c= cdistance c, f0 f3 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f3 cdistance c, f0 f3
+ |- ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) ==> ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) ==> ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))))))))))
T c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= creal_pow cdistance c, f5 f1 cNUMERAL cBIT0 cBIT1 c_0 f6 c==> c= creal_pow cdistance c, f5 f3 cNUMERAL cBIT0 cBIT1 c_0 f7 c==> c= creal_pow cdistance c, f5 f0 cNUMERAL cBIT0 cBIT1 c_0 f8 c==> c= cCARD * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f8 f7 f6 f4 f2 f9 c==> c~ c= cdelta f8 f7 f6 f4 f2 f9 creal_of_num cNUMERAL c_0 c==> cIN f10 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c==> c= creal_pow cdist3 f10 f0 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f3 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f1 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f5 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> cIN ccircumcenter * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c= ccircumcenter * * part cINSERT f5 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f10
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) |- ((~ ((distance (w , v4)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((distance (w , v4)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c~ c= cdistance c, f0 f3 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f3 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ ((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) |- ((P a) ==> F)
T c==> c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c==> * f1 f0 cF
+ |- (T = (!d. (!b. (!b2. (!b1. (!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)))))))
T c= cT ! ! ! ! ! c==> c~ c= c==> c/\ c/\ b4 c/\ b3 b2 b1 c/\ b3 c/\ b2 c/\ b1 b0 c==> c/\ b4 c/\ b3 c/\ b2 b1 b0 cF
- (((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F))))) |- ((((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F))))) /\ (((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F))))))
T c==> c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c/\ c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF
+ |- ((!a. ((((a /\ (T /\ F)) /\ F) ==> (T /\ (F /\ (F /\ T)))) = ((a /\ (T /\ (F /\ F))) ==> T))) = (((((T /\ (T /\ F)) /\ F) ==> (T /\ (F /\ (F /\ T)))) = ((T /\ (T /\ (F /\ F))) ==> T)) /\ ((((F /\ (T /\ F)) /\ F) ==> (T /\ (F /\ (F /\ T)))) = ((F /\ (T /\ (F /\ F))) ==> T))))
T c= ! c= c==> c/\ c/\ b0 c/\ cT cF cF c/\ cT c/\ cF c/\ cF cT c==> c/\ b0 c/\ cT c/\ cF cF cT c/\ c= c==> c/\ c/\ cT c/\ cT cF cF c/\ cT c/\ cF c/\ cF cT c==> c/\ cT c/\ cT c/\ cF cF cT c= c==> c/\ c/\ cF c/\ cT cF cF c/\ cT c/\ cF c/\ cF cT c==> c/\ cF c/\ cT c/\ cF cF cT
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ |- (((!a. (!b. ((a ==> b) ==> (a = (a /\ b))))) ==> ((\a. (!b. ((a ==> b) ==> (a = (a /\ b))))) a)) = ((\a. (!b. ((a ==> b) ==> (a = (a /\ b))))) a))
T c= c==> ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 * / ! c==> c==> b0 b1 c= b0 c/\ b0 b1 f0 * / ! c==> c==> b0 b1 c= b0 c/\ b0 b1 f0
- (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- (F = F)
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c= cF cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (T ==> (?x34. (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cT c? / c= b0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
- (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) |- ((~ ((real_le (real_of_num (NUMERAL _0))) (distance (x , y)))) ==> ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))
T c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1
+ |- ((!a. ((((a /\ (F /\ T)) /\ F) ==> (F /\ (T /\ (F /\ F)))) = ((a /\ (F /\ (T /\ F))) ==> F))) = (((((T /\ (F /\ T)) /\ F) ==> (F /\ (T /\ (F /\ F)))) = ((T /\ (F /\ (T /\ F))) ==> F)) /\ ((((F /\ (F /\ T)) /\ F) ==> (F /\ (T /\ (F /\ F)))) = ((F /\ (F /\ (T /\ F))) ==> F))))
T c= ! c= c==> c/\ c/\ b0 c/\ cF cT cF c/\ cF c/\ cT c/\ cF cF c==> c/\ b0 c/\ cF c/\ cT cF cF c/\ c= c==> c/\ c/\ cT c/\ cF cT cF c/\ cF c/\ cT c/\ cF cF c==> c/\ cT c/\ cF c/\ cT cF cF c= c==> c/\ c/\ cF c/\ cF cT cF c/\ cF c/\ cT c/\ cF cF c==> c/\ cF c/\ cF c/\ cT cF cF
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f4 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f5 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f3 c/\ c= b1 cdistance c, b0 f4 c= b1 cdistance c, b0 f5 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0
+ ((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))))
T c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f4 f5 f6 f7 f8 f9 c==> c~ c= cdelta f4 f5 f6 f7 f8 f9 creal_of_num cNUMERAL c_0 c==> cIN f10 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= creal_pow cdist3 f10 f1 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f2 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f3 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f0 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f10
- |- ((((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) ==> (((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)))
T c==> c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF
+ (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) a) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F), (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- (((distance (w , v1)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = ((distance (w , v1)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= c= cdistance c, f5 f1 csqrt creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f5 f1 csqrt creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0
+ (~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) |- ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) /\ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))
T c==> c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 c/\ c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 c==> cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c= creal_pow cdist3 f6 f8 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f6 f9 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f6 f10 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f6 f7 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> cIN ccircumcenter * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= ccircumcenter * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY f6
+ |- ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) = ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) /\ (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% ((((((chi x12) x13) x14) x23) x24) x34)) v1)) ((vector_add ((% ((((((chi x12) x24) x23) x14) x13) x34)) v2)) ((vector_add ((% ((((((chi x34) x13) x23) x14) x24) x12)) v3)) ((% ((((((chi x34) x24) x14) x23) x13) x12)) v4))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c= c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 c/\ c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 cIN c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% cchi f0 f1 f2 f3 f4 f5 f6 cvector_add c% cchi f0 f4 f3 f2 f1 f5 f7 cvector_add c% cchi f5 f1 f3 f2 f4 f0 f8 c% cchi f5 f4 f2 f3 f1 f0 f9 * * part chull part caffine * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY
+ |- ((((((((chi x12) x13) x14) x23) x24) x34) = chi11) ==> ((((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34) ==> ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) ==> ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) ==> ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))))))))))))
T c==> c= cchi f0 f1 f2 f3 f4 f5 f6 c==> c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f9 f8 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= creal_pow cdistance c, f9 f7 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c= creal_pow cdistance c, f10 f8 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f10 f7 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c= creal_pow cdistance c, f10 f9 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c= cCARD * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f0 f1 f2 f3 f4 f5 c==> c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 c==> cIN f11 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c==> c= creal_pow cdist3 f11 f9 cNUMERAL cBIT0 cBIT1 c_0 f12 c==> c= creal_pow cdist3 f11 f7 cNUMERAL cBIT0 cBIT1 c_0 f12 c==> c= creal_pow cdist3 f11 f8 cNUMERAL cBIT0 cBIT1 c_0 f12 c==> c= creal_pow cdist3 f11 f10 cNUMERAL cBIT0 cBIT1 c_0 f12 c==> cIN ccircumcenter * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c= ccircumcenter * * part cINSERT f10 * * part cINSERT f9 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f11
- (_2176286 = _2176287) |- ((_2176286 = _2176287) /\ ((P _2176287) \/ (~ (P _2176286))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
- (_2176593 = _2176595), (_2176592 = _2176594) |- ((_2176592 = _2176594) /\ (((real_pow _2176592) _2176593) = ((real_pow _2176594) _2176595)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= creal_pow f2 f0 creal_pow f3 f1
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= cIN f0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) |- (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) /\ ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f0 f1 f2 f3 f4 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta f0 f1 f2 f3 f4 f5 c==> c~ c= cdelta f0 f1 f2 f3 f4 f5 creal_of_num cNUMERAL c_0 c==> cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c= creal_pow cdist3 f6 f8 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f6 f9 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f6 f10 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f6 f7 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> cIN ccircumcenter * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= ccircumcenter * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY f6
+ (~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) |- ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) /\ F)
T c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 c/\ c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF
+ (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- (((a = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) a) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 c= c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
- ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F), (((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) |- ((((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) /\ ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F))
T c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c/\ c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF
- |- ((!r'. ((~ (r' = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4)))))))) = ((!r. (~ (r = (distance (p , v1))))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4))))))))
T c= ! c\/ c~ c= b0 cdistance c, f0 f1 c\/ c~ c= f2 cdistance c, f0 f3 c\/ c~ c= f2 cdistance c, f0 f4 c~ c= f2 cdistance c, f0 f5 c\/ ! c~ c= b0 cdistance c, f0 f1 c\/ c~ c= f2 cdistance c, f0 f3 c\/ c~ c= f2 cdistance c, f0 f4 c~ c= f2 cdistance c, f0 f5
- |- ((((a = b) ==> (P a)) = ((a = b) ==> (P b))) = T)
T c= c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cT
+ |- ((\v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))))) v1)
T * / ! ! ! c==> c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b5 cdistance c, b4 b6 c= b4 ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ |- (((!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v))))))))))) ==> ((\v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v))))))))))) v2)) = ((\v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v))))))))))) v2))
T c= c==> ! ! ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b3 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b4 * / ! ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b3 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b4 f1 * / ! ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b3 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b4 f1
- ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F), (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) |- ((((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) /\ ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))
T c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c/\ c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))), (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) |- ((~ ((distance (x , y)) = (sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((distance (x , y)) = (sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) /\ F)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= f5 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= f5 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= f5 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= f5 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f6 c= cdistance c, f4 f0 csqrt f6 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f6 c= cdistance c, f4 f1 csqrt f6 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f6 c= cdistance c, f4 f2 csqrt f6 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f6 c= cdistance c, f4 f3 csqrt f6 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ c= f5 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= f5 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= f5 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= f5 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 cF
+ (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) a) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) |- ((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((~ (_2176517 = (distance (_2176516 , v1)))) \/ ((~ (_2176517 = (distance (_2176516 , v2)))) \/ ((~ (_2176517 = (distance (_2176516 , v3)))) \/ ((~ (_2176517 = (distance (_2176516 , v4)))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f5 cdistance c, f4 f0 c\/ c~ c= f5 cdistance c, f4 f1 c\/ c~ c= f5 cdistance c, f4 f2 c\/ c~ c= f5 cdistance c, f4 f3 c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) |- ((((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F))
T c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF
- ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- (((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0
- (_2176602 = _2176603) |- ((_2176602 = _2176603) /\ ((circumcenter _2176602) = (circumcenter _2176603)))
T c==> c= f0 f1 c/\ c= f0 f1 c= ccircumcenter f0 ccircumcenter f1
+ |- ((((((((chi x34) x24) x14) x23) x13) x12) = chi44) ==> ((((((((chi x34) x13) x23) x14) x24) x12) = chi33) ==> ((((((((chi x12) x24) x23) x14) x13) x34) = chi22) ==> ((((((((chi x12) x13) x14) x23) x24) x34) = chi11) ==> ((((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34) ==> ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) ==> ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) ==> ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) /\ ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) /\ (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) /\ ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ (((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr)))) /\ (((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))))
T c==> c= cchi f0 f1 f2 f3 f4 f5 f6 c==> c= cchi f0 f4 f3 f2 f1 f5 f7 c==> c= cchi f5 f1 f3 f2 f4 f0 f8 c==> c= cchi f5 f4 f2 f3 f1 f0 f9 c==> c= creal_pow cdistance c, f10 f11 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c= creal_pow cdistance c, f12 f11 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c= creal_pow cdistance c, f12 f10 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c= creal_pow cdistance c, f13 f11 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f13 f10 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= creal_pow cdistance c, f13 f12 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c/\ c/\ c= cCARD * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta f5 f4 f2 f3 f1 f0 c/\ c~ c= cdelta f5 f4 f2 f3 f1 f0 creal_of_num cNUMERAL c_0 cIN f14 * * part chull part caffine * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c/\ c= creal_pow cdist3 f14 f12 cNUMERAL cBIT0 cBIT1 c_0 f15 c/\ c= creal_pow cdist3 f14 f10 cNUMERAL cBIT0 cBIT1 c_0 f15 c= creal_pow cdist3 f14 f11 cNUMERAL cBIT0 cBIT1 c_0 f15 c= creal_pow cdist3 f14 f13 cNUMERAL cBIT0 cBIT1 c_0 f15 c/\ cIN ccircumcenter * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY * * part chull part caffine * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY b1 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c= ccircumcenter * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY f14
- |- ((_2176586 = _2176587) ==> ((BIT1 _2176586) = (BIT1 _2176587)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- ((!v3. (!v2. (!v1. (!rr. ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))))) = T)
T c= ! ! ! ! c==> cIN f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 b3 c= cdistance c, f0 b1 csqrt b3 c==> c/\ c= creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b3 c= cdistance c, f0 b0 csqrt b3 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b3 c= cdistance c, f0 f1 csqrt b3 c==> c/\ c= creal_pow cdistance c, f0 b2 cNUMERAL cBIT0 cBIT1 c_0 b3 c= cdistance c, f0 b2 csqrt b3 c==> cIN ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> c? / c/\ c= b4 cdistance c, ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b2 c/\ c= b4 cdistance c, ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b1 c/\ c= b4 cdistance c, ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b0 c= b4 cdistance c, ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f1 c==> ! c==> cIN b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> c? / c/\ c= b5 cdistance c, b4 b2 c/\ c= b5 cdistance c, b4 b1 c/\ c= b5 cdistance c, b4 b0 c= b5 cdistance c, b4 f1 c= b4 ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c= ccircumcenter * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 cT
+ (~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))), ((((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) ==> F) |- F
T c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 c==> c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 cF cF
+ |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (P b), (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- ((~ F) ==> F)
T c==> * f0 f1 c==> c/\ c/\ c= f2 f1 c~ * f0 f2 c\/ c~ c= f2 f1 * f0 f1 c==> c~ cF cF
+ |- ((x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (?x34. (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= f0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c? / c= b0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0
+ (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- ((((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) /\ F)
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c/\ c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 cF
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
+ |- ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (!p. ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> (((real_pow ((dist3 p) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c= b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cvector_add c% b7 f0 cvector_add c% b8 f1 cvector_add c% b9 f2 c% b10 f3 c= creal_pow cdist3 b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b1 b2 b3 b4 b5 b6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cchi b6 b5 b3 b4 b2 b1 cchi b6 b2 b4 b3 b5 b1 cchi b1 b5 b4 b3 b2 b6 cchi b1 b2 b3 b4 b5 b6 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_lt (real_of_num (NUMERAL _0))) a) = (((real_lt (real_of_num (NUMERAL _0))) a) /\ (~ (a = (real_of_num (NUMERAL _0))))))
T c= creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= f0 creal_of_num cNUMERAL c_0
+ (chi11 = ((((((chi x12) x13) x14) x23) x24) x34)), (chi22 = ((((((chi x12) x24) x23) x14) x13) x34)), (chi33 = ((((((chi x34) x13) x23) x14) x24) x12)), (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)), (x12 = ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))), (x13 = ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))), (x14 = ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0))))), (x23 = ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))), (x24 = ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0))))), (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) |- (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((real_lt (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((real_pow ((dist3 ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((((real_pow ((dist3 ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ (((real_pow ((dist3 ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr)))) /\ (((real_pow ((dist3 ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c==> c= f7 cchi f1 f5 f4 f3 f2 f6 c==> c= f8 cchi f6 f2 f4 f3 f5 f1 c==> c= f9 cchi f6 f5 f3 f4 f2 f1 c==> c= f1 creal_pow cdistance c, f10 f11 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f2 creal_pow cdistance c, f10 f12 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f3 creal_pow cdistance c, f10 f13 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f4 creal_pow cdistance c, f11 f12 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f5 creal_pow cdistance c, f11 f13 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f6 creal_pow cdistance c, f12 f13 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c/\ c= cCARD * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f10 f11 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f10 f12 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f10 f13 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f11 f12 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f11 f13 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f12 f13 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_pow cdist3 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13 f11 cNUMERAL cBIT0 cBIT1 c_0 f14 c/\ c= creal_pow cdist3 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13 f12 cNUMERAL cBIT0 cBIT1 c_0 f14 c= creal_pow cdist3 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13 f13 cNUMERAL cBIT0 cBIT1 c_0 f14 c= creal_pow cdist3 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13 f10 cNUMERAL cBIT0 cBIT1 c_0 f14 c/\ cIN ccircumcenter * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY b1 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c= ccircumcenter * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13
- |- ((!v1. (!rr. ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))) = T)
T c= ! ! c==> cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 c= cdistance c, f0 f1 csqrt b1 c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b1 c= cdistance c, f0 f2 csqrt b1 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 b1 c= cdistance c, f0 f3 csqrt b1 c==> c/\ c= creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b1 c= cdistance c, f0 b0 csqrt b1 c==> cIN ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b2 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ c= b2 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b2 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b2 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> ! c==> cIN b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b3 cdistance c, b2 b0 c/\ c= b3 cdistance c, b2 f1 c/\ c= b3 cdistance c, b2 f2 c= b3 cdistance c, b2 f3 c= b2 ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccircumcenter * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 cT
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) |- (!p. ((~ (p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((!r. ((~ (r = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4)))))))) \/ (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ ! c\/ c~ c= b1 cdistance c, b0 f0 c\/ c~ c= b1 cdistance c, b0 f1 c\/ c~ c= b1 cdistance c, b0 f2 c~ c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) |- ((((((((chi x34) x13) x23) x14) x24) x12) = chi33) = (((((((chi x34) x13) x23) x14) x24) x12) = chi33))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c= c= cchi f1 f5 f4 f3 f2 f6 f7 c= cchi f1 f5 f4 f3 f2 f6 f7
+ ((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) |- (((!x. ((~ (x = a)) \/ (P x))) ==> ((\x. ((~ (x = a)) \/ (P x))) _2176279)) = ((\x. ((~ (x = a)) \/ (P x))) _2176279))
T c==> c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c= c==> ! c\/ c~ c= b0 f0 * f1 b0 * / c\/ c~ c= b0 f0 * f1 b0 f2 * / c\/ c~ c= b0 f0 * f1 b0 f2
+ (((x = a) /\ (~ (P x))) /\ (P a)) |- (~ (P x))
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 c~ * f2 f0
+ |- ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c= creal_pow cdist3 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdist3 f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdist3 f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0
- (~ ((distance (w , v4)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) |- ((~ ((distance (w , v4)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((distance (w , v4)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c= cdistance c, f0 f2 csqrt f3 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f3 c= cdistance c, f0 f1 csqrt f3 c/\ c~ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!v. ((v IN (v3 INSERT (v4 INSERT EMPTY))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v))))) = ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (!v. ((v IN (v4 INSERT EMPTY)) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= f2 cdistance c, ccircumcenter * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c/\ c= f2 cdistance c, ccircumcenter * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 ! c==> cIN b0 * * part cINSERT f1 part cEMPTY c= f2 cdistance c, ccircumcenter * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> cIN ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f4 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f5 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f4 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f5 c= b0 ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c= ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f0
+ |- ((\v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))))) v2)
T * / ! ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 c= b3 ccircumcenter * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
+ |- ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (!p. ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> ((((real_pow ((dist3 p) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))) /\ ((((real_pow ((dist3 p) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))) /\ (((real_pow ((dist3 p) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c= b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cvector_add c% b7 f0 cvector_add c% b8 f1 cvector_add c% b9 f2 c% b10 f3 c/\ c= creal_pow cdist3 b0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b1 b2 b3 b4 b5 b6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 c/\ c= creal_pow cdist3 b0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b1 b2 b3 b4 b5 b6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 c= creal_pow cdist3 b0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b1 b2 b3 b4 b5 b6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cchi b6 b5 b3 b4 b2 b1 cchi b6 b2 b4 b3 b5 b1 cchi b1 b5 b4 b3 b2 b6 cchi b1 b2 b3 b4 b5 b6 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((~ (p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (!r. (((~ (r = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4))))))) \/ (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) = (!r. ((~ (p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (((~ (r = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4))))))) \/ (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))
T c= c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c\/ c\/ c~ c= b0 cdistance c, f0 f1 c\/ c~ c= b0 cdistance c, f0 f2 c\/ c~ c= b0 cdistance c, f0 f3 c~ c= b0 cdistance c, f0 f4 c= f0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c\/ c~ c= b0 cdistance c, f0 f1 c\/ c~ c= b0 cdistance c, f0 f2 c\/ c~ c= b0 cdistance c, f0 f3 c~ c= b0 cdistance c, f0 f4 c= f0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((distance (w , v2)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) |- (((distance (w , v4)) = (distance (w , v4))) = (((distance (w , v4)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((distance (w , v4)) = (distance (w , v4)))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c= c= cdistance c, f0 f3 cdistance c, f0 f3 c/\ c= cdistance c, f0 f3 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f3 cdistance c, f0 f3
+ |- ((!b1. (!a. ((((a /\ (b1 /\ F)) /\ F) ==> (b1 /\ (F /\ (F /\ T)))) = ((a /\ (b1 /\ (F /\ F))) ==> T)))) = ((!a. ((((a /\ (T /\ F)) /\ F) ==> (T /\ (F /\ (F /\ T)))) = ((a /\ (T /\ (F /\ F))) ==> T))) /\ (!a. ((((a /\ (F /\ F)) /\ F) ==> (F /\ (F /\ (F /\ T)))) = ((a /\ (F /\ (F /\ F))) ==> T)))))
T c= ! ! c= c==> c/\ c/\ b1 c/\ b0 cF cF c/\ b0 c/\ cF c/\ cF cT c==> c/\ b1 c/\ b0 c/\ cF cF cT c/\ ! c= c==> c/\ c/\ b0 c/\ cT cF cF c/\ cT c/\ cF c/\ cF cT c==> c/\ b0 c/\ cT c/\ cF cF cT ! c= c==> c/\ c/\ b0 c/\ cF cF cF c/\ cF c/\ cF c/\ cF cT c==> c/\ b0 c/\ cF c/\ cF cF cT
- (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) |- ((((((((chi x12) x24) x23) x14) x13) x34) = chi22) = (((((((chi x12) x24) x23) x14) x13) x34) = chi22))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c= c= cchi f6 f2 f4 f3 f5 f1 f7 c= cchi f6 f2 f4 f3 f5 f1 f7
- (_2176580 = _2176582) |- ((_2176580 = _2176582) /\ ((~ (_2176581 = _2176583)) \/ ((_2176582 IN _2176583) \/ (~ (_2176580 IN _2176581)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ |- ((\w. (((dist3 v) w) = (distance (v , w)))) w)
T * / c= cdist3 f0 b0 cdistance c, f0 b0 f1
+ |- (((a = a) ==> (P a)) = (P a))
T c= c==> c= f0 f0 * f1 f0 * f1 f0
- |- (((!a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) ==> ((\a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) a)) = ((\a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) a))
T c= c==> ! c==> c~ c= c==> c= b0 f0 * f1 b0 c==> c= b0 f0 * f1 f0 cF * / c==> c~ c= c==> c= b0 f0 * f1 b0 c==> c= b0 f0 * f1 f0 cF f2 * / c==> c~ c= c==> c= b0 f0 * f1 b0 c==> c= b0 f0 * f1 f0 cF f2
- (~ F), (~ (a = b)), (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= f0 f1 c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c/\ c~ cF cF
+ |- ((!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ T) ==> (b1 /\ (b2 /\ (T /\ F)))) = ((a /\ (b1 /\ (b2 /\ T))) ==> F))))) = ((!b1. (!a. ((((a /\ (b1 /\ T)) /\ T) ==> (b1 /\ (T /\ (T /\ F)))) = ((a /\ (b1 /\ (T /\ T))) ==> F)))) /\ (!b1. (!a. ((((a /\ (b1 /\ F)) /\ T) ==> (b1 /\ (F /\ (T /\ F)))) = ((a /\ (b1 /\ (F /\ T))) ==> F))))))
T c= ! ! ! c= c==> c/\ c/\ b2 c/\ b1 b0 cT c/\ b1 c/\ b0 c/\ cT cF c==> c/\ b2 c/\ b1 c/\ b0 cT cF c/\ ! ! c= c==> c/\ c/\ b1 c/\ b0 cT cT c/\ b0 c/\ cT c/\ cT cF c==> c/\ b1 c/\ b0 c/\ cT cT cF ! ! c= c==> c/\ c/\ b1 c/\ b0 cF cT c/\ b0 c/\ cF c/\ cT cF c==> c/\ b1 c/\ b0 c/\ cF cT cF
+ |- ((!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))) = ((r = (distance (p , v1))) /\ (!v. ((v IN (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))) ==> (r = (distance (p , v)))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, f5 b0 c/\ c= f4 cdistance c, f5 f0 ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, f5 b0
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((((\r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) r) ==> F) = T)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> * / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 f6 cF cT
+ |- (!x. (((\x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))) x) ==> F))
T c==> * / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0 f2 cF
- (~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) |- ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) /\ F)
T c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 c/\ c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
- (~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) |- (((real_le (real_of_num (NUMERAL _0))) (distance (_2176208 , _2176209))) = ((real_le (real_of_num (NUMERAL _0))) (distance (_2176208 , _2176209))))
T c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= creal_le creal_of_num cNUMERAL c_0 cdistance c, f3 f4 creal_le creal_of_num cNUMERAL c_0 cdistance c, f3 f4
+ (~ (a = b)), (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- ((b = b) ==> F)
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c==> c= f1 f1 cF
+ ((((x = a) /\ (~ (P x))) /\ (P a)) ==> F), (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a))) |- F
T c==> c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 cF c==> c\/ c/\ ! c\/ c~ c= b0 f1 * f2 b0 c~ * f2 f1 c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 cF
- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))), (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))), (~ ((distance (x , y)) = (sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))))) |- ((~ ((distance (x , y)) = (sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((distance (x , y)) = (sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ ((~ (coplanar_alt (x1 INSERT (x2 INSERT (x3 INSERT (x4 INSERT EMPTY)))))) = ((real_lt (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (x1 , x2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x3 , x4))) (NUMERAL (BIT0 (BIT1 _0))))))) |- (((real_lt (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (x1 , x2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x3 , x4))) (NUMERAL (BIT0 (BIT1 _0)))))) = (~ (coplanar_alt (x1 INSERT (x2 INSERT (x3 INSERT (x4 INSERT EMPTY)))))))
T c==> c= c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((!a. ((((a /\ (F /\ F)) /\ T) ==> (F /\ (F /\ (T /\ T)))) = ((a /\ (F /\ (F /\ T))) ==> T))) = (((((T /\ (F /\ F)) /\ T) ==> (F /\ (F /\ (T /\ T)))) = ((T /\ (F /\ (F /\ T))) ==> T)) /\ ((((F /\ (F /\ F)) /\ T) ==> (F /\ (F /\ (T /\ T)))) = ((F /\ (F /\ (F /\ T))) ==> T))))
T c= ! c= c==> c/\ c/\ b0 c/\ cF cF cT c/\ cF c/\ cF c/\ cT cT c==> c/\ b0 c/\ cF c/\ cF cT cT c/\ c= c==> c/\ c/\ cT c/\ cF cF cT c/\ cF c/\ cF c/\ cT cT c==> c/\ cT c/\ cF c/\ cF cT cT c= c==> c/\ c/\ cF c/\ cF cF cT c/\ cF c/\ cF c/\ cT cT c==> c/\ cF c/\ cF c/\ cF cT cT
+ |- (((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))) = ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))
T c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c= creal_pow cdist3 f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdist3 f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdist3 f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((!b. ((T ==> b) ==> (T = (T /\ b)))) = (((T ==> T) ==> (T = (T /\ T))) /\ ((T ==> F) ==> (T = (T /\ F)))))
T c= ! c==> c==> cT b0 c= cT c/\ cT b0 c/\ c==> c==> cT cT c= cT c/\ cT cT c==> c==> cT cF c= cT c/\ cT cF
- |- ((!a. (!P. ((!x. ((x = a) ==> (P x))) = (P a)))) = (!a. (!P. ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F))))
T c= ! ! c= ! c==> c= b2 b0 * b1 b2 * b1 b0 ! ! c==> c~ c= ! c==> c= b2 b0 * b1 b2 * b1 b0 cF
+ (chi11 = ((((((chi x12) x13) x14) x23) x24) x34)), (chi22 = ((((((chi x12) x24) x23) x14) x13) x34)), (chi33 = ((((((chi x34) x13) x23) x14) x24) x12)), (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)), (x12 = ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))), (x13 = ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))), (x14 = ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0))))), (x23 = ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))), (x24 = ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0))))), (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) |- (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((((real_pow ((dist3 ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((((real_pow ((dist3 ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ (((real_pow ((dist3 ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr)))) /\ (((real_pow ((dist3 ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c==> c= f7 cchi f1 f5 f4 f3 f2 f6 c==> c= f8 cchi f6 f2 f4 f3 f5 f1 c==> c= f9 cchi f6 f5 f3 f4 f2 f1 c==> c= f1 creal_pow cdistance c, f10 f11 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f2 creal_pow cdistance c, f10 f12 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f3 creal_pow cdistance c, f10 f13 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f4 creal_pow cdistance c, f11 f12 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f5 creal_pow cdistance c, f11 f13 cNUMERAL cBIT0 cBIT1 c_0 c==> c= f6 creal_pow cdistance c, f12 f13 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c/\ c= cCARD * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c/\ c~ ccoplanar_alt * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c/\ c= creal_pow cdist3 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13 f11 cNUMERAL cBIT0 cBIT1 c_0 f14 c/\ c= creal_pow cdist3 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13 f12 cNUMERAL cBIT0 cBIT1 c_0 f14 c= creal_pow cdist3 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13 f13 cNUMERAL cBIT0 cBIT1 c_0 f14 c= creal_pow cdist3 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13 f10 cNUMERAL cBIT0 cBIT1 c_0 f14 c/\ cIN ccircumcenter * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY b1 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c= ccircumcenter * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 * * part cINSERT f13 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f1 f2 f3 f4 f5 f6 cvector_add c% f0 f10 cvector_add c% f7 f11 cvector_add c% f8 f12 c% f9 f13
- (~ (P b)), (P b) |- ((~ (P b)) /\ (P b))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
+ (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) |- ((x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (?x34. (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= f0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= f0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c? / c= b0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((((w = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (w = w)) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)) = ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 f4 c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
- |- ((((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) ==> (((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)))
T c==> c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF
+ (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((~ (a = b)) = (~ (b = b)))
T c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c= c~ c= f0 f1 c~ c= f1 f1
+ |- ((~ (coplanar_alt (x1 INSERT (x2 INSERT (x3 INSERT (x4 INSERT EMPTY)))))) = ((real_lt (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (x1 , x2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x3 , x4))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0
- |- ((?r'. ((r' = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) = ((?r. (r = (distance (p , v1)))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))
T c= c? / c/\ c= b0 cdistance c, f0 f1 c/\ c= f2 cdistance c, f0 f3 c/\ c= f2 cdistance c, f0 f4 c= f2 cdistance c, f0 f5 c/\ c? / c= b0 cdistance c, f0 f1 c/\ c= f2 cdistance c, f0 f3 c/\ c= f2 cdistance c, f0 f4 c= f2 cdistance c, f0 f5
+ (~ (a = b)), (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- (~ (b = b))
T c==> c~ c= f0 f1 c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c~ c= f1 f1
+ |- (((~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)) ==> F) = ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))
T c= c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cF c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
- (_2176581 = _2176583), (_2176580 = _2176582) |- ((_2176581 = _2176583) /\ ((_2176582 IN _2176583) \/ (~ (_2176580 IN _2176581))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cIN f3 f1 c~ cIN f2 f0
- |- (((!P. ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) ==> ((\P. ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) P)) = ((\P. ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) P))
T c= c==> ! c==> c~ c= ! c==> c= b1 f0 * b0 b1 * b0 f0 cF * / c==> c~ c= ! c==> c= b1 f0 * b0 b1 * b0 f0 cF f1 * / c==> c~ c= ! c==> c= b1 f0 * b0 b1 * b0 f0 cF f1
- (_2176604 = _2176606) |- ((_2176605 = _2176607) ==> ((_2176604 INSERT _2176605) = (_2176606 INSERT _2176607)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- ((!v. ((v IN (a INSERT s)) ==> (P v))) = ((P a) /\ (!v. ((v IN s) ==> (P v)))))
T c= ! c==> cIN b0 * * part cINSERT f0 f1 * f2 b0 c/\ * f2 f0 ! c==> cIN b0 f1 * f2 b0
+ |- ((!a. ((((a /\ (T /\ F)) /\ F) ==> (T /\ (F /\ (F /\ F)))) = ((a /\ (T /\ (F /\ F))) ==> F))) = (((((T /\ (T /\ F)) /\ F) ==> (T /\ (F /\ (F /\ F)))) = ((T /\ (T /\ (F /\ F))) ==> F)) /\ ((((F /\ (T /\ F)) /\ F) ==> (T /\ (F /\ (F /\ F)))) = ((F /\ (T /\ (F /\ F))) ==> F))))
T c= ! c= c==> c/\ c/\ b0 c/\ cT cF cF c/\ cT c/\ cF c/\ cF cF c==> c/\ b0 c/\ cT c/\ cF cF cF c/\ c= c==> c/\ c/\ cT c/\ cT cF cF c/\ cT c/\ cF c/\ cF cF c==> c/\ cT c/\ cT c/\ cF cF cF c= c==> c/\ c/\ cF c/\ cT cF cF c/\ cT c/\ cF c/\ cF cF c==> c/\ cF c/\ cT c/\ cF cF cF
- |- ((\P. (!a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F))) P)
T * / ! c==> c~ c= c==> c= b1 f0 * b0 b1 c==> c= b1 f0 * b0 f0 cF f1
- |- (((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F))
T c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF
+ |- (((!d. (!b. (!b2. (!b1. (!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)))))) ==> ((\d. (!b. (!b2. (!b1. (!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)))))) d)) = ((\d. (!b. (!b2. (!b1. (!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)))))) d))
T c= c==> ! ! ! ! ! c==> c~ c= c==> c/\ c/\ b4 c/\ b3 b2 b1 c/\ b3 c/\ b2 c/\ b1 b0 c==> c/\ b4 c/\ b3 c/\ b2 b1 b0 cF * / ! ! ! ! c==> c~ c= c==> c/\ c/\ b4 c/\ b3 b2 b1 c/\ b3 c/\ b2 c/\ b1 b0 c==> c/\ b4 c/\ b3 c/\ b2 b1 b0 cF f0 * / ! ! ! ! c==> c~ c= c==> c/\ c/\ b4 c/\ b3 b2 b1 c/\ b3 c/\ b2 c/\ b1 b0 c==> c/\ b4 c/\ b3 c/\ b2 b1 b0 cF f0
+ |- ((!a. (((a /\ T) ==> F) = (a ==> (T ==> F)))) = ((((T /\ T) ==> F) = (T ==> (T ==> F))) /\ (((F /\ T) ==> F) = (F ==> (T ==> F)))))
T c= ! c= c==> c/\ b0 cT cF c==> b0 c==> cT cF c/\ c= c==> c/\ cT cT cF c==> cT c==> cT cF c= c==> c/\ cF cT cF c==> cF c==> cT cF
+ (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) |- (((((((chi x34) x24) x14) x23) x13) x12) = chi44)
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c= cchi f1 f2 f3 f4 f5 f6 f0
+ (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((~ (a = b)) ==> F)
T c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c==> c~ c= f0 f1 cF
+ |- ((\v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))))))))) v1)
T * / ! ! ! c==> c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b5 f0
- |- ((!r. (P \/ (Q r))) = (P \/ (!r. (Q r))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
+ (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a) = (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) |- (((((distance (w , v4)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((distance (w , v4)) = (distance (w , v4)))) ==> ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4)))) = ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c= c==> c/\ c= cdistance c, f0 f3 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f3 cdistance c, f0 f3 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3
- (((x = a) /\ (~ (P x))) /\ (P a)) |- ((~ F) ==> F)
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 c==> c~ cF cF
+ (((x = a) /\ (~ (P x))) /\ (P a)) |- (((P a) ==> F) = F)
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 c= c==> * f2 f1 cF cF
+ |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((!v. ((v IN EMPTY) ==> (P v))) = T)
T c= ! c==> cIN b0 part cEMPTY * f0 b0 cT
- (_2176221 = _2176223), (_2176222 = _2176224) |- (((((real_le _2176221) _2176222) = ((real_le _2176223) _2176224)) ==> (((real_le _2176223) _2176224) \/ (~ ((real_le _2176221) _2176222)))) = (((real_le _2176223) _2176224) \/ (~ ((real_le _2176221) _2176222))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= creal_le f0 f2 creal_le f1 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2 c\/ creal_le f1 f3 c~ creal_le f0 f2
- |- ((!v2. (!v1. (!rr. ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))))) = T)
T c= ! ! ! c==> cIN f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b2 c= cdistance c, f0 b0 csqrt b2 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b2 c= cdistance c, f0 f1 csqrt b2 c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b2 c= cdistance c, f0 f2 csqrt b2 c==> c/\ c= creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 b2 c= cdistance c, f0 b1 csqrt b2 c==> cIN ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c? / c/\ c= b3 cdistance c, ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c/\ c= b3 cdistance c, ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c= b3 cdistance c, ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c= b3 cdistance c, ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> ! c==> cIN b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c? / c/\ c= b4 cdistance c, b3 b1 c/\ c= b4 cdistance c, b3 b0 c/\ c= b4 cdistance c, b3 f1 c= b4 cdistance c, b3 f2 c= b3 ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccircumcenter * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cT
- (~ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) |- ((~ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) /\ F)
T c==> c~ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f3 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f4 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f1 csqrt f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c/\ c~ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f3 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f4 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f1 csqrt f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 cF
+ |- ((\v. (!w. (((dist3 v) w) = (distance (v , w))))) v)
T * / ! c= cdist3 b0 b1 cdistance c, b0 b1 f0
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) /\ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ |- ((!a. ((((a /\ (T /\ T)) /\ T) ==> (T /\ (T /\ (T /\ T)))) = ((a /\ (T /\ (T /\ T))) ==> T))) = (((((T /\ (T /\ T)) /\ T) ==> (T /\ (T /\ (T /\ T)))) = ((T /\ (T /\ (T /\ T))) ==> T)) /\ ((((F /\ (T /\ T)) /\ T) ==> (T /\ (T /\ (T /\ T)))) = ((F /\ (T /\ (T /\ T))) ==> T))))
T c= ! c= c==> c/\ c/\ b0 c/\ cT cT cT c/\ cT c/\ cT c/\ cT cT c==> c/\ b0 c/\ cT c/\ cT cT cT c/\ c= c==> c/\ c/\ cT c/\ cT cT cT c/\ cT c/\ cT c/\ cT cT c==> c/\ cT c/\ cT c/\ cT cT cT c= c==> c/\ c/\ cF c/\ cT cT cT c/\ cT c/\ cT c/\ cT cT c==> c/\ cF c/\ cT c/\ cT cT cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ |- ((F /\ t) = F)
T c= c/\ cF f0 cF
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ ((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) |- (P a)
T c==> c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 * f1 f0
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- (((distance (w , v2)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((distance (w , v2)) = (distance (w , v2))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c/\ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 cdistance c, f0 f1
+ (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)) |- (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w) ==> F)
T c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cF
- ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) |- ((((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))
T c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
+ (((x = a) /\ (~ (P x))) /\ (P a)) |- (x = a)
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 c= f0 f1
+ ((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) |- ((_2176279 = a) ==> (P _2176279))
T c==> c/\ ! c\/ c~ c= b0 f0 * f1 b0 c~ * f1 f0 c==> c= f2 f0 * f1 f2
- |- (((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))) = T)
T c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f3 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f4 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f1 csqrt f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 cT
+ (((real_lt (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (x1 , x2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x3 , x4))) (NUMERAL (BIT0 (BIT1 _0)))))) = (~ (coplanar_alt (x1 INSERT (x2 INSERT (x3 INSERT (x4 INSERT EMPTY))))))) |- ((~ (coplanar_alt (x1 INSERT (x2 INSERT (x3 INSERT (x4 INSERT EMPTY)))))) = ((real_lt (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (x1 , x2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x3 , x4))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= creal_lt creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0
+ (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) |- ((\chi44. (chi44 = ((((((chi x34) x24) x14) x23) x13) x12))) chi44)
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 * / c= b0 cchi f1 f2 f3 f4 f5 f6 f0
+ |- ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))
T c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((x = a) /\ (~ (P x))) /\ (P a)) |- ((~ (P x)) = (~ (P a)))
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 c= c~ * f2 f0 c~ * f2 f1
- (~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) |- (((~ ((real_le (real_of_num (NUMERAL _0))) _2176210)) \/ ((sqrt ((real_pow _2176210) (NUMERAL (BIT0 (BIT1 _0))))) = _2176210)) = ((~ ((real_le (real_of_num (NUMERAL _0))) _2176210)) \/ ((sqrt ((real_pow _2176210) (NUMERAL (BIT0 (BIT1 _0))))) = _2176210)))
T c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= c\/ c~ creal_le creal_of_num cNUMERAL c_0 f3 c= csqrt creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 f3 c\/ c~ creal_le creal_of_num cNUMERAL c_0 f3 c= csqrt creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- ((T ==> (?chi44. (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)))) = (?chi44. (chi44 = ((((((chi x34) x24) x14) x23) x13) x12))))
T c= c==> cT c? / c= b0 cchi f0 f1 f2 f3 f4 f5 c? / c= b0 cchi f0 f1 f2 f3 f4 f5
+ |- ((\b. (!a. ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))) b)
T * / ! c==> c~ c= c==> c/\ b1 b0 f0 c==> b1 c==> b0 f0 cF f1
+ |- ((((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34) ==> ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) ==> ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) ==> ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))))))))))
T c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= creal_pow cdistance c, f3 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f6 f1 cNUMERAL cBIT0 cBIT1 c_0 f7 c==> c= creal_pow cdistance c, f6 f0 cNUMERAL cBIT0 cBIT1 c_0 f8 c==> c= creal_pow cdistance c, f6 f3 cNUMERAL cBIT0 cBIT1 c_0 f9 c==> c= cCARD * * part cINSERT f6 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f9 f8 f7 f5 f4 f2 c==> c~ c= cdelta f9 f8 f7 f5 f4 f2 creal_of_num cNUMERAL c_0 c==> cIN f10 * * part chull part caffine * * part cINSERT f6 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= creal_pow cdist3 f10 f3 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f0 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f1 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= creal_pow cdist3 f10 f6 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> cIN ccircumcenter * * part cINSERT f6 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f6 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f6 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f6 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f6 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f6 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f6 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= ccircumcenter * * part cINSERT f6 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f10
- |- ((_2176243 = _2176244) ==> ((real_of_num _2176243) = (real_of_num _2176244)))
T c==> c= f0 f1 c= creal_of_num f0 creal_of_num f1
- |- ((((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) = ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F))
T c= c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF
+ (((((((chi x34) x24) x14) x23) x13) x12) = chi44) |- ((((((((chi x34) x24) x14) x23) x13) x12) = chi44) /\ ((((((((chi x34) x13) x23) x14) x24) x12) = chi33) ==> ((((((((chi x12) x24) x23) x14) x13) x34) = chi22) ==> ((((((((chi x12) x13) x14) x23) x24) x34) = chi11) ==> ((((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34) ==> ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) ==> ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) ==> ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))))))))))))))
T c==> c= cchi f0 f1 f2 f3 f4 f5 f6 c/\ c= cchi f0 f1 f2 f3 f4 f5 f6 c==> c= cchi f0 f4 f3 f2 f1 f5 f7 c==> c= cchi f5 f1 f3 f2 f4 f0 f8 c==> c= cchi f5 f4 f2 f3 f1 f0 f9 c==> c= creal_pow cdistance c, f10 f11 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c= creal_pow cdistance c, f12 f11 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c= creal_pow cdistance c, f12 f10 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c= creal_pow cdistance c, f13 f11 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f13 f10 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= creal_pow cdistance c, f13 f12 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= cCARD * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f5 f4 f2 f3 f1 f0 c==> c~ c= cdelta f5 f4 f2 f3 f1 f0 creal_of_num cNUMERAL c_0 c==> cIN f14 * * part chull part caffine * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c==> c= creal_pow cdist3 f14 f12 cNUMERAL cBIT0 cBIT1 c_0 f15 c==> c= creal_pow cdist3 f14 f10 cNUMERAL cBIT0 cBIT1 c_0 f15 c==> c= creal_pow cdist3 f14 f11 cNUMERAL cBIT0 cBIT1 c_0 f15 c==> c= creal_pow cdist3 f14 f13 cNUMERAL cBIT0 cBIT1 c_0 f15 c==> cIN ccircumcenter * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY * * part chull part caffine * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c= ccircumcenter * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY f14
+ |- ((!p. ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> (((real_pow ((dist3 p) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (!p. ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> (((real_pow ((dist3 p) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))))
T c= ! c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c= b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cvector_add c% b7 f0 cvector_add c% b8 f1 cvector_add c% b9 f2 c% b10 f3 c= creal_pow cdist3 b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b1 b2 b3 b4 b5 b6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cchi b6 b5 b3 b4 b2 b1 cchi b6 b2 b4 b3 b5 b1 cchi b1 b5 b4 b3 b2 b6 cchi b1 b2 b3 b4 b5 b6 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c= b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cvector_add c% b7 f0 cvector_add c% b8 f1 cvector_add c% b9 f2 c% b10 f3 c= creal_pow cdist3 b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b1 b2 b3 b4 b5 b6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cchi b6 b5 b3 b4 b2 b1 cchi b6 b2 b4 b3 b5 b1 cchi b1 b5 b4 b3 b2 b6 cchi b1 b2 b3 b4 b5 b6 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!a. ((((a /\ (T /\ F)) /\ T) ==> (T /\ (F /\ (T /\ T)))) = ((a /\ (T /\ (F /\ T))) ==> T))) = (((((T /\ (T /\ F)) /\ T) ==> (T /\ (F /\ (T /\ T)))) = ((T /\ (T /\ (F /\ T))) ==> T)) /\ ((((F /\ (T /\ F)) /\ T) ==> (T /\ (F /\ (T /\ T)))) = ((F /\ (T /\ (F /\ T))) ==> T))))
T c= ! c= c==> c/\ c/\ b0 c/\ cT cF cT c/\ cT c/\ cF c/\ cT cT c==> c/\ b0 c/\ cT c/\ cF cT cT c/\ c= c==> c/\ c/\ cT c/\ cT cF cT c/\ cT c/\ cF c/\ cT cT c==> c/\ cT c/\ cT c/\ cF cT cT c= c==> c/\ c/\ cF c/\ cT cF cT c/\ cT c/\ cF c/\ cT cT c==> c/\ cF c/\ cT c/\ cF cT cT
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f4 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f5 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f3 c/\ c= b1 cdistance c, b0 f4 c= b1 cdistance c, b0 f5 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0
- |- (((!P. (!a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F))) ==> ((\P. (!a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F))) P)) = ((\P. (!a. ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F))) P))
T c= c==> ! ! c==> c~ c= c==> c= b1 f0 * b0 b1 c==> c= b1 f0 * b0 f0 cF * / ! c==> c~ c= c==> c= b1 f0 * b0 b1 c==> c= b1 f0 * b0 f0 cF f1 * / ! c==> c~ c= c==> c= b1 f0 * b0 b1 c==> c= b1 f0 * b0 f0 cF f1
+ (((((((chi x34) x13) x23) x14) x24) x12) = chi33) |- ((((((((chi x34) x13) x23) x14) x24) x12) = chi33) /\ ((((((((chi x12) x24) x23) x14) x13) x34) = chi22) ==> ((((((((chi x12) x13) x14) x23) x24) x34) = chi11) ==> ((((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34) ==> ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) ==> ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) ==> ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))))))))))))))
T c==> c= cchi f0 f1 f2 f3 f4 f5 f6 c/\ c= cchi f0 f1 f2 f3 f4 f5 f6 c==> c= cchi f5 f4 f2 f3 f1 f0 f7 c==> c= cchi f5 f1 f3 f2 f4 f0 f8 c==> c= creal_pow cdistance c, f9 f10 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c= creal_pow cdistance c, f11 f10 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= creal_pow cdistance c, f11 f9 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f12 f10 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c= creal_pow cdistance c, f12 f9 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c= creal_pow cdistance c, f12 f11 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= cCARD * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f5 f1 f3 f2 f4 f0 c==> c~ c= cdelta f5 f1 f3 f2 f4 f0 creal_of_num cNUMERAL c_0 c==> cIN f13 * * part chull part caffine * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c= creal_pow cdist3 f13 f11 cNUMERAL cBIT0 cBIT1 c_0 f14 c==> c= creal_pow cdist3 f13 f9 cNUMERAL cBIT0 cBIT1 c_0 f14 c==> c= creal_pow cdist3 f13 f10 cNUMERAL cBIT0 cBIT1 c_0 f14 c==> c= creal_pow cdist3 f13 f12 cNUMERAL cBIT0 cBIT1 c_0 f14 c==> cIN ccircumcenter * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY * * part chull part caffine * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY c= ccircumcenter * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f9 * * part cINSERT f10 part cEMPTY f13
- |- ((?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) ==> (?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)))
T c==> c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0
- (_2176596 = _2176598) |- ((_2176596 = _2176598) /\ ((~ (_2176597 = _2176599)) \/ ((_2176596 , _2176597) = (_2176598 , _2176599))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2)))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((x = a) /\ (~ (P x))) /\ (P a)) |- (~ (P a))
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 * f2 f1 c~ * f2 f1
+ |- (((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))) = ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))
T c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f3 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f4 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f1 csqrt f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0
- |- ((?x'. ((x = a) /\ (~ (P x')))) = ((x = a) /\ (?x. (~ (P x)))))
T c= c? / c/\ c= f0 f1 c~ * f2 b0 c/\ c= f0 f1 c? / c~ * f2 b0
+ |- ((~ T) = F)
T c= c~ cT cF
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) ==> F)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= f6 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= f6 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= f6 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= f6 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 cF
- |- (((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))) = (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c= c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- (((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) = ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d)))
T c= c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4
+ ((\x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))) x) |- (((\x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))) x) /\ F)
T c==> * / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0 f2 c/\ * / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0 f2 cF
+ |- (!v1. (!v2. (!v3. (!v4. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (!p. ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> (((real_pow ((dist3 p) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) ==> ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c==> c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c= b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cvector_add c% b7 f0 cvector_add c% b8 f1 cvector_add c% b9 f2 c% b10 f3 c= creal_pow cdist3 b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b1 b2 b3 b4 b5 b6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cchi b6 b5 b3 b4 b2 b1 cchi b6 b2 b4 b3 b5 b1 cchi b1 b5 b4 b3 b2 b6 cchi b1 b2 b3 b4 b5 b6 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) = ((\w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))))
T c= c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13
+ (~ (a = b)), (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((~ (a = b)) /\ F)
T c==> c~ c= f0 f1 c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c/\ c~ c= f0 f1 cF
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- (((distance (w , v2)) = (distance (w , v2))) = (((distance (w , v2)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((distance (w , v2)) = (distance (w , v2)))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= c= cdistance c, f0 f1 cdistance c, f0 f1 c/\ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 cdistance c, f0 f1
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((\r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) r) ==> F)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> * / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 f6 cF
+ ((\rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) rr) |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)
T c==> * / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 f6 c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 f6
- |- ((!p'. ((~ (p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((!r. ((~ (r = (distance (p' , v1)))) \/ ((~ (r = (distance (p' , v2)))) \/ ((~ (r = (distance (p' , v3)))) \/ (~ (r = (distance (p' , v4)))))))) \/ (p' = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) = ((~ (p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (!p. ((!r. ((~ (r = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4)))))))) \/ (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))
T c= ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ ! c\/ c~ c= b1 cdistance c, b0 f1 c\/ c~ c= b1 cdistance c, b0 f2 c\/ c~ c= b1 cdistance c, b0 f3 c~ c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c\/ ! c\/ c~ c= b1 cdistance c, b0 f1 c\/ c~ c= b1 cdistance c, b0 f2 c\/ c~ c= b1 cdistance c, b0 f3 c~ c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((!a. ((((a /\ (F /\ T)) /\ T) ==> (F /\ (T /\ (T /\ F)))) = ((a /\ (F /\ (T /\ T))) ==> F))) = (((((T /\ (F /\ T)) /\ T) ==> (F /\ (T /\ (T /\ F)))) = ((T /\ (F /\ (T /\ T))) ==> F)) /\ ((((F /\ (F /\ T)) /\ T) ==> (F /\ (T /\ (T /\ F)))) = ((F /\ (F /\ (T /\ T))) ==> F))))
T c= ! c= c==> c/\ c/\ b0 c/\ cF cT cT c/\ cF c/\ cT c/\ cT cF c==> c/\ b0 c/\ cF c/\ cT cT cF c/\ c= c==> c/\ c/\ cT c/\ cF cT cT c/\ cF c/\ cT c/\ cT cF c==> c/\ cT c/\ cF c/\ cT cT cF c= c==> c/\ c/\ cF c/\ cF cT cT c/\ cF c/\ cT c/\ cT cF c==> c/\ cF c/\ cF c/\ cT cT cF
+ |- ((!v. ((v IN EMPTY) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v))))) = T)
T c= ! c==> cIN b0 part cEMPTY c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cT
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) |- (((!r. ((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (((~ (r = (distance (_2176516 , v1)))) \/ ((~ (r = (distance (_2176516 , v2)))) \/ ((~ (r = (distance (_2176516 , v3)))) \/ (~ (r = (distance (_2176516 , v4))))))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((\r. ((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (((~ (r = (distance (_2176516 , v1)))) \/ ((~ (r = (distance (_2176516 , v2)))) \/ ((~ (r = (distance (_2176516 , v3)))) \/ (~ (r = (distance (_2176516 , v4))))))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) _2176517)) = ((\r. ((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (((~ (r = (distance (_2176516 , v1)))) \/ ((~ (r = (distance (_2176516 , v2)))) \/ ((~ (r = (distance (_2176516 , v3)))) \/ (~ (r = (distance (_2176516 , v4))))))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) _2176517))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c\/ c~ c= b0 cdistance c, f4 f0 c\/ c~ c= b0 cdistance c, f4 f1 c\/ c~ c= b0 cdistance c, f4 f2 c~ c= b0 cdistance c, f4 f3 c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c\/ c~ c= b0 cdistance c, f4 f0 c\/ c~ c= b0 cdistance c, f4 f1 c\/ c~ c= b0 cdistance c, f4 f2 c~ c= b0 cdistance c, f4 f3 c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 * / c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c\/ c~ c= b0 cdistance c, f4 f0 c\/ c~ c= b0 cdistance c, f4 f1 c\/ c~ c= b0 cdistance c, f4 f2 c~ c= b0 cdistance c, f4 f3 c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5
+ (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- ((~ (P a)) = (~ (P b)))
T c==> c/\ c/\ c= f0 f1 c~ * f2 f0 c\/ c~ c= f0 f1 * f2 f1 c= c~ * f2 f0 c~ * f2 f1
+ (~ ((!x. ((x = a) ==> (P x))) = (P a))) |- (((?x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))) ==> F) = F)
T c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 c= c==> c? / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0 cF cF
- (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))), (~ ((real_le (real_of_num (NUMERAL _0))) (distance (x , y)))) |- ((~ ((real_le (real_of_num (NUMERAL _0))) (distance (x , y)))) /\ ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))
T c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1 c/\ c~ creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1
+ |- (((!x. (((\x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))) x) ==> F)) ==> ((?x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))) ==> F)) = ((?x. (((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) \/ (((x = a) /\ (~ (P x))) /\ (P a)))) ==> F))
T c= c==> ! c==> * / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b1 f0 c~ * f1 b1 * f1 f0 b0 cF c==> c? / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0 cF c==> c? / c\/ c/\ ! c\/ c~ c= b1 f0 * f1 b1 c~ * f1 f0 c/\ c/\ c= b0 f0 c~ * f1 b0 * f1 f0 cF
+ |- ((\a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) a)
T * / c==> c~ c= c==> c/\ c/\ b0 c/\ f0 f1 f2 c/\ f0 c/\ f1 c/\ f2 f3 c==> c/\ b0 c/\ f0 c/\ f1 f2 f3 cF f4
+ |- ((!b. (!a. (((a /\ b) ==> T) = (a ==> (b ==> T))))) = ((!a. (((a /\ T) ==> T) = (a ==> (T ==> T)))) /\ (!a. (((a /\ F) ==> T) = (a ==> (F ==> T))))))
T c= ! ! c= c==> c/\ b1 b0 cT c==> b1 c==> b0 cT c/\ ! c= c==> c/\ b0 cT cT c==> b0 c==> cT cT ! c= c==> c/\ b0 cF cT c==> b0 c==> cF cT
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) |- (!r. ((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ (((~ (r = (distance (_2176516 , v1)))) \/ ((~ (r = (distance (_2176516 , v2)))) \/ ((~ (r = (distance (_2176516 , v3)))) \/ (~ (r = (distance (_2176516 , v4))))))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c\/ c~ c= b0 cdistance c, f4 f0 c\/ c~ c= b0 cdistance c, f4 f1 c\/ c~ c= b0 cdistance c, f4 f2 c~ c= b0 cdistance c, f4 f3 c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) |- (F = F)
T c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= cF cF
- (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) |- ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) = (((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c= c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f6 c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f6
- (_2176600 = _2176601) |- ((_2176600 = _2176601) /\ ((distance _2176600) = (distance _2176601)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdistance f0 cdistance f1
- (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((~ F) ==> F)
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cF cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!v1. (!v2. (!v3. (!v4. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) /\ ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))))))))
T c==> c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) = (!a. (!b. ((a ==> b) ==> (a = (a /\ b))))))
T c= c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3)))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3
+ (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))), (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))), (~ ((sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (x , y)))) |- ((~ ((sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (x , y)))) /\ ((sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (x , y))))
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)) = (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= c~ c= ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0 c~ c= ccircumcenter * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0
+ (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((!x. (((\r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) x) ==> F)) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> F)) = ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> F))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! c==> * / c/\ c= b1 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b1 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b1 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b1 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 b0 cF c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 cF c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 cF
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- ((distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)) = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1)))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) |- (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v1))) /\ (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2))) /\ (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v3))) /\ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3 c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f4 c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f5
+ |- ((((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) ==> F)
T c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 cF
- |- (((!a. (!P. ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F))) ==> ((\a. (!P. ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F))) a)) = ((\a. (!P. ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F))) a))
T c= c==> ! ! c==> c~ c= ! c==> c= b2 b0 * b1 b2 * b1 b0 cF * / ! c==> c~ c= ! c==> c= b2 b0 * b1 b2 * b1 b0 cF f0 * / ! c==> c~ c= ! c==> c= b2 b0 * b1 b2 * b1 b0 cF f0
+ |- ((!a. (((a /\ T) ==> T) = (a ==> (T ==> T)))) = ((((T /\ T) ==> T) = (T ==> (T ==> T))) /\ (((F /\ T) ==> T) = (F ==> (T ==> T)))))
T c= ! c= c==> c/\ b0 cT cT c==> b0 c==> cT cT c/\ c= c==> c/\ cT cT cT c==> cT c==> cT cT c= c==> c/\ cF cT cT c==> cF c==> cT cT
+ |- ((!p. ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> ((((real_pow ((dist3 p) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((((real_pow ((dist3 p) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ (((real_pow ((dist3 p) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr))))) = ((((real_pow ((dist3 ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((((real_pow ((dist3 ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ (((real_pow ((dist3 ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr))))
T c= ! c==> c= b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 c/\ c= creal_pow cdist3 b0 f9 cNUMERAL cBIT0 cBIT1 c_0 f14 c/\ c= creal_pow cdist3 b0 f11 cNUMERAL cBIT0 cBIT1 c_0 f14 c= creal_pow cdist3 b0 f13 cNUMERAL cBIT0 cBIT1 c_0 f14 c/\ c= creal_pow cdist3 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 f9 cNUMERAL cBIT0 cBIT1 c_0 f14 c/\ c= creal_pow cdist3 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 f11 cNUMERAL cBIT0 cBIT1 c_0 f14 c= creal_pow cdist3 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 f13 cNUMERAL cBIT0 cBIT1 c_0 f14
+ |- ((!b. (!a. (((a /\ b) ==> F) = (a ==> (b ==> F))))) = ((!a. (((a /\ T) ==> F) = (a ==> (T ==> F)))) /\ (!a. (((a /\ F) ==> F) = (a ==> (F ==> F))))))
T c= ! ! c= c==> c/\ b1 b0 cF c==> b1 c==> b0 cF c/\ ! c= c==> c/\ b0 cT cF c==> b0 c==> cT cF ! c= c==> c/\ b0 cF cF c==> b0 c==> cF cF
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- (((distance (w , v1)) = (distance (w , v1))) = (((distance (w , v1)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((distance (w , v1)) = (distance (w , v1)))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c= c= cdistance c, f0 f1 cdistance c, f0 f1 c/\ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 cdistance c, f0 f1
- |- ((((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w) = ((\w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) w))
T c= c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 f14 * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 f14
+ |- ((!v. ((v IN EMPTY) ==> (r = (distance (p , v))))) = T)
T c= ! c==> cIN b0 part cEMPTY c= f0 cdistance c, f1 b0 cT
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- (F = F)
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= cF cF
+ (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- (~ (P b))
T c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c~ * f2 f1
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- (((distance (w , v4)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = ((distance (w , v4)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= c= cdistance c, f5 f4 csqrt creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f5 f4 csqrt creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c==> cIN ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f5 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0
+ |- ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (!p. ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((p = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4)))))) ==> ((((real_pow ((dist3 p) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))) /\ ((((real_pow ((dist3 p) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))) /\ (((real_pow ((dist3 p) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34))))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c= b0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cvector_add c% b7 f0 cvector_add c% b8 f1 cvector_add c% b9 f2 c% b10 f3 c/\ c= creal_pow cdist3 b0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b1 b2 b3 b4 b5 b6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 c/\ c= creal_pow cdist3 b0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b1 b2 b3 b4 b5 b6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 c= creal_pow cdist3 b0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' b1 b2 b3 b4 b5 b6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b1 b2 b3 b4 b5 b6 cchi b6 b5 b3 b4 b2 b1 cchi b6 b2 b4 b3 b5 b1 cchi b1 b5 b4 b3 b2 b6 cchi b1 b2 b3 b4 b5 b6 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
- |- ((?r'. ((r = (distance (p , v1))) /\ ((r' = (distance (p , v2))) /\ ((r' = (distance (p , v3))) /\ (r' = (distance (p , v4))))))) = ((r = (distance (p , v1))) /\ (?r. ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))))
T c= c? / c/\ c= f0 cdistance c, f1 f2 c/\ c= b0 cdistance c, f1 f3 c/\ c= b0 cdistance c, f1 f4 c= b0 cdistance c, f1 f5 c/\ c= f0 cdistance c, f1 f2 c? / c/\ c= b0 cdistance c, f1 f3 c/\ c= b0 cdistance c, f1 f4 c= b0 cdistance c, f1 f5
- |- (((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F))
T c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF
- |- ((\w. (!v4. (!v3. (!v2. (!v1. (!rr. ((~ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) ==> F))))))) w)
T * / ! ! ! ! ! c==> c~ c==> cIN b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c/\ c= creal_pow cdistance c, b0 b3 cNUMERAL cBIT0 cBIT1 c_0 b5 c= cdistance c, b0 b3 csqrt b5 c==> c/\ c= creal_pow cdistance c, b0 b2 cNUMERAL cBIT0 cBIT1 c_0 b5 c= cdistance c, b0 b2 csqrt b5 c==> c/\ c= creal_pow cdistance c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 b5 c= cdistance c, b0 b1 csqrt b5 c==> c/\ c= creal_pow cdistance c, b0 b4 cNUMERAL cBIT0 cBIT1 c_0 b5 c= cdistance c, b0 b4 csqrt b5 c==> cIN ccircumcenter * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c? / c/\ c= b6 cdistance c, ccircumcenter * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c/\ c= b6 cdistance c, ccircumcenter * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 c/\ c= b6 cdistance c, ccircumcenter * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b2 c= b6 cdistance c, ccircumcenter * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b1 c==> ! c==> cIN b6 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c? / c/\ c= b7 cdistance c, b6 b4 c/\ c= b7 cdistance c, b6 b3 c/\ c= b7 cdistance c, b6 b2 c= b7 cdistance c, b6 b1 c= b6 ccircumcenter * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= ccircumcenter * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0
+ |- (((!w. (((dist3 v) w) = (distance (v , w)))) ==> ((\w. (((dist3 v) w) = (distance (v , w)))) w)) = ((\w. (((dist3 v) w) = (distance (v , w)))) w))
T c= c==> ! c= cdist3 f0 b0 cdistance c, f0 b0 * / c= cdist3 f0 b0 cdistance c, f0 b0 f1 * / c= cdist3 f0 b0 cdistance c, f0 b0 f1
- (_2176593 = _2176595) |- ((_2176593 = _2176595) /\ ((~ (_2176592 = _2176594)) \/ (((real_pow _2176592) _2176593) = ((real_pow _2176594) _2176595))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= creal_pow f2 f0 creal_pow f3 f1
+ |- ((\b1. (!a. ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F))) b1)
T * / ! c==> c~ c= c==> c/\ c/\ b1 c/\ b0 f0 f1 c/\ b0 c/\ f0 c/\ f1 f2 c==> c/\ b1 c/\ b0 c/\ f0 f1 f2 cF f3
+ |- ((~ F) = T)
T c= c~ cF cT
+ (~ (a = b)), (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- F
T c==> c~ c= f0 f1 c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 cF
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= c= creal_pow cdistance c, f5 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cdistance c, f5 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) |- (((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) /\ ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F))
T c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c/\ c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF
+ |- (((!P. (!a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x)))))))) ==> ((\P. (!a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x)))))))) P)) = ((\P. (!a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x)))))))) P))
T c= c==> ! ! ! c= ! c==> cIN b3 * * part cINSERT b1 b2 * b0 b3 c/\ * b0 b1 ! c==> cIN b3 b2 * b0 b3 * / ! ! c= ! c==> cIN b3 * * part cINSERT b1 b2 * b0 b3 c/\ * b0 b1 ! c==> cIN b3 b2 * b0 b3 f0 * / ! ! c= ! c==> cIN b3 * * part cINSERT b1 b2 * b0 b3 c/\ * b0 b1 ! c==> cIN b3 b2 * b0 b3 f0
- (~ ((distance (w , v4)) = (distance (w , v4)))) |- ((~ ((distance (w , v4)) = (distance (w , v4)))) /\ ((distance (w , v4)) = (distance (w , v4))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f0 f1 c/\ c~ c= cdistance c, f0 f1 cdistance c, f0 f1 c= cdistance c, f0 f1 cdistance c, f0 f1
- |- (((((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) ==> (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))) = (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)))
T c= c==> c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v))))))))))) v2)
T * / ! ! c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b3 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b4 f1
- |- (((((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) ==> (((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F))) = (((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)))
T c= c==> c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF
+ ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v1))) /\ (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2))) /\ (((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v3))) /\ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4))))))) ==> (w = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (w = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f4 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f5 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f5 csqrt f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3 c/\ c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f4 c= csqrt creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f5 c= f0 ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= f0 ccircumcenter * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((~ (P b)) = (~ (P b)))
T c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c= c~ * f2 f1 c~ * f2 f1
+ |- (((real_lt (real_of_num (NUMERAL _0))) a) ==> (~ (a = (real_of_num (NUMERAL _0)))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= f0 creal_of_num cNUMERAL c_0
- (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((~ (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x)))))) ==> ((\s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x)))))) s)) = ((\s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x)))))) s))
T c= c==> ! c= ! c==> cIN b1 * * part cINSERT f0 b0 * f1 b1 c/\ * f1 f0 ! c==> cIN b1 b0 * f1 b1 * / c= ! c==> cIN b1 * * part cINSERT f0 b0 * f1 b1 c/\ * f1 f0 ! c==> cIN b1 b0 * f1 b1 f2 * / c= ! c==> cIN b1 * * part cINSERT f0 b0 * f1 b1 c/\ * f1 f0 ! c==> cIN b1 b0 * f1 b1 f2
- |- ((_2176602 = _2176603) ==> ((circumcenter _2176602) = (circumcenter _2176603)))
T c==> c= f0 f1 c= ccircumcenter f0 ccircumcenter f1
- |- ((_2176584 = _2176585) ==> ((sqrt _2176584) = (sqrt _2176585)))
T c==> c= f0 f1 c= csqrt f0 csqrt f1
+ (P a), (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((P a) /\ F)
T c==> * f0 f1 c==> c/\ c\/ c~ c= f1 f2 * f0 f1 c/\ c= f1 f2 c~ * f0 f2 c/\ * f0 f1 cF
- (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) |- ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) = (((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c= c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f5 c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f5
+ |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (x34 = ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0))))) |- (((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34)
T c==> c= f0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f0
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) |- ((~ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4)))) ==> ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v4))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c==> c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f3
- (_2176588 = _2176589) |- ((_2176588 = _2176589) /\ ((BIT0 _2176588) = (BIT0 _2176589)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (_2176593 = _2176595) |- ((_2176592 = _2176594) ==> (((real_pow _2176592) _2176593) = ((real_pow _2176594) _2176595)))
T c==> c= f0 f1 c==> c= f2 f3 c= creal_pow f2 f0 creal_pow f3 f1
- (_2176609 = _2176611) |- ((_2176609 = _2176611) /\ ((~ (_2176608 = _2176610)) \/ (((hull _2176608) _2176609) = ((hull _2176610) _2176611))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- |- ((\a. (!P. ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F))) a)
T * / ! c==> c~ c= ! c==> c= b2 b0 * b1 b2 * b1 b0 cF f0
- (_2176604 = _2176606) |- ((_2176604 = _2176606) /\ ((~ (_2176605 = _2176607)) \/ ((_2176604 INSERT _2176605) = (_2176606 INSERT _2176607))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- ((\a. (!b. ((a ==> b) ==> (a = (a /\ b))))) a)
T * / ! c==> c==> b0 b1 c= b0 c/\ b0 b1 f0
+ ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- (rr = ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= f2 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
- |- (((real_gt a) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt a) (real_of_num (NUMERAL _0)))))
T c= creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
+ |- (((!r. ((~ (r = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4)))))))) \/ (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (!r. (((~ (r = (distance (p , v1)))) \/ ((~ (r = (distance (p , v2)))) \/ ((~ (r = (distance (p , v3)))) \/ (~ (r = (distance (p , v4))))))) \/ (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c= c\/ ! c\/ c~ c= b0 cdistance c, f0 f1 c\/ c~ c= b0 cdistance c, f0 f2 c\/ c~ c= b0 cdistance c, f0 f3 c~ c= b0 cdistance c, f0 f4 c= f0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c\/ c\/ c~ c= b0 cdistance c, f0 f1 c\/ c~ c= b0 cdistance c, f0 f2 c\/ c~ c= b0 cdistance c, f0 f3 c~ c= b0 cdistance c, f0 f4 c= f0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((_2176593 = _2176595) ==> ((~ (_2176592 = _2176594)) \/ (((real_pow _2176592) _2176593) = ((real_pow _2176594) _2176595))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= creal_pow f2 f0 creal_pow f3 f1
- (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), (~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((~ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)) /\ ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ |- ((((((((chi x34) x24) x14) x23) x13) x12) = chi44) ==> ((((((((chi x34) x13) x23) x14) x24) x12) = chi33) ==> ((((((((chi x12) x24) x23) x14) x13) x34) = chi22) ==> ((((((((chi x12) x13) x14) x23) x24) x34) = chi11) ==> ((((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x34) ==> ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) ==> ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) ==> ((((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x14) ==> ((((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x13) ==> ((((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = x12) ==> (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((((delta x12) x13) x14) x23) x24) x34)) ==> ((~ (((((((delta x12) x13) x14) x23) x24) x34) = (real_of_num (NUMERAL _0)))) ==> ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((((real_pow ((dist3 w) v2)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v3)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v4)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> ((((real_pow ((dist3 w) v1)) (NUMERAL (BIT0 (BIT1 _0)))) = rr) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v)))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w))))))))))))))))))))))
T c==> c= cchi f0 f1 f2 f3 f4 f5 f6 c==> c= cchi f0 f4 f3 f2 f1 f5 f7 c==> c= cchi f5 f1 f3 f2 f4 f0 f8 c==> c= cchi f5 f4 f2 f3 f1 f0 f9 c==> c= creal_pow cdistance c, f10 f11 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c= creal_pow cdistance c, f12 f11 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c= creal_pow cdistance c, f12 f10 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c= creal_pow cdistance c, f13 f11 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c= creal_pow cdistance c, f13 f10 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c= creal_pow cdistance c, f13 f12 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c= cCARD * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cdelta f5 f4 f2 f3 f1 f0 c==> c~ c= cdelta f5 f4 f2 f3 f1 f0 creal_of_num cNUMERAL c_0 c==> cIN f14 * * part chull part caffine * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c==> c= creal_pow cdist3 f14 f12 cNUMERAL cBIT0 cBIT1 c_0 f15 c==> c= creal_pow cdist3 f14 f10 cNUMERAL cBIT0 cBIT1 c_0 f15 c==> c= creal_pow cdist3 f14 f11 cNUMERAL cBIT0 cBIT1 c_0 f15 c==> c= creal_pow cdist3 f14 f13 cNUMERAL cBIT0 cBIT1 c_0 f15 c==> cIN ccircumcenter * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY * * part chull part caffine * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c==> c? / ! c==> cIN b1 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY b1 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c==> c? / ! c==> cIN b2 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY c= ccircumcenter * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f10 * * part cINSERT f11 part cEMPTY f14
+ |- ((!b2. (!b1. (!a. ((((a /\ (b1 /\ b2)) /\ F) ==> (b1 /\ (b2 /\ (F /\ T)))) = ((a /\ (b1 /\ (b2 /\ F))) ==> T))))) = ((!b1. (!a. ((((a /\ (b1 /\ T)) /\ F) ==> (b1 /\ (T /\ (F /\ T)))) = ((a /\ (b1 /\ (T /\ F))) ==> T)))) /\ (!b1. (!a. ((((a /\ (b1 /\ F)) /\ F) ==> (b1 /\ (F /\ (F /\ T)))) = ((a /\ (b1 /\ (F /\ F))) ==> T))))))
T c= ! ! ! c= c==> c/\ c/\ b2 c/\ b1 b0 cF c/\ b1 c/\ b0 c/\ cF cT c==> c/\ b2 c/\ b1 c/\ b0 cF cT c/\ ! ! c= c==> c/\ c/\ b1 c/\ b0 cT cF c/\ b0 c/\ cT c/\ cF cT c==> c/\ b1 c/\ b0 c/\ cT cF cT ! ! c= c==> c/\ c/\ b1 c/\ b0 cF cF c/\ b0 c/\ cF c/\ cF cT c==> c/\ b1 c/\ b0 c/\ cF cF cT
- ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F), (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) ==> ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F)) |- (((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F) /\ ((~ (((a /\ b) ==> c) = (a ==> (b ==> c)))) ==> F))
T c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c==> c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c/\ c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF c==> c~ c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 cF
+ (~ (((real_lt (real_of_num (NUMERAL _0))) a) ==> (~ (a = (real_of_num (NUMERAL _0)))))) |- ((~ (((real_lt (real_of_num (NUMERAL _0))) a) ==> (~ (a = (real_of_num (NUMERAL _0)))))) /\ F)
T c==> c~ c==> creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= f0 creal_of_num cNUMERAL c_0 c/\ c~ c==> creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= f0 creal_of_num cNUMERAL c_0 cF
+ |- ((!a. ((((a /\ (T /\ F)) /\ T) ==> (T /\ (F /\ (T /\ F)))) = ((a /\ (T /\ (F /\ T))) ==> F))) = (((((T /\ (T /\ F)) /\ T) ==> (T /\ (F /\ (T /\ F)))) = ((T /\ (T /\ (F /\ T))) ==> F)) /\ ((((F /\ (T /\ F)) /\ T) ==> (T /\ (F /\ (T /\ F)))) = ((F /\ (T /\ (F /\ T))) ==> F))))
T c= ! c= c==> c/\ c/\ b0 c/\ cT cF cT c/\ cT c/\ cF c/\ cT cF c==> c/\ b0 c/\ cT c/\ cF cT cF c/\ c= c==> c/\ c/\ cT c/\ cT cF cT c/\ cT c/\ cF c/\ cT cF c==> c/\ cT c/\ cT c/\ cF cT cF c= c==> c/\ c/\ cF c/\ cT cF cT c/\ cT c/\ cF c/\ cT cF c==> c/\ cF c/\ cT c/\ cF cT cF
+ (~ (((real_lt (real_of_num (NUMERAL _0))) a) ==> (~ (a = (real_of_num (NUMERAL _0)))))) |- (((real_gt a) (real_of_num (NUMERAL _0))) /\ (a = (real_of_num (NUMERAL _0))))
T c==> c~ c==> creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (P b) |- ((~ (P b)) ==> (P b))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- (~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) |- ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) /\ F)
T c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 c/\ c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF
- (_2176243 = _2176244) |- ((_2176243 = _2176244) /\ ((real_of_num _2176243) = (real_of_num _2176244)))
T c==> c= f0 f1 c/\ c= f0 f1 c= creal_of_num f0 creal_of_num f1
+ |- ((\P. ((!x. ((x IN EMPTY) ==> (P x))) = T)) P)
T * / c= ! c==> cIN b1 part cEMPTY * b0 b1 cT f0
- (~ F), (P b), (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- ((~ F) /\ F)
T c==> c~ cF c==> * f0 f1 c==> c/\ c/\ c= f2 f1 c~ * f0 f2 c\/ c~ c= f2 f1 * f0 f1 c/\ c~ cF cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) |- ((((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24) = (((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = x24))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c= c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f2 c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f2
- (~ (P a)), ((!x. ((~ (x = a)) \/ (P x))) /\ (~ (P a))) |- ((~ (P a)) /\ (P a))
T c==> c~ * f0 f1 c==> c/\ ! c\/ c~ c= b0 f1 * f0 b0 c~ * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- ((~ (_2176588 = _2176589)) \/ ((BIT0 _2176588) = (BIT0 _2176589)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((?r. (P /\ (Q r))) = (P /\ (?r. (Q r))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- |- ((((\w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) w) ==> (?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w))) = T)
T c= c==> * / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 f14 c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 cT
- |- (((!x. (((\rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) x) ==> (?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)))) ==> ((?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) ==> (?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)))) = ((?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) ==> (?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr))))
T c= c==> ! c==> * / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b1 b0 c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b1 c==> c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 c==> c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- (((!x. ((x = a) ==> (P x))) = (P a)) = T)
T c= c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cT
- (~ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2)))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((~ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2)))) /\ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2))))
T c==> c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c/\ c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1
- |- ((_2176221 = _2176223) ==> ((~ (_2176222 = _2176224)) \/ (((real_le _2176223) _2176224) \/ (~ ((real_le _2176221) _2176222)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))), (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))), (~ F), (~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) |- ((~ F) /\ F)
T c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c/\ c~ cF cF
- (!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))), ((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((~ (w = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (w = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f0 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f1 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f4 f3 csqrt f5 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((~ ((distance (w , v4)) = (distance (w , v4)))) ==> ((distance (w , v4)) = (distance (w , v4))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f0 f1 c= cdistance c, f0 f1 cdistance c, f0 f1
- |- (((~ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) ==> F) ==> ((~ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) ==> F))
T c==> c==> c~ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f3 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f4 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f1 csqrt f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 cF c==> c~ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f2 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f3 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f4 csqrt f5 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c= cdistance c, f0 f1 csqrt f5 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 cF
- (_2176286 = _2176287) |- ((((P _2176286) = (P _2176287)) ==> ((P _2176287) \/ (~ (P _2176286)))) = ((P _2176287) \/ (~ (P _2176286))))
T c==> c= f0 f1 c= c==> c= * f2 f0 * f2 f1 c\/ * f2 f1 c~ * f2 f0 c\/ * f2 f1 c~ * f2 f0
- |- (((((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) ==> (((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F))) = (((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)))
T c= c==> c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF
- (~ (w = w)) |- ((~ (w = w)) /\ (w = w))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- (((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((~ (_2176517 = (distance (_2176516 , v1)))) \/ ((~ (_2176517 = (distance (_2176516 , v2)))) \/ ((~ (_2176517 = (distance (_2176516 , v3)))) \/ ((~ (_2176517 = (distance (_2176516 , v4)))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) = ((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((~ (_2176517 = (distance (_2176516 , v1)))) \/ ((~ (_2176517 = (distance (_2176516 , v2)))) \/ ((~ (_2176517 = (distance (_2176516 , v3)))) \/ ((~ (_2176517 = (distance (_2176516 , v4)))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c= c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c\/ c~ c= f7 cdistance c, f3 f4 c\/ c~ c= f7 cdistance c, f3 f1 c\/ c~ c= f7 cdistance c, f3 f5 c\/ c~ c= f7 cdistance c, f3 f6 c= f3 ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c\/ c~ c= f7 cdistance c, f3 f4 c\/ c~ c= f7 cdistance c, f3 f1 c\/ c~ c= f7 cdistance c, f3 f5 c\/ c~ c= f7 cdistance c, f3 f6 c= f3 ccircumcenter * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- (P b), (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- F
T c==> * f0 f1 c==> c/\ c/\ c= f2 f1 c~ * f0 f2 c\/ c~ c= f2 f1 * f0 f1 cF
- |- ((~ (_2176286 = _2176287)) \/ ((P _2176287) \/ (~ (P _2176286))))
T c\/ c~ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- |- (((((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)) ==> (((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F))) = (((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F) ==> ((~ (((a = b) ==> (P a)) = ((a = b) ==> (P b)))) ==> F)))
T c= c==> c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF c==> c~ c= c==> c= f0 f1 * f2 f0 c==> c= f0 f1 * f2 f1 cF
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr) |- ((((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr) /\ (?rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)))
T c==> c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 f6 c/\ c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 f6 c? / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (~ F), (P a), (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((~ F) /\ F)
T c==> c~ cF c==> * f0 f1 c==> c/\ c\/ c~ c= f1 f2 * f0 f1 c/\ c= f1 f2 c~ * f0 f2 c/\ c~ cF cF
- |- ((?r'. ((r' = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) = ((?r. (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1)))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))))
T c= c? / c/\ c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= f4 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= f4 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= f4 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 c/\ c? / c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= f4 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c= f4 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c= f4 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3
- |- ((\rr. ((~ ((w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) ==> (((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) ==> (((((real_pow (distance (w , v4))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v4)) = (sqrt rr))) ==> (((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4))))))) ==> ((!p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = w)))))))))) ==> F)) rr)
T * / c==> c~ c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c= cdistance c, f0 f2 csqrt b0 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 b0 c= cdistance c, f0 f3 csqrt b0 c==> c/\ c= creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 b0 c= cdistance c, f0 f4 csqrt b0 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 c= cdistance c, f0 f1 csqrt b0 c==> cIN ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b1 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= b1 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= b1 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= b1 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c==> ! c==> cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c? / c/\ c= b2 cdistance c, b1 f1 c/\ c= b2 cdistance c, b1 f2 c/\ c= b2 cdistance c, b1 f3 c= b2 cdistance c, b1 f4 c= b1 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 cF f5
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = (((~ ((real_le (real_of_num (NUMERAL _0))) _2176210)) \/ ((sqrt ((real_pow _2176210) (NUMERAL (BIT0 (BIT1 _0))))) = _2176210)) = (((sqrt ((real_pow _2176210) (NUMERAL (BIT0 (BIT1 _0))))) = _2176210) \/ (~ ((real_le (real_of_num (NUMERAL _0))) _2176210)))))
T c= cT c= c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= csqrt creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 f0
- |- ((?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)) ==> (?w. (((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))) = w)))
T c==> c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0 c? / c= c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 cvector_add c% f6 f7 cvector_add c% f8 f9 cvector_add c% f10 f11 c% f12 f13 b0
- |- ((!x'. ((~ (x' = a)) \/ (P x))) = ((!x. (~ (x = a))) \/ (P x)))
T c= ! c\/ c~ c= b0 f0 * f1 f2 c\/ ! c~ c= b0 f0 * f1 f2
- (((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) |- ((((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) /\ (((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)))
T c==> c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c/\ c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF
- |- ((((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) ==> (((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)))
T c==> c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF
- (~ (a = b)), (((~ (a = b)) \/ (P a)) /\ ((a = b) /\ (~ (P b)))) |- ((~ F) ==> F)
T c==> c~ c= f0 f1 c==> c/\ c\/ c~ c= f0 f1 * f2 f0 c/\ c= f0 f1 c~ * f2 f1 c==> c~ cF cF
- (_2176596 = _2176598) |- ((_2176597 = _2176599) ==> ((_2176596 , _2176597) = (_2176598 , _2176599)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) = ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c= c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F), (((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) |- (((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) /\ ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F))
T c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c/\ c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v1))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v2))) /\ ((r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v3))) /\ (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v4)))))) |- (((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((~ (_2176517 = (distance (_2176516 , v1)))) \/ ((~ (_2176517 = (distance (_2176516 , v2)))) \/ ((~ (_2176517 = (distance (_2176516 , v3)))) \/ ((~ (_2176517 = (distance (_2176516 , v4)))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) = ((~ (_2176516 IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) \/ ((~ (_2176517 = (distance (_2176516 , v1)))) \/ ((~ (_2176517 = (distance (_2176516 , v2)))) \/ ((~ (_2176517 = (distance (_2176516 , v3)))) \/ ((~ (_2176517 = (distance (_2176516 , v4)))) \/ (_2176516 = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))))
T c==> c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c= f0 cdistance c, ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 c= c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c~ c= f6 cdistance c, f5 f1 c\/ c~ c= f6 cdistance c, f5 f2 c\/ c~ c= f6 cdistance c, f5 f3 c\/ c~ c= f6 cdistance c, f5 f4 c= f5 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c~ c= f6 cdistance c, f5 f1 c\/ c~ c= f6 cdistance c, f5 f2 c\/ c~ c= f6 cdistance c, f5 f3 c\/ c~ c= f6 cdistance c, f5 f4 c= f5 ccircumcenter * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F) ==> ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F)) = ((~ ((!x. ((x = a) ==> (P x))) = (P a))) ==> F))
T c= c==> c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF c==> c~ c= ! c==> c= b0 f0 * f1 b0 * f1 f0 cF
- |- (((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))) ==> ((~ ((((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))) = r) ==> ((distance (x , y)) = (sqrt r)))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))) ==> F)))))
T c==> c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF c==> c~ c==> c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v1)))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((~ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v1)))) /\ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v1))))
T c==> c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c= cdistance c, f0 f2 csqrt f3 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f3 c= cdistance c, f0 f1 csqrt f3 c/\ c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2
- (chi44 = ((((((chi x34) x24) x14) x23) x13) x12)) |- ((((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23) = (((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = x23))
T c==> c= f0 cchi f1 f2 f3 f4 f5 f6 c= c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f4 c= creal_pow cdistance c, f7 f8 cNUMERAL cBIT0 cBIT1 c_0 f4
- (~ ((distance (w , v1)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))), ((((real_pow (distance (w , v1))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v1)) = (sqrt rr))), ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((~ ((distance (w , v1)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((distance (w , v1)) = (sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f3 c= cdistance c, f0 f1 csqrt f3 c==> c/\ c= creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c= cdistance c, f0 f2 csqrt f3 c/\ c~ c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, f0 f1 csqrt creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0
- |- ((!x'. ((~ ((real_le (real_of_num (NUMERAL _0))) x)) \/ ((sqrt ((real_pow x') (NUMERAL (BIT0 (BIT1 _0))))) = x'))) = ((~ ((real_le (real_of_num (NUMERAL _0))) x)) \/ (!x. ((sqrt ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = x))))
T c= ! c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 ! c= csqrt creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 b0
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))) |- ((~ ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2)))) ==> ((sqrt ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0))))) = (distance (w , v2))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1
- (~ (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))), (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) |- ((~ (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (w IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((?r. ((P r) /\ Q)) = ((?r. (P r)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v2)) = (sqrt rr))), ((((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = rr) /\ ((distance (w , v3)) = (sqrt rr))) |- (((real_pow (distance (w , v3))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow (distance (w , v2))) (NUMERAL (BIT0 (BIT1 _0)))))
T c==> c/\ c= creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f1 csqrt f2 c==> c/\ c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 f2 c= cdistance c, f0 f3 csqrt f2 c= creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr) = ((\rr. (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div ((((((rho_ij' x12) x13) x14) x23) x24) x34)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) = rr)) rr))
T c= c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 f6 * / c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div crho_ij' f0 f1 f2 f3 f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta f0 f1 f2 f3 f4 f5 b0 f6
- |- ((~ ((sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))) = (sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0))))) = (sqrt ((real_pow (distance (x , y))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
- (_2176580 = _2176582) |- ((_2176581 = _2176583) ==> ((_2176582 IN _2176583) \/ (~ (_2176580 IN _2176581))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- |- ((((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F) ==> ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F)) = ((~ ((((a /\ (b1 /\ b2)) /\ b) ==> (b1 /\ (b2 /\ (b /\ d)))) = ((a /\ (b1 /\ (b2 /\ b))) ==> d))) ==> F))
T c= c==> c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF c==> c~ c= c==> c/\ c/\ f0 c/\ f1 f2 f3 c/\ f1 c/\ f2 c/\ f3 f4 c==> c/\ f0 c/\ f1 c/\ f2 f3 f4 cF
- (P b), (((a = b) /\ (~ (P a))) /\ ((~ (a = b)) \/ (P b))) |- ((P b) /\ F)
T c==> * f0 f1 c==> c/\ c/\ c= f2 f1 c~ * f0 f2 c\/ c~ c= f2 f1 * f0 f1 c/\ * f0 f1 cF
