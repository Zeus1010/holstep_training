N Aq12.last_parts_e_list_y_not_s_list
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'y f0 f2 f3 f4 c/\ c~ cfinal_list f0 f2 c/\ cMEM f5 cparts f0 f2 c/\ cMEM f4 f5 c= cLAST f5 f6 c~ cMEM ce_list f6 cs_list f0 f2 f3
D TRUTH
A |- T
T cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D MEM_MAP
A |- (!f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))))
T c= cMEM f0 cMAP f1 f2 c? / c/\ cMEM b0 f2 c= f0 * f1 b0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D IN_SET_OF_LIST
A |- (!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l))))
T c= cIN f0 * part cset_of_list f1 cMEM f0 f1
D Hypermap.node_map_and_darts
A |- (!H. ((FINITE (dart H)) /\ ((permutes (node_map H)) (dart H))))
T c/\ cFINITE * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0
D Hypermap.simple_hypermap
A |- (!H. ((simple_hypermap H) = (!x. ((x IN (dart H)) ==> ((((node H) x) INTER ((face H) x)) = (x INSERT EMPTY))))))
T c= csimple_hypermap f0 ! c==> cIN b0 * part cdart f0 c= * * part cINTER * * part cnode f0 b0 * * part cface f0 b0 * * part cINSERT b0 part cEMPTY
D Hypermap.is_node_nondegenerate
A |- (!H. ((is_node_nondegenerate H) = (!x. ((x IN (dart H)) ==> (~ (((node_map H) x) = x))))))
T c= cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c~ c= cnode_map f0 b0 b0
D Hypermap.COM_POWER
A |- (!n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))))
T c= * * part cPOWER f0 cSUC f1 * * part co f0 * * part cPOWER f0 f1
D Hypermap.node_refl
A |- (!H. (!x. (x IN ((node H) x))))
T cIN f0 * * part cnode f1 f0
D Hypermap.fixed_point_lemma
A |- (!D. (!p. (((permutes p) D) ==> (!x. (((p x) = x) = (((inverse p) x) = x))))))
T c==> cpermutes f0 f1 ! c= c= * f0 b0 b0 c= cinverse f0 b0 b0
D Hypermap.lemma_node_identity
A |- (!H. (!x. (!y. ((y IN ((node H) x)) ==> (((node H) x) = ((node H) y))))))
T c==> cIN f0 * * part cnode f1 f2 c= * * part cnode f1 f2 * * part cnode f1 f0
D Hypermap.lemma_inverse_in_node
A |- (!H. (!x. (!y. ((y IN ((node H) x)) ==> (((inverse (node_map H)) y) IN ((node H) x))))))
T c==> cIN f0 * * part cnode f1 f2 cIN cinverse * part cnode_map f1 f0 * * part cnode f1 f2
D Hypermap.is_restricted
A |- (!H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))))))
T c= cis_restricted f0 c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
D Seq.allP
A |- (!a. (!s. ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))))
T c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0
D List_hypermap.dart_in_face
A |- (!d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))))
T c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D List_hypermap.good_list_uniq
A |- (!L. ((good_list L) ==> (uniq L)))
T c==> cgood_list f0 cuniq f0
D List_hypermap.face_of_list
A |- (!L. (!d. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> (((face (hypermap_of_list L)) d) = (set_of_list ((find_face L) d))))))
T c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= * * part cface chypermap_of_list f0 f1 * part cset_of_list cfind_face f0 f1
D Lp_gen_theory.dart_list_all
A |- (!L. ((good_list L) ==> (!P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d)))))))
T c==> cgood_list f0 ! c= ! c==> cIN b1 * part cdart chypermap_of_list f0 * b0 b1 ! c==> cMEM b1 clist_of_darts f0 * b0 b1
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.s_list
A |- (!L. (!r. (!d. ((((s_list L) r) d) = ((MAP (\i. (((POWER (f_list L)) i) d))) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) d)))))))
T c= cs_list f0 f1 f2 cMAP / cPOWER * part cf_list f0 b0 f2 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f2
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.MEM_LAST
A |- (!s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s)))
T c==> c~ c= f0 cNIL cMEM cLAST f0 f0
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.dart_hypermap_of_list
A |- (!L. ((good_list L) ==> ((dart (hypermap_of_list L)) = (set_of_list (list_of_darts L)))))
T c==> cgood_list f0 c= * part cdart chypermap_of_list f0 * part cset_of_list clist_of_darts f0
D Tame_list.MEM_hypermap_of_list_node
A |- (!L. (!x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L))))))))
T c==> c/\ cgood_list_nodes f0 cMEM f1 clist_of_darts f0 c= cIN f2 * * part cnode chypermap_of_list f0 f1 c/\ c= cFST f1 cFST f2 cMEM f2 clist_of_darts f0
D Tame_list.inverse_node_map_list
A |- (!L. (!d. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> (((inverse (node_map (hypermap_of_list L))) d) = ((f_list L) (e_list d))))))
T c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= cinverse * part cnode_map chypermap_of_list f0 f1 cf_list f0 ce_list f1
D Tame_list.parts_next_last
A |- (!L. (!r. (((uniq r) /\ (~ (r = NIL))) ==> ((all (\p. (!x. ((((MEM x) p) /\ ((x = (LAST p)) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))))) ((parts L) r)))))
T c==> c/\ cuniq f0 c~ c= f0 cNIL call / ! c==> c/\ cMEM b1 b0 c/\ c= b1 cLAST b0 c~ c= b1 cLAST f0 c~ c= cnext_el f0 b1 cf_list f1 ce_list b1 cparts f1 f0
D Tame_list.parts_fst
A |- (!L. (!N. (!r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p)))))))))
T c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM f4 f3 c= cFST f4 cFST cHD f3
D Tame_list.parts_darts
A |- (!L. (!N. (!r. (!p. (!x. ((((MEM x) p) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ ((normal_list L) N)))) ==> ((MEM x) (list_of_darts L))))))))
T c==> c/\ cMEM f0 f1 c/\ cMEM f1 cparts f2 f3 c/\ cMEM f3 f4 cnormal_list f2 f4 cMEM f0 clist_of_darts f2
D Tame_list.mem_list_of_darts_quotient
A |- (!L. (!N. (!d. ((((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))) ==> (((MEM d) (list_of_darts ((quotient_list L) N))) = (?p. (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (d = (LAST p)))))))))))
T c==> c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 c= cMEM f2 clist_of_darts cquotient_list f0 f1 c? / c? / c/\ cMEM b0 cparts f0 b1 c/\ cMEM b1 f1 c= f2 cLAST b0
D Tame_list.good_list_quotient
A |- (!L. (!N. ((((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))) ==> (good_list ((quotient_list L) N)))))
T c==> c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 cgood_list cquotient_list f0 f1
D Tame_list.normal_list_parts_next_last_not
A |- (!L. (!N. (!r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p)))))))))
T c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el f2 cLAST f3 cf_list f0 ce_list cLAST f3
D Tame_list.quotient_list_iso_quotient
A |- (!L. (!N. (((is_restricted (hypermap_of_list L)) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))))) ==> ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))))
T c==> c/\ cis_restricted chypermap_of_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1
D Tame_list.iso_is_node_nondegenerate
A |- (!f. (!H. (!K. ((((hyp_iso f) (K , H)) /\ (is_node_nondegenerate H)) ==> (is_node_nondegenerate K)))))
T c==> c/\ chyp_iso f0 c, f1 f2 cis_node_nondegenerate f2 cis_node_nondegenerate f1
D Tame_list.marked_list_is_node_nondegenerate
A |- (!L. (!N. (!r. (!d. (((good_list L) /\ ((good_list_nodes L) /\ ((good_list_nodes ((quotient_list L) N)) /\ ((((marked_list L) N) r) d)))) ==> (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cgood_list_nodes cquotient_list f0 f1 cmarked_list f0 f1 f2 f3 cis_node_nondegenerate cquotient chypermap_of_list f0 * part cloop_family_of_list f1
D Tame_list.inverse_node_map_quotient
A |- (!L. (!N. (!r. (!p. (!r'. (!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r')) /\ ((MEM r') N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p')))))))))
T c==> c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ call part cuniq f0 c/\ cMEM f2 cparts f0 f3 c/\ cMEM f3 f1 c/\ cMEM f4 cparts f0 f5 cMEM f5 f1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 cLAST f2 cLAST f4 cMEM cf_list f0 ce_list cLAST f2 f4
D Tame_list.good_list_nodes_quotient
A |- (!L. (!N. (((good_list L) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((all uniq) L))))) ==> (good_list_nodes ((quotient_list L) N)))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 call part cuniq f0 cgood_list_nodes cquotient_list f0 f1
D Tame_list.marked_lemma_yz_in_face
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM (((l'y L) r) x)) ((find_face L) x)) /\ ((MEM ((((l'z L) N) r) x)) ((find_face L) x))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c/\ cMEM cl'y f0 f2 f3 cfind_face f0 f3 cMEM cl'z f0 f1 f2 f3 cfind_face f0 f3
D Tame_list.is_restricted_all_uniq
A |- (!L. (((good_list L) /\ ((good_list_nodes L) /\ (is_restricted (hypermap_of_list L)))) ==> ((all uniq) L)))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cis_restricted chypermap_of_list f0 call part cuniq f0
D Dangeyj.mem_imp_not_nil
A |- (!s. (!x. (((MEM x) s) ==> (~ (s = NIL)))))
T c==> cMEM f0 f1 c~ c= f1 cNIL
D Pwssrat.mem_f_list_power
A |- (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 f2 f1 cfind_face f0 f1
D Pplhulj.marked_list_of_dart
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))))
T c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0
D Aq8.MEM_PARTS_IMP
A |- (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))
T c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL cMEM f1 cparts f2 f0 ! c==> cMEM b0 f1 cMEM b0 f0
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) lp) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((!x. ((((node_map (hypermap_of_list ((quotient_list L) N))) x) = x) = (((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) x) = x))) ==> F)
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f3 f2 f2 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f3 c==> call part cuniq f0 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f4 f5 c==> ! c= c= cnode_map chypermap_of_list cquotient_list f0 f3 b0 b0 c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f3 b0 b0 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f4 c==> cmarked_list f0 f6 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> cnormal_list f1 f5 c==> cmarked_list f1 f5 f0 f6 c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f3 c==> c= cf_list f1 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) r) /\ (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c/\ cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> c= cFST f4 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
+ |- ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d)
T * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = y), (((next_el r) x) = ((f_list L) x)), (((f_list L) (e_list lp)) = y), ((((POWER (f_list L)) n) x) = (e_list lp)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 f4 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cf_list f1 ce_list f5 f4 c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> c/\ c~ c= * part cdart chypermap_of_list f0 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f0 c/\ cplain_hypermap chypermap_of_list f0 c/\ cconnected_hypermap chypermap_of_list f0 c/\ csimple_hypermap chypermap_of_list f0 c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 cF
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((lp IN ((node (hypermap_of_list L)) y)) /\ ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> cIN f3 * * part cnode chypermap_of_list f1 f4 c==> cnormal_list f1 f5 c==> cmarked_list f1 f5 f0 f6 c/\ cIN f3 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f3 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f3 c==> c= cf_list f1 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f4 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
+ (uniq (list_of_darts L)), ((MEM y) ((find_face L) x)) |- ((~ (((find_face L) y) = ((find_face L) x))) = ((((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x))) ==> F))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f2 c= c~ c= cfind_face f0 f1 cfind_face f0 f2 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2 cF
- |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (good_list L), (good_list_nodes L), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM y) p) /\ (((LAST p) = lp) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cMEM f2 cparts f0 f3 c==> cmarked_list f0 f4 f3 f5 c/\ cMEM f1 f2 c==> c= cLAST f2 f6 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f3 f4 c==> cMEM f5 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f3 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f5 c==> cs_flag_list f0 f4 f3 f5 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f3 f5 c==> c= ce_list f6 cPOWER * part cf_list f0 f7 f5 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f1 cfind_face f0 f5 c==> cMEM cl'z f0 f4 f3 f5 cfind_face f0 f5 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f3 cF
+ |- (((((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p)))))) ==> (((~ (lp = (LAST r))) ==> (~ (((next_el r) lp) = ((f_list L) (e_list lp))))) ==> F)) = (((~ (lp = (LAST r))) ==> (~ (((next_el r) lp) = ((f_list L) (e_list lp))))) ==> F))
T c= c==> c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el f2 cLAST f3 cf_list f0 ce_list cLAST f3 c==> c==> c~ c= f4 cLAST f2 c~ c= cnext_el f2 f4 cf_list f0 ce_list f4 cF c==> c==> c~ c= f4 cLAST f2 c~ c= cnext_el f2 f4 cf_list f0 ce_list f4 cF
+ |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
+ ((MEM x) r) |- (((~ (r = NIL)) ==> (~ ((FST y) = (FST lp)))) = ((((MEM x) r) ==> (~ (r = NIL))) ==> (~ ((FST y) = (FST lp)))))
T c==> cMEM f0 f1 c= c==> c~ c= f1 cNIL c~ c= cFST f2 cFST f3 c==> c==> cMEM f0 f1 c~ c= f1 cNIL c~ c= cFST f2 cFST f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ cfinal_list f1 f2 c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cl'y f1 f2 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> cuniq f2 cF
+ (~ (lp IN (dart (hypermap_of_list ((quotient_list L) N))))), (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((all uniq) L), ((normal_list L) N) |- (((MEM lp) (list_of_darts ((quotient_list L) N))) ==> (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N))))))
T c==> c~ cIN f0 * part cdart chypermap_of_list cquotient_list f1 f2 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cgood_list f1 c==> call part cuniq f1 c==> cnormal_list f1 f2 c==> cMEM f0 clist_of_darts cquotient_list f1 f2 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f1 f2 c, chypermap_of_list cquotient_list f1 f2 cquotient chypermap_of_list f1 * part cloop_family_of_list f2
+ |- (((!N. (((is_restricted (hypermap_of_list L)) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))))) ==> ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))) ==> ((\N. (((is_restricted (hypermap_of_list L)) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))))) ==> ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))) N)) = ((\N. (((is_restricted (hypermap_of_list L)) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))))) ==> ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))) N))
T c= c==> ! c==> c/\ cis_restricted chypermap_of_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 b0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 chyp_iso * * part co part cset_of_list * * part cfind_atom f0 b0 c, chypermap_of_list cquotient_list f0 b0 cquotient chypermap_of_list f0 * part cloop_family_of_list b0 * / c==> c/\ cis_restricted chypermap_of_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 b0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 chyp_iso * * part co part cset_of_list * * part cfind_atom f0 b0 c, chypermap_of_list cquotient_list f0 b0 cquotient chypermap_of_list f0 * part cloop_family_of_list b0 f1 * / c==> c/\ cis_restricted chypermap_of_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 b0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 chyp_iso * * part co part cset_of_list * * part cfind_atom f0 b0 c, chypermap_of_list cquotient_list f0 b0 cquotient chypermap_of_list f0 * part cloop_family_of_list b0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM (((l'y L) r) x)) ((find_face L) x)) /\ ((MEM ((((l'z L) N) r) x)) ((find_face L) x)))) ==> F)
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f7 f1 f5 c~ cfinal_list f0 f1 c/\ cMEM cl'y f0 f1 f5 cfind_face f0 f5 cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> c/\ c~ c= * part cdart chypermap_of_list f0 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f0 c/\ cplain_hypermap chypermap_of_list f0 c/\ cconnected_hypermap chypermap_of_list f0 c/\ csimple_hypermap chypermap_of_list f0 c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((FST y) = (FST lp)) /\ ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c/\ c= cFST f4 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f7 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f6 f7 f4 cF
- (!x. ((((MEM x) p) /\ ((x = lp) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))) |- ((\x. ((((MEM x) p) /\ ((x = lp) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))) x)
T c==> ! c==> c/\ cMEM b0 f0 c/\ c= b0 f1 c~ c= b0 cLAST f2 c~ c= cnext_el f2 b0 cf_list f3 ce_list b0 * / c==> c/\ cMEM b0 f0 c/\ c= b0 f1 c~ c= b0 cLAST f2 c~ c= cnext_el f2 b0 cf_list f3 ce_list b0 f4
- (~ (r = NIL)) |- ((NIL = r) = F)
T c==> c~ c= f0 cNIL c= c= cNIL f0 cF
+ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> F)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_node_nondegenerate (hypermap_of_list L)) /\ ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
+ (~ (lp IN (dart (hypermap_of_list ((quotient_list L) N))))), (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N) |- (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))
T c==> c~ cIN f0 * part cdart chypermap_of_list cquotient_list f1 f2 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cgood_list f1 c==> c= cLAST f3 f0 c==> cMEM f3 cparts f1 f4 c==> cMEM f4 f2 c==> call part cuniq f1 c==> cnormal_list f1 f2 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f1 f2 c, chypermap_of_list cquotient_list f1 f2 cquotient chypermap_of_list f1 * part cloop_family_of_list f2
+ |- (((!l. ((x IN (set_of_list l)) = ((MEM x) l))) ==> ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l)) = ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l))
T c= c==> ! c= cIN f0 * part cset_of_list b0 cMEM f0 b0 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 cF
+ (!x. ((((node_map (hypermap_of_list ((quotient_list L) N))) x) = x) = (((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) x) = x))), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) lp) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- F
T c==> ! c= c= cnode_map chypermap_of_list cquotient_list f0 f1 b0 b0 c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 b0 b0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 f3 f3 c==> cMEM f2 cparts f0 f4 c==> cMEM f4 f1 c==> call part cuniq f0 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f4 f5 cF
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f0 f5 f6 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cl'y f0 f1 f6 f7 c==> c/\ call / c~ c= b0 cNIL f2 c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f6 f1 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f0 f6 c==> cMEM cl'z f0 f2 f1 f6 cfind_face f0 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f6 c==> cMEM f3 cparts f0 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f6 c==> cmarked_list f0 f2 f1 f6 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f7 cfind_face f0 f4 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f1 f4 f5 c==> c= cnext_el f6 f5 cf_list f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f5 c==> cMEM cl'z f1 f0 f6 f5 cfind_face f1 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f1 f6 f5 c==> cMEM f2 cparts f1 f6 c==> cMEM f6 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f6 f5 c==> cmarked_list f1 f0 f6 f5 c==> cuniq f6 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f5 cF
+ ((MEM y) p) |- (((~ (p = NIL)) ==> (~ ((FST y) = (FST (HD p))))) = ((((MEM y) p) ==> (~ (p = NIL))) ==> (((FST y) = (FST (HD p))) ==> F)))
T c==> cMEM f0 f1 c= c==> c~ c= f1 cNIL c~ c= cFST f0 cFST cHD f1 c==> c==> cMEM f0 f1 c~ c= f1 cNIL c==> c= cFST f0 cFST cHD f1 cF
+ (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ |- (((!k. (((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) x)) ((find_face L) x)))) ==> ((\k. (((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) x)) ((find_face L) x)))) n)) = ((\k. (((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) x)) ((find_face L) x)))) n))
T c= c==> ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 f2 * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 f2
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f0 f5 f6 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cl'y f0 f1 f6 f7 c==> c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f6 f1 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f0 f6 c==> cMEM cl'z f0 f2 f1 f6 cfind_face f0 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f6 c==> cMEM f3 cparts f0 f1 c==> cMEM f1 f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f6 c==> cmarked_list f0 f2 f1 f6 cF
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) /\ ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 cF
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) /\ (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> F))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cf_list f1 ce_list f5 f4 cF
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f0 f5 f6 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cl'y f0 f1 f6 f7 c==> c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f6 f1 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f0 f6 c==> cMEM cl'z f0 f2 f1 f6 cfind_face f0 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f6 c==> cMEM f3 cparts f0 f1 c==> cMEM f1 f2 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f6 c==> cmarked_list f0 f2 f1 f6 cF
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 cF
+ |- ((\H. ((is_node_nondegenerate H) = (!x. ((x IN (dart H)) ==> (~ (((node_map H) x) = x)))))) H)
T * / c= cis_node_nondegenerate b0 ! c==> cIN b1 * part cdart b0 c~ c= cnode_map b0 b1 b1 f0
+ (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c==> c~ cfinal_list f0 f1 c==> cMEM f5 cparts f0 f1 c==> cMEM f3 f5 c==> c= cLAST f5 f6 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f2 c==> c= ce_list f6 cPOWER * part cf_list f0 f7 f2 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f2 c==> cMEM cl'z f0 f4 f1 f2 cfind_face f0 f2 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ (uniq L))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c~ cuniq f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((lp IN ((node (hypermap_of_list L)) y)) /\ ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c/\ cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f7 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f6 f7 f4 cF
+ |- (((!x. ((((MEM x) p) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ ((normal_list L) N)))) ==> ((MEM x) (list_of_darts L)))) ==> ((\x. ((((MEM x) p) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ ((normal_list L) N)))) ==> ((MEM x) (list_of_darts L)))) lp)) = ((\x. ((((MEM x) p) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ ((normal_list L) N)))) ==> ((MEM x) (list_of_darts L)))) lp))
T c= c==> ! c==> c/\ cMEM b0 f0 c/\ cMEM f0 cparts f1 f2 c/\ cMEM f2 f3 cnormal_list f1 f3 cMEM b0 clist_of_darts f1 * / c==> c/\ cMEM b0 f0 c/\ cMEM f0 cparts f1 f2 c/\ cMEM f2 f3 cnormal_list f1 f3 cMEM b0 clist_of_darts f1 f4 * / c==> c/\ cMEM b0 f0 c/\ cMEM f0 cparts f1 f2 c/\ cMEM f2 f3 cnormal_list f1 f3 cMEM b0 clist_of_darts f1 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
+ |- ((\N. (((is_restricted (hypermap_of_list L)) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))))) ==> ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))) N)
T * / c==> c/\ cis_restricted chypermap_of_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 b0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 chyp_iso * * part co part cset_of_list * * part cfind_atom f0 b0 c, chypermap_of_list cquotient_list f0 b0 cquotient chypermap_of_list f0 * part cloop_family_of_list b0 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) /\ (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ |- ((\f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))) f)
T * / c= * * part cPOWER b0 cSUC f0 * * part co b0 * * part cPOWER b0 f0 f1
+ |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x)))) = (((((marked_list L) N) r) x) ==> (((MEM (e_list lp)) (((s_list L) r) x)) ==> F)))
T c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c~ cMEM ce_list f4 cs_list f0 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> cMEM ce_list f4 cs_list f0 f2 f3 cF
- (is_no_double_joins (hypermap_of_list L)) |- ((is_no_double_joins (hypermap_of_list L)) = T)
T c==> cis_no_double_joins chypermap_of_list f0 c= cis_no_double_joins chypermap_of_list f0 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> (((MEM (e_list lp)) (((s_list L) r) x)) ==> F))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c==> cMEM f5 cparts f0 f1 c==> cMEM f3 f5 c==> c= cLAST f5 f6 c==> cMEM ce_list f6 cs_list f0 f1 f2 cF
- (~ (lp IN (dart (hypermap_of_list ((quotient_list L) N))))), (good_list ((quotient_list L) N)), ((dart (hypermap_of_list ((quotient_list L) N))) = (set_of_list (list_of_darts ((quotient_list L) N)))) |- (((dart (hypermap_of_list ((quotient_list L) N))) = (set_of_list (list_of_darts ((quotient_list L) N)))) /\ (((MEM lp) (list_of_darts ((quotient_list L) N))) ==> (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))))
T c==> c~ cIN f0 * part cdart chypermap_of_list cquotient_list f1 f2 c==> cgood_list cquotient_list f1 f2 c==> c= * part cdart chypermap_of_list cquotient_list f1 f2 * part cset_of_list clist_of_darts cquotient_list f1 f2 c/\ c= * part cdart chypermap_of_list cquotient_list f1 f2 * part cset_of_list clist_of_darts cquotient_list f1 f2 c==> cMEM f0 clist_of_darts cquotient_list f1 f2 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f1 f2 c, chypermap_of_list cquotient_list f1 f2 cquotient chypermap_of_list f1 * part cloop_family_of_list f2
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> cMEM f4 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f6 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f4 cfind_face f0 f6 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f1 cNIL c==> cMEM f3 f1 c==> cMEM f3 cfind_face f0 f3 c==> c= cFST f4 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f0 f4 c==> c= * * part cface chypermap_of_list f0 f4 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f3 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f4 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f3 c==> c= cf_list f0 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f3 f4 cF
+ |- (((!r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p))))))) ==> ((\r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p))))))) r)) = ((\r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p))))))) r))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM f2 cparts f0 b0 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el b0 cLAST f2 cf_list f0 ce_list cLAST f2 * / c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM f2 cparts f0 b0 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el b0 cLAST f2 cf_list f0 ce_list cLAST f2 f3 * / c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM f2 cparts f0 b0 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el b0 cLAST f2 cf_list f0 ce_list cLAST f2 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f6 f1 f4 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 cF
+ |- ((\f. (!H. (!K. ((((hyp_iso f) (K , H)) /\ (is_node_nondegenerate H)) ==> (is_node_nondegenerate K))))) (set_of_list o ((find_atom L) N)))
T * / ! ! c==> c/\ chyp_iso b0 c, b2 b1 cis_node_nondegenerate b1 cis_node_nondegenerate b2 * * part co part cset_of_list * * part cfind_atom f0 f1
+ |- ((\s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) p)
T * / c==> c~ c= b0 cNIL cMEM cLAST b0 b0 f0
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 cF
+ (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cmarked_list f0 f5 f4 f6 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f5 c==> cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f6 c==> c= ce_list f2 cPOWER * part cf_list f0 f7 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) ((find_face L) lp)) /\ (~ ((FST y) = (FST lp))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c/\ cMEM f5 cfind_face f1 f5 c~ c= cFST f4 cFST f5
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
+ |- (!l. ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list l)) = ((MEM ((f_list L) (((POWER (f_list L)) n) x))) l)))
T c= cIN cf_list f0 cPOWER * part cf_list f0 f1 f2 * part cset_of_list f3 cMEM cf_list f0 cPOWER * part cf_list f0 f1 f2 f3
- (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> ((~ ((final_list L) r)) ==> (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c~ cfinal_list f0 f2 c==> cMEM f5 cparts f0 f2 c==> cMEM f4 f5 c==> c= cLAST f5 f6 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f2 f3 c==> c= ce_list f6 cPOWER * part cf_list f0 f7 f3 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f4 cfind_face f0 f3 c==> cMEM cl'z f0 f1 f2 f3 cfind_face f0 f3 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 cF
+ (!x. ((((MEM x) p) /\ ((x = lp) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))) |- ((((MEM lp) p) /\ ((lp = lp) /\ (~ (lp = (LAST r))))) ==> (~ (((next_el r) lp) = ((f_list L) (e_list lp)))))
T c==> ! c==> c/\ cMEM b0 f0 c/\ c= b0 f1 c~ c= b0 cLAST f2 c~ c= cnext_el f2 b0 cf_list f3 ce_list b0 c==> c/\ cMEM f1 f0 c/\ c= f1 f1 c~ c= f1 cLAST f2 c~ c= cnext_el f2 f1 cf_list f3 ce_list f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f7 cfind_face f0 f4 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 cF
+ ((e_list lp) = (((POWER (f_list L)) x') x)), (x' = n) |- ((e_list lp) = (((POWER (f_list L)) n) x))
T c==> c= ce_list f0 cPOWER * part cf_list f1 f2 f3 c==> c= f2 f4 c= ce_list f0 cPOWER * part cf_list f1 f4 f3
+ (((f_list L) (e_list lp)) = y) |- (y = ((f_list L) (e_list lp)))
T c==> c= cf_list f0 ce_list f1 f2 c= f2 cf_list f0 ce_list f1
+ |- ((\L. (!p. (!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))))) L)
T * / ! ! c==> c/\ cuniq b2 c/\ c~ c= b2 cNIL cMEM b1 cparts b0 b2 ! c==> cMEM b3 b1 cMEM b3 b2 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cMEM f6 clist_of_darts f1 cF
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 cF
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f0 f5 f6 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cl'y f0 f1 f6 f7 c==> c/\ cuniq cflatten f2 c/\ call / c~ c= b0 cNIL f2 c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f6 f1 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f0 f6 c==> cMEM cl'z f0 f2 f1 f6 cfind_face f0 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f6 c==> cMEM f3 cparts f0 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f6 c==> cmarked_list f0 f2 f1 f6 cF
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> c/\ cplain_hypermap chypermap_of_list f0 c/\ cconnected_hypermap chypermap_of_list f0 c/\ csimple_hypermap chypermap_of_list f0 c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 cF
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f5 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f5 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f5 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> c= ce_list f2 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f4 c==> cMEM cl'z f0 f3 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f5 cF
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((f_list L) (e_list lp)) = y), ((((POWER (f_list L)) n) x) = (e_list lp)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (e_list lp)) = y) /\ F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cf_list f1 ce_list f5 f4 c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= cf_list f1 ce_list f5 f4 cF
+ |- ((\r. (!p. (!x. ((((MEM x) p) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ ((normal_list L) N)))) ==> ((MEM x) (list_of_darts L)))))) r)
T * / ! ! c==> c/\ cMEM b2 b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 cnormal_list f0 f1 cMEM b2 clist_of_darts f0 f2
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM ((f_list L) (e_list lp))) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p)))))) ==> (((~ (lp = (LAST r))) ==> (~ (((next_el r) lp) = ((f_list L) (e_list lp))))) ==> F))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM cf_list f0 ce_list f2 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f3 f5 c==> c==> c/\ cgood_list f0 c/\ cnormal_list f0 f4 c/\ cMEM f3 f4 c/\ cMEM f1 cparts f0 f3 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el f3 cLAST f1 cf_list f0 ce_list cLAST f1 c==> c==> c~ c= f2 cLAST f3 c~ c= cnext_el f3 f2 cf_list f0 ce_list f2 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
+ (~ (r = NIL)), (uniq r), ((MEM p) ((parts L) r)) |- (((!a. (((MEM a) p) ==> ((MEM a) r))) ==> (~ ((FST y) = (FST lp)))) = ((((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r)))) ==> (~ ((FST y) = (FST lp)))))
T c==> c~ c= f0 cNIL c==> cuniq f0 c==> cMEM f1 cparts f2 f0 c= c==> ! c==> cMEM b0 f1 cMEM b0 f0 c~ c= cFST f3 cFST f4 c==> c==> c/\ cuniq f0 c/\ c~ c= f0 cNIL cMEM f1 cparts f2 f0 ! c==> cMEM b0 f1 cMEM b0 f0 c~ c= cFST f3 cFST f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) /\ F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ cfinal_list f1 f2 c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cl'y f1 f2 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ cuniq f2 cF
+ (~ (lp IN (dart (hypermap_of_list ((quotient_list L) N))))), (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((all uniq) L), ((normal_list L) N) |- (((((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))) ==> (good_list ((quotient_list L) N))) ==> (((MEM lp) (list_of_darts ((quotient_list L) N))) ==> (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))))
T c==> c~ cIN f0 * part cdart chypermap_of_list cquotient_list f1 f2 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cgood_list f1 c==> call part cuniq f1 c==> cnormal_list f1 f2 c==> c==> c/\ cnormal_list f1 f2 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cgood_list f1 call part cuniq f1 cgood_list cquotient_list f1 f2 c==> cMEM f0 clist_of_darts cquotient_list f1 f2 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f1 f2 c, chypermap_of_list cquotient_list f1 f2 cquotient chypermap_of_list f1 * part cloop_family_of_list f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) /\ F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY cF
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (is_restricted (hypermap_of_list L)))) ==> ((all uniq) L)) ==> F) = F)
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cis_restricted chypermap_of_list f0 call part cuniq f0 cF cF
+ ((e_list lp) = (((POWER (f_list L)) x') x)), (x' = n) |- ((((e_list lp) = (((POWER (f_list L)) n) x)) ==> F) = F)
T c==> c= ce_list f0 cPOWER * part cf_list f1 f2 f3 c==> c= f2 f4 c= c==> c= ce_list f0 cPOWER * part cf_list f1 f4 f3 cF cF
+ |- ((\d. (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d))))) x)
T * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b1 b0 cfind_face f0 b0 f1
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) /\ ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
+ |- (((!r. (!p. (!r'. (!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r')) /\ ((MEM r') N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p'))))))) ==> ((\r. (!p. (!r'. (!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r')) /\ ((MEM r') N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p'))))))) r)) = ((\r. (!p. (!r'. (!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r')) /\ ((MEM r') N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p'))))))) r))
T c= c==> ! ! ! ! c==> c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ call part cuniq f0 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ cMEM b3 cparts f0 b2 cMEM b2 f1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 cLAST b1 cLAST b3 cMEM cf_list f0 ce_list cLAST b1 b3 * / ! ! ! c==> c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ call part cuniq f0 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ cMEM b3 cparts f0 b2 cMEM b2 f1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 cLAST b1 cLAST b3 cMEM cf_list f0 ce_list cLAST b1 b3 f2 * / ! ! ! c==> c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ call part cuniq f0 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ cMEM b3 cparts f0 b2 cMEM b2 f1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 cLAST b1 cLAST b3 cMEM cf_list f0 ce_list cLAST b1 b3 f2
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM ((f_list L) (e_list lp))) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (is_restricted (hypermap_of_list L)))) ==> ((all uniq) L)) ==> F)
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM cf_list f0 ce_list f2 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f3 f5 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cis_restricted chypermap_of_list f0 call part cuniq f0 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- ((~ (((MEM y) ((find_face L) x)) /\ ((MEM ((((l'z L) N) r) x)) ((find_face L) x)))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM (((l'y L) r) x)) ((find_face L) x)) /\ ((MEM ((((l'z L) N) r) x)) ((find_face L) x)))) ==> F))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c= c~ c/\ cMEM f3 cfind_face f0 f2 cMEM cl'z f0 f4 f1 f2 cfind_face f0 f2 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f2 c~ cfinal_list f0 f1 c/\ cMEM cl'y f0 f1 f2 cfind_face f0 f2 cMEM cl'z f0 f4 f1 f2 cfind_face f0 f2 cF
+ |- (((!L. (!N. (!r. (!d. (((good_list L) /\ ((good_list_nodes L) /\ ((good_list_nodes ((quotient_list L) N)) /\ ((((marked_list L) N) r) d)))) ==> (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))))) ==> ((\L. (!N. (!r. (!d. (((good_list L) /\ ((good_list_nodes L) /\ ((good_list_nodes ((quotient_list L) N)) /\ ((((marked_list L) N) r) d)))) ==> (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))))) L)) = ((\L. (!N. (!r. (!d. (((good_list L) /\ ((good_list_nodes L) /\ ((good_list_nodes ((quotient_list L) N)) /\ ((((marked_list L) N) r) d)))) ==> (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cgood_list_nodes cquotient_list b0 b1 cmarked_list b0 b1 b2 b3 cis_node_nondegenerate cquotient chypermap_of_list b0 * part cloop_family_of_list b1 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cgood_list_nodes cquotient_list b0 b1 cmarked_list b0 b1 b2 b3 cis_node_nondegenerate cquotient chypermap_of_list b0 * part cloop_family_of_list b1 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cgood_list_nodes cquotient_list b0 b1 cmarked_list b0 b1 b2 b3 cis_node_nondegenerate cquotient chypermap_of_list b0 * part cloop_family_of_list b1 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), ((((POWER (f_list L)) n) x) = (e_list lp)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (e_list lp)) = y) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c= cf_list f1 ce_list f5 f4 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f6 f2 c==> cMEM f6 cfind_face f1 f5 c==> cMEM cl'z f1 f0 f4 f5 cfind_face f1 f5 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f4 f5 c==> cMEM f2 cparts f1 f4 c==> cMEM f4 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> cuniq f4 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f6 cfind_face f1 f5 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f4 cNIL c==> cMEM f3 f4 c==> cMEM f3 cfind_face f1 f3 c==> c= cFST f6 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f1 f6 c==> c= * * part cface chypermap_of_list f1 f6 * part cset_of_list cfind_face f1 f5 c==> cMEM f5 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f5 cfind_face f1 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f5 * * part cnode chypermap_of_list f1 f3 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f5 cfind_face f1 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f5 * part cset_of_list cfind_face f1 f5 c==> c= * * part cnode chypermap_of_list f1 f6 * * part cnode chypermap_of_list f1 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * part cset_of_list cfind_face f1 f5 * * part cINSERT f6 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f5 ce_list f3 c==> c= cf_list f1 ce_list f3 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f6 cF
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) |- ((((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c= c==> cMEM f1 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 f1 * * part cface chypermap_of_list f0 f1 * * part cINSERT f1 part cEMPTY cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((e_list lp) = (((POWER (f_list L)) n) x)) /\ ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f3 f4 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f3 f4 c==> cmarked_list f0 f5 f3 f4 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f4 c==> cMEM cl'z f0 f5 f3 f4 cfind_face f0 f4 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f6 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f3 cNIL c==> cMEM f2 f3 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f6 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f6 c==> c= * * part cface chypermap_of_list f0 f6 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f6 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f6 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f4 ce_list f2 c==> c= cf_list f0 ce_list f2 f6 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f6 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (((~ (EMPTY = (dart (hypermap_of_list L)))) ==> ((EMPTY = (dart (hypermap_of_list L))) = F)) = ((EMPTY = (dart (hypermap_of_list L))) = F))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c==> c~ c= part cEMPTY * part cdart chypermap_of_list f0 c= c= part cEMPTY * part cdart chypermap_of_list f0 cF c= c= part cEMPTY * part cdart chypermap_of_list f0 cF
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cs_flag_list f0 f5 f3 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f3 f4 c==> c= ce_list f2 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f4 c==> cMEM cl'z f0 f5 f3 f4 cfind_face f0 f4 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f3 cF
+ |- (((!p. (!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r)))))) ==> ((\p. (!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r)))))) p)) = ((\p. (!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r)))))) p))
T c= c==> ! ! c==> c/\ cuniq b1 c/\ c~ c= b1 cNIL cMEM b0 cparts f0 b1 ! c==> cMEM b2 b0 cMEM b2 b1 * / ! c==> c/\ cuniq b1 c/\ c~ c= b1 cNIL cMEM b0 cparts f0 b1 ! c==> cMEM b2 b0 cMEM b2 b1 f1 * / ! c==> c/\ cuniq b1 c/\ c~ c= b1 cNIL cMEM b0 cparts f0 b1 ! c==> cMEM b2 b0 cMEM b2 b1 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) x') x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM x') ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((\n. (x' = n)) n) ==> F) = T)
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c= c==> * / c= f4 b0 f8 cF cT
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> F))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f1 f4 f5 c==> c= cnext_el f6 f5 cf_list f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f5 c==> cMEM cl'z f1 f0 f6 f5 cfind_face f1 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f1 f6 f5 c==> cMEM f2 cparts f1 f6 c==> cMEM f6 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f6 f5 c==> cmarked_list f1 f0 f6 f5 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f6 cF
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((~ (r = NIL)) /\ (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> cnormal_list f1 f5 c==> cmarked_list f1 f5 f0 f6 c/\ c~ c= f0 cNIL c==> cMEM f3 f0 c==> cMEM f3 cfind_face f1 f3 c==> c= cFST f4 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f3 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f3 c==> c= cf_list f1 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f4 cF
+ |- ((\k. (((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) x)) ((find_face L) x)))) (SUC n))
T * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 cSUC f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) /\ (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call * part cf_last f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c/\ call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 cF
+ |- ((\d. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> (((face (hypermap_of_list L)) d) = (set_of_list ((find_face L) d))))) y)
T * / c==> c/\ cgood_list f0 cMEM b0 clist_of_darts f0 c= * * part cface chypermap_of_list f0 b0 * part cset_of_list cfind_face f0 b0 f1
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ (((node_map (hypermap_of_list ((quotient_list L) N))) lp) = lp))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f4 c==> call part cuniq f0 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f3 f5 c~ c= cnode_map chypermap_of_list cquotient_list f0 f4 f2 f2
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
+ |- ((\L. (!N. (!r. (!p. (!r'. (!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r')) /\ ((MEM r') N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p'))))))))) L)
T * / ! ! ! ! ! c==> c/\ cgood_list_nodes b0 c/\ cnormal_list b0 b1 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cgood_list b0 c/\ call part cuniq b0 c/\ cMEM b3 cparts b0 b2 c/\ cMEM b2 b1 c/\ cMEM b5 cparts b0 b4 cMEM b4 b1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list b0 b1 cLAST b3 cLAST b5 cMEM cf_list b0 ce_list cLAST b3 b5 f0
+ (good_list L), ((MEM lp) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- ((((FST lp) = (FST (HD p))) ==> (~ ((FST y) = (FST (HD p))))) = (((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM lp) p))))) ==> ((FST lp) = (FST (HD p)))) ==> (~ ((FST y) = (FST (HD p))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 cparts f0 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c= c==> c= cFST f1 cFST cHD f2 c~ c= cFST f5 cFST cHD f2 c==> c==> c/\ cnormal_list f0 f4 c/\ cgood_list f0 c/\ cMEM f3 f4 c/\ cMEM f2 cparts f0 f3 cMEM f1 f2 c= cFST f1 cFST cHD f2 c~ c= cFST f5 cFST cHD f2
+ |- (((!L. (!r. (!d. ((((s_list L) r) d) = ((MAP (\i. (((POWER (f_list L)) i) d))) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) d))))))) ==> ((\L. (!r. (!d. ((((s_list L) r) d) = ((MAP (\i. (((POWER (f_list L)) i) d))) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) d))))))) L)) = ((\L. (!r. (!d. ((((s_list L) r) d) = ((MAP (\i. (((POWER (f_list L)) i) d))) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) d))))))) L))
T c= c==> ! ! ! c= cs_list b0 b1 b2 cMAP / cPOWER * part cf_list b0 b3 b2 ciota cNUMERAL cBIT1 c_0 cl'm b0 b1 b2 * / ! ! c= cs_list b0 b1 b2 cMAP / cPOWER * part cf_list b0 b3 b2 ciota cNUMERAL cBIT1 c_0 cl'm b0 b1 b2 f0 * / ! ! c= cs_list b0 b1 b2 cMAP / cPOWER * part cf_list b0 b3 b2 ciota cNUMERAL cBIT1 c_0 cl'm b0 b1 b2 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 cF
+ |- (((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) (SUC n)) x)) ((find_face L) x))) ==> F) = F)
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 cSUC f2 f1 cfind_face f0 f1 cF cF
+ |- ((\L. (!r. (!d. ((((s_list L) r) d) = ((MAP (\i. (((POWER (f_list L)) i) d))) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) d))))))) L)
T * / ! ! c= cs_list b0 b1 b2 cMAP / cPOWER * part cf_list b0 b3 b2 ciota cNUMERAL cBIT1 c_0 cl'm b0 b1 b2 f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))) /\ F)
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> c/\ c~ c= * part cdart chypermap_of_list f0 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f0 c/\ cplain_hypermap chypermap_of_list f0 c/\ cconnected_hypermap chypermap_of_list f0 c/\ csimple_hypermap chypermap_of_list f0 c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ c/\ c~ c= * part cdart chypermap_of_list f0 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f0 c/\ cplain_hypermap chypermap_of_list f0 c/\ cconnected_hypermap chypermap_of_list f0 c/\ csimple_hypermap chypermap_of_list f0 c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 cF
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f3 f4 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f3 f4 c==> cmarked_list f0 f5 f3 f4 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f4 c==> cMEM cl'z f0 f5 f3 f4 cfind_face f0 f4 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f6 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f3 cNIL c==> cMEM f2 f3 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f6 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f6 c==> c= * * part cface chypermap_of_list f0 f6 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f6 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f6 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f4 ce_list f2 c==> c= cf_list f0 ce_list f2 f6 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f6 cF
- (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> (((MEM (e_list lp)) (((s_list L) r) x)) ==> F)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c==> c~ cfinal_list f0 f1 c==> cMEM f5 cparts f0 f1 c==> cMEM f3 f5 c==> c= cLAST f5 f6 c==> cMEM ce_list f6 cs_list f0 f1 f2 cF
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 cF
+ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) /\ ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 cF
- ((MEM ((((l'z L) N) r) x)) ((find_face L) x)) |- (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) = T)
T c==> cMEM cl'z f0 f1 f2 f3 cfind_face f0 f3 c= cMEM cl'z f0 f1 f2 f3 cfind_face f0 f3 cT
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> cnormal_list f1 f5 c==> cmarked_list f1 f5 f0 f6 c==> c= cf_list f1 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) p) /\ ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f4 f2 c==> cMEM f6 f3 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cMEM f4 f2 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((~ (lp = (LAST r))) ==> (~ (((next_el r) lp) = ((f_list L) (e_list lp))))), ((MEM ((f_list L) (e_list lp))) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((~ (lp = (LAST r))) ==> (~ (((next_el r) lp) = ((f_list L) (e_list lp))))) /\ F)
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c==> c~ c= f2 cLAST f3 c~ c= cnext_el f3 f2 cf_list f0 ce_list f2 c==> cMEM cf_list f0 ce_list f2 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f3 f5 c/\ c==> c~ c= f2 cLAST f3 c~ c= cnext_el f3 f2 cf_list f0 ce_list f2 cF
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f3 f4 c==> cmarked_list f0 f5 f3 f4 c/\ cs_flag_list f0 f5 f3 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f3 f4 c==> c= ce_list f2 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f4 c==> cMEM cl'z f0 f5 f3 f4 cfind_face f0 f4 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f3 cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((node_map (hypermap_of_list ((quotient_list L) N))) lp) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N) |- F
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate cquotient chypermap_of_list f0 * part cloop_family_of_list f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnode_map chypermap_of_list cquotient_list f0 f1 f3 f3 c==> cMEM f2 cparts f0 f4 c==> cMEM f4 f1 c==> call part cuniq f0 c==> cnormal_list f0 f1 cF
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
- (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cmarked_list f0 f5 f4 f6 c/\ cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f5 c==> cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
+ |- (((!L. (!x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L)))))))) ==> ((\L. (!x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L)))))))) L)) = ((\L. (!x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L)))))))) L))
T c= c==> ! ! ! c==> c/\ cgood_list_nodes b0 cMEM b1 clist_of_darts b0 c= cIN b2 * * part cnode chypermap_of_list b0 b1 c/\ c= cFST b1 cFST b2 cMEM b2 clist_of_darts b0 * / ! ! c==> c/\ cgood_list_nodes b0 cMEM b1 clist_of_darts b0 c= cIN b2 * * part cnode chypermap_of_list b0 b1 c/\ c= cFST b1 cFST b2 cMEM b2 clist_of_darts b0 f0 * / ! ! c==> c/\ cgood_list_nodes b0 cMEM b1 clist_of_darts b0 c= cIN b2 * * part cnode chypermap_of_list b0 b1 c/\ c= cFST b1 cFST b2 cMEM b2 clist_of_darts b0 f0
+ (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((all uniq) L), ((normal_list L) N) |- (((((MEM lp) (list_of_darts ((quotient_list L) N))) = (?p. (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p))))))) ==> (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))) = (((((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))) ==> (((MEM lp) (list_of_darts ((quotient_list L) N))) = (?p. (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p)))))))) ==> (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cgood_list f0 c==> call part cuniq f0 c==> cnormal_list f0 f1 c= c==> c= cMEM f2 clist_of_darts cquotient_list f0 f1 c? / c? / c/\ cMEM b0 cparts f0 b1 c/\ cMEM b1 f1 c= f2 cLAST b0 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1 c==> c==> c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 c= cMEM f2 clist_of_darts cquotient_list f0 f1 c? / c? / c/\ cMEM b0 cparts f0 b1 c/\ cMEM b1 f1 c= f2 cLAST b0 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1
+ |- (((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x))) ==> F) = F)
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 f2 f1 cfind_face f0 f1 cF cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (!x. ((x IN (dart (hypermap_of_list ((quotient_list L) N)))) ==> (~ (((node_map (hypermap_of_list ((quotient_list L) N))) x) = x)))) |- (((x IN (dart (hypermap_of_list ((quotient_list L) N)))) ==> (~ (((node_map (hypermap_of_list ((quotient_list L) N))) x) = x))) = T)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list cquotient_list f0 f1 c~ c= cnode_map chypermap_of_list cquotient_list f0 f1 b0 b0 c= c==> cIN f2 * part cdart chypermap_of_list cquotient_list f0 f1 c~ c= cnode_map chypermap_of_list cquotient_list f0 f1 f2 f2 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((FST y) = (FST (HD p))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * * part cface chypermap_of_list f1 f3 * * part cINSERT f3 part cEMPTY c==> c= cLAST f4 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cfind_face f1 f3 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f7 f2 c==> cMEM f3 f4 c==> cMEM f3 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f2 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f7 c==> cMEM f4 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c~ c= cFST f3 cFST cHD f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((?x. (((MEM x) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) /\ ((e_list lp) = (((POWER (f_list L)) x) x)))) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f4 c==> cmarked_list f0 f6 f1 f4 c==> c? / c/\ cMEM b0 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c= ce_list f3 cPOWER * part cf_list f0 b0 f4 cF
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) lp) = lp), ((FINITE (dart (hypermap_of_list ((quotient_list L) N)))) /\ ((permutes (node_map (hypermap_of_list ((quotient_list L) N)))) (dart (hypermap_of_list ((quotient_list L) N))))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- F
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f3 f2 f2 c==> c/\ cFINITE * part cdart chypermap_of_list cquotient_list f0 f3 cpermutes * part cnode_map chypermap_of_list cquotient_list f0 f3 * part cdart chypermap_of_list cquotient_list f0 f3 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f3 c==> call part cuniq f0 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f4 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ cfinal_list f1 f2 c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cl'y f1 f2 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 cF
+ |- ((!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))) = T)
T c= ! c==> c/\ cuniq b0 c/\ c~ c= b0 cNIL cMEM f0 cparts f1 b0 ! c==> cMEM b1 f0 cMEM b1 b0 cT
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f6 cNIL c==> cMEM f3 f6 c==> cMEM f3 cfind_face f0 f3 c==> c= cFST f7 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f5 c==> cMEM f5 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> c= cinverse * part cnode_map chypermap_of_list f0 f3 cf_list f0 cPOWER * part cf_list f0 f4 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * * part cnode chypermap_of_list f0 f3 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * part cset_of_list cfind_face f0 f5 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f5 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f4 f5 f7 cF
+ |- (((!l. ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list l)) = ((MEM ((f_list L) (((POWER (f_list L)) n) x))) l))) ==> ((\l. ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list l)) = ((MEM ((f_list L) (((POWER (f_list L)) n) x))) l))) ((find_face L) x))) = ((\l. ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list l)) = ((MEM ((f_list L) (((POWER (f_list L)) n) x))) l))) ((find_face L) x)))
T c= c==> ! c= cIN cf_list f0 cPOWER * part cf_list f0 f1 f2 * part cset_of_list b0 cMEM cf_list f0 cPOWER * part cf_list f0 f1 f2 b0 * / c= cIN cf_list f0 cPOWER * part cf_list f0 f1 f2 * part cset_of_list b0 cMEM cf_list f0 cPOWER * part cf_list f0 f1 f2 b0 cfind_face f0 f2 * / c= cIN cf_list f0 cPOWER * part cf_list f0 f1 f2 * part cset_of_list b0 cMEM cf_list f0 cPOWER * part cf_list f0 f1 f2 b0 cfind_face f0 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c/\ call / c~ c= b0 cNIL f1 ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 cF
+ |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ (good_list_nodes ((quotient_list L) N)) |- ((good_list_nodes ((quotient_list L) N)) = T)
T c==> cgood_list_nodes cquotient_list f0 f1 c= cgood_list_nodes cquotient_list f0 f1 cT
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((e_list lp) = (((POWER (f_list L)) n) x)) |- ((~ (((f_list L) (e_list lp)) = y)) = ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))
T c==> c= ce_list f0 cPOWER * part cf_list f1 f2 f3 c= c~ c= cf_list f1 ce_list f0 f4 c==> c= cf_list f1 cPOWER * part cf_list f1 f2 f3 f4 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((e_list lp) = (((POWER (f_list L)) n) x)) /\ ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
+ |- ((\d. (((good_list L) /\ ((good_list_nodes L) /\ ((good_list_nodes ((quotient_list L) N)) /\ ((((marked_list L) N) r) d)))) ==> (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cgood_list_nodes cquotient_list f0 f1 cmarked_list f0 f1 f2 b0 cis_node_nondegenerate cquotient chypermap_of_list f0 * part cloop_family_of_list f1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cMEM f6 clist_of_darts f1 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((FST y) = (FST lp)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c~ c= cFST f4 cFST f5
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> cMEM f5 f2 c==> c~ c= f3 cNIL c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> c= cFST f4 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
+ |- ((\L. (!N. ((((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))) ==> (good_list ((quotient_list L) N))))) L)
T * / ! c==> c/\ cnormal_list b0 b1 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cgood_list b0 call part cuniq b0 cgood_list cquotient_list b0 b1 f0
+ (good_list L), (good_list_nodes L), (good_list_nodes ((quotient_list L) N)), ((((marked_list L) N) r) x) |- ((~ (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N)))) = ((((good_list L) /\ ((good_list_nodes L) /\ ((good_list_nodes ((quotient_list L) N)) /\ ((((marked_list L) N) r) x)))) ==> (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N)))) ==> F))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cgood_list_nodes cquotient_list f0 f1 c==> cmarked_list f0 f1 f2 f3 c= c~ cis_node_nondegenerate cquotient chypermap_of_list f0 * part cloop_family_of_list f1 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cgood_list_nodes cquotient_list f0 f1 cmarked_list f0 f1 f2 f3 cis_node_nondegenerate cquotient chypermap_of_list f0 * part cloop_family_of_list f1 cF
+ |- (((!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) ==> ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N)) = ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N))
T c= c==> ! ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c~ c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) ((find_face L) lp)) ==> (~ ((FST y) = (FST lp))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> cMEM f5 cfind_face f1 f5 c~ c= cFST f4 cFST f5
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) y)) /\ (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x)))) ==> (((f_list L) (((POWER (f_list L)) n) x)) IN (((node (hypermap_of_list L)) y) INTER (set_of_list ((find_face L) x))))) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c==> c/\ cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f4 cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 cF
+ |- ((\D. (!p. (((permutes p) D) ==> (!x. (((p x) = x) = (((inverse p) x) = x)))))) (dart (hypermap_of_list ((quotient_list L) N))))
T * / ! c==> cpermutes b1 b0 ! c= c= * b1 b2 b2 c= cinverse b1 b2 b2 * part cdart chypermap_of_list cquotient_list f0 f1
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> cMEM f4 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f4 cfind_face f0 f6 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f1 cNIL c==> cMEM f3 f1 c==> cMEM f3 cfind_face f0 f3 c==> c= cFST f4 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f0 f4 c==> c= * * part cface chypermap_of_list f0 f4 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f3 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f4 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f3 c==> c= cf_list f0 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f3 f4 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM (e_list lp)) (((s_list L) r) x)) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f6 f1 f4 c==> cMEM ce_list f3 cs_list f0 f1 f4 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) /\ (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f1 f4 f5 c==> c= cnext_el f6 f5 cf_list f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f5 c==> cMEM cl'z f1 f0 f6 f5 cfind_face f1 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f1 f6 f5 c==> cMEM f2 cparts f1 f6 c==> cMEM f6 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f6 f5 c==> cmarked_list f1 f0 f6 f5 c==> cuniq f6 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f5 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f6 cNIL c==> cMEM f3 f6 c==> cMEM f3 cfind_face f1 f3 c==> c= cFST f7 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f5 c==> cMEM f5 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f4 f5 cfind_face f1 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 cf_list f1 cPOWER * part cf_list f1 f4 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f4 f5 * * part cnode chypermap_of_list f1 f3 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f4 f5 cfind_face f1 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f4 f5 * part cset_of_list cfind_face f1 f5 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * part cset_of_list cfind_face f1 f5 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f4 f5 f7 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 cF
+ |- (((!H. (!K. ((((hyp_iso (set_of_list o ((find_atom L) N))) (K , H)) /\ (is_node_nondegenerate H)) ==> (is_node_nondegenerate K)))) ==> ((\H. (!K. ((((hyp_iso (set_of_list o ((find_atom L) N))) (K , H)) /\ (is_node_nondegenerate H)) ==> (is_node_nondegenerate K)))) ((quotient (hypermap_of_list L)) (loop_family_of_list N)))) = ((\H. (!K. ((((hyp_iso (set_of_list o ((find_atom L) N))) (K , H)) /\ (is_node_nondegenerate H)) ==> (is_node_nondegenerate K)))) ((quotient (hypermap_of_list L)) (loop_family_of_list N))))
T c= c==> ! ! c==> c/\ chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, b1 b0 cis_node_nondegenerate b0 cis_node_nondegenerate b1 * / ! c==> c/\ chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, b1 b0 cis_node_nondegenerate b0 cis_node_nondegenerate b1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1 * / ! c==> c/\ chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, b1 b0 cis_node_nondegenerate b0 cis_node_nondegenerate b1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) x') x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM x') ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((x' = n) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> c= f4 f8 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f6 f3 c==> cMEM f6 cfind_face f1 f5 c==> cMEM cl'z f1 f0 f2 f5 cfind_face f1 f5 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f5 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c==> cmarked_list f1 f0 f2 f5 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f6 cfind_face f1 f5 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f6 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f6 c==> c= * * part cface chypermap_of_list f1 f6 * part cset_of_list cfind_face f1 f5 c==> cMEM f5 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f5 cfind_face f1 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f5 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f5 cfind_face f1 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f5 * part cset_of_list cfind_face f1 f5 c==> c= * * part cnode chypermap_of_list f1 f6 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f5 * * part cINSERT f6 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f5 ce_list f4 c==> c= cf_list f1 ce_list f4 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 f6 cF
+ ((e_list lp) = (((POWER (f_list L)) n) x)) |- ((((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> F)) = ((((f_list L) (e_list lp)) = y) ==> F))
T c==> c= ce_list f0 cPOWER * part cf_list f1 f2 f3 c= c==> c= cPOWER * part cf_list f1 f2 f3 ce_list f0 c==> c= cf_list f1 ce_list f0 f4 cF c==> c= cf_list f1 ce_list f0 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) /\ ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
+ (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) ==> (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c~ cfinal_list f0 f1 c==> cMEM f5 cparts f0 f1 c==> cMEM f3 f5 c==> c= cLAST f5 f6 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f2 c==> c= ce_list f6 cPOWER * part cf_list f0 f7 f2 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f2 c==> cMEM cl'z f0 f4 f1 f2 cfind_face f0 f2 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 cF
+ |- (((permutes (node_map (hypermap_of_list ((quotient_list L) N)))) (dart (hypermap_of_list ((quotient_list L) N)))) ==> (!x. ((((node_map (hypermap_of_list ((quotient_list L) N))) x) = x) = (((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) x) = x))))
T c==> cpermutes * part cnode_map chypermap_of_list cquotient_list f0 f1 * part cdart chypermap_of_list cquotient_list f0 f1 ! c= c= cnode_map chypermap_of_list cquotient_list f0 f1 b0 b0 c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 b0 b0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM ((f_list L) (e_list lp))) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((!x. ((((MEM x) p) /\ ((x = lp) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))) ==> F)
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f2 f1 c==> cMEM cf_list f0 ce_list f2 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f3 f5 c==> ! c==> c/\ cMEM b0 f1 c/\ c= b0 f2 c~ c= b0 cLAST f3 c~ c= cnext_el f3 b0 cf_list f0 ce_list b0 cF
- (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cmarked_list f0 f5 f4 f6 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f5 c==> cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
+ |- ((\L. ((good_list L) ==> ((dart (hypermap_of_list L)) = (set_of_list (list_of_darts L))))) ((quotient_list L) N))
T * / c==> cgood_list b0 c= * part cdart chypermap_of_list b0 * part cset_of_list clist_of_darts b0 cquotient_list f0 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
+ |- ((\d. ((((s_list L) r) d) = ((MAP (\i. (((POWER (f_list L)) i) d))) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) d))))) d)
T * / c= cs_list f0 f1 b0 cMAP / cPOWER * part cf_list f0 b1 b0 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 b0 f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
+ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) /\ F)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((FST y) = (FST lp)) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> c= cFST f4 cFST f5 cF
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((POWER (f_list L)) n) x) = (e_list lp)), ((MEM lp) p), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) n) x) = (e_list lp)) /\ ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> c= cPOWER * part cf_list f1 f4 f5 ce_list f3 c==> cMEM f3 f2 c==> cMEM f6 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f7 c==> cnormal_list f1 f7 c==> cmarked_list f1 f7 f0 f5 c/\ c= cPOWER * part cf_list f1 f4 f5 ce_list f3 c==> c= cf_list f1 ce_list f3 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f6 cF
+ |- (((!d. ((((s_list L) r) d) = ((MAP (\i. (((POWER (f_list L)) i) d))) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) d))))) ==> ((\d. ((((s_list L) r) d) = ((MAP (\i. (((POWER (f_list L)) i) d))) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) d))))) d)) = ((\d. ((((s_list L) r) d) = ((MAP (\i. (((POWER (f_list L)) i) d))) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) d))))) d))
T c= c==> ! c= cs_list f0 f1 b0 cMAP / cPOWER * part cf_list f0 b1 b0 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 b0 * / c= cs_list f0 f1 b0 cMAP / cPOWER * part cf_list f0 b1 b0 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 b0 f2 * / c= cs_list f0 f1 b0 cMAP / cPOWER * part cf_list f0 b1 b0 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 b0 f2
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 cF
+ |- ((\l. ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list l)) = ((MEM ((f_list L) (((POWER (f_list L)) n) x))) l))) ((find_face L) x))
T * / c= cIN cf_list f0 cPOWER * part cf_list f0 f1 f2 * part cset_of_list b0 cMEM cf_list f0 cPOWER * part cf_list f0 f1 f2 b0 cfind_face f0 f2
+ |- (((!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r))
T c= c==> ! ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 cF
+ |- ((\L. ((good_list L) ==> (uniq L))) L)
T * / c==> cgood_list b0 cuniq b0 f0
- (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) lp) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ ((FINITE (dart (hypermap_of_list ((quotient_list L) N)))) /\ ((permutes (node_map (hypermap_of_list ((quotient_list L) N)))) (dart (hypermap_of_list ((quotient_list L) N))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f3 f2 f2 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f3 c==> call part cuniq f0 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f4 f5 c~ c/\ cFINITE * part cdart chypermap_of_list cquotient_list f0 f3 cpermutes * part cnode_map chypermap_of_list cquotient_list f0 f3 * part cdart chypermap_of_list cquotient_list f0 f3
+ (!x. (((MEM x) ((parts L) r)) ==> (!x. ((((MEM x) x) /\ ((x = (LAST x)) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))))), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM ((f_list L) (e_list lp))) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((!x. (((MEM x) ((parts L) r)) ==> (!x. ((((MEM x) x) /\ ((x = (LAST x)) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))))) /\ F)
T c==> ! c==> cMEM b0 cparts f0 f1 ! c==> c/\ cMEM b1 b0 c/\ c= b1 cLAST b0 c~ c= b1 cLAST f1 c~ c= cnext_el f1 b1 cf_list f0 ce_list b1 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f1 f5 c/\ ! c==> cMEM b0 cparts f0 f1 ! c==> c/\ cMEM b1 b0 c/\ c= b1 cLAST b0 c~ c= b1 cLAST f1 c~ c= cnext_el f1 b1 cf_list f0 ce_list b1 cF
+ ((\n. (x' = n)) n) |- (((x' = n) ==> F) = F)
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 cF cF
+ |- (!c. (((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) y)) /\ (((f_list L) (((POWER (f_list L)) n) x)) IN c)) ==> (((f_list L) (((POWER (f_list L)) n) x)) IN (((node (hypermap_of_list L)) y) INTER c))))
T c==> c/\ cIN cf_list f0 cPOWER * part cf_list f0 f1 f2 * * part cnode chypermap_of_list f0 f3 cIN cf_list f0 cPOWER * part cf_list f0 f1 f2 f4 cIN cf_list f0 cPOWER * part cf_list f0 f1 f2 * * part cINTER * * part cnode chypermap_of_list f0 f3 f4
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- ((LAST p) = lp) |- ((\r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p))))) = (\r. (((MEM p) ((parts L) r)) /\ ((MEM r) N))))
T c==> c= cLAST f0 f1 c= / c/\ cMEM f0 cparts f2 b0 c/\ cMEM b0 f3 c= f1 cLAST f0 / c/\ cMEM f0 cparts f2 b0 cMEM b0 f3
+ (plain_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))))))))))))))))
T c==> cplain_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c/\ cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
+ (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp))))), ((((marked_list L) N) r) x) |- (~ ((MEM (e_list lp)) (((s_list L) r) x)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c/\ c= cl'y f0 f1 f2 f3 c/\ c~ cfinal_list f0 f1 c/\ cMEM f4 cparts f0 f1 c/\ cMEM f3 f4 c= cLAST f4 f5 c==> cmarked_list f0 f6 f1 f2 c~ cMEM ce_list f5 cs_list f0 f1 f2
+ (good_list L), (((find_face L) y) = ((find_face L) x)), ((MEM y) ((find_face L) x)) |- ((~ (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x)))) = ((((good_list L) /\ ((MEM y) (list_of_darts L))) ==> (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) y)))) ==> F))
T c==> cgood_list f0 c==> c= cfind_face f0 f1 cfind_face f0 f2 c==> cMEM f1 cfind_face f0 f2 c= c~ c= * * part cface chypermap_of_list f0 f1 * part cset_of_list cfind_face f0 f2 c==> c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= * * part cface chypermap_of_list f0 f1 * part cset_of_list cfind_face f0 f1 cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq r) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> cMEM f4 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f6 c/\ cuniq f1 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f4 cfind_face f0 f6 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f1 cNIL c==> cMEM f3 f1 c==> cMEM f3 cfind_face f0 f3 c==> c= cFST f4 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f0 f4 c==> c= * * part cface chypermap_of_list f0 f4 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f3 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f4 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f3 c==> c= cf_list f0 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f3 f4 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f6 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) x') x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM x') ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((!x. (((\n. (x' = n)) x) ==> F)) ==> ((?n. (x' = n)) ==> F)) = ((?n. (x' = n)) ==> F))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c= c==> ! c==> * / c= f4 b1 b0 cF c==> c? / c= f4 b0 cF c==> c? / c= f4 b0 cF
+ |- ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l)
T * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2
+ |- ((((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM y) p))))) ==> ((FST y) = (FST (HD p)))) ==> F) = F)
T c= c==> c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM f4 f3 c= cFST f4 cFST cHD f3 cF cF
+ (!x. ((((MEM x) p) /\ ((x = lp) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM ((f_list L) (e_list lp))) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- F
T c==> ! c==> c/\ cMEM b0 f0 c/\ c= b0 f1 c~ c= b0 cLAST f2 c~ c= cnext_el f2 b0 cf_list f3 ce_list b0 c==> cis_edge_nondegenerate chypermap_of_list f3 c==> cis_restricted chypermap_of_list f3 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cLAST f0 f1 c==> cMEM f1 f0 c==> cMEM cf_list f3 ce_list f1 f0 c==> cMEM f0 cparts f3 f2 c==> cMEM f2 f4 c==> cnormal_list f3 f4 c==> cmarked_list f3 f4 f2 f5 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((good_list L) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> cgood_list f1 cF
+ (good_list L), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- ((~ ((FST y) = (FST (HD p)))) = (((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM y) p))))) ==> ((FST y) = (FST (HD p)))) ==> F))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 cparts f0 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c= c~ c= cFST f1 cFST cHD f2 c==> c==> c/\ cnormal_list f0 f4 c/\ cgood_list f0 c/\ cMEM f3 f4 c/\ cMEM f2 cparts f0 f3 cMEM f1 f2 c= cFST f1 cFST cHD f2 cF
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f6 cfind_face f0 f4 c==> cMEM cl'z f0 f5 f3 f4 cfind_face f0 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f3 f4 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f3 f4 c==> cmarked_list f0 f5 f3 f4 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f6 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f3 cNIL c==> cMEM f2 f3 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f6 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f6 c==> c= * * part cface chypermap_of_list f0 f6 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f6 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f6 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f4 ce_list f2 c==> c= cf_list f0 ce_list f2 f6 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f6 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) /\ F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((all uniq) L), ((normal_list L) N) |- ((~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N))))) = ((((is_restricted (hypermap_of_list L)) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))))) ==> ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N))))) ==> F))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> call part cuniq f0 c==> cnormal_list f0 f1 c= c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1 c==> c==> c/\ cis_restricted chypermap_of_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- ((EMPTY = (dart (hypermap_of_list L))) = F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c= part cEMPTY * part cdart chypermap_of_list f0 cF
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM ((f_list L) (e_list lp))) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((uniq r) /\ (~ (r = NIL))) ==> ((all (\p. (!x. ((((MEM x) p) /\ ((x = (LAST p)) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))))) ((parts L) r))) ==> F)
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> cMEM f3 f2 c==> cMEM cf_list f1 ce_list f3 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f4 c==> cnormal_list f1 f4 c==> cmarked_list f1 f4 f0 f5 c==> c==> c/\ cuniq f0 c~ c= f0 cNIL call / ! c==> c/\ cMEM b1 b0 c/\ c= b1 cLAST b0 c~ c= b1 cLAST f0 c~ c= cnext_el f0 b1 cf_list f1 ce_list b1 cparts f1 f0 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) p) /\ (~ ((FST y) = (FST (HD p)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c/\ cMEM f5 f2 c~ c= cFST f4 cFST cHD f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f0 f5 f6 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cl'y f0 f1 f6 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f6 f1 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f0 f6 c==> cMEM cl'z f0 f2 f1 f6 cfind_face f0 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f6 c==> cMEM f3 cparts f0 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f6 c==> cmarked_list f0 f2 f1 f6 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 cF
+ ((LAST p) = lp), ((MEM p) ((parts L) r)), ((MEM r) N) |- ((\r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p))))) r)
T c==> c= cLAST f0 f1 c==> cMEM f0 cparts f2 f3 c==> cMEM f3 f4 * / c/\ cMEM f0 cparts f2 b0 c/\ cMEM b0 f4 c= f1 cLAST f0 f3
+ |- (((!p. (!x. ((((MEM x) p) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ ((normal_list L) N)))) ==> ((MEM x) (list_of_darts L))))) ==> ((\p. (!x. ((((MEM x) p) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ ((normal_list L) N)))) ==> ((MEM x) (list_of_darts L))))) p)) = ((\p. (!x. ((((MEM x) p) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ ((normal_list L) N)))) ==> ((MEM x) (list_of_darts L))))) p))
T c= c==> ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b0 cparts f0 f1 c/\ cMEM f1 f2 cnormal_list f0 f2 cMEM b1 clist_of_darts f0 * / ! c==> c/\ cMEM b1 b0 c/\ cMEM b0 cparts f0 f1 c/\ cMEM f1 f2 cnormal_list f0 f2 cMEM b1 clist_of_darts f0 f3 * / ! c==> c/\ cMEM b1 b0 c/\ cMEM b0 cparts f0 f1 c/\ cMEM f1 f2 cnormal_list f0 f2 cMEM b1 clist_of_darts f0 f3
+ |- ((\L. (!d. (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))))) L)
T * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 cMEM cPOWER * part cf_list b0 b2 b1 cfind_face b0 b1 f0
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> c/\ cuniq clist_of_darts f1 c/\ call / c~ c= b0 cNIL f1 ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 cF
- |- (!n. (((\n. (x' = n)) n) ==> (?n. (x' = n))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f4 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 cF
+ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))) ==> F)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> ! c= ! c==> cIN b1 * part cdart chypermap_of_list f0 * b0 b1 ! c==> cMEM b1 clist_of_darts f0 * b0 b1 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 cF
+ |- ((\r'. (!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r')) /\ ((MEM r') N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p'))))) r)
T * / ! c==> c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ call part cuniq f0 c/\ cMEM f2 cparts f0 f3 c/\ cMEM f3 f1 c/\ cMEM b1 cparts f0 b0 cMEM b0 f1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 cLAST f2 cLAST b1 cMEM cf_list f0 ce_list cLAST f2 b1 f3
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM (((l'y L) r) x)) ((find_face L) x)) /\ ((MEM ((((l'z L) N) r) x)) ((find_face L) x)))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ cMEM cl'y b0 b2 b3 cfind_face b0 b3 cMEM cl'z b0 b1 b2 b3 cfind_face b0 b3 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ (lp IN ((node (hypermap_of_list L)) y)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c~ cIN f5 * * part cnode chypermap_of_list f1 f4
+ (~ (lp IN (dart (hypermap_of_list ((quotient_list L) N))))), (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((LAST p) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N) |- ((~ (lp IN (dart (hypermap_of_list ((quotient_list L) N))))) /\ (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N))))))
T c==> c~ cIN f0 * part cdart chypermap_of_list cquotient_list f1 f2 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cgood_list f1 c==> c= cLAST f3 f0 c==> cMEM f3 cparts f1 f4 c==> cMEM f4 f2 c==> call part cuniq f1 c==> cnormal_list f1 f2 c/\ c~ cIN f0 * part cdart chypermap_of_list cquotient_list f1 f2 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f1 f2 c, chypermap_of_list cquotient_list f1 f2 cquotient chypermap_of_list f1 * part cloop_family_of_list f2
+ |- (((!x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L))))))) ==> ((\x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L))))))) y)) = ((\x. (!y. (((good_list_nodes L) /\ ((MEM x) (list_of_darts L))) ==> ((y IN ((node (hypermap_of_list L)) x)) = (((FST x) = (FST y)) /\ ((MEM y) (list_of_darts L))))))) y))
T c= c==> ! ! c==> c/\ cgood_list_nodes f0 cMEM b0 clist_of_darts f0 c= cIN b1 * * part cnode chypermap_of_list f0 b0 c/\ c= cFST b0 cFST b1 cMEM b1 clist_of_darts f0 * / ! c==> c/\ cgood_list_nodes f0 cMEM b0 clist_of_darts f0 c= cIN b1 * * part cnode chypermap_of_list f0 b0 c/\ c= cFST b0 cFST b1 cMEM b1 clist_of_darts f0 f1 * / ! c==> c/\ cgood_list_nodes f0 cMEM b0 clist_of_darts f0 c= cIN b1 * * part cnode chypermap_of_list f0 b0 c/\ c= cFST b0 cFST b1 cMEM b1 clist_of_darts f0 f1
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
+ |- ((\L. (!N. (((is_restricted (hypermap_of_list L)) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))))) ==> ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N))))))) L)
T * / ! c==> c/\ cis_restricted chypermap_of_list b0 c/\ cgood_list_nodes b0 c/\ cnormal_list b0 b1 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cgood_list b0 call part cuniq b0 chyp_iso * * part co part cset_of_list * * part cfind_atom b0 b1 c, chypermap_of_list cquotient_list b0 b1 cquotient chypermap_of_list b0 * part cloop_family_of_list b1 f0
+ (~ (lp IN (dart (hypermap_of_list ((quotient_list L) N))))), (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), (((MEM lp) (list_of_darts ((quotient_list L) N))) = (?p. (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p))))))), ((LAST p) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N) |- (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))
T c==> c~ cIN f0 * part cdart chypermap_of_list cquotient_list f1 f2 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cgood_list f1 c==> c= cMEM f0 clist_of_darts cquotient_list f1 f2 c? / c? / c/\ cMEM b0 cparts f1 b1 c/\ cMEM b1 f2 c= f0 cLAST b0 c==> c= cLAST f3 f0 c==> cMEM f3 cparts f1 f4 c==> cMEM f4 f2 c==> call part cuniq f1 c==> cnormal_list f1 f2 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f1 f2 c, chypermap_of_list cquotient_list f1 f2 cquotient chypermap_of_list f1 * part cloop_family_of_list f2
+ |- ((\n. (x' = n)) x')
T * / c= f0 b0 f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
+ |- ((\p. (!L. (!N. (!r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p)))))))))) p)
T * / ! ! ! c==> c/\ cgood_list b1 c/\ cnormal_list b1 b2 c/\ cMEM b3 b2 c/\ cMEM b0 cparts b1 b3 cis_edge_nondegenerate chypermap_of_list b1 c~ c= cnext_el b3 cLAST b0 cf_list b1 ce_list cLAST b0 f0
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 cF
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ ((FST lp) = (FST (HD p))) |- ((FST (HD p)) = (FST lp))
T c==> c= cFST f0 cFST cHD f1 c= cFST cHD f1 cFST f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) r) ==> (~ ((FST y) = (FST lp))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> cMEM f5 f3 c~ c= cFST f4 cFST f5
+ |- (((!L. (!N. (!r. (!p. (!r'. (!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r')) /\ ((MEM r') N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p'))))))))) ==> ((\L. (!N. (!r. (!p. (!r'. (!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r')) /\ ((MEM r') N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p'))))))))) L)) = ((\L. (!N. (!r. (!p. (!r'. (!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r')) /\ ((MEM r') N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p'))))))))) L))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list_nodes b0 c/\ cnormal_list b0 b1 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cgood_list b0 c/\ call part cuniq b0 c/\ cMEM b3 cparts b0 b2 c/\ cMEM b2 b1 c/\ cMEM b5 cparts b0 b4 cMEM b4 b1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list b0 b1 cLAST b3 cLAST b5 cMEM cf_list b0 ce_list cLAST b3 b5 * / ! ! ! ! ! c==> c/\ cgood_list_nodes b0 c/\ cnormal_list b0 b1 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cgood_list b0 c/\ call part cuniq b0 c/\ cMEM b3 cparts b0 b2 c/\ cMEM b2 b1 c/\ cMEM b5 cparts b0 b4 cMEM b4 b1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list b0 b1 cLAST b3 cLAST b5 cMEM cf_list b0 ce_list cLAST b3 b5 f0 * / ! ! ! ! ! c==> c/\ cgood_list_nodes b0 c/\ cnormal_list b0 b1 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cgood_list b0 c/\ call part cuniq b0 c/\ cMEM b3 cparts b0 b2 c/\ cMEM b2 b1 c/\ cMEM b5 cparts b0 b4 cMEM b4 b1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list b0 b1 cLAST b3 cLAST b5 cMEM cf_list b0 ce_list cLAST b3 b5 f0
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM y) ((find_face L) x)) /\ (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f3 cfind_face f0 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f5 f4 c/\ cMEM f3 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f4 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f4 f2 c==> cMEM f4 f3 c==> cMEM f6 f3 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f7 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f6 f7 f4 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f4 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N))), (good_list L), ((LAST p) = lp), (((node_map (hypermap_of_list ((quotient_list L) N))) lp) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))), ((all uniq) L), ((normal_list L) N) |- (((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))) /\ F)
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate cquotient chypermap_of_list f0 * part cloop_family_of_list f1 c==> cgood_list f0 c==> c= cLAST f2 f3 c==> c= cnode_map chypermap_of_list cquotient_list f0 f1 f3 f3 c==> cMEM f2 cparts f0 f4 c==> cMEM f4 f1 c==> chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1 c==> call part cuniq f0 c==> cnormal_list f0 f1 c/\ chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1 cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
+ |- (((!r. (((uniq r) /\ (~ (r = NIL))) ==> ((all (\p. (!x. ((((MEM x) p) /\ ((x = (LAST p)) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))))) ((parts L) r)))) ==> ((\r. (((uniq r) /\ (~ (r = NIL))) ==> ((all (\p. (!x. ((((MEM x) p) /\ ((x = (LAST p)) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))))) ((parts L) r)))) r)) = ((\r. (((uniq r) /\ (~ (r = NIL))) ==> ((all (\p. (!x. ((((MEM x) p) /\ ((x = (LAST p)) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))))) ((parts L) r)))) r))
T c= c==> ! c==> c/\ cuniq b0 c~ c= b0 cNIL call / ! c==> c/\ cMEM b2 b1 c/\ c= b2 cLAST b1 c~ c= b2 cLAST b0 c~ c= cnext_el b0 b2 cf_list f0 ce_list b2 cparts f0 b0 * / c==> c/\ cuniq b0 c~ c= b0 cNIL call / ! c==> c/\ cMEM b2 b1 c/\ c= b2 cLAST b1 c~ c= b2 cLAST b0 c~ c= cnext_el b0 b2 cf_list f0 ce_list b2 cparts f0 b0 f1 * / c==> c/\ cuniq b0 c~ c= b0 cNIL call / ! c==> c/\ cMEM b2 b1 c/\ c= b2 cLAST b1 c~ c= b2 cLAST b0 c~ c= cnext_el b0 b2 cf_list f0 ce_list b2 cparts f0 b0 f1
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) /\ (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f3 c==> cnormal_list f1 f5 c==> cmarked_list f1 f5 f0 f7 c/\ cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f3 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * part cset_of_list cfind_face f1 f7 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f6 f7 ce_list f3 c==> c= cf_list f1 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f4 cF
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 cF
+ |- ((\r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))) r)
T * / c==> c/\ cuniq b0 c/\ c~ c= b0 cNIL cMEM f0 cparts f1 b0 ! c==> cMEM b1 f0 cMEM b1 b0 f2
+ (~ (p = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((~ (p = NIL)) /\ (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f0 f3 c==> cMEM f4 f0 c==> cMEM f0 cparts f1 f2 c==> cMEM f2 f5 c==> cnormal_list f1 f5 c==> cmarked_list f1 f5 f2 f6 c/\ c~ c= f0 cNIL c==> cMEM f3 f0 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> cMEM f3 cfind_face f1 f3 c==> c= cFST f4 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f3 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f3 c==> c= cf_list f1 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f4 cF
+ |- ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y)
T * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1
+ |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (good_list_nodes ((quotient_list L) N)), ((LAST p) = lp), (((node_map (hypermap_of_list ((quotient_list L) N))) lp) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((good_list_nodes ((quotient_list L) N)) /\ F)
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cgood_list_nodes cquotient_list f0 f1 c==> c= cLAST f2 f3 c==> c= cnode_map chypermap_of_list cquotient_list f0 f1 f3 f3 c==> cMEM f2 cparts f0 f4 c==> cMEM f4 f1 c==> call part cuniq f0 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f4 f5 c/\ cgood_list_nodes cquotient_list f0 f1 cF
+ |- (((!s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) ==> ((\s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) p)) = ((\s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) p))
T c= c==> ! c==> c~ c= b0 cNIL cMEM cLAST b0 b0 * / c==> c~ c= b0 cNIL cMEM cLAST b0 b0 f0 * / c==> c~ c= b0 cNIL cMEM cLAST b0 b0 f0
+ |- ((((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) = ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x))) ==> F) = F)
T c= c==> c= cIN cf_list f0 cPOWER * part cf_list f0 f1 f2 * part cset_of_list cfind_face f0 f2 cMEM cf_list f0 cPOWER * part cf_list f0 f1 f2 cfind_face f0 f2 cF cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) /\ ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM cl'z f0 f4 f5 f6 cfind_face f0 f6 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f5 f6 c/\ cMEM cl'z f0 f4 f5 f6 cfind_face f0 f6 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) /\ ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c/\ call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f6 cNIL c==> cMEM f3 f6 c==> cMEM f3 cfind_face f0 f3 c==> c= cFST f7 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f5 c==> cMEM f5 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> c= cinverse * part cnode_map chypermap_of_list f0 f3 cf_list f0 cPOWER * part cf_list f0 f4 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * * part cnode chypermap_of_list f0 f3 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * part cset_of_list cfind_face f0 f5 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f5 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f4 f5 f7 cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N))), (good_list L), ((LAST p) = lp), (((node_map (hypermap_of_list ((quotient_list L) N))) lp) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N) |- (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate cquotient chypermap_of_list f0 * part cloop_family_of_list f1 c==> cgood_list f0 c==> c= cLAST f2 f3 c==> c= cnode_map chypermap_of_list cquotient_list f0 f1 f3 f3 c==> cMEM f2 cparts f0 f4 c==> cMEM f4 f1 c==> call part cuniq f0 c==> cnormal_list f0 f1 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1
+ |- ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) ((f_list L) (((POWER (f_list L)) n) x)))
T * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 cf_list f0 cPOWER * part cf_list f0 f1 f2
+ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c~ ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f6 f3 c==> cMEM f6 cfind_face f1 f5 c==> cMEM cl'z f1 f0 f2 f5 cfind_face f1 f5 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f5 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f5 c==> cmarked_list f1 f0 f2 f5 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f6 cfind_face f1 f5 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f6 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f6 c==> c= * * part cface chypermap_of_list f1 f6 * part cset_of_list cfind_face f1 f5 c==> cMEM f5 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f5 cfind_face f1 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f5 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f5 cfind_face f1 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f5 * part cset_of_list cfind_face f1 f5 c==> c= * * part cnode chypermap_of_list f1 f6 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f5 * * part cINSERT f6 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f5 ce_list f4 c==> c= cf_list f1 ce_list f4 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 f6 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- |- ((~ ((FINITE (dart (hypermap_of_list ((quotient_list L) N)))) /\ ((permutes (node_map (hypermap_of_list ((quotient_list L) N)))) (dart (hypermap_of_list ((quotient_list L) N)))))) = (((FINITE (dart (hypermap_of_list ((quotient_list L) N)))) /\ ((permutes (node_map (hypermap_of_list ((quotient_list L) N)))) (dart (hypermap_of_list ((quotient_list L) N))))) ==> F))
T c= c~ c/\ cFINITE * part cdart chypermap_of_list cquotient_list f0 f1 cpermutes * part cnode_map chypermap_of_list cquotient_list f0 f1 * part cdart chypermap_of_list cquotient_list f0 f1 c==> c/\ cFINITE * part cdart chypermap_of_list cquotient_list f0 f1 cpermutes * part cnode_map chypermap_of_list cquotient_list f0 f1 * part cdart chypermap_of_list cquotient_list f0 f1 cF
+ (good_list L), (good_list_nodes L), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM p) ((parts L) r)) /\ (((MEM y) p) ==> (((LAST p) = lp) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 cparts f0 f2 c==> cmarked_list f0 f3 f2 f4 c/\ cMEM f1 cparts f0 f2 c==> cMEM f5 f1 c==> c= cLAST f1 f6 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f3 c==> cMEM f2 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f2 f4 c==> c= ce_list f6 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f3 f2 f4 cfind_face f0 f4 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f2 cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM ((f_list L) (e_list lp))) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((all uniq) L) /\ F)
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM cf_list f0 ce_list f2 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f4 c==> call part cuniq f0 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f3 f5 c/\ call part cuniq f0 cF
+ (((find_face L) y) = ((find_face L) x)), ((MEM y) ((find_face L) x)) |- ((~ ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY))) = ((((MEM y) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY))) ==> F))
T c==> c= cfind_face f0 f1 cfind_face f0 f2 c==> cMEM f1 cfind_face f0 f2 c= c~ c= * * part cINTER * * part cnode chypermap_of_list f0 f1 * * part cface chypermap_of_list f0 f1 * * part cINSERT f1 part cEMPTY c==> c==> cMEM f1 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 f1 * * part cface chypermap_of_list f0 f1 * * part cINSERT f1 part cEMPTY cF
- (!P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))) |- ((\P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))) P)
T c==> ! c= ! c==> cIN b1 * part cdart chypermap_of_list f0 * b0 b1 ! c==> cMEM b1 clist_of_darts f0 * b0 b1 * / c= ! c==> cIN b1 * part cdart chypermap_of_list f0 * b0 b1 ! c==> cMEM b1 clist_of_darts f0 * b0 b1 f1
+ |- (((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) y)) /\ (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x)))) ==> (((f_list L) (((POWER (f_list L)) n) x)) IN (((node (hypermap_of_list L)) y) INTER (set_of_list ((find_face L) x)))))
T c==> c/\ cIN cf_list f0 cPOWER * part cf_list f0 f1 f2 * * part cnode chypermap_of_list f0 f3 cIN cf_list f0 cPOWER * part cf_list f0 f1 f2 * part cset_of_list cfind_face f0 f2 cIN cf_list f0 cPOWER * part cf_list f0 f1 f2 * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f4 c==> c= cnext_el f3 f5 cf_list f1 f5 c==> c= cfind_face f1 f6 cfind_face f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f4 f2 c==> cMEM f4 f3 c==> cMEM f5 f3 c==> cMEM f6 f2 c==> cMEM f6 cfind_face f1 f5 c==> cMEM cl'z f1 f0 f3 f5 cfind_face f1 f5 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f5 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f5 c==> cmarked_list f1 f0 f3 f5 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f6 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f6 c==> c= * * part cface chypermap_of_list f1 f6 * part cset_of_list cfind_face f1 f5 c==> cMEM f5 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f5 cfind_face f1 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f5 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f5 cfind_face f1 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f5 * part cset_of_list cfind_face f1 f5 c==> c= * * part cnode chypermap_of_list f1 f6 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f5 * * part cINSERT f6 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f5 ce_list f4 c==> c= cf_list f1 ce_list f4 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 f6 cF
- |- ((?r. t) = t)
T c= c? / f0 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)) /\ F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * * part cface chypermap_of_list f1 f3 * * part cINSERT f3 part cEMPTY c==> c= cLAST f4 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cfind_face f1 f3 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f7 f2 c==> cMEM f3 f4 c==> cMEM f3 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f2 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f7 c==> cMEM f4 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * * part cface chypermap_of_list f1 f3 * * part cINSERT f3 part cEMPTY cF
+ (good_list L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) |- (~ ((MEM (e_list lp)) (((s_list L) r) x)))
T c==> cgood_list f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'y f0 f2 f3 f4 c/\ c~ cfinal_list f0 f2 c/\ cMEM f5 cparts f0 f2 c/\ cMEM f4 f5 c= cLAST f5 f6 c~ cMEM ce_list f6 cs_list f0 f2 f3
- (((next_el r) lp) = ((f_list L) (e_list lp))) |- (((f_list L) (e_list lp)) = ((next_el r) lp))
T c==> c= cnext_el f0 f1 cf_list f2 ce_list f1 c= cf_list f2 ce_list f1 cnext_el f0 f1
+ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 cF
+ |- (((!r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))))) ==> ((\r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))))) r)) = ((\r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))))) r))
T c= c==> ! ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 cMEM b2 b1 c= cFST b2 cFST cHD b1 * / ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 cMEM b2 b1 c= cFST b2 cFST cHD b1 f2 * / ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 cMEM b2 b1 c= cFST b2 cFST cHD b1 f2
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N))), (good_list L), ((LAST p) = lp), (((node_map (hypermap_of_list ((quotient_list L) N))) lp) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N) |- (((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))) ==> F)
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate cquotient chypermap_of_list f0 * part cloop_family_of_list f1 c==> cgood_list f0 c==> c= cLAST f2 f3 c==> c= cnode_map chypermap_of_list cquotient_list f0 f1 f3 f3 c==> cMEM f2 cparts f0 f4 c==> cMEM f4 f1 c==> call part cuniq f0 c==> cnormal_list f0 f1 c==> chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1 cF
+ ((e_list lp) = (((POWER (f_list L)) n) x)) |- ((((POWER (f_list L)) n) x) = (e_list lp))
T c==> c= ce_list f0 cPOWER * part cf_list f1 f2 f3 c= cPOWER * part cf_list f1 f2 f3 ce_list f0
+ |- ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)
T * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((lp IN ((node (hypermap_of_list L)) y)) /\ ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c/\ cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) /\ F)
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (~ (((next_el r) lp) = ((f_list L) (e_list lp)))) |- ((((f_list L) (e_list lp)) = ((next_el r) lp)) = F)
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c= c= cf_list f2 ce_list f1 cnext_el f0 f1 cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM ((f_list L) (e_list lp))) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N) |- ((~ (((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) lp) = lp)) = ((((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM r) N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p)) = ((MEM ((f_list L) (e_list (LAST p)))) p))) ==> F))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM cf_list f0 ce_list f2 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f4 c==> call part cuniq f0 c==> cnormal_list f0 f4 c= c~ c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f4 f2 f2 c==> c==> c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f4 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ call part cuniq f0 c/\ cMEM f1 cparts f0 f3 c/\ cMEM f3 f4 c/\ cMEM f1 cparts f0 f3 cMEM f3 f4 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f4 cLAST f1 cLAST f1 cMEM cf_list f0 ce_list cLAST f1 f1 cF
+ |- (((!r'. (!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r')) /\ ((MEM r') N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p'))))) ==> ((\r'. (!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r')) /\ ((MEM r') N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p'))))) r)) = ((\r'. (!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r')) /\ ((MEM r') N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p'))))) r))
T c= c==> ! ! c==> c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ call part cuniq f0 c/\ cMEM f2 cparts f0 f3 c/\ cMEM f3 f1 c/\ cMEM b1 cparts f0 b0 cMEM b0 f1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 cLAST f2 cLAST b1 cMEM cf_list f0 ce_list cLAST f2 b1 * / ! c==> c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ call part cuniq f0 c/\ cMEM f2 cparts f0 f3 c/\ cMEM f3 f1 c/\ cMEM b1 cparts f0 b0 cMEM b0 f1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 cLAST f2 cLAST b1 cMEM cf_list f0 ce_list cLAST f2 b1 f3 * / ! c==> c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ call part cuniq f0 c/\ cMEM f2 cparts f0 f3 c/\ cMEM f3 f1 c/\ cMEM b1 cparts f0 b0 cMEM b0 f1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 cLAST f2 cLAST b1 cMEM cf_list f0 ce_list cLAST f2 b1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cf_list f1 ce_list f5 f4 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 f4 cF
+ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) |- ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cIN f1 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 f1 * * part cface chypermap_of_list f0 f1 * * part cINSERT f1 part cEMPTY
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 cF
+ (!P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))) |- ((!d. ((d IN (dart (hypermap_of_list L))) ==> ((\x. ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY))) d))) = (!d. (((MEM d) (list_of_darts L)) ==> ((\x. ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY))) d))))
T c==> ! c= ! c==> cIN b1 * part cdart chypermap_of_list f0 * b0 b1 ! c==> cMEM b1 clist_of_darts f0 * b0 b1 c= ! c==> cIN b0 * part cdart chypermap_of_list f0 * / c= * * part cINTER * * part cnode chypermap_of_list f0 b1 * * part cface chypermap_of_list f0 b1 * * part cINSERT b1 part cEMPTY b0 ! c==> cMEM b0 clist_of_darts f0 * / c= * * part cINTER * * part cnode chypermap_of_list f0 b1 * * part cface chypermap_of_list f0 b1 * * part cINSERT b1 part cEMPTY b0
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((\x. (((MEM x) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) /\ ((e_list lp) = (((POWER (f_list L)) x) x)))) x') ==> F)
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f4 c==> cmarked_list f0 f6 f1 f4 c==> * / c/\ cMEM b0 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c= ce_list f3 cPOWER * part cf_list f0 b0 f4 f7 cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((all uniq) L), ((normal_list L) N) |- (((good_list ((quotient_list L) N)) ==> (((MEM lp) (list_of_darts ((quotient_list L) N))) ==> (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N))))))) = (((((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))) ==> (good_list ((quotient_list L) N))) ==> (((MEM lp) (list_of_darts ((quotient_list L) N))) ==> (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cgood_list f0 c==> call part cuniq f0 c==> cnormal_list f0 f1 c= c==> cgood_list cquotient_list f0 f1 c==> cMEM f2 clist_of_darts cquotient_list f0 f1 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1 c==> c==> c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 cgood_list cquotient_list f0 f1 c==> cMEM f2 clist_of_darts cquotient_list f0 f1 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) /\ ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (r = NIL)) /\ (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c/\ c~ c= f3 cNIL c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> c= cFST f4 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) |- (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) = T)
T c==> cMEM cPOWER * part cf_list f0 f1 f2 cfind_face f0 f2 c= cMEM cPOWER * part cf_list f0 f1 f2 cfind_face f0 f2 cT
- ((all (\l. (~ (l = NIL)))) L) |- (((all (\l. (~ (l = NIL)))) L) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) /\ (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call * part cf_last f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c/\ call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> F)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cf_list f1 ce_list f5 f4 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((FST y) = (FST lp)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c~ c= cFST f4 cFST f5
+ |- ((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x)))))) = T)
T c= ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= cl'y f0 b0 b1 f2 c/\ c~ cfinal_list f0 b0 c/\ cMEM f3 cparts f0 b0 c/\ cMEM f2 f3 c= cLAST f3 f4 c~ cMEM ce_list f4 cs_list f0 b0 b1 cT
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 cF
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
+ |- (((!x. (!y. ((y IN ((node (hypermap_of_list L)) x)) ==> (((inverse (node_map (hypermap_of_list L))) y) IN ((node (hypermap_of_list L)) x))))) ==> ((\x. (!y. ((y IN ((node (hypermap_of_list L)) x)) ==> (((inverse (node_map (hypermap_of_list L))) y) IN ((node (hypermap_of_list L)) x))))) lp)) = ((\x. (!y. ((y IN ((node (hypermap_of_list L)) x)) ==> (((inverse (node_map (hypermap_of_list L))) y) IN ((node (hypermap_of_list L)) x))))) lp))
T c= c==> ! ! c==> cIN b1 * * part cnode chypermap_of_list f0 b0 cIN cinverse * part cnode_map chypermap_of_list f0 b1 * * part cnode chypermap_of_list f0 b0 * / ! c==> cIN b1 * * part cnode chypermap_of_list f0 b0 cIN cinverse * part cnode_map chypermap_of_list f0 b1 * * part cnode chypermap_of_list f0 b0 f1 * / ! c==> cIN b1 * * part cnode chypermap_of_list f0 b0 cIN cinverse * part cnode_map chypermap_of_list f0 b1 * * part cnode chypermap_of_list f0 b0 f1
+ |- (((!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) ==> ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x)) = ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x))
T c= c==> ! ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0
- (((f_list L) (e_list lp)) = ((next_el r) lp)) |- (((next_el r) lp) = ((f_list L) (e_list lp)))
T c==> c= cf_list f0 ce_list f1 cnext_el f2 f1 c= cnext_el f2 f1 cf_list f0 ce_list f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 cF
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), ((LAST p) = lp), ((MEM lp) p), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) /\ (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f2 * part cset_of_list cfind_face f1 f3 * * part cINSERT f4 part cEMPTY c==> c= cLAST f5 f2 c==> cMEM f2 f5 c==> cMEM f4 f5 c==> cMEM f5 cparts f1 f0 c==> cMEM f0 f6 c==> cnormal_list f1 f6 c==> cmarked_list f1 f6 f0 f3 c/\ c= * * part cINTER * * part cnode chypermap_of_list f1 f2 * part cset_of_list cfind_face f1 f3 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f3 ce_list f2 c==> c= cf_list f1 ce_list f2 f4 c==> c= cinverse * part cnode_map chypermap_of_list f1 f2 f4 cF
+ (((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) lp) = lp) |- ((~ (((node_map (hypermap_of_list ((quotient_list L) N))) lp) = lp)) = (((((node_map (hypermap_of_list ((quotient_list L) N))) lp) = lp) = (((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) lp) = lp)) ==> F))
T c==> c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 f2 f2 c= c~ c= cnode_map chypermap_of_list cquotient_list f0 f1 f2 f2 c==> c= c= cnode_map chypermap_of_list cquotient_list f0 f1 f2 f2 c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 f2 f2 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c/\ cuniq clist_of_darts f1 c/\ call / c~ c= b0 cNIL f1 ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cis_restricted chypermap_of_list f0 cF
+ (((MEM lp) (list_of_darts ((quotient_list L) N))) = (?p. (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p))))))) |- ((?p. (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p)))))) = ((MEM lp) (list_of_darts ((quotient_list L) N))))
T c==> c= cMEM f0 clist_of_darts cquotient_list f1 f2 c? / c? / c/\ cMEM b0 cparts f1 b1 c/\ cMEM b1 f2 c= f0 cLAST b0 c= c? / c? / c/\ cMEM b0 cparts f1 b1 c/\ cMEM b1 f2 c= f0 cLAST b0 cMEM f0 clist_of_darts cquotient_list f1 f2
+ (uniq (flatten N)), ((MEM r) N) |- ((~ (uniq r)) = ((((uniq (flatten N)) /\ ((MEM r) N)) ==> (uniq r)) ==> F))
T c==> cuniq cflatten f0 c==> cMEM f1 f0 c= c~ cuniq f1 c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1 cF
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ (((MEM y) ((find_face L) x)) /\ ((MEM ((((l'z L) N) r) x)) ((find_face L) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c~ c/\ cMEM f6 cfind_face f0 f5 cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
+ |- ((((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM lp) p))))) ==> ((FST lp) = (FST (HD p)))) ==> (~ ((FST y) = (FST (HD p))))) = (~ ((FST y) = (FST (HD p)))))
T c= c==> c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM f4 f3 c= cFST f4 cFST cHD f3 c~ c= cFST f5 cFST cHD f3 c~ c= cFST f5 cFST cHD f3
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ ((MEM (e_list lp)) (((s_list L) r) x)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 cs_flag_list f0 f6 f1 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c~ cMEM ce_list f3 cs_list f0 f1 f4
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 cF
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> cMEM f4 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f6 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f4 cfind_face f0 f6 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f1 cNIL c==> cMEM f3 f1 c==> cMEM f3 cfind_face f0 f3 c==> c= cFST f4 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f0 f4 c==> c= * * part cface chypermap_of_list f0 f4 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f3 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f4 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f3 c==> c= cf_list f0 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f3 f4 cF
- (planar_hypermap (hypermap_of_list L)) |- ((planar_hypermap (hypermap_of_list L)) = T)
T c==> cplanar_hypermap chypermap_of_list f0 c= cplanar_hypermap chypermap_of_list f0 cT
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f4 c==> cMEM f5 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f4 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f4 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f4 f3 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f3 c==> c= ce_list f2 cPOWER * part cf_list f0 f7 f3 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f3 c==> cMEM cl'z f0 f6 f4 f3 cfind_face f0 f3 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f4 cF
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L))
T c= c==> ! ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((f_list L) (e_list lp)) = y), ((MEM lp) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> (((MEM y) p) ==> F))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> c= cf_list f1 ce_list f3 f4 c==> cMEM f3 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> cnormal_list f1 f5 c==> cmarked_list f1 f5 f0 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f4 c==> cMEM f4 f2 cF
+ (~ (((next_el r) lp) = ((f_list L) (e_list lp)))) |- ((((next_el r) lp) = ((f_list L) (e_list lp))) = F)
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c= c= cnext_el f0 f1 cf_list f2 ce_list f1 cF
+ (!x. ((((MEM x) p) /\ ((x = lp) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM ((f_list L) (e_list lp))) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((!x. ((((MEM x) p) /\ ((x = lp) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))) /\ F)
T c==> ! c==> c/\ cMEM b0 f0 c/\ c= b0 f1 c~ c= b0 cLAST f2 c~ c= cnext_el f2 b0 cf_list f3 ce_list b0 c==> cis_edge_nondegenerate chypermap_of_list f3 c==> cis_restricted chypermap_of_list f3 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cLAST f0 f1 c==> cMEM f1 f0 c==> cMEM cf_list f3 ce_list f1 f0 c==> cMEM f0 cparts f3 f2 c==> cMEM f2 f4 c==> cnormal_list f3 f4 c==> cmarked_list f3 f4 f2 f5 c/\ ! c==> c/\ cMEM b0 f0 c/\ c= b0 f1 c~ c= b0 cLAST f2 c~ c= cnext_el f2 b0 cf_list f3 ce_list b0 cF
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f1 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f5 f6 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f5 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f6 c==> cs_flag_list f0 f3 f5 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f4 cfind_face f0 f6 c==> cMEM cl'z f0 f3 f5 f6 cfind_face f0 f6 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f4 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f4 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f4 c==> c= * * part cface chypermap_of_list f0 f4 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f4 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f4 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f6 f1 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 cF
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f3 f4 c==> cmarked_list f0 f5 f3 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f3 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f4 c==> cMEM cl'z f0 f5 f3 f4 cfind_face f0 f4 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f6 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f3 cNIL c==> cMEM f2 f3 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f6 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f6 c==> c= * * part cface chypermap_of_list f0 f6 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f6 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f6 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f4 ce_list f2 c==> c= cf_list f0 ce_list f2 f6 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f6 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((FST y) = (FST lp)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c~ c= cFST f4 cFST f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f4 c==> c= cnext_el f3 f5 cf_list f1 f5 c==> c= cfind_face f1 f6 cfind_face f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f3 c==> cMEM f6 f2 c==> cMEM f6 cfind_face f1 f5 c==> cMEM cl'z f1 f0 f3 f5 cfind_face f1 f5 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f5 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f5 c==> cmarked_list f1 f0 f3 f5 c==> cMEM f4 f2 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f6 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f6 c==> c= * * part cface chypermap_of_list f1 f6 * part cset_of_list cfind_face f1 f5 c==> cMEM f5 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f5 cfind_face f1 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f5 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f5 cfind_face f1 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f5 * part cset_of_list cfind_face f1 f5 c==> c= * * part cnode chypermap_of_list f1 f6 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f5 * * part cINSERT f6 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f5 ce_list f4 c==> c= cf_list f1 ce_list f4 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 f6 cF
+ |- ((\H. (!x. (!y. ((y IN ((node H) x)) ==> (((node H) x) = ((node H) y)))))) (hypermap_of_list L))
T * / ! ! c==> cIN b2 * * part cnode b0 b1 c= * * part cnode b0 b1 * * part cnode b0 b2 chypermap_of_list f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((MEM lp) p) ==> ((MEM lp) r)) ==> (~ ((FST y) = (FST lp))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> c==> cMEM f5 f2 cMEM f5 f3 c~ c= cFST f4 cFST f5
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 cF
+ (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N))) |- ((is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N))) = T)
T c==> cis_node_nondegenerate cquotient chypermap_of_list f0 * part cloop_family_of_list f1 c= cis_node_nondegenerate cquotient chypermap_of_list f0 * part cloop_family_of_list f1 cT
+ |- (((!d. (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d))))) ==> ((\d. (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d))))) x)) = ((\d. (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b1 b0 cfind_face f0 b0 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b1 b0 cfind_face f0 b0 f1 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b1 b0 cfind_face f0 b0 f1
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((LAST p) = lp), ((MEM lp) p), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((FST y) = (FST lp)) /\ ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f2 cFST f3 c==> c= cLAST f4 f3 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f4 cparts f1 f0 c==> cMEM f0 f5 c==> cnormal_list f1 f5 c==> cmarked_list f1 f5 f0 f6 c/\ c= cFST f2 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f1 f2 c==> c= * * part cface chypermap_of_list f1 f2 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f3 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f2 * * part cnode chypermap_of_list f1 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * part cset_of_list cfind_face f1 f6 * * part cINSERT f2 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f3 c==> c= cf_list f1 ce_list f3 f2 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f2 cF
+ (((f_list L) (e_list lp)) = y), ((((POWER (f_list L)) n) x) = (e_list lp)) |- ((~ (((inverse (node_map (hypermap_of_list L))) lp) = y)) = ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> F))
T c==> c= cf_list f0 ce_list f1 f2 c==> c= cPOWER * part cf_list f0 f3 f4 ce_list f1 c= c~ c= cinverse * part cnode_map chypermap_of_list f0 f1 f2 c==> c= cinverse * part cnode_map chypermap_of_list f0 f1 cf_list f0 cPOWER * part cf_list f0 f3 f4 cF
+ ((MEM x) (list_of_darts L)) |- (((MEM x) (list_of_darts L)) = T)
T c==> cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cT
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> cnormal_list f1 f5 c==> cmarked_list f1 f5 f0 f6 c==> cIN f3 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f3 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f3 c==> c= cf_list f1 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f4 cF
+ |- ((\L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x)))) L)
T * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2
+ |- ((\N. (((good_list L) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((all uniq) L))))) ==> (good_list_nodes ((quotient_list L) N)))) N)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 b0 c/\ cis_edge_nondegenerate chypermap_of_list f0 call part cuniq f0 cgood_list_nodes cquotient_list f0 b0 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f6 c==> c= ce_list f2 cPOWER * part cf_list f0 f7 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_node_nondegenerate (hypermap_of_list L)) /\ ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ ((MEM (e_list lp)) (((s_list L) r) x)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c/\ cMEM f1 f6 c/\ cMEM f4 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 cs_flag_list f0 f6 f1 f4 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c~ cMEM ce_list f3 cs_list f0 f1 f4
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c/\ cnormal_list f0 f5 c==> cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f6 c==> c= ce_list f2 cPOWER * part cf_list f0 f7 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 cF
- (~ (lp IN (dart (hypermap_of_list ((quotient_list L) N))))), (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((all uniq) L), ((normal_list L) N) |- ((((MEM lp) (list_of_darts ((quotient_list L) N))) = (?p. (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p))))))) ==> ((?p. (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p)))))) ==> (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))))
T c==> c~ cIN f0 * part cdart chypermap_of_list cquotient_list f1 f2 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cgood_list f1 c==> call part cuniq f1 c==> cnormal_list f1 f2 c==> c= cMEM f0 clist_of_darts cquotient_list f1 f2 c? / c? / c/\ cMEM b0 cparts f1 b1 c/\ cMEM b1 f2 c= f0 cLAST b0 c==> c? / c? / c/\ cMEM b0 cparts f1 b1 c/\ cMEM b1 f2 c= f0 cLAST b0 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f1 f2 c, chypermap_of_list cquotient_list f1 f2 cquotient chypermap_of_list f1 * part cloop_family_of_list f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), (((f_list L) (e_list lp)) = y), ((((POWER (f_list L)) n) x) = (e_list lp)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cf_list f1 ce_list f5 f4 c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 f4 cF
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c~ c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5
+ |- (((!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) ==> ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y)) = ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
+ |- ((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))) = T)
T c= ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'y f0 b1 b2 f1 c/\ c~ cfinal_list f0 b1 c/\ cMEM f2 cparts f0 b1 c/\ cMEM f1 f2 c= cLAST f2 f3 c~ cMEM ce_list f3 cs_list f0 b1 b2 cT
- (is_node_nondegenerate (hypermap_of_list L)) |- ((is_node_nondegenerate (hypermap_of_list L)) = T)
T c==> cis_node_nondegenerate chypermap_of_list f0 c= cis_node_nondegenerate chypermap_of_list f0 cT
+ |- ((\x. (!y. ((y IN ((node (hypermap_of_list L)) x)) ==> (((inverse (node_map (hypermap_of_list L))) y) IN ((node (hypermap_of_list L)) x))))) lp)
T * / ! c==> cIN b1 * * part cnode chypermap_of_list f0 b0 cIN cinverse * part cnode_map chypermap_of_list f0 b1 * * part cnode chypermap_of_list f0 b0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (r = NIL)) /\ (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f4 f2 c==> cMEM f6 f3 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c~ c= f3 cNIL c==> cMEM f4 f3 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
+ (~ (r = NIL)), (uniq r) |- ((~ (!x. (((MEM x) ((parts L) r)) ==> (!x. ((((MEM x) x) /\ ((x = (LAST x)) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x))))))))) = ((((uniq r) /\ (~ (r = NIL))) ==> ((all (\p. (!x. ((((MEM x) p) /\ ((x = (LAST p)) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))))) ((parts L) r))) ==> F))
T c==> c~ c= f0 cNIL c==> cuniq f0 c= c~ ! c==> cMEM b0 cparts f1 f0 ! c==> c/\ cMEM b1 b0 c/\ c= b1 cLAST b0 c~ c= b1 cLAST f0 c~ c= cnext_el f0 b1 cf_list f1 ce_list b1 c==> c==> c/\ cuniq f0 c~ c= f0 cNIL call / ! c==> c/\ cMEM b1 b0 c/\ c= b1 cLAST b0 c~ c= b1 cLAST f0 c~ c= cnext_el f0 b1 cf_list f1 ce_list b1 cparts f1 f0 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), ((((POWER (f_list L)) n) x) = (e_list lp)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) n) x) = (e_list lp)) /\ ((((f_list L) (e_list lp)) = y) ==> F))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cf_list f1 ce_list f5 f4 cF
+ |- ((\L. ((good_list L) ==> (!P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))))) L)
T * / c==> cgood_list b0 ! c= ! c==> cIN b2 * part cdart chypermap_of_list b0 * b1 b2 ! c==> cMEM b2 clist_of_darts b0 * b1 b2 f0
+ |- (((!H. (!x. (x IN ((node H) x)))) ==> ((\H. (!x. (x IN ((node H) x)))) H)) = ((\H. (!x. (x IN ((node H) x)))) H))
T c= c==> ! ! cIN b1 * * part cnode b0 b1 * / ! cIN b1 * * part cnode b0 b1 f0 * / ! cIN b1 * * part cnode b0 b1 f0
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cIN f1 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) /\ F)
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> c/\ cuniq cflatten f7 c/\ call / c~ c= b0 cNIL f7 c/\ call * part cf_last f0 f7 c/\ call * part cloop_list f0 f7 ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ c/\ cuniq cflatten f7 c/\ call / c~ c= b0 cNIL f7 c/\ call * part cf_last f0 f7 c/\ call * part cloop_list f0 f7 ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq L) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> cuniq f1 cF
+ |- (((!L. (!p. (!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))))) ==> ((\L. (!p. (!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))))) L)) = ((\L. (!p. (!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))))) L))
T c= c==> ! ! ! c==> c/\ cuniq b2 c/\ c~ c= b2 cNIL cMEM b1 cparts b0 b2 ! c==> cMEM b3 b1 cMEM b3 b2 * / ! ! c==> c/\ cuniq b2 c/\ c~ c= b2 cNIL cMEM b1 cparts b0 b2 ! c==> cMEM b3 b1 cMEM b3 b2 f0 * / ! ! c==> c/\ cuniq b2 c/\ c~ c= b2 cNIL cMEM b1 cparts b0 b2 ! c==> cMEM b3 b1 cMEM b3 b2 f0
+ (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> cnormal_list f1 f5 c==> cmarked_list f1 f5 f0 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f3 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f3 c==> c= cf_list f1 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f4 cF
+ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((good_list L) ==> (!P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d)))))) ==> F)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> c==> cgood_list f0 ! c= ! c==> cIN b1 * part cdart chypermap_of_list f0 * b0 b1 ! c==> cMEM b1 clist_of_darts f0 * b0 b1 cF
+ (!x. ((x IN (dart (hypermap_of_list ((quotient_list L) N)))) ==> (~ (((node_map (hypermap_of_list ((quotient_list L) N))) x) = x)))) |- ((((lp IN (dart (hypermap_of_list ((quotient_list L) N)))) ==> (~ (((node_map (hypermap_of_list ((quotient_list L) N))) lp) = lp))) ==> (((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))) ==> F)) = (((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))) ==> F))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list cquotient_list f0 f1 c~ c= cnode_map chypermap_of_list cquotient_list f0 f1 b0 b0 c= c==> c==> cIN f2 * part cdart chypermap_of_list cquotient_list f0 f1 c~ c= cnode_map chypermap_of_list cquotient_list f0 f1 f2 f2 c==> chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1 cF c==> chyp_iso * * part co part cset_of_list * * part cfind_atom f0 f1 c, chypermap_of_list cquotient_list f0 f1 cquotient chypermap_of_list f0 * part cloop_family_of_list f1 cF
+ |- (!a. (!b. (!c. (((a IN b) /\ (a IN c)) ==> (a IN (b INTER c))))))
T c==> c/\ cIN f0 f1 cIN f0 f2 cIN f0 * * part cINTER f1 f2
+ |- (((!p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r)) /\ ((MEM r) N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p')))) ==> ((\p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r)) /\ ((MEM r) N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p')))) p)) = ((\p'. (((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ (((all uniq) L) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (((MEM p') ((parts L) r)) /\ ((MEM r) N))))))))) ==> ((((inverse (node_map (hypermap_of_list ((quotient_list L) N)))) (LAST p)) = (LAST p')) = ((MEM ((f_list L) (e_list (LAST p)))) p')))) p))
T c= c==> ! c==> c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ call part cuniq f0 c/\ cMEM f2 cparts f0 f3 c/\ cMEM f3 f1 c/\ cMEM b0 cparts f0 f3 cMEM f3 f1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 cLAST f2 cLAST b0 cMEM cf_list f0 ce_list cLAST f2 b0 * / c==> c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ call part cuniq f0 c/\ cMEM f2 cparts f0 f3 c/\ cMEM f3 f1 c/\ cMEM b0 cparts f0 f3 cMEM f3 f1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 cLAST f2 cLAST b0 cMEM cf_list f0 ce_list cLAST f2 b0 f2 * / c==> c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ call part cuniq f0 c/\ cMEM f2 cparts f0 f3 c/\ cMEM f3 f1 c/\ cMEM b0 cparts f0 f3 cMEM f3 f1 c= c= cinverse * part cnode_map chypermap_of_list cquotient_list f0 f1 cLAST f2 cLAST b0 cMEM cf_list f0 ce_list cLAST f2 b0 f2
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((node_map (hypermap_of_list ((quotient_list L) N))) lp) = lp), ((MEM p) ((parts L) r)), ((MEM r) N), ((all uniq) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ (good_list_nodes ((quotient_list L) N)))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= cnode_map chypermap_of_list cquotient_list f0 f3 f2 f2 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f3 c==> call part cuniq f0 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f4 f5 c~ cgood_list_nodes cquotient_list f0 f3
+ |- ((\L. (!N. (((good_list L) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((all uniq) L))))) ==> (good_list_nodes ((quotient_list L) N))))) L)
T * / ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cnormal_list b0 b1 c/\ cis_edge_nondegenerate chypermap_of_list b0 call part cuniq b0 cgood_list_nodes cquotient_list b0 b1 f0
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 cF
+ |- (((!N. (((good_list L) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((all uniq) L))))) ==> (good_list_nodes ((quotient_list L) N)))) ==> ((\N. (((good_list L) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((all uniq) L))))) ==> (good_list_nodes ((quotient_list L) N)))) N)) = ((\N. (((good_list L) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((all uniq) L))))) ==> (good_list_nodes ((quotient_list L) N)))) N))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 b0 c/\ cis_edge_nondegenerate chypermap_of_list f0 call part cuniq f0 cgood_list_nodes cquotient_list f0 b0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 b0 c/\ cis_edge_nondegenerate chypermap_of_list f0 call part cuniq f0 cgood_list_nodes cquotient_list f0 b0 f1 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 b0 c/\ cis_edge_nondegenerate chypermap_of_list f0 call part cuniq f0 cgood_list_nodes cquotient_list f0 b0 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
+ (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f4 f3 c==> cMEM f6 f1 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f3 f4 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f3 f4 c==> cmarked_list f0 f5 f3 f4 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f4 c==> cMEM cl'z f0 f5 f3 f4 cfind_face f0 f4 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f6 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f3 cNIL c==> cMEM f2 f3 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f6 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f6 c==> c= * * part cface chypermap_of_list f0 f6 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f6 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f6 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f4 ce_list f2 c==> c= cf_list f0 ce_list f2 f6 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f6 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), (((MEM x') ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) /\ ((e_list lp) = (((POWER (f_list L)) x') x))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM x') ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> c/\ cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c= ce_list f3 cPOWER * part cf_list f0 f6 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f4 c==> cmarked_list f0 f7 f1 f4 cF
+ |- (((((uniq (flatten N)) /\ ((MEM r) N)) ==> (uniq r)) ==> F) = F)
T c= c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1 cF cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST (HD p))), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f3 cFST cHD f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * * part cface chypermap_of_list f1 f3 * * part cINSERT f3 part cEMPTY c==> c= cLAST f4 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cfind_face f1 f3 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f7 f2 c==> cMEM f3 f4 c==> cMEM f3 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f2 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f7 c==> cMEM f4 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((find_face L) y) = ((find_face L) x)) /\ F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ c= cfind_face f1 f7 cfind_face f1 f6 cF
+ |- ((\x. (x IN ((node H) x))) x)
T * / cIN b0 * * part cnode f0 b0 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) /\ ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
+ |- (((!r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))) ==> ((\r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))) r)) = ((\r. (((uniq r) /\ ((~ (r = NIL)) /\ ((MEM p) ((parts L) r)))) ==> (!a. (((MEM a) p) ==> ((MEM a) r))))) r))
T c= c==> ! c==> c/\ cuniq b0 c/\ c~ c= b0 cNIL cMEM f0 cparts f1 b0 ! c==> cMEM b1 f0 cMEM b1 b0 * / c==> c/\ cuniq b0 c/\ c~ c= b0 cNIL cMEM f0 cparts f1 b0 ! c==> cMEM b1 f0 cMEM b1 b0 f2 * / c==> c/\ cuniq b0 c/\ c~ c= b0 cNIL cMEM f0 cparts f1 b0 ! c==> cMEM b1 f0 cMEM b1 b0 f2
+ |- (((!N. (!r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p)))))))) ==> ((\N. (!r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p)))))))) N)) = ((\N. (!r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p)))))))) N))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 c/\ cMEM f1 cparts f0 b1 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el b1 cLAST f1 cf_list f0 ce_list cLAST f1 * / ! c==> c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 c/\ cMEM f1 cparts f0 b1 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el b1 cLAST f1 cf_list f0 ce_list cLAST f1 f2 * / ! c==> c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 c/\ cMEM f1 cparts f0 b1 cis_edge_nondegenerate chypermap_of_list f0 c~ c= cnext_el b1 cLAST f1 cf_list f0 ce_list cLAST f1 f2
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f4 c==> cMEM f5 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f4 f3 c/\ cMEM f3 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f4 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f4 f3 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f3 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f3 c==> cMEM cl'z f0 f6 f4 f3 cfind_face f0 f3 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f5 cfind_face f0 f3 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f5 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f5 c==> c= * * part cface chypermap_of_list f0 f5 * part cset_of_list cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f3 cfind_face f0 f3 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f3 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f3 cfind_face f0 f3 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f3 * part cset_of_list cfind_face f0 f3 c==> c= * * part cnode chypermap_of_list f0 f5 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f3 * * part cINSERT f5 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f3 ce_list f2 c==> c= cf_list f0 ce_list f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f5 cF
- ((MEM (e_list lp)) (((s_list L) r) x)) |- (((MEM (e_list lp)) (((s_list L) r) x)) = T)
T c==> cMEM ce_list f0 cs_list f1 f2 f3 c= cMEM ce_list f0 cs_list f1 f2 f3 cT
+ |- ((\L. (!N. (!r. (!d. (((good_list L) /\ ((good_list_nodes L) /\ ((good_list_nodes ((quotient_list L) N)) /\ ((((marked_list L) N) r) d)))) ==> (is_node_nondegenerate ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cgood_list_nodes cquotient_list b0 b1 cmarked_list b0 b1 b2 b3 cis_node_nondegenerate cquotient chypermap_of_list b0 * part cloop_family_of_list b1 f0
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM ((f_list L) (e_list lp))) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((~ (((next_el r) lp) = ((f_list L) (e_list lp)))) ==> (~ ((~ (lp = (LAST r))) ==> (~ (((next_el r) lp) = ((f_list L) (e_list lp)))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM cf_list f0 ce_list f2 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f3 f5 c==> c~ c= cnext_el f3 f2 cf_list f0 ce_list f2 c~ c==> c~ c= f2 cLAST f3 c~ c= cnext_el f3 f2 cf_list f0 ce_list f2
+ ((LAST p) = lp), ((MEM p) ((parts L) r)), ((MEM r) N) |- (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p)))))
T c==> c= cLAST f0 f1 c==> cMEM f0 cparts f2 f3 c==> cMEM f3 f4 c? / c/\ cMEM f0 cparts f2 b0 c/\ cMEM b0 f4 c= f1 cLAST f0
+ (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) /\ (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> call * part cf_last f0 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c/\ call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f4 c==> cMEM f5 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f4 f3 c/\ cMEM f3 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f4 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f4 f3 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f3 c==> c= ce_list f2 cPOWER * part cf_list f0 f7 f3 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f3 c==> cMEM cl'z f0 f6 f4 f3 cfind_face f0 f3 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f4 cF
+ |- (((!p. (!L. (!N. (!r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p)))))))))) ==> ((\p. (!L. (!N. (!r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p)))))))))) p)) = ((\p. (!L. (!N. (!r. (((good_list L) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ (is_edge_nondegenerate (hypermap_of_list L)))))) ==> (~ (((next_el r) (LAST p)) = ((f_list L) (e_list (LAST p)))))))))) p))
T c= c==> ! ! ! ! c==> c/\ cgood_list b1 c/\ cnormal_list b1 b2 c/\ cMEM b3 b2 c/\ cMEM b0 cparts b1 b3 cis_edge_nondegenerate chypermap_of_list b1 c~ c= cnext_el b3 cLAST b0 cf_list b1 ce_list cLAST b0 * / ! ! ! c==> c/\ cgood_list b1 c/\ cnormal_list b1 b2 c/\ cMEM b3 b2 c/\ cMEM b0 cparts b1 b3 cis_edge_nondegenerate chypermap_of_list b1 c~ c= cnext_el b3 cLAST b0 cf_list b1 ce_list cLAST b0 f0 * / ! ! ! c==> c/\ cgood_list b1 c/\ cnormal_list b1 b2 c/\ cMEM b3 b2 c/\ cMEM b0 cparts b1 b3 cis_edge_nondegenerate chypermap_of_list b1 c~ c= cnext_el b3 cLAST b0 cf_list b1 ce_list cLAST b0 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c~ cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5
+ |- (((!x. (x IN ((node H) x))) ==> ((\x. (x IN ((node H) x))) x)) = ((\x. (x IN ((node H) x))) x))
T c= c==> ! cIN b0 * * part cnode f0 b0 * / cIN b0 * * part cnode f0 b0 f1 * / cIN b0 * * part cnode f0 b0 f1
+ ((!x. (((MEM x) s) ==> (a x))) = ((all a) s)) |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c==> c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0 c= call f1 f0 ! c==> cMEM b0 f0 * f1 b0
+ ((LAST p) = lp), ((MEM p) ((parts L) r)), ((MEM r) N) |- (?p. (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p))))))
T c==> c= cLAST f0 f1 c==> cMEM f0 cparts f2 f3 c==> cMEM f3 f4 c? / c? / c/\ cMEM b0 cparts f2 b1 c/\ cMEM b1 f4 c= f1 cLAST b0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> cMEM f4 f2 c==> cMEM f2 cparts f1 f5 c==> cMEM f5 f0 c==> cnormal_list f1 f0 c==> cmarked_list f1 f0 f5 f6 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f5 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f5 cNIL c==> cMEM f3 f5 c==> cMEM f3 cfind_face f1 f3 c==> c= cFST f4 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f3 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f3 c==> c= cf_list f1 ce_list f3 f4 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 f4 cF
+ (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 cF
- |- ((x' = n) = ((\n. (x' = n)) n))
T c= c= f0 f1 * / c= f0 b0 f1
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> cMEM f5 cfind_face f1 f5 c==> c= cFST f4 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) /\ ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) /\ ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((f_list L) (e_list lp)) = y), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cf_list f1 ce_list f5 f4 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
- (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((LAST p) = lp) /\ ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cmarked_list f0 f5 f4 f6 c/\ c= cLAST f1 f2 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f5 c==> cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
- (connected_hypermap (hypermap_of_list L)) |- ((connected_hypermap (hypermap_of_list L)) = T)
T c==> cconnected_hypermap chypermap_of_list f0 c= cconnected_hypermap chypermap_of_list f0 cT
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) /\ (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> F)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cf_list f1 ce_list f5 f4 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call * part cf_last f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f6 cNIL c==> cMEM f3 f6 c==> cMEM f3 cfind_face f0 f3 c==> c= cFST f7 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f5 c==> cMEM f5 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> c= cinverse * part cnode_map chypermap_of_list f0 f3 cf_list f0 cPOWER * part cf_list f0 f4 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * * part cnode chypermap_of_list f0 f3 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * part cset_of_list cfind_face f0 f5 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f5 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f4 f5 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f1 f4 f5 c==> c= cnext_el f6 f5 cf_list f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f5 c==> cMEM cl'z f1 f0 f6 f5 cfind_face f1 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f1 f6 f5 c==> cMEM f2 cparts f1 f6 c==> cMEM f6 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f6 f5 c==> cmarked_list f1 f0 f6 f5 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f6 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f5 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f6 cNIL c==> cMEM f3 f6 c==> cMEM f3 cfind_face f1 f3 c==> c= cFST f7 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f5 c==> cMEM f5 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f4 f5 cfind_face f1 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f3 cf_list f1 cPOWER * part cf_list f1 f4 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f4 f5 * * part cnode chypermap_of_list f1 f3 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f4 f5 cfind_face f1 f5 c==> cIN cf_list f1 cPOWER * part cf_list f1 f4 f5 * part cset_of_list cfind_face f1 f5 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * part cset_of_list cfind_face f1 f5 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f4 f5 f7 cF
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) /\ ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c/\ cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 cF
- (NIL = r) |- (r = NIL)
T c==> c= cNIL f0 c= f0 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call * part cf_last f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 cF
- (FINITE (dart (hypermap_of_list ((quotient_list L) N)))) |- ((FINITE (dart (hypermap_of_list ((quotient_list L) N)))) = T)
T c==> cFINITE * part cdart chypermap_of_list cquotient_list f0 f1 c= cFINITE * part cdart chypermap_of_list cquotient_list f0 f1 cT
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ cuniq f2 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) /\ ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c/\ call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 cF
- (~ (lp IN (dart (hypermap_of_list ((quotient_list L) N))))) |- ((lp IN (dart (hypermap_of_list ((quotient_list L) N)))) = F)
T c==> c~ cIN f0 * part cdart chypermap_of_list cquotient_list f1 f2 c= cIN f0 * part cdart chypermap_of_list cquotient_list f1 f2 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM y) ((find_face L) x)) /\ (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f6 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> F))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cf_list f1 ce_list f5 f4 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
- |- ((?n. (x' = n)) ==> (?n. (x' = n)))
T c==> c? / c= f0 b0 c? / c= f0 b0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) /\ (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) /\ ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> F))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cf_list f1 ce_list f5 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (!a. (((MEM a) p) ==> ((MEM a) r))) |- ((((MEM a) p) ==> ((MEM a) r)) = T)
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c= c==> cMEM f2 f0 cMEM f2 f1 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> F)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cf_list f1 ce_list f5 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> c= cFST f4 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (~ (r = NIL)) |- (~ (NIL = r))
T c==> c~ c= f0 cNIL c~ c= cNIL f0
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- ((\n. (x' = n)) n) |- (((x' = n) ==> (?n. (x' = n))) = (?n. (x' = n)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- (((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))) = T)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c= c==> cIN f1 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1 cT
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) /\ ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((f_list L) (((POWER (f_list L)) n) x)) = y), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) = y) /\ F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ cuniq f2 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- ((dart (hypermap_of_list L)) = EMPTY) |- (EMPTY = (dart (hypermap_of_list L)))
T c==> c= * part cdart chypermap_of_list f0 part cEMPTY c= part cEMPTY * part cdart chypermap_of_list f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM y) p) /\ (((LAST p) = lp) ==> (((MEM (e_list lp)) (((s_list L) r) x)) ==> F)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cMEM f3 f4 c==> cMEM f4 cparts f0 f1 c==> cmarked_list f0 f5 f1 f2 c/\ cMEM f3 f4 c==> c= cLAST f4 f6 c==> cMEM ce_list f6 cs_list f0 f1 f2 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * * part cface chypermap_of_list f1 f3 * * part cINSERT f3 part cEMPTY c==> c= cLAST f4 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cfind_face f1 f3 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f7 f2 c==> cMEM f3 f4 c==> cMEM f3 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f2 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f7 c==> cMEM f4 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> c~ c= f4 cNIL c==> cMEM f5 f4 c==> c~ c= f2 cNIL c==> cMEM f5 f2 c==> cMEM f5 cfind_face f1 f5 c==> c= cFST f3 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f3 c==> c= * * part cface chypermap_of_list f1 f3 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f3 * * part cnode chypermap_of_list f1 f5 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) ==> ((~ ((final_list L) r)) ==> (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> F)))))))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c~ cfinal_list f0 f2 c==> cMEM f5 cparts f0 f2 c==> cMEM f4 f5 c==> c= cLAST f5 f6 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f2 f3 c==> c= ce_list f6 cPOWER * part cf_list f0 f7 f3 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f4 cfind_face f0 f3 c==> cMEM cl'z f0 f1 f2 f3 cfind_face f0 f3 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f6 cNIL c==> cMEM f3 f6 c==> cMEM f3 cfind_face f0 f3 c==> c= cFST f7 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f5 c==> cMEM f5 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> c= cinverse * part cnode_map chypermap_of_list f0 f3 cf_list f0 cPOWER * part cf_list f0 f4 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * * part cnode chypermap_of_list f0 f3 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * part cset_of_list cfind_face f0 f5 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f5 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f4 f5 f7 cF
- (!x. (((MEM x) ((parts L) r)) ==> (!x. ((((MEM x) x) /\ ((x = (LAST x)) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))))) |- ((((MEM x) ((parts L) r)) ==> (!x. ((((MEM x) x) /\ ((x = (LAST x)) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x))))))) = T)
T c==> ! c==> cMEM b0 cparts f0 f1 ! c==> c/\ cMEM b1 b0 c/\ c= b1 cLAST b0 c~ c= b1 cLAST f1 c~ c= cnext_el f1 b1 cf_list f0 ce_list b1 c= c==> cMEM f2 cparts f0 f1 ! c==> c/\ cMEM b0 f2 c/\ c= b0 cLAST f2 c~ c= b0 cLAST f1 c~ c= cnext_el f1 b0 cf_list f0 ce_list b0 cT
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM (e_list lp)) (((s_list L) r) x)), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM (e_list lp)) (((s_list L) r) x)) /\ F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM ce_list f3 cs_list f0 f1 f4 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM ce_list f3 cs_list f0 f1 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> c= cFST f4 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c==> cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) ==> (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> (((MEM (e_list lp)) (((s_list L) r) x)) ==> F))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c~ cfinal_list f0 f1 c==> cMEM f5 cparts f0 f1 c==> cMEM f3 f5 c==> c= cLAST f5 f6 c==> cMEM ce_list f6 cs_list f0 f1 f2 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (p = NIL)) /\ (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c/\ c~ c= f2 cNIL c==> cMEM f5 f2 c==> c~ c= f3 cNIL c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> c= cFST f4 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (!x. ((((MEM x) p) /\ ((x = lp) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))) |- ((((MEM x) p) /\ ((x = lp) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))
T c==> ! c==> c/\ cMEM b0 f0 c/\ c= b0 f1 c~ c= b0 cLAST f2 c~ c= cnext_el f2 b0 cf_list f3 ce_list b0 c==> c/\ cMEM f4 f0 c/\ c= f4 f1 c~ c= f4 cLAST f2 c~ c= cnext_el f2 f4 cf_list f3 ce_list f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq L) /\ ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f4 f2 c==> cMEM f4 f3 c==> cMEM f4 cfind_face f1 f4 c==> cMEM f6 f3 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f4 f2 c==> cMEM f6 f3 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cMEM f4 f3 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (x' = n) |- ((x' = n) /\ (?n. (x' = n)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (~ (EMPTY = (dart (hypermap_of_list L))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c~ c= part cEMPTY * part cdart chypermap_of_list f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ cfinal_list f1 f2 c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cl'y f1 f2 f6 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f7 cfind_face f0 f4 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) /\ ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> F)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cf_list f1 ce_list f5 f4 cF
- (plain_hypermap (hypermap_of_list L)) |- ((plain_hypermap (hypermap_of_list L)) = T)
T c==> cplain_hypermap chypermap_of_list f0 c= cplain_hypermap chypermap_of_list f0 cT
- ((\n. (x' = n)) n) |- (((\n. (x' = n)) n) /\ (?n. (x' = n)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) ((find_face L) lp)) /\ (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f4 f2 c==> cMEM f4 f3 c==> cMEM f4 cfind_face f1 f4 c==> cMEM f6 f3 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((LAST p) = lp) ==> (((MEM (e_list lp)) (((s_list L) r) x)) ==> F))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cMEM f3 f4 c==> cMEM f4 cparts f0 f1 c==> cmarked_list f0 f5 f1 f2 c==> c= cLAST f4 f6 c==> cMEM ce_list f6 cs_list f0 f1 f2 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST (HD p))), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((FST y) = (FST (HD p))) /\ F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f3 cFST cHD f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f3 * * part cface chypermap_of_list f1 f3 * * part cINSERT f3 part cEMPTY c==> c= cLAST f4 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cfind_face f1 f3 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f7 f2 c==> cMEM f3 f4 c==> cMEM f3 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f2 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f7 c==> cMEM f4 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ c= cFST f3 cFST cHD f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) /\ (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) /\ (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_node_nondegenerate (hypermap_of_list L)) /\ ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> F))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (~ (r = NIL)) |- (((~ (NIL = r)) ==> ((NIL = r) = F)) = ((NIL = r) = F))
T c==> c~ c= f0 cNIL c= c==> c~ c= cNIL f0 c= c= cNIL f0 cF c= c= cNIL f0 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) /\ ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((find_face L) y) = ((find_face L) x)) /\ ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ c= cfind_face f1 f7 cfind_face f1 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) p) /\ ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c/\ cMEM f5 f2 c==> c~ c= f3 cNIL c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> c= cFST f4 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) /\ (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call * part cf_last f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c/\ call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f6 cNIL c==> cMEM f3 f6 c==> cMEM f3 cfind_face f0 f3 c==> c= cFST f7 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f5 c==> cMEM f5 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> c= cinverse * part cnode_map chypermap_of_list f0 f3 cf_list f0 cPOWER * part cf_list f0 f4 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * * part cnode chypermap_of_list f0 f3 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * part cset_of_list cfind_face f0 f5 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f5 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f4 f5 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((FST y) = (FST lp)) /\ ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c/\ c= cFST f4 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> F))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cf_list f1 ce_list f5 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- ((\x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) x)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 * / c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f6 f1 f4 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 cF
- ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) |- (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) = T)
T c==> cMEM f0 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f3 c= cMEM f0 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f3 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- |- (((!x. (((\n. (x' = n)) x) ==> (?n. (x' = n)))) ==> ((?n. (x' = n)) ==> (?n. (x' = n)))) = ((?n. (x' = n)) ==> (?n. (x' = n))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((f_list L) (e_list lp)) = y), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (e_list lp)) = y) /\ F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cf_list f1 ce_list f5 f4 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= cf_list f1 ce_list f5 f4 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((~ (lp = (LAST r))) ==> (~ (((next_el r) lp) = ((f_list L) (e_list lp))))), ((MEM ((f_list L) (e_list lp))) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- F
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c==> c~ c= f2 cLAST f3 c~ c= cnext_el f3 f2 cf_list f0 ce_list f2 c==> cMEM cf_list f0 ce_list f2 f1 c==> cMEM f1 cparts f0 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f3 f5 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f1 f4 f5 c==> c= cnext_el f6 f5 cf_list f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f5 c==> cMEM cl'z f1 f0 f6 f5 cfind_face f1 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f1 f6 f5 c==> cMEM f2 cparts f1 f6 c==> cMEM f6 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f6 f5 c==> cmarked_list f1 f0 f6 f5 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f6 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f5 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) /\ F)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c/\ call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) /\ ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) r) /\ (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f4 f2 c==> cMEM f4 f3 c==> cMEM f6 f3 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cMEM f4 f3 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (good_list L), (good_list_nodes L), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((LAST p) = lp) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cMEM f2 cparts f0 f3 c==> cmarked_list f0 f4 f3 f5 c==> c= cLAST f2 f6 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f3 f4 c==> cMEM f5 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f3 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f5 c==> cs_flag_list f0 f4 f3 f5 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f3 f5 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f1 cfind_face f0 f5 c==> cMEM cl'z f0 f4 f3 f5 cfind_face f0 f5 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f1 cfind_face f0 f5 c==> c~ c= f2 cNIL c==> cMEM f6 f2 c==> c~ c= f3 cNIL c==> cMEM f6 f3 c==> cMEM f6 cfind_face f0 f6 c==> c= cFST f1 cFST f6 c==> cIN f6 * * part cnode chypermap_of_list f0 f1 c==> c= * * part cface chypermap_of_list f0 f1 * part cset_of_list cfind_face f0 f5 c==> cMEM f5 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f5 cfind_face f0 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f5 * * part cnode chypermap_of_list f0 f6 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f5 cfind_face f0 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f5 * part cset_of_list cfind_face f0 f5 c==> c= * * part cnode chypermap_of_list f0 f1 * * part cnode chypermap_of_list f0 f6 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f6 * part cset_of_list cfind_face f0 f5 * * part cINSERT f1 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f5 ce_list f6 c==> c= cf_list f0 ce_list f6 f1 c==> c= cinverse * part cnode_map chypermap_of_list f0 f6 f1 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) /\ (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (!P. ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))) |- ((!d. ((d IN (dart (hypermap_of_list L))) ==> (P d))) = (!d. (((MEM d) (list_of_darts L)) ==> (P d))))
T c==> ! c= ! c==> cIN b1 * part cdart chypermap_of_list f0 * b0 b1 ! c==> cMEM b1 clist_of_darts f0 * b0 b1 c= ! c==> cIN b0 * part cdart chypermap_of_list f0 * f1 b0 ! c==> cMEM b0 clist_of_darts f0 * f1 b0
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM y) p) ==> (((LAST p) = lp) ==> (((MEM (e_list lp)) (((s_list L) r) x)) ==> F)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cMEM f4 cparts f0 f1 c==> cmarked_list f0 f5 f1 f2 c==> cMEM f3 f4 c==> c= cLAST f4 f6 c==> cMEM ce_list f6 cs_list f0 f1 f2 cF
- |- ((x' = n) ==> (?n. (x' = n)))
T c==> c= f0 f1 c? / c= f0 b0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) ((find_face L) lp)) /\ (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c/\ cMEM f5 cfind_face f1 f5 c==> c= cFST f4 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) /\ (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c/\ call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f6 cNIL c==> cMEM f3 f6 c==> cMEM f3 cfind_face f0 f3 c==> c= cFST f7 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f5 c==> cMEM f5 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> c= cinverse * part cnode_map chypermap_of_list f0 f3 cf_list f0 cPOWER * part cf_list f0 f4 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * * part cnode chypermap_of_list f0 f3 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * part cset_of_list cfind_face f0 f5 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f5 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f4 f5 f7 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> (((MEM (e_list lp)) (((s_list L) r) x)) ==> F)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c/\ c~ cfinal_list f0 f1 c==> cMEM f5 cparts f0 f1 c==> cMEM f3 f5 c==> c= cLAST f5 f6 c==> cMEM ce_list f6 cs_list f0 f1 f2 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM y) ((find_face L) x)) /\ (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f7 cfind_face f0 f4 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f6 cNIL c==> cMEM f3 f6 c==> cMEM f3 cfind_face f0 f3 c==> c= cFST f7 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f5 c==> cMEM f5 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> c= cinverse * part cnode_map chypermap_of_list f0 f3 cf_list f0 cPOWER * part cf_list f0 f4 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * * part cnode chypermap_of_list f0 f3 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * part cset_of_list cfind_face f0 f5 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f5 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f4 f5 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
- (?x. (((MEM x) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) /\ ((e_list lp) = (((POWER (f_list L)) x) x)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((?x. (((MEM x) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) /\ ((e_list lp) = (((POWER (f_list L)) x) x)))) /\ F)
T c==> c? / c/\ cMEM b0 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f2 c= ce_list f3 cPOWER * part cf_list f0 b0 f2 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f4 f3 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f5 f4 c==> cMEM f4 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c/\ c? / c/\ cMEM b0 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f2 c= ce_list f3 cPOWER * part cf_list f0 b0 f2 cF
- (~ (lp IN (dart (hypermap_of_list ((quotient_list L) N))))), (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), (((MEM lp) (list_of_darts ((quotient_list L) N))) = (?p. (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p))))))), ((all uniq) L), ((normal_list L) N) |- ((((MEM lp) (list_of_darts ((quotient_list L) N))) = (?p. (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p))))))) /\ ((?p. (?r. (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ (lp = (LAST p)))))) ==> (~ ((hyp_iso (set_of_list o ((find_atom L) N))) ((hypermap_of_list ((quotient_list L) N)) , ((quotient (hypermap_of_list L)) (loop_family_of_list N)))))))
T c==> c~ cIN f0 * part cdart chypermap_of_list cquotient_list f1 f2 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cgood_list f1 c==> c= cMEM f0 clist_of_darts cquotient_list f1 f2 c? / c? / c/\ cMEM b0 cparts f1 b1 c/\ cMEM b1 f2 c= f0 cLAST b0 c==> call part cuniq f1 c==> cnormal_list f1 f2 c/\ c= cMEM f0 clist_of_darts cquotient_list f1 f2 c? / c? / c/\ cMEM b0 cparts f1 b1 c/\ cMEM b1 f2 c= f0 cLAST b0 c==> c? / c? / c/\ cMEM b0 cparts f1 b1 c/\ cMEM b1 f2 c= f0 cLAST b0 c~ chyp_iso * * part co part cset_of_list * * part cfind_atom f1 f2 c, chypermap_of_list cquotient_list f1 f2 cquotient chypermap_of_list f1 * part cloop_family_of_list f2
- (simple_hypermap (hypermap_of_list L)) |- ((simple_hypermap (hypermap_of_list L)) = T)
T c==> csimple_hypermap chypermap_of_list f0 c= csimple_hypermap chypermap_of_list f0 cT
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> F)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cf_list f1 ce_list f5 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (x' = n) |- ((\n. (x' = n)) n)
T c==> c= f0 f1 * / c= f0 b0 f1
- (!x. ((((MEM x) p) /\ ((x = lp) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x)))))) |- (((((MEM x) p) /\ ((x = lp) /\ (~ (x = (LAST r))))) ==> (~ (((next_el r) x) = ((f_list L) (e_list x))))) = T)
T c==> ! c==> c/\ cMEM b0 f0 c/\ c= b0 f1 c~ c= b0 cLAST f2 c~ c= cnext_el f2 b0 cf_list f3 ce_list b0 c= c==> c/\ cMEM f4 f0 c/\ c= f4 f1 c~ c= f4 cLAST f2 c~ c= cnext_el f2 f4 cf_list f3 ce_list f4 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM y) ((find_face L) x)) /\ (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f7 cfind_face f0 f4 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f4 c==> cmarked_list f0 f6 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM p) ((parts L) r)) /\ (((MEM y) p) ==> (((LAST p) = lp) ==> (((MEM (e_list lp)) (((s_list L) r) x)) ==> F))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cMEM f4 cparts f0 f1 c==> cmarked_list f0 f5 f1 f2 c/\ cMEM f4 cparts f0 f1 c==> cMEM f3 f4 c==> c= cLAST f4 f6 c==> cMEM ce_list f6 cs_list f0 f1 f2 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((f_list L) (((POWER (f_list L)) n) x)) = y), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f3 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cMEM f4 f2 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((LAST p) = lp) /\ (((MEM (e_list lp)) (((s_list L) r) x)) ==> F))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f6 f1 f4 c/\ c= cLAST f2 f3 c==> cMEM ce_list f3 cs_list f0 f1 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = y), (((next_el r) x) = ((f_list L) x)), (((f_list L) (e_list lp)) = y), ((((POWER (f_list L)) n) x) = (e_list lp)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((inverse (node_map (hypermap_of_list L))) lp) = y) /\ F)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 f4 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cf_list f1 ce_list f5 f4 c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= cinverse * part cnode_map chypermap_of_list f1 f5 f4 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) /\ (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> F)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cPOWER * part cf_list f1 f7 f6 ce_list f5 c==> c= cf_list f1 ce_list f5 f4 cF
- (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM lp) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((f_list L) (e_list lp)) = y) ==> (((MEM y) p) ==> F))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> cMEM f3 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f4 c==> cnormal_list f1 f4 c==> cmarked_list f1 f4 f0 f5 c==> c= cf_list f1 ce_list f3 f6 c==> cMEM f6 f2 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (((dart (hypermap_of_list L)) = EMPTY) = F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c= * part cdart chypermap_of_list f0 part cEMPTY cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (~ (((next_el r) lp) = ((f_list L) (e_list lp)))) |- (((~ (((f_list L) (e_list lp)) = ((next_el r) lp))) ==> ((((f_list L) (e_list lp)) = ((next_el r) lp)) = F)) = ((((f_list L) (e_list lp)) = ((next_el r) lp)) = F))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c= c==> c~ c= cf_list f2 ce_list f1 cnext_el f0 f1 c= c= cf_list f2 ce_list f1 cnext_el f0 f1 cF c= c= cf_list f2 ce_list f1 cnext_el f0 f1 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> F))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 cF
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) /\ ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f7 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f6 f7 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq L) /\ ((((find_face L) y) = ((find_face L) x)) ==> F))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 cF
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\p. (f p)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f4 c==> cmarked_list f0 f6 f1 f4 c/\ cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
- (~ (r = NIL)), (is_edge_nondegenerate (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((f_list L) (e_list lp)) = y), ((MEM lp) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((f_list L) (e_list lp)) = y) /\ (((MEM y) p) ==> F))
T c==> c~ c= f0 cNIL c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f3 c==> c= cf_list f1 ce_list f3 f4 c==> cMEM f3 f2 c==> cMEM f2 cparts f1 f0 c==> cMEM f0 f5 c==> cnormal_list f1 f5 c==> cmarked_list f1 f5 f0 f6 c/\ c= cf_list f1 ce_list f3 f4 c==> cMEM f4 f2 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (?x. (((MEM x) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) /\ ((e_list lp) = (((POWER (f_list L)) x) x)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- F
T c==> c? / c/\ cMEM b0 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f2 c= ce_list f3 cPOWER * part cf_list f0 b0 f2 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f4 f3 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f5 f4 c==> cMEM f4 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> F)))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 cF
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> F))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((((node (hypermap_of_list L)) y) INTER ((face (hypermap_of_list L)) y)) = (y INSERT EMPTY)), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> F)))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * * part cface chypermap_of_list f1 f4 * * part cINSERT f4 part cEMPTY c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f6 f7 c==> c= cnext_el f3 f7 cf_list f1 f7 c==> c= cfind_face f1 f4 cfind_face f1 f7 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f7 f3 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f7 c==> cMEM cl'z f1 f0 f3 f7 cfind_face f1 f7 c==> cMEM f6 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f7 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f7 c==> cmarked_list f1 f0 f3 f7 c==> c~ c= f3 cNIL c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> c= cFST f4 cFST f5 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f7 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f6 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * * part cnode chypermap_of_list f1 f5 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f6 f7 cfind_face f1 f7 c==> cIN cf_list f1 cPOWER * part cf_list f1 f6 f7 * part cset_of_list cfind_face f1 f7 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> (((e_list lp) = (((POWER (f_list L)) n) x)) ==> F)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f4 c==> cmarked_list f0 f6 f1 f4 c/\ cs_flag_list f0 f6 f1 f4 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f6 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f0 f5 c==> cMEM cl'z f0 f1 f6 f5 cfind_face f0 f5 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f6 f5 c==> cMEM f2 cparts f0 f6 c==> cMEM f6 f1 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f6 f5 c==> cmarked_list f0 f1 f6 f5 c/\ cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f5 c==> c~ c= f2 cNIL c==> cMEM f3 f2 c==> c~ c= f6 cNIL c==> cMEM f3 f6 c==> cMEM f3 cfind_face f0 f3 c==> c= cFST f7 cFST f3 c==> cIN f3 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f5 c==> cMEM f5 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> c= cinverse * part cnode_map chypermap_of_list f0 f3 cf_list f0 cPOWER * part cf_list f0 f4 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * * part cnode chypermap_of_list f0 f3 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f4 f5 cfind_face f0 f5 c==> cIN cf_list f0 cPOWER * part cf_list f0 f4 f5 * part cset_of_list cfind_face f0 f5 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f5 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f4 f5 f7 cF
- ((~ (lp = (LAST r))) ==> (~ (((next_el r) lp) = ((f_list L) (e_list lp))))) |- (((~ (lp = (LAST r))) ==> (~ (((next_el r) lp) = ((f_list L) (e_list lp))))) = T)
T c==> c==> c~ c= f0 cLAST f1 c~ c= cnext_el f1 f0 cf_list f2 ce_list f0 c= c==> c~ c= f0 cLAST f1 c~ c= cnext_el f1 f0 cf_list f2 ce_list f0 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) /\ ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((~ ((final_list L) r)) ==> (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> (((MEM (e_list lp)) (((s_list L) r) x)) ==> F))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c~ cfinal_list f0 f2 c==> cMEM f5 cparts f0 f2 c==> cMEM f4 f5 c==> c= cLAST f5 f6 c==> cMEM ce_list f6 cs_list f0 f2 f3 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- |- ((((\n. (x' = n)) n) ==> (?n. (x' = n))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f4 f2 c==> cMEM f6 f3 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) /\ ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))))))))))))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c/\ cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F))))))))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c/\ cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (planar_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplanar_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c/\ ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 cF
- (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cmarked_list f0 f5 f4 f6 c==> cnormal_list f0 f5 c==> cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM (e_list lp)) (((s_list L) r) x)), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- F
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM ce_list f3 cs_list f0 f1 f4 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f6 f1 f4 cF
- (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((MEM y) p), ((MEM p) ((parts L) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> (((((POWER (f_list L)) n) x) = (e_list lp)) ==> ((((f_list L) (e_list lp)) = y) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = y) ==> F)))))))))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cMEM f3 f1 c==> cMEM f1 cparts f0 f4 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f4 f6 c/\ cnormal_list f0 f5 c==> cMEM f4 f5 c==> cMEM f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f4 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f6 c==> cs_flag_list f0 f5 f4 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f4 f6 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f3 cfind_face f0 f6 c==> cMEM cl'z f0 f5 f4 f6 cfind_face f0 f6 c==> cuniq cflatten f5 c==> call / c~ c= b0 cNIL f5 c==> call * part cf_last f0 f5 c==> call * part cloop_list f0 f5 c==> ! c==> cMEM b0 cflatten f5 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f5 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f3 cfind_face f0 f6 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f4 cNIL c==> cMEM f2 f4 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f3 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f3 c==> c= * * part cface chypermap_of_list f0 f3 * part cset_of_list cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f7 f6 cfind_face f0 f6 c==> cIN cf_list f0 cPOWER * part cf_list f0 f7 f6 * part cset_of_list cfind_face f0 f6 c==> c= * * part cnode chypermap_of_list f0 f3 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f6 * * part cINSERT f3 part cEMPTY c==> c= cPOWER * part cf_list f0 f7 f6 ce_list f2 c==> c= cf_list f0 ce_list f2 f3 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 f3 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> F)))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> c~ c= f2 cNIL c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F))))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c/\ ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (r = NIL) |- (NIL = r)
T c==> c= f0 cNIL c= cNIL f0
- (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> ((~ (p = NIL)) ==> (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> c= ce_list f2 cPOWER * part cf_list f0 f3 f4 c==> c= cnext_el f5 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f5 c==> cMEM f7 f1 c==> cMEM f3 ciota cNUMERAL cBIT1 c_0 cl'm f0 f5 f4 c==> cMEM f1 cparts f0 f5 c==> cMEM f5 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f5 f4 c==> cmarked_list f0 f6 f5 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f7 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f5 f4 cfind_face f0 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c= cfind_face f0 f7 cfind_face f0 f4 c==> c~ c= f1 cNIL c==> cMEM f2 f1 c==> c~ c= f5 cNIL c==> cMEM f2 f5 c==> cMEM f2 cfind_face f0 f2 c==> c= cFST f7 cFST f2 c==> cIN f2 * * part cnode chypermap_of_list f0 f7 c==> c= * * part cface chypermap_of_list f0 f7 * part cset_of_list cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cMEM cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> c= cinverse * part cnode_map chypermap_of_list f0 f2 cf_list f0 cPOWER * part cf_list f0 f3 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * * part cnode chypermap_of_list f0 f2 c==> cMEM cf_list f0 cPOWER * part cf_list f0 f3 f4 cfind_face f0 f4 c==> cIN cf_list f0 cPOWER * part cf_list f0 f3 f4 * part cset_of_list cfind_face f0 f4 c==> c= * * part cnode chypermap_of_list f0 f7 * * part cnode chypermap_of_list f0 f2 c==> c= * * part cINTER * * part cnode chypermap_of_list f0 f2 * part cset_of_list cfind_face f0 f4 * * part cINSERT f7 part cEMPTY c==> c= cf_list f0 cPOWER * part cf_list f0 f3 f4 f7 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((((find_face L) y) = ((find_face L) x)) ==> F)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f3 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f2 f6 cf_list f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f2 c==> cMEM f7 f3 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f2 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f2 f6 c==> cMEM f3 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f6 c==> cmarked_list f1 f0 f2 f6 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f1 c==> c= cfind_face f1 f7 cfind_face f1 f6 cF
- (EMPTY = (dart (hypermap_of_list L))) |- ((dart (hypermap_of_list L)) = EMPTY)
T c==> c= part cEMPTY * part cdart chypermap_of_list f0 c= * part cdart chypermap_of_list f0 part cEMPTY
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f6 cfind_face f0 f5 c==> cMEM cl'z f0 f7 f1 f5 cfind_face f0 f5 cF
- (~ (((next_el r) lp) = ((f_list L) (e_list lp)))) |- (~ (((f_list L) (e_list lp)) = ((next_el r) lp)))
T c==> c~ c= cnext_el f0 f1 cf_list f2 ce_list f1 c~ c= cf_list f2 ce_list f1 cnext_el f0 f1
- (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ ((final_list L) r)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> F))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> c~ cfinal_list f0 f1 c==> cplain_hypermap chypermap_of_list f0 c==> cplanar_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= ce_list f3 cPOWER * part cf_list f0 f4 f5 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> c= cl'y f0 f1 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f5 f1 c==> cMEM f6 f2 c==> cMEM f4 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f5 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f5 c==> cmarked_list f0 f7 f1 f5 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (~ (r = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((FST y) = (FST lp)), ((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)), (((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)), (((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))), ((LAST p) = lp), (((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM lp) p), ((MEM lp) r), ((MEM lp) ((find_face L) lp)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)), ((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), (lp IN ((node (hypermap_of_list L)) y)), (((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))), (((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> c~ c= f3 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cFST f4 cFST f5 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f5 * part cset_of_list cfind_face f1 f6 * * part cINSERT f4 part cEMPTY c==> c= * * part cnode chypermap_of_list f1 f4 * * part cnode chypermap_of_list f1 f5 c==> c= * * part cface chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 c==> c= cLAST f2 f5 c==> c= cinverse * part cnode_map chypermap_of_list f1 f5 cf_list f1 cPOWER * part cf_list f1 f7 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f4 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f2 c==> cMEM f5 f3 c==> cMEM f5 cfind_face f1 f5 c==> cMEM f6 f3 c==> cMEM f6 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f4 cfind_face f1 f6 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cPOWER * part cf_list f1 f7 f6 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> cIN f5 * * part cnode chypermap_of_list f1 f4 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * part cset_of_list cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f7 f6 * * part cnode chypermap_of_list f1 f5 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c==> c= ce_list f5 cPOWER * part cf_list f1 f7 f6 c==> c= cf_list f1 cPOWER * part cf_list f1 f7 f6 f4 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))) /\ (((e_list lp) = (((POWER (f_list L)) n) x)) ==> ((~ ((dart (hypermap_of_list L)) = EMPTY)) ==> ((planar_hypermap (hypermap_of_list L)) ==> ((plain_hypermap (hypermap_of_list L)) ==> ((connected_hypermap (hypermap_of_list L)) ==> ((simple_hypermap (hypermap_of_list L)) ==> ((is_no_double_joins (hypermap_of_list L)) ==> ((is_edge_nondegenerate (hypermap_of_list L)) ==> ((is_node_nondegenerate (hypermap_of_list L)) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) ==> ((!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((((node (hypermap_of_list L)) d) INTER ((face (hypermap_of_list L)) d)) = (d INSERT EMPTY)))) ==> (((MEM y) ((find_face L) x)) ==> (((MEM ((((l'z L) N) r) x)) ((find_face L) x)) ==> F)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f4 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f7 ciota cNUMERAL cBIT1 c_0 cl'm f0 f1 f4 c==> c= ce_list f3 cPOWER * part cf_list f0 f7 f4 c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c==> cplanar_hypermap chypermap_of_list f0 c==> cplain_hypermap chypermap_of_list f0 c==> cconnected_hypermap chypermap_of_list f0 c==> csimple_hypermap chypermap_of_list f0 c==> cis_no_double_joins chypermap_of_list f0 c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cis_node_nondegenerate chypermap_of_list f0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cMEM b0 clist_of_darts f0 c= * * part cINTER * * part cnode chypermap_of_list f0 b0 * * part cface chypermap_of_list f0 b0 * * part cINSERT b0 part cEMPTY c==> cMEM f5 cfind_face f0 f4 c==> cMEM cl'z f0 f6 f1 f4 cfind_face f0 f4 cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((((node (hypermap_of_list L)) x) INTER ((face (hypermap_of_list L)) x)) = (x INSERT EMPTY)))), (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (~ ((dart (hypermap_of_list L)) = EMPTY)), (~ (p = NIL)), (plain_hypermap (hypermap_of_list L)), (planar_hypermap (hypermap_of_list L)), (simple_hypermap (hypermap_of_list L)), (is_edge_nondegenerate (hypermap_of_list L)), (is_node_nondegenerate (hypermap_of_list L)), (connected_hypermap (hypermap_of_list L)), (is_no_double_joins (hypermap_of_list L)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((e_list lp) = (((POWER (f_list L)) n) x)), (((next_el r) x) = ((f_list L) x)), (((find_face L) y) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM y) ((find_face L) x)), ((MEM ((((l'z L) N) r) x)) ((find_face L) x)), ((MEM n) ((iota (NUMERAL (BIT1 _0))) (((l'm L) r) x))), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (p = NIL)) /\ (((MEM lp) p) ==> ((~ (r = NIL)) ==> (((MEM lp) r) ==> (((MEM lp) ((find_face L) lp)) ==> (((FST y) = (FST lp)) ==> ((lp IN ((node (hypermap_of_list L)) y)) ==> ((((face (hypermap_of_list L)) y) = (set_of_list ((find_face L) x))) ==> (((MEM x) (list_of_darts L)) ==> (((MEM (((POWER (f_list L)) n) x)) ((find_face L) x)) ==> ((((inverse (node_map (hypermap_of_list L))) lp) = ((f_list L) (((POWER (f_list L)) n) x))) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN ((node (hypermap_of_list L)) lp)) ==> (((MEM ((f_list L) (((POWER (f_list L)) n) x))) ((find_face L) x)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) IN (set_of_list ((find_face L) x))) ==> ((((node (hypermap_of_list L)) y) = ((node (hypermap_of_list L)) lp)) ==> (((((node (hypermap_of_list L)) lp) INTER (set_of_list ((find_face L) x))) = (y INSERT EMPTY)) ==> ((((f_list L) (((POWER (f_list L)) n) x)) = y) ==> F)))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c= * * part cINTER * * part cnode chypermap_of_list f1 b0 * * part cface chypermap_of_list f1 b0 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> c~ c= * part cdart chypermap_of_list f1 part cEMPTY c==> c~ c= f2 cNIL c==> cplain_hypermap chypermap_of_list f1 c==> cplanar_hypermap chypermap_of_list f1 c==> csimple_hypermap chypermap_of_list f1 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cis_node_nondegenerate chypermap_of_list f1 c==> cconnected_hypermap chypermap_of_list f1 c==> cis_no_double_joins chypermap_of_list f1 c==> cis_restricted chypermap_of_list f1 c==> cuniq f3 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f2 f4 c==> c= ce_list f4 cPOWER * part cf_list f1 f5 f6 c==> c= cnext_el f3 f6 cf_list f1 f6 c==> c= cfind_face f1 f7 cfind_face f1 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f6 f3 c==> cMEM f7 f2 c==> cMEM f7 cfind_face f1 f6 c==> cMEM cl'z f1 f0 f3 f6 cfind_face f1 f6 c==> cMEM f5 ciota cNUMERAL cBIT1 c_0 cl'm f1 f3 f6 c==> cMEM f2 cparts f1 f3 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f3 f6 c==> cmarked_list f1 f0 f3 f6 c/\ c~ c= f2 cNIL c==> cMEM f4 f2 c==> c~ c= f3 cNIL c==> cMEM f4 f3 c==> cMEM f4 cfind_face f1 f4 c==> c= cFST f7 cFST f4 c==> cIN f4 * * part cnode chypermap_of_list f1 f7 c==> c= * * part cface chypermap_of_list f1 f7 * part cset_of_list cfind_face f1 f6 c==> cMEM f6 clist_of_darts f1 c==> cMEM cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> c= cinverse * part cnode_map chypermap_of_list f1 f4 cf_list f1 cPOWER * part cf_list f1 f5 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * * part cnode chypermap_of_list f1 f4 c==> cMEM cf_list f1 cPOWER * part cf_list f1 f5 f6 cfind_face f1 f6 c==> cIN cf_list f1 cPOWER * part cf_list f1 f5 f6 * part cset_of_list cfind_face f1 f6 c==> c= * * part cnode chypermap_of_list f1 f7 * * part cnode chypermap_of_list f1 f4 c==> c= * * part cINTER * * part cnode chypermap_of_list f1 f4 * part cset_of_list cfind_face f1 f6 * * part cINSERT f7 part cEMPTY c==> c= cf_list f1 cPOWER * part cf_list f1 f5 f6 f7 cF
