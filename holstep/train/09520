N Aq13.next_ytrans_eq_suc
C |- (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))
T c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
D TRUTH
A |- T
T cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D LAST
A |- ((LAST ((CONS h) t)) = (((COND (t = NIL)) h) (LAST t)))
T c= cLAST cCONS f0 f1 cCOND c= f1 cNIL f0 cLAST f1
D APPEND_NIL
A |- (!l. (((APPEND l) NIL) = l))
T c= cAPPEND f0 cNIL f0
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Nkezbfc_local.lemma
A |- (!A. (A \/ (~ A)))
T c\/ f0 c~ f0
D Seq2.next_prev_id
A |- (!x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x))))
T c==> cuniq f0 c= cnext_el f0 cprev_el f0 f1 f1
D List_hypermap.uniq_find_face
A |- (!d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d)))))
T c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.split_normal_list
A |- (!L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))))
T c= csplit_normal_list f0 f1 f2 f3 f4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b5 b6 cAPPEND b7 b4 cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 f3 cCONS f3 cNIL cAPPEND cCONS b0 cNIL cAPPEND cbetwn f1 b0 f4 cCONS f4 cNIL cflatten cmap b3 b4 cbetwn f2 f3 b1 / cmap / cPOWER * part cn_list f0 b4 b3 cupt cNUMERAL cBIT1 c_0 * b2 cFST b3 / csizel cfilter / c= b3 b2 cflatten f0 cnext_el f1 f4 cnext_el f1 f3
D Tame_defs2.transform_list
A |- (!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))))
T c= ctransform_list f0 f1 c, f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f3 c, f2 f3 c, b5 cSND b4 cAPPEND creplace f3 cCONS cSND b4 cNIL f2 cCONS cFST b4 cNIL csplit_normal_list f0 f3 b3 b0 b2 cfind_face f0 b0 cprev_el f3 b1 cl'z f0 f2 f3 f1 cl'y f0 f3 f1
D Tame_defs2.ntrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.rtrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= crtrans f0 f1 f2 f3 f4 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.APPEND_cat
A |- (APPEND = cat)
T c= part cAPPEND part ccat
D Tame_list.REVERSE_rev
A |- (REVERSE = rev)
T c= part cREVERSE part crev
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.cat_eq_nil
A |- (!s. (!t. ((((cat s) t) = NIL) = ((s = NIL) /\ (t = NIL)))))
T c= c= ccat f0 f1 cNIL c/\ c= f0 cNIL c= f1 cNIL
D Tame_list.next_el_cat_last1
A |- (!s. (!t. (((uniq ((cat s) t)) /\ ((~ (t = NIL)) /\ (~ (s = NIL)))) ==> (((next_el ((cat s) t)) (LAST s)) = (HD t)))))
T c==> c/\ cuniq ccat f0 f1 c/\ c~ c= f1 cNIL c~ c= f0 cNIL c= cnext_el ccat f0 f1 cLAST f0 cHD f1
D Tame_list.last_cat
A |- (!b. (!a. ((~ (b = NIL)) ==> ((LAST ((cat a) b)) = (LAST b)))))
T c==> c~ c= f0 cNIL c= cLAST ccat f1 f0 cLAST f0
D Tame_list.betwn_nil
A |- (!f. (!a. (!b. (((uniq f) /\ ((~ (a = b)) /\ (((MEM a) f) /\ ((MEM b) f)))) ==> (((((betwn f) a) b) = NIL) = (b = ((next_el f) a)))))))
T c==> c/\ cuniq f0 c/\ c~ c= f1 f2 c/\ cMEM f1 f0 cMEM f2 f0 c= c= cbetwn f0 f1 f2 cNIL c= f2 cnext_el f0 f1
D Dangeyj.HD_BETWN2
A |- (!r. (!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1))))))
T c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ c~ c= f0 f2 c/\ cuniq f1 c~ c= cbetwn f1 f0 f2 cNIL c= cHD cbetwn f1 f0 f2 cnext_el f1 f0
D Pwssrat.f_list_power_next_el
A |- (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
D Ohcgkfu.sing_not_nil
A |- (~ (((CONS x) NIL) = NIL))
T c~ c= cCONS f0 cNIL cNIL
D Pplhulj.marked_list_of_dart
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))))
T c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0
D Ncvibwu.next_el_last_hd
A |- (!a. ((uniq ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) y) = z)))
T c==> cuniq cAPPEND cCONS f0 cNIL cAPPEND f1 cCONS f2 cNIL c= cnext_el cAPPEND cCONS f0 cNIL cAPPEND f1 cCONS f2 cNIL f2 f0
D Hojodcm.ytrans_mem_rtrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2
D Hojodcm.mem_ztrans_rtrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
D Hojodcm.z_not_eq_ytrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cytrans f0 f1 f2 f3 cNUMERAL c_0
D Hojodcm.mem_ytrans_list_of_darts_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 clist_of_darts f0
D Hojodcm.PPLHULJ_v0
A |- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cindexf f5 cztrans f0 f1 f2 f3 cNUMERAL c_0 f4
D Aq1.uniq_snd_split_norm
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = (HD (((betwn f) y) z))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cHD cbetwn f2 f1 f0 c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cf_list f3 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((MEM z) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f3 f4 f5 c==> c= cnext_el f2 f6 f7 c==> c= cprev_el f2 f7 f6 c==> c= cf_list f1 f4 cnext_el f3 f4 c==> c= cl'y f1 f2 f4 f8 c==> c= cl'z f1 f0 f2 f4 f7 c==> c= cfind_face f1 f4 f3 c==> cMEM f4 clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f4 c==> cMEM f7 f2 c= cnext_el cAPPEND cAPPEND cCONS f7 cNIL cAPPEND cbetwn f2 f7 f8 cCONS f8 cNIL cbetwn cfind_face f1 f8 f8 f7 f8 cf_list f1 f8
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f4 clist_of_darts f0 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> c= cf_list f0 f4 cnext_el f7 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- |- ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))
T c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 cnext_el f7 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> c~ cfinal_list f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((uniq r) ==> ((((next_el r) z1) = z) ==> ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f3 f4 f5 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f1 f4 cnext_el f3 f4 c==> c= cl'y f1 f2 f4 f8 c==> c= cl'z f1 f0 f2 f4 f6 c==> c= cfind_face f1 f4 f3 c==> cMEM f4 clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f4 c==> cuniq f2 c==> c= cnext_el f2 f7 f6 c==> c= cnext_el f3 f4 f5 c==> cMEM f6 f2 c==> cMEM f8 f2 c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f2 f6 f8 cCONS f8 cNIL cbetwn cfind_face f1 f8 f8 f6 f8 cf_list f1 f8
- |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- (((!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) ==> ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N)) = ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1
- |- ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)
T * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
+ |- (((!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) ==> ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)) = ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L))
T c= c==> ! ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))))), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((uniq r) ==> ((((next_el r) z1) = z) ==> ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c= cnext_el f7 f4 f8 c==> cMEM f2 f1 c==> cMEM f5 f1 c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f2 f5 cf_list f0 f5
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (uniq ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))), (good_list L), (good_list_nodes L), (z = ((next_el f) y)), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- (((uniq ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) y) = z)) ==> (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((f_list L) y)))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cAPPEND cCONS cnext_el f2 f3 cNIL cAPPEND cbetwn f1 cnext_el f2 f3 f3 cCONS f3 cNIL c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f4 cnext_el f2 f3 c==> c= cl'y f0 f1 f5 f3 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f6 f1 f5 c==> c==> cuniq cAPPEND cCONS f4 cNIL cAPPEND cbetwn f1 f4 f3 cCONS f3 cNIL c= cnext_el cAPPEND cCONS f4 cNIL cAPPEND cbetwn f1 f4 f3 cCONS f3 cNIL f3 f4 c= cnext_el cAPPEND cCONS cnext_el f2 f3 cNIL cAPPEND cbetwn f1 cnext_el f2 f3 f3 cCONS f3 cNIL f3 cf_list f0 f3
- (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ |- ((\a. ((~ (((CONS y) NIL) = NIL)) ==> ((LAST ((cat a) ((CONS y) NIL))) = (LAST ((CONS y) NIL))))) (((betwn r) z) y))
T * / c==> c~ c= cCONS f0 cNIL cNIL c= cLAST ccat b0 cCONS f0 cNIL cLAST cCONS f0 cNIL cbetwn f1 f2 f0
+ |- ((!z. (!a. ((uniq ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) y) = z)))) = T)
T c= ! ! c==> cuniq cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL c= cnext_el cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL f0 b0 cT
+ |- (((!z. (!a. ((uniq ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) y) = z)))) ==> ((\z. (!a. ((uniq ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) y) = z)))) z)) = ((\z. (!a. ((uniq ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) y) = z)))) z))
T c= c==> ! ! c==> cuniq cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL c= cnext_el cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL f0 b0 * / ! c==> cuniq cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL c= cnext_el cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL f0 b0 f1 * / ! c==> cuniq cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL c= cnext_el cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL f0 b0 f1
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
- |- ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))
T c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- |- ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)
T * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f4 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 cnext_el f7 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ |- ((((uniq ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) y) = z)) ==> (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((f_list L) y))) = (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((f_list L) y)))
T c= c==> c==> cuniq cAPPEND cCONS f0 cNIL cAPPEND cbetwn f1 f0 f2 cCONS f2 cNIL c= cnext_el cAPPEND cCONS f0 cNIL cAPPEND cbetwn f1 f0 f2 cCONS f2 cNIL f2 f0 c= cnext_el cAPPEND cCONS cnext_el f3 f2 cNIL cAPPEND cbetwn f1 cnext_el f3 f2 f2 cCONS f2 cNIL f2 cf_list f4 f2 c= cnext_el cAPPEND cCONS cnext_el f3 f2 cNIL cAPPEND cbetwn f1 cnext_el f3 f2 f2 cCONS f2 cNIL f2 cf_list f4 f2
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ |- (((!r1. (!r2. ((((MEM r1) f) /\ (((MEM r2) f) /\ ((~ (r1 = r2)) /\ ((uniq f) /\ (~ ((((betwn f) r1) r2) = NIL)))))) ==> ((HD (((betwn f) r1) r2)) = ((next_el f) r1))))) ==> ((\r1. (!r2. ((((MEM r1) f) /\ (((MEM r2) f) /\ ((~ (r1 = r2)) /\ ((uniq f) /\ (~ ((((betwn f) r1) r2) = NIL)))))) ==> ((HD (((betwn f) r1) r2)) = ((next_el f) r1))))) y)) = ((\r1. (!r2. ((((MEM r1) f) /\ (((MEM r2) f) /\ ((~ (r1 = r2)) /\ ((uniq f) /\ (~ ((((betwn f) r1) r2) = NIL)))))) ==> ((HD (((betwn f) r1) r2)) = ((next_el f) r1))))) y))
T c= c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c/\ c~ c= b0 b1 c/\ cuniq f0 c~ c= cbetwn f0 b0 b1 cNIL c= cHD cbetwn f0 b0 b1 cnext_el f0 b0 * / ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c/\ c~ c= b0 b1 c/\ cuniq f0 c~ c= cbetwn f0 b0 b1 cNIL c= cHD cbetwn f0 b0 b1 cnext_el f0 b0 f1 * / ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c/\ c~ c= b0 b1 c/\ cuniq f0 c~ c= cbetwn f0 b0 b1 cNIL c= cHD cbetwn f0 b0 b1 cnext_el f0 b0 f1
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((uniq f) ==> ((HD (((betwn f) y) z)) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> cuniq f2 c= cHD cbetwn f2 f1 f0 cf_list f3 f1
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 cT
- |- (((!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) ==> ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)) = ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2))
T c= c==> ! c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ |- (((!t. (((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) /\ ((~ (t = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD t)))) ==> ((\t. (((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) /\ ((~ (t = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD t)))) (((betwn f) y) z))) = ((\t. (((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) /\ ((~ (t = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD t)))) (((betwn f) y) z)))
T c= c==> ! c==> c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 c/\ c~ c= b0 cNIL c~ c= ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cHD b0 * / c==> c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 c/\ c~ c= b0 cNIL c~ c= ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cHD b0 cbetwn f3 f2 f0 * / c==> c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 c/\ c~ c= b0 cNIL c~ c= ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cHD b0 cbetwn f3 f2 f0
+ |- (((!r. (!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1)))))) ==> ((\r. (!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1)))))) f)) = ((\r. (!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1)))))) f))
T c= c==> ! ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c/\ c~ c= b1 b2 c/\ cuniq b0 c~ c= cbetwn b0 b1 b2 cNIL c= cHD cbetwn b0 b1 b2 cnext_el b0 b1 * / ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c/\ c~ c= b1 b2 c/\ cuniq b0 c~ c= cbetwn b0 b1 b2 cNIL c= cHD cbetwn b0 b1 b2 cnext_el b0 b1 f0 * / ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c/\ c~ c= b1 b2 c/\ cuniq b0 c~ c= cbetwn b0 b1 b2 cNIL c= cHD cbetwn b0 b1 b2 cnext_el b0 b1 f0
+ |- ((((~ (((cat (((betwn r) z) y)) ((CONS y) NIL)) = NIL)) ==> ((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL))))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) = (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y)))
T c= c==> c==> c~ c= ccat cbetwn f0 f1 f2 cCONS f2 cNIL cNIL c= cLAST ccat cCONS f1 cNIL ccat cbetwn f0 f1 f2 cCONS f2 cNIL cLAST ccat cbetwn f0 f1 f2 cCONS f2 cNIL c= cnext_el ccat ccat cCONS f1 cNIL ccat cbetwn f0 f1 f2 cCONS f2 cNIL cbetwn f3 f2 f1 f2 cf_list f4 f2 c= cnext_el ccat ccat cCONS f1 cNIL ccat cbetwn f0 f1 f2 cCONS f2 cNIL cbetwn f3 f2 f1 f2 cf_list f4 f2
+ |- (((((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x))) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) = (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2 c= cnext_el cAPPEND cAPPEND cCONS f3 cNIL cAPPEND cbetwn f4 f3 f1 cCONS f1 cNIL cbetwn cfind_face f0 f1 f1 f3 f1 cf_list f0 f1 c= cnext_el cAPPEND cAPPEND cCONS f3 cNIL cAPPEND cbetwn f4 f3 f1 cCONS f1 cNIL cbetwn cfind_face f0 f1 f1 f3 f1 cf_list f0 f1
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c= cnext_el f7 f4 f8 c==> cMEM f2 f1 c==> cMEM f5 f1 c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f2 f5 cf_list f0 f5
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> ((HD (((betwn f) y) z)) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> c==> cuniq clist_of_darts f3 cuniq cfind_face f3 f5 c= cHD cbetwn f2 f1 f0 cf_list f3 f1
+ |- (((!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) ==> ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)) = ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x))
T c= c==> ! c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> c/\ c= cprev_el f1 f5 f7 c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f4 f1 f2 c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3
- |- ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))
T c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cnext_el f4 f5 f0 c==> c= cprev_el f4 f0 f5 c==> c= cl'y f3 f4 f6 f1 c==> c= cl'z f3 f7 f4 f6 f0 c==> c= cfind_face f3 f6 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f7 f4 f6 c==> c==> c/\ cgood_list f3 c/\ cgood_list_nodes f3 c/\ cmarked_list f3 f7 f4 f6 c~ cfinal_list f3 f4 cuniq cSND csplit_normal_list f3 f4 cfind_face f3 cl'y f3 f4 f6 cl'y f3 f4 f6 cprev_el f4 cl'z f3 f7 f4 f6 c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cf_list f3 f1
- (~ ((((betwn f) y) z) = NIL)) |- ((NIL = (((betwn f) y) z)) = F)
T c==> c~ c= cbetwn f0 f1 f2 cNIL c= c= cNIL cbetwn f0 f1 f2 cF
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f5 f6 c==> c= cprev_el f1 f6 f5 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f6 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f8 f1 f3 c==> cMEM f6 f1 c==> cMEM f7 f1 c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f1 f6 f7 cCONS f7 cNIL cbetwn cfind_face f0 f7 f7 f6 f7 cf_list f0 f7
+ |- (((!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) ==> ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) y)) = ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) y))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f6 f1 f4 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f8 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c= cnext_el f7 f4 f8 c==> cMEM f2 f1 c==> cMEM f5 f1 c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f2 f5 cf_list f0 f5
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cAPPEND cCONS cnext_el f2 f3 cNIL cAPPEND cbetwn f1 cnext_el f2 f3 f3 cCONS f3 cNIL f3 cnext_el f2 f3 c==> c= cl'y f0 f1 f4 f3 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f5 f1 f4 c= cnext_el cAPPEND cCONS cnext_el f2 f3 cNIL cAPPEND cbetwn f1 cnext_el f2 f3 f3 cCONS f3 cNIL f3 cf_list f0 f3
+ |- ((\d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d))))) x)
T * / ! c==> cuniq clist_of_darts b1 cuniq cfind_face b1 b0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 cnext_el f7 f2 c= cnext_el crtrans f0 f6 f1 f2 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- |- (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))
T c= cMEM f0 ccat f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0
+ |- (((!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ (uniq (list_of_darts L)), (((find_face L) y) = f), ((MEM y) (list_of_darts L)) |- (((((f_list L) y) = ((next_el f) y)) ==> (((next_el f) y) = ((f_list L) y))) = ((((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) y) = (((POWER (next_el ((find_face L) y))) (SUC (NUMERAL _0))) y))) ==> (((next_el f) y) = ((f_list L) y))))
T c==> cuniq clist_of_darts f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f1 clist_of_darts f0 c= c==> c= cf_list f0 f1 cnext_el f2 f1 c= cnext_el f2 f1 cf_list f0 f1 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cNUMERAL c_0 f1 c= cnext_el f2 f1 cf_list f0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ |- ((\f. (!a. (!b. (((uniq f) /\ ((~ (a = b)) /\ (((MEM a) f) /\ ((MEM b) f)))) ==> (((((betwn f) a) b) = NIL) = (b = ((next_el f) a))))))) f)
T * / ! ! c==> c/\ cuniq b0 c/\ c~ c= b1 b2 c/\ cMEM b1 b0 cMEM b2 b0 c= c= cbetwn b0 b1 b2 cNIL c= b2 cnext_el b0 b1 f0
+ |- ((\t. (((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) /\ ((~ (t = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD t)))) (((betwn f) y) z))
T * / c==> c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 c/\ c~ c= b0 cNIL c~ c= ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cHD b0 cbetwn f3 f2 f0
+ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = (HD (((betwn f) y) z))) |- (((HD (((betwn f) y) z)) = ((f_list L) y)) = (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y)))
T c==> c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cbetwn f3 f2 f0 f2 cHD cbetwn f3 f2 f0 c= c= cHD cbetwn f3 f2 f0 cf_list f4 f2 c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cbetwn f3 f2 f0 f2 cf_list f4 f2
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- ((\r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))) r)
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 * / ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= cfind_face f0 b1 b2 c= cnext_el b2 b1 b3 cMEM b3 b0 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (!w. (((\w. (((next_el f) x) = w)) w) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f2 f4 f3 c==> c= cf_list f1 f5 cnext_el f6 f5 c==> c= cl'y f1 f2 f5 f7 c==> c= cl'z f1 f0 f2 f5 f4 c==> c= cfind_face f1 f5 f6 c==> cMEM f5 clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f5 ! c==> * / c= cnext_el f6 f5 b1 b0 c= cnext_el cAPPEND cAPPEND cCONS f4 cNIL cAPPEND cbetwn f2 f4 f7 cCONS f7 cNIL cbetwn cfind_face f1 f7 f7 f4 f7 cf_list f1 f7
+ (((find_face L) y) = f) |- ((\x. (((POWER (next_el ((find_face L) y))) (NUMERAL _0)) ((next_el ((find_face L) y)) x))) = (\x. ((next_el f) x)))
T c==> c= cfind_face f0 f1 f2 c= / cPOWER * part cnext_el cfind_face f0 f1 cNUMERAL c_0 cnext_el cfind_face f0 f1 b0 / cnext_el f2 b0
+ |- ((~ (((cat (((betwn r) z) y)) ((CONS y) NIL)) = NIL)) ==> ((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL)))))
T c==> c~ c= ccat cbetwn f0 f1 f2 cCONS f2 cNIL cNIL c= cLAST ccat cCONS f1 cNIL ccat cbetwn f0 f1 f2 cCONS f2 cNIL cLAST ccat cbetwn f0 f1 f2 cCONS f2 cNIL
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 cnext_el f7 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))), (good_list L), (good_list_nodes L), ((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL)))), ((LAST ((cat (((betwn r) z) y)) ((CONS y) NIL))) = (LAST ((CONS y) NIL))), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) /\ ((~ ((((betwn f) y) z) = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD (((betwn f) y) z)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cLAST ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cLAST ccat cbetwn f4 f0 f1 cCONS f1 cNIL c==> c= cLAST ccat cbetwn f4 f0 f1 cCONS f1 cNIL cLAST cCONS f1 cNIL c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> c==> c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 c/\ c~ c= cbetwn f2 f1 f0 cNIL c~ c= ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 cLAST ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cHD cbetwn f2 f1 f0 c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cf_list f3 f1
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))), (good_list L), (good_list_nodes L), ((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL)))), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- (((~ (((CONS y) NIL) = NIL)) ==> ((LAST ((cat (((betwn r) z) y)) ((CONS y) NIL))) = (LAST ((CONS y) NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cLAST ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cLAST ccat cbetwn f4 f0 f1 cCONS f1 cNIL c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> c==> c~ c= cCONS f1 cNIL cNIL c= cLAST ccat cbetwn f4 f0 f1 cCONS f1 cNIL cLAST cCONS f1 cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cf_list f3 f1
+ |- (((!L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) ==> ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L)) = ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f4 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> c/\ c= cprev_el f1 f2 f3 c~ cfinal_list f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f6 f1 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM y) r), ((((marked_list L) N) r) x) |- (((MEM y) r) /\ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f5 f6 c==> c= cprev_el f1 f6 f5 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f6 c==> c= cfind_face f0 f3 f2 c==> cMEM f7 f1 c==> cmarked_list f0 f8 f1 f3 c/\ cMEM f7 f1 c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f1 f6 f7 cCONS f7 cNIL cbetwn cfind_face f0 f7 f7 f6 f7 cf_list f0 f7
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f3 f4 f5 c==> c= cnext_el f2 f6 f7 c==> c= cprev_el f2 f7 f6 c==> c= cf_list f1 f4 cnext_el f3 f4 c==> c= cl'y f1 f2 f4 f8 c==> c= cl'z f1 f0 f2 f4 f7 c==> c= cfind_face f1 f4 f3 c==> cMEM f4 clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f4 c==> c= cnext_el f3 f4 f5 c==> cMEM f7 f2 c==> cMEM f8 f2 c= cnext_el cAPPEND cAPPEND cCONS f7 cNIL cAPPEND cbetwn f2 f7 f8 cCONS f8 cNIL cbetwn cfind_face f1 f8 f8 f7 f8 cf_list f1 f8
- |- (MAP = map)
T c= part cMAP part cmap
- |- (LENGTH = sizel)
T c= part cLENGTH part csizel
+ |- (((!b. (!a. ((~ (b = NIL)) ==> ((LAST ((cat a) b)) = (LAST b))))) ==> ((\b. (!a. ((~ (b = NIL)) ==> ((LAST ((cat a) b)) = (LAST b))))) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = ((\b. (!a. ((~ (b = NIL)) ==> ((LAST ((cat a) b)) = (LAST b))))) ((cat (((betwn r) z) y)) ((CONS y) NIL))))
T c= c==> ! ! c==> c~ c= b0 cNIL c= cLAST ccat b1 b0 cLAST b0 * / ! c==> c~ c= b0 cNIL c= cLAST ccat b1 b0 cLAST b0 ccat cbetwn f0 f1 f2 cCONS f2 cNIL * / ! c==> c~ c= b0 cNIL c= cLAST ccat b1 b0 cLAST b0 ccat cbetwn f0 f1 f2 cCONS f2 cNIL
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) y) = ((f_list L) y))) = (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) y) = ((f_list L) y)))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 c= cnext_el cAPPEND cAPPEND cCONS f4 cNIL cAPPEND cbetwn f2 f4 f5 cCONS f5 cNIL cNIL f5 cf_list f0 f5 c= cnext_el cAPPEND cAPPEND cCONS f4 cNIL cAPPEND cbetwn f2 f4 f5 cCONS f5 cNIL cNIL f5 cf_list f0 f5
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ |- ((!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))) = T)
T c= ! c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c/\ c= cl'z f0 f2 f1 b0 f3 c/\ c= cl'y f0 f1 b0 f4 c/\ c= cfind_face f0 b0 f5 c/\ c= cprev_el f1 f3 f6 c~ cfinal_list f0 crtrans f0 f2 f1 b0 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f2 f1 b0 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 cT
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((HD (((betwn f) y) z)) = ((f_list L) y))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c= cHD cbetwn f2 f1 f0 cf_list f3 f1
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
- (good_list L), (good_list_nodes L) |- ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))) = (\x. (!f. (!w. ((((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))) ==> ((MEM w) r))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 f2 / ! ! c==> c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f8 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c= cnext_el f7 f4 f8 c==> cMEM f2 f1 c==> cMEM f5 f1 c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f2 f5 cf_list f0 f5
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cf_list f0 f4 cnext_el f5 f4 c==> c= cl'y f0 f1 f4 f6 c==> c= cl'z f0 f7 f1 f4 f2 c==> c= cfind_face f0 f4 f5 c==> cMEM f4 clist_of_darts f0 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f4 c= cnext_el crtrans f0 f7 f1 f4 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
- |- ((NIL = ((CONS x) NIL)) = F)
T c= c= cNIL cCONS f0 cNIL cF
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 cnext_el f7 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
- |- (T = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= cT c==> c~ ! c\/ b0 c~ b0 cF
- |- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ |- (((!x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) ==> ((\x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) (((((ztrans L) N) r) x) (NUMERAL _0)))) = ((\x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) (((((ztrans L) N) r) x) (NUMERAL _0))))
T c= c==> ! ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 * / ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0 * / ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0
+ |- ((\t. ((((cat s) t) = NIL) = ((s = NIL) /\ (t = NIL)))) t)
T * / c= c= ccat f0 b0 cNIL c/\ c= f0 cNIL c= b0 cNIL f1
- |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ |- (!t. (((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) /\ ((~ (t = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD t))))
T c==> c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL f3 c/\ c~ c= f3 cNIL c~ c= ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL f3 cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cHD f3
+ |- (((((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))) = (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))
T c= c==> c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0 c= cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 c= cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) x) = (((POWER (next_el ((find_face L) x))) (SUC (NUMERAL _0))) x))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))) = (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cNUMERAL c_0 f1 c= cnext_el crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 c= cnext_el crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4
- |- ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)
T * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- |- ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))
T c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- (((!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) ==> ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)) = ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1))
T c= c==> ! ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)) = T)
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 f5 cMEM f5 f2 cT
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0
+ |- (((!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) ==> ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N)) = ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N))
T c= c==> ! ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1
+ (~ ((final_list L) r)), (uniq r), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((uniq r) /\ ((((next_el r) z1) = z) ==> ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c/\ cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c= cnext_el f7 f4 f8 c==> cMEM f2 f1 c==> cMEM f5 f1 c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f2 f5 cf_list f0 f5
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> cMEM f2 clist_of_darts f0 c= cnext_el crtrans f0 f6 f1 f2 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- |- ((!A'. (A' \/ (~ A))) = ((!A. A) \/ (~ A)))
T c= ! c\/ b0 c~ f0 c\/ ! b0 c~ f0
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cnext_el f3 f7 f0 c==> c= cprev_el f3 f0 f7 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f8 f3 f5 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 f0 f1 cf_list f2 f1
+ (uniq (list_of_darts L)), (((find_face L) x) = f), ((MEM x) (list_of_darts L)) |- (((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))) = ((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) x) = (((POWER (next_el ((find_face L) x))) (SUC (NUMERAL _0))) x))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))
T c==> cuniq clist_of_darts f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f1 clist_of_darts f0 c= c==> c= cf_list f0 f1 cnext_el f2 f1 c= cnext_el crtrans f0 f3 f4 f1 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cNUMERAL c_0 f1 c= cnext_el crtrans f0 f3 f4 f1 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- (((!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ==> ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)) = ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1))
T c= c==> ! ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) /\ ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((all (f_last L)) N), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) /\ (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> call * part cf_last f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c= cnext_el f7 f4 f8 c==> cMEM f2 f1 c==> cMEM f5 f1 c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f2 f5 cf_list f0 f5
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ ((final_list L) r)), (good_list L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))))) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
+ (uniq (list_of_darts L)), (((find_face L) x) = f) |- (((uniq f) ==> ((HD (((betwn f) y) z)) = ((f_list L) y))) = (((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> ((HD (((betwn f) y) z)) = ((f_list L) y))))
T c==> cuniq clist_of_darts f0 c==> c= cfind_face f0 f1 f2 c= c==> cuniq f2 c= cHD cbetwn f2 f3 f4 cf_list f0 f3 c==> c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1 c= cHD cbetwn f2 f3 f4 cf_list f0 f3
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (uniq ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))), (good_list L), (good_list_nodes L), (z = ((next_el f) y)), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- ((uniq ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) /\ (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((f_list L) y)))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cuniq cAPPEND cCONS cnext_el f2 f3 cNIL cAPPEND cbetwn f1 cnext_el f2 f3 f3 cCONS f3 cNIL c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f4 cnext_el f2 f3 c==> c= cl'y f0 f1 f5 f3 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f6 f1 f5 c/\ cuniq cAPPEND cCONS cnext_el f2 f3 cNIL cAPPEND cbetwn f1 cnext_el f2 f3 f3 cCONS f3 cNIL c= cnext_el cAPPEND cCONS cnext_el f2 f3 cNIL cAPPEND cbetwn f1 cnext_el f2 f3 f3 cCONS f3 cNIL f3 cf_list f0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f3 f4 f5 c==> c= cprev_el f1 f6 f7 c==> c= cf_list f0 f4 cnext_el f3 f4 c==> c= cl'y f0 f1 f4 f8 c==> c= cl'z f0 f2 f1 f4 f6 c==> c= cfind_face f0 f4 f3 c==> cMEM f4 clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cmarked_list f0 f2 f1 f4 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 f7 f6 c==> c= cnext_el f3 f4 f5 c==> cMEM f6 f1 c==> cMEM f8 f1 c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f1 f6 f8 cCONS f8 cNIL cbetwn cfind_face f0 f8 f8 f6 f8 cf_list f0 f8
+ |- (((!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r))
T c= c==> ! ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ ((((marked_list L) N) r) x) |- ((((MEM x) (list_of_darts L)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))) = ((((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))
T c==> cmarked_list f0 f1 f2 f3 c= c==> cMEM f3 clist_of_darts f0 c= cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 c==> c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0 c= cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> c==> cmarked_list f0 f6 f1 f2 cMEM f2 clist_of_darts f0 c= cnext_el crtrans f0 f6 f1 f2 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ |- ((((((MEM y) f) /\ (((MEM z) f) /\ ((~ (y = z)) /\ ((uniq f) /\ (~ ((((betwn f) y) z) = NIL)))))) ==> ((HD (((betwn f) y) z)) = ((next_el f) y))) ==> ((HD (((betwn f) y) z)) = ((f_list L) y))) = ((HD (((betwn f) y) z)) = ((f_list L) y)))
T c= c==> c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ c~ c= f0 f2 c/\ cuniq f1 c~ c= cbetwn f1 f0 f2 cNIL c= cHD cbetwn f1 f0 f2 cnext_el f1 f0 c= cHD cbetwn f1 f0 f2 cf_list f3 f0 c= cHD cbetwn f1 f0 f2 cf_list f3 f0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
- |- ((!f'. t) = t)
T c= ! f0 f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ |- ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c/\ c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cs_flag_list f0 f6 f1 f2 c= cnext_el crtrans f0 f6 f1 f2 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
+ |- (((!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) ==> ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)) = ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
+ ((\w. (((next_el f) x) = w)) w) |- (((((next_el f) x) = w) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) = (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> * / c= cnext_el f0 f1 b0 f2 c= c==> c= cnext_el f0 f1 f2 c= cnext_el cAPPEND cAPPEND cCONS f3 cNIL cAPPEND cbetwn f4 f3 f5 cCONS f5 cNIL cbetwn cfind_face f6 f5 f5 f3 f5 cf_list f6 f5 c= cnext_el cAPPEND cAPPEND cCONS f3 cNIL cAPPEND cbetwn f4 f3 f5 cCONS f5 cNIL cbetwn cfind_face f6 f5 f5 f3 f5 cf_list f6 f5
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((~ ((((betwn f) y) z) = NIL)) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))), (((((betwn f) y) z) = NIL) \/ (~ ((((betwn f) y) z) = NIL))), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f4 f0 c==> c= cprev_el f3 f0 f4 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f6 f3 f5 f0 c==> c= cfind_face f2 f5 f7 c==> c= cfind_face f2 f1 f7 c==> c==> c~ c= cbetwn f7 f1 f0 cNIL c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn f7 f1 f0 f1 cf_list f2 f1 c==> c\/ c= cbetwn f7 f1 f0 cNIL c~ c= cbetwn f7 f1 f0 cNIL c==> cMEM f1 f7 c==> cMEM f0 f7 c==> cmarked_list f2 f6 f3 f5 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn f7 f1 f0 f1 cf_list f2 f1
+ |- (((!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c/\ c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cs_flag_list f0 f6 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 cnext_el f7 f2 c= cnext_el crtrans f0 f6 f1 f2 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) y) = ((f_list L) y))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f2 f4 f3 c==> c= cf_list f1 f5 cnext_el f6 f5 c==> c= cl'y f1 f2 f5 f7 c==> c= cl'z f1 f0 f2 f5 f4 c==> c= cfind_face f1 f5 f6 c==> cMEM f5 clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f5 c= cnext_el cSND cPOWER * * part ctransform_list f1 f5 cNUMERAL cBIT1 c_0 c, f0 f2 f7 cf_list f1 f7
- |- ((((\w. (((next_el f) x) = w)) w) ==> (?w. (((next_el f) x) = w))) = T)
T c= c==> * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0 cT
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cs_flag_list f0 f6 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 cnext_el f7 f2 c= cnext_el crtrans f0 f6 f1 f2 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ |- ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)
T * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) = (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 f5 cMEM f5 f2 c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f2 f6 f7 cCONS f7 cNIL cbetwn cfind_face f0 f7 f7 f6 f7 cf_list f0 f7 c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f2 f6 f7 cCONS f7 cNIL cbetwn cfind_face f0 f7 f7 f6 f7 cf_list f0 f7
+ |- ((\m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))) (SUC (NUMERAL _0)))
T * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 cSUC cNUMERAL c_0
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((next_el r) z1) = z) /\ ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f3 f2 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f3 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c/\ c= cnext_el f1 f2 f3 c==> c= cnext_el f7 f4 f8 c==> cMEM f3 f1 c==> cMEM f5 f1 c= cnext_el cAPPEND cAPPEND cCONS f3 cNIL cAPPEND cbetwn f1 f3 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f3 f5 cf_list f0 f5
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))) N)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 clist_of_darts f0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 c/\ c= cfind_face f0 f2 f6 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) y)
T * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cf_list f0 f4 cnext_el f5 f4 c==> c= cl'y f0 f1 f4 f6 c==> c= cl'z f0 f7 f1 f4 f2 c==> c= cfind_face f0 f4 f5 c==> cMEM f4 clist_of_darts f0 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f7 f1 f4 c==> cnormal_list f0 f7 c= cnext_el crtrans f0 f7 f1 f4 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
- ((\w. (((next_el f) x) = w)) w) |- (((((next_el f) x) = w) ==> (?w. (((next_el f) x) = w))) = (?w. (((next_el f) x) = w)))
T c==> * / c= cnext_el f0 f1 b0 f2 c= c==> c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((~ (z = y)) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f5 f6 c==> c= cprev_el f1 f6 f5 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f6 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f8 f1 f3 c==> c~ c= f6 f7 c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f1 f6 f7 cCONS f7 cNIL cbetwn cfind_face f0 f7 f7 f6 f7 cf_list f0 f7
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 cnext_el f7 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (z = ((next_el f) y)), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- ((z = ((next_el f) y)) /\ ((uniq ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) y) = ((f_list L) y))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 cnext_el f3 f4 c==> c= cl'y f0 f1 f5 f4 c==> c= cfind_face f0 f4 f3 c==> cmarked_list f0 f6 f1 f5 c/\ c= f2 cnext_el f3 f4 c==> cuniq cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f4 cCONS f4 cNIL c= cnext_el cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f4 cCONS f4 cNIL f4 cf_list f0 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f3 f4 f5 c==> c= cnext_el f2 f6 f7 c==> c= cprev_el f2 f7 f6 c==> c= cf_list f1 f4 cnext_el f3 f4 c==> c= cl'y f1 f2 f4 f8 c==> c= cl'z f1 f0 f2 f4 f7 c==> c= cfind_face f1 f4 f3 c==> cMEM f4 clist_of_darts f1 c==> cMEM f8 f2 c==> cMEM f7 f2 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f4 c= cnext_el cAPPEND cAPPEND cCONS f7 cNIL cAPPEND cbetwn f2 f7 f8 cCONS f8 cNIL cbetwn cfind_face f1 f8 f8 f7 f8 cf_list f1 f8
- (~ ((((betwn f) y) z) = NIL)) |- (((~ (NIL = (((betwn f) y) z))) ==> ((NIL = (((betwn f) y) z)) = F)) = ((NIL = (((betwn f) y) z)) = F))
T c==> c~ c= cbetwn f0 f1 f2 cNIL c= c==> c~ c= cNIL cbetwn f0 f1 f2 c= c= cNIL cbetwn f0 f1 f2 cF c= c= cNIL cbetwn f0 f1 f2 cF
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c= cnext_el crtrans f0 f6 f1 f2 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ |- (((((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) /\ ((~ ((((betwn f) y) z) = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD (((betwn f) y) z)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) = (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y)))
T c= c==> c==> c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cbetwn f3 f2 f0 c/\ c~ c= cbetwn f3 f2 f0 cNIL c~ c= ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cbetwn f3 f2 f0 cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cHD cbetwn f3 f2 f0 c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cbetwn f3 f2 f0 f2 cf_list f4 f2 c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cbetwn f3 f2 f0 f2 cf_list f4 f2
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
+ |- (((~ (((CONS x) NIL) = NIL)) ==> ((((CONS x) NIL) = NIL) = F)) = ((((CONS x) NIL) = NIL) = F))
T c= c==> c~ c= cCONS f0 cNIL cNIL c= c= cCONS f0 cNIL cNIL cF c= c= cCONS f0 cNIL cNIL cF
+ (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((next_el f) y)) |- ((((next_el f) y) = ((f_list L) y)) = (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((f_list L) y)))
T c==> c= cnext_el cAPPEND cCONS cnext_el f0 f1 cNIL cAPPEND cbetwn f2 cnext_el f0 f1 f1 cCONS f1 cNIL f1 cnext_el f0 f1 c= c= cnext_el f0 f1 cf_list f3 f1 c= cnext_el cAPPEND cCONS cnext_el f0 f1 cNIL cAPPEND cbetwn f2 cnext_el f0 f1 f1 cCONS f1 cNIL f1 cf_list f3 f1
- |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1
- |- ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)
T * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 cnext_el f7 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ |- ((((LAST ((cat (((betwn r) z) y)) ((CONS y) NIL))) = (LAST ((CONS y) NIL))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) = (((~ (((CONS y) NIL) = NIL)) ==> ((LAST ((cat (((betwn r) z) y)) ((CONS y) NIL))) = (LAST ((CONS y) NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))))
T c= c==> c= cLAST ccat cbetwn f0 f1 f2 cCONS f2 cNIL cLAST cCONS f2 cNIL c= cnext_el ccat ccat cCONS f1 cNIL ccat cbetwn f0 f1 f2 cCONS f2 cNIL cbetwn f3 f2 f1 f2 cf_list f4 f2 c==> c==> c~ c= cCONS f2 cNIL cNIL c= cLAST ccat cbetwn f0 f1 f2 cCONS f2 cNIL cLAST cCONS f2 cNIL c= cnext_el ccat ccat cCONS f1 cNIL ccat cbetwn f0 f1 f2 cCONS f2 cNIL cbetwn f3 f2 f1 f2 cf_list f4 f2
+ |- ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r)
T * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((all (loop_list L)) N), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) /\ ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> call * part cloop_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c= cnext_el f7 f4 f8 c==> cMEM f2 f1 c==> cMEM f5 f1 c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f2 f5 cf_list f0 f5
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
- |- ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)
T * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3
+ |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 cnext_el f7 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cytrans f0 f1 f2 b0 cNUMERAL c_0
- ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (((!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))) ==> ((\f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))) f)) = ((\f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))) f))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 b0 c= cnext_el b0 f3 b1 cMEM b1 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 b0 c= cnext_el b0 f3 b1 cMEM b1 f2 f4 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 b0 c= cnext_el b0 f3 b1 cMEM b1 f2 f4
+ |- (((!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) ==> ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L)) = ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L))
T c= c==> ! c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f8 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c= cnext_el f7 f4 f8 c==> cMEM f2 f1 c==> cMEM f5 f1 c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f2 f5 cf_list f0 f5
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- ((((f_list L) x) = w) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cMEM f4 clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f6 f1 f4 c==> c= cf_list f0 f4 f8 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c= cnext_el f7 f4 f8 c==> cMEM f2 f1 c==> cMEM f5 f1 c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f2 f5 cf_list f0 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> ((((next_el f) x) = w) ==> (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 f8 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c= cnext_el f7 f4 f8 c==> cMEM f2 f1 c==> cMEM f5 f1 c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f2 f5 cf_list f0 f5
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- ((((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c= c==> cMEM f3 f1 c= cnext_el cAPPEND cAPPEND cCONS f5 cNIL cAPPEND cbetwn f1 f5 f3 cCONS f3 cNIL cbetwn cfind_face f0 f3 f3 f5 f3 cf_list f0 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f2 c~ cfinal_list f0 f1 cMEM cytrans f0 f4 f1 f2 cNUMERAL c_0 f1 c= cnext_el cAPPEND cAPPEND cCONS f5 cNIL cAPPEND cbetwn f1 f5 f3 cCONS f3 cNIL cbetwn cfind_face f0 f3 f3 f5 f3 cf_list f0 f3
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((~ (z = y)) /\ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cnext_el f3 f7 f0 c==> c= cprev_el f3 f0 f7 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f8 f3 f5 c/\ c~ c= f0 f1 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 f0 f1 cf_list f2 f1
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f4 f0 c==> c= cprev_el f3 f0 f4 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f6 f3 f5 f0 c==> c= cfind_face f2 f5 f7 c==> cmarked_list f2 f6 f3 f5 c==> c/\ cMEM f1 f7 c/\ cMEM f0 f7 c< cindexf f8 f1 f7 cindexf f8 f0 f7 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 f0 f1 cf_list f2 f1
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L))
T c= c==> ! ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0
+ |- ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))) x)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= b1 cfind_face f0 b0 c= b2 cnext_el b1 b0 c/\ cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 c/\ cMEM cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 c< cindexf b2 cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 cindexf b2 cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 f3
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- (((((betwn f) y) z) = NIL) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f4 f0 c==> c= cprev_el f3 f0 f4 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f6 f3 f5 f0 c==> c= cfind_face f2 f5 f7 c==> c= cfind_face f2 f1 f7 c==> cMEM f1 f7 c==> cMEM f0 f7 c==> cmarked_list f2 f6 f3 f5 c==> c= cbetwn f7 f1 f0 cNIL c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn f7 f1 f0 f1 cf_list f2 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cprev_el f2 f3 f4 c==> c= cf_list f1 f5 cnext_el f6 f5 c==> c= cl'y f1 f2 f5 f7 c==> c= cl'z f1 f0 f2 f5 f3 c==> c= cfind_face f1 f5 f6 c==> cMEM f5 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f5 c= cnext_el crtrans f1 f0 f2 f5 cNUMERAL cBIT1 c_0 f7 cf_list f1 f7
+ ((\w. (((next_el f) x) = w)) w) |- (((next_el f) x) = w)
T c==> * / c= cnext_el f0 f1 b0 f2 c= cnext_el f0 f1 f2
- (~ ((((betwn f) y) z) = NIL)) |- (~ (NIL = (((betwn f) y) z)))
T c==> c~ c= cbetwn f0 f1 f2 cNIL c~ c= cNIL cbetwn f0 f1 f2
- |- (((!x'. (((\w. (((next_el f) x) = w)) x') ==> (?w. (((next_el f) x) = w)))) ==> ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w)))) = ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w))))
T c= c==> ! c==> * / c= cnext_el f0 f1 b1 b0 c? / c= cnext_el f0 f1 b1 c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0 c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
+ |- (!a. ((~ (((CONS y) NIL) = NIL)) ==> ((LAST ((cat a) ((CONS y) NIL))) = (LAST ((CONS y) NIL)))))
T c==> c~ c= cCONS f0 cNIL cNIL c= cLAST ccat f1 cCONS f0 cNIL cLAST cCONS f0 cNIL
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cnext_el f3 f7 f0 c==> c= cprev_el f3 f0 f7 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f8 f3 f5 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 f0 f1 cf_list f2 f1
- |- ((!A. (A \/ (~ A))) = ((T \/ (~ T)) /\ (F \/ (~ F))))
T c= ! c\/ b0 c~ b0 c/\ c\/ cT c~ cT c\/ cF c~ cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c==> cs_flag_list f0 f6 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 cnext_el f7 f2 c= cnext_el crtrans f0 f6 f1 f2 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))) = (\x. (((((marked_list L) N) r) x) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 cMEM cztrans f0 f2 f1 b0 cNUMERAL c_0 f1 / c==> cmarked_list f0 f2 f1 b0 cMEM cztrans f0 f2 f1 b0 cNUMERAL c_0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ |- ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r)
T * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cuniq cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 f2
- (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((MEM w) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cnext_el f3 f7 f0 c==> c= cprev_el f3 f0 f7 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f8 f3 f5 c==> cMEM f6 f3 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 f0 f1 cf_list f2 f1
+ ((MEM y) (list_of_darts L)) |- (((MEM y) (list_of_darts L)) = T)
T c==> cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cT
+ |- ((\L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x)))) L)
T * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f3 f4 f5 c==> c= cnext_el f2 f6 f7 c==> c= cprev_el f2 f7 f6 c==> c= cf_list f1 f4 cnext_el f3 f4 c==> c= cl'y f1 f2 f4 f8 c==> c= cl'z f1 f0 f2 f4 f7 c==> c= cfind_face f1 f4 f3 c==> cMEM f4 clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f4 c= cnext_el cAPPEND cAPPEND cCONS f7 cNIL cAPPEND cbetwn f2 f7 f8 cCONS f8 cNIL cbetwn cfind_face f1 f8 f8 f7 f8 cf_list f1 f8
+ |- (((((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) y) = (((POWER (next_el ((find_face L) y))) (SUC (NUMERAL _0))) y))) ==> (((next_el f) y) = ((f_list L) y))) = (((next_el f) y) = ((f_list L) y)))
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cNUMERAL c_0 f1 c= cnext_el f2 f1 cf_list f0 f1 c= cnext_el f2 f1 cf_list f0 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)
T * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- (((HD (((betwn f) y) z)) = ((next_el f) y)) ==> ((HD (((betwn f) y) z)) = ((f_list L) y)))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cfind_face f0 f3 f4 c==> cmarked_list f0 f5 f1 f2 c==> c= cHD cbetwn f4 f3 f6 cnext_el f4 f3 c= cHD cbetwn f4 f3 f6 cf_list f0 f3
+ |- (((!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) ==> ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y)) = ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 cnext_el f7 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))) ==> (((next_el f) y) = ((f_list L) y))) = (((next_el f) y) = ((f_list L) y)))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 clist_of_darts f0 c= cnext_el f4 f5 cf_list f0 f5 c= cnext_el f4 f5 cf_list f0 f5
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))) = (\x. (((((marked_list L) N) r) x) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 c~ c= cztrans f0 f2 f1 b0 cNUMERAL c_0 cytrans f0 f2 f1 b0 cNUMERAL c_0 / c==> cmarked_list f0 f2 f1 b0 c~ c= cztrans f0 f2 f1 b0 cNUMERAL c_0 cytrans f0 f2 f1 b0 cNUMERAL c_0
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- ((\f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))) f)
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 b0 c= cnext_el b0 f3 b1 cMEM b1 f2 f4
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ |- ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)
T * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((MEM z) r), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f3 f4 f5 c==> c= cnext_el f2 f6 f7 c==> c= cprev_el f2 f7 f6 c==> c= cf_list f1 f4 cnext_el f3 f4 c==> c= cl'y f1 f2 f4 f8 c==> c= cl'z f1 f0 f2 f4 f7 c==> c= cfind_face f1 f4 f3 c==> cMEM f4 clist_of_darts f1 c==> cMEM f7 f2 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f4 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= cnext_el cAPPEND cAPPEND cCONS f7 cNIL cAPPEND cbetwn f2 f7 f8 cCONS f8 cNIL cbetwn cfind_face f1 f8 f8 f7 f8 cf_list f1 f8
+ |- ((((CONS x) NIL) = NIL) = F)
T c= c= cCONS f0 cNIL cNIL cF
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (z = ((next_el f) y)), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- ((uniq ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) y) = ((f_list L) y)))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 cnext_el f3 f4 c==> c= cl'y f0 f1 f5 f4 c==> c= cfind_face f0 f4 f3 c==> cmarked_list f0 f6 f1 f5 c==> cuniq cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f4 cCONS f4 cNIL c= cnext_el cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f4 cCONS f4 cNIL f4 cf_list f0 f4
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ (((MEM z) r) ==> (((MEM y) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f5 f6 c==> c= cprev_el f1 f6 f5 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f6 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f8 f1 f3 c/\ c= cnext_el f2 f3 f4 c==> cMEM f6 f1 c==> cMEM f7 f1 c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f1 f6 f7 cCONS f7 cNIL cbetwn cfind_face f0 f7 f7 f6 f7 cf_list f0 f7
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s)) |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c==> c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0 c= call f1 f0 ! c==> cMEM b0 f0 * f1 b0
- (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) |- (((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) = F)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c= cfinal_list f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cF
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> c/\ c= cfind_face f0 f2 f6 c/\ c= cprev_el f1 f5 f7 c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f4 f1 f2 c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))))), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- (((~ (((cat (((betwn r) z) y)) ((CONS y) NIL)) = NIL)) ==> ((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL))))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> c==> c~ c= ccat cbetwn f4 f0 f1 cCONS f1 cNIL cNIL c= cLAST ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cLAST ccat cbetwn f4 f0 f1 cCONS f1 cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cf_list f3 f1
+ |- ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)
T * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= cnext_el crtrans f0 f6 f1 f2 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ (~ (z = y)) |- (((~ (y = z)) ==> ((y = z) = F)) = ((y = z) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f5 f6 c==> c= cprev_el f1 f6 f5 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f6 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f1 f6 f7 cCONS f7 cNIL cbetwn cfind_face f0 f7 f7 f6 f7 cf_list f0 f7
+ (~ (z = y)), (~ ((final_list L) r)), (uniq f), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) y) = f), ((((betwn f) y) z) = NIL), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq f4 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f5 f0 c==> c= cprev_el f3 f0 f5 c==> c= cl'y f2 f3 f6 f1 c==> c= cl'z f2 f7 f3 f6 f0 c==> c= cfind_face f2 f1 f4 c==> c= cbetwn f4 f1 f0 cNIL c==> cMEM f1 f4 c==> cMEM f0 f4 c==> cmarked_list f2 f7 f3 f6 c==> c==> c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f7 f3 f6 c~ cfinal_list f2 f3 cuniq cSND csplit_normal_list f2 f3 cfind_face f2 cl'y f2 f3 f6 cl'y f2 f3 f6 cprev_el f3 cl'z f2 f7 f3 f6 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL f1 cf_list f2 f1
- |- ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x)
T * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0
- (~ (!A. (A \/ (~ A)))) |- F
T c==> c~ ! c\/ b0 c~ b0 cF
+ (uniq (list_of_darts L)), (((find_face L) y) = f) |- (((MEM y) (list_of_darts L)) ==> (((next_el f) y) = ((f_list L) y)))
T c==> cuniq clist_of_darts f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f1 clist_of_darts f0 c= cnext_el f2 f1 cf_list f0 f1
- (~ (z = y)) |- ((z = y) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cfind_face f0 f2 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f2 c==> cmarked_list f0 f6 f1 f2 c= cnext_el crtrans f0 f6 f1 f2 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ |- ((\i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))) i)
T * / c= crtrans f0 f1 f2 f3 b0 cSND cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))) x)
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 f2 f3
+ |- ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)
T * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f2 f4 f3 c==> c= cf_list f1 f5 cnext_el f6 f5 c==> c= cl'y f1 f2 f5 f7 c==> c= cl'z f1 f0 f2 f5 f4 c==> c= cfind_face f1 f5 f6 c==> cMEM f5 clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f5 c==> c= cnext_el f6 f5 f8 c= cnext_el cAPPEND cAPPEND cCONS f4 cNIL cAPPEND cbetwn f2 f4 f7 cCONS f7 cNIL cbetwn cfind_face f1 f7 f7 f4 f7 cf_list f1 f7
- |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((((next_el f) x) = w) ==> (?w. (((next_el f) x) = w)))
T c==> c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((\w. (((next_el f) x) = w)) w) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f2 f4 f3 c==> c= cf_list f1 f5 cnext_el f6 f5 c==> c= cl'y f1 f2 f5 f7 c==> c= cl'z f1 f0 f2 f5 f4 c==> c= cfind_face f1 f5 f6 c==> cMEM f5 clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f5 c==> * / c= cnext_el f6 f5 b0 f8 c= cnext_el cAPPEND cAPPEND cCONS f4 cNIL cAPPEND cbetwn f2 f4 f7 cCONS f7 cNIL cbetwn cfind_face f1 f7 f7 f4 f7 cf_list f1 f7
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!A. ((P A) \/ Q)) = ((!A. (P A)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cl'z f0 f6 f1 f3 f7 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f6 f1 f3 c= c==> c/\ cMEM f5 f2 c/\ cMEM f7 f2 c< cindexf f4 f5 f2 cindexf f4 f7 f2 c= cnext_el cAPPEND cAPPEND cCONS f7 cNIL cAPPEND cbetwn f1 f7 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f7 f5 cf_list f0 f5 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c= f2 cfind_face f0 f3 c= f4 cnext_el f2 f3 c/\ cMEM cytrans f0 f6 f1 f3 cNUMERAL c_0 f2 c/\ cMEM cztrans f0 f6 f1 f3 cNUMERAL c_0 f2 c< cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f2 cindexf f4 cztrans f0 f6 f1 f3 cNUMERAL c_0 f2 c= cnext_el cAPPEND cAPPEND cCONS f7 cNIL cAPPEND cbetwn f1 f7 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f7 f5 cf_list f0 f5
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ |- ((\z. (!a. ((uniq ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) y) = z)))) z)
T * / ! c==> cuniq cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL c= cnext_el cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL f0 b0 f1
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- ((\w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))) w)
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 b0 cMEM b0 f2 f5
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))) = (\x. (((((marked_list L) N) r) x) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 f1 / c==> cmarked_list f0 f2 f1 b0 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- (((next_el f) x) = w) |- ((\w'. (((good_list _10352426) /\ ((good_list_nodes _10352426) /\ (((((marked_list _10352426) N) r) x) /\ ((((find_face _10352426) x) = f) /\ (((next_el f) x) = w'))))) ==> ((MEM w') r))) = (\w'. (((good_list _10352426) /\ ((good_list_nodes _10352426) /\ (((((marked_list _10352426) N) r) x) /\ ((((find_face _10352426) x) = f) /\ (w = w'))))) ==> ((MEM w') r))))
T c==> c= cnext_el f0 f1 f2 c= / c==> c/\ cgood_list f3 c/\ cgood_list_nodes f3 c/\ cmarked_list f3 f4 f5 f1 c/\ c= cfind_face f3 f1 f0 c= cnext_el f0 f1 b0 cMEM b0 f5 / c==> c/\ cgood_list f3 c/\ cgood_list_nodes f3 c/\ cmarked_list f3 f4 f5 f1 c/\ c= cfind_face f3 f1 f0 c= f2 b0 cMEM b0 f5
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cT
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) L)
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 f0
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f5 f6 c==> c= cprev_el f1 f6 f5 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f6 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f8 f1 f3 c/\ cuniq clist_of_darts f0 c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f1 f6 f7 cCONS f7 cNIL cbetwn cfind_face f0 f7 f7 f6 f7 cf_list f0 f7
- (NIL = ((CONS x) NIL)) |- (((CONS x) NIL) = NIL)
T c==> c= cNIL cCONS f0 cNIL c= cCONS f0 cNIL cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) x) = ((next_el f) x)) /\ (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cf_list f0 f2 cnext_el f5 f2 c==> c= cl'y f0 f1 f2 f6 c==> c= cl'z f0 f7 f1 f2 f3 c==> c= cfind_face f0 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c/\ c= cf_list f0 f2 cnext_el f5 f2 c= cnext_el crtrans f0 f7 f1 f2 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- (((!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) = (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f1 f0 f2 cCONS f2 cNIL cbetwn cfind_face f3 f2 f2 f0 f2 cf_list f3 f2 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f1 f0 f2 cCONS f2 cNIL cbetwn cfind_face f3 f2 f2 f0 f2 cf_list f3 f2
- |- (~ (NIL = ((CONS x) NIL)))
T c~ c= cNIL cCONS f0 cNIL
- |- (((!y. (((MEM x) ((CONS y) NIL)) = (x = y))) ==> ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)) = ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y))
T c= c==> ! c= cMEM f0 cCONS b0 cNIL c= f0 b0 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
- (~ ((final_list L) r)), (good_list L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (((!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))) ==> ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))) x)) = ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))) x))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 f2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 f2 f3 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 f2 f3
- |- (((!s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) ==> ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s)) = ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s))
T c= c==> ! c= c~ c= b0 cNIL c? / cMEM b1 b0 * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0 * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0
- |- (((!a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) ==> ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a)) = ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a))
T c= c==> ! ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0
- (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cnext_el f3 f7 f0 c==> c= cprev_el f3 f0 f7 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f8 f3 f5 c==> c==> c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f8 f3 f5 c/\ c= cfind_face f2 f5 f4 c= cnext_el f4 f5 f6 cMEM f6 f3 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 f0 f1 cf_list f2 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= cfind_face f0 f2 f6 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cf_list f0 f2 cnext_el f5 f2 c==> c= cl'y f0 f1 f2 f6 c==> c= cl'z f0 f7 f1 f2 f3 c==> c= cfind_face f0 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c= cnext_el crtrans f0 f7 f1 f2 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3
- |- (((~ (NIL = ((CONS x) NIL))) ==> ((NIL = ((CONS x) NIL)) = F)) = ((NIL = ((CONS x) NIL)) = F))
T c= c==> c~ c= cNIL cCONS f0 cNIL c= c= cNIL cCONS f0 cNIL cF c= c= cNIL cCONS f0 cNIL cF
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 f2
- (~ (!A. (A \/ (~ A)))) |- ((~ (!A. (A \/ (~ A)))) /\ F)
T c==> c~ ! c\/ b0 c~ b0 c/\ c~ ! c\/ b0 c~ b0 cF
- |- (((MEM x) ((CONS y) NIL)) = (x = y))
T c= cMEM f0 cCONS f1 cNIL c= f0 f1
- |- ((((next_el f) x) = w) = ((\w. (((next_el f) x) = w)) w))
T c= c= cnext_el f0 f1 f2 * / c= cnext_el f0 f1 b0 f2
- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- |- (((!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) ==> ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)) = ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0))
T c= c==> ! c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM w) r), ((((marked_list L) N) r) x) |- (((MEM w) r) /\ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cnext_el f3 f7 f0 c==> c= cprev_el f3 f0 f7 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cMEM f6 f3 c==> cmarked_list f2 f8 f3 f5 c/\ cMEM f6 f3 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 f0 f1 cf_list f2 f1
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 b0 c= cnext_el b0 f3 b1 cMEM b1 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (((!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))) ==> ((\w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))) w)) = ((\w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))) w))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 b0 cMEM b0 f2 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 b0 cMEM b0 f2 f5 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 b0 cMEM b0 f2 f5
- |- ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)
T * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- |- ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w)))
T c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (((!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))) ==> ((\r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))) r)) = ((\r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))) r))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= c==> ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= cfind_face f0 b1 b2 c= cnext_el b2 b1 b3 cMEM b3 b0 * / ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= cfind_face f0 b1 b2 c= cnext_el b2 b1 b3 cMEM b3 b0 f2 * / ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= cfind_face f0 b1 b2 c= cnext_el b2 b1 b3 cMEM b3 b0 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- |- (((!x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) ==> ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x)) = ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x))
T c= c==> ! ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) /\ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cnext_el f3 f7 f0 c==> c= cprev_el f3 f0 f7 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f8 f3 f5 c/\ ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 f0 f1 cf_list f2 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= cfind_face f0 f2 f6 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 ! ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cfind_face f0 b2 b3 c= cnext_el b3 b2 b4 cMEM b4 b1
- |- ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a)
T * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- |- (((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) ==> ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)) = ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s))
T c= c==> ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c/\ c= cprev_el f1 f2 f3 c==> c~ cfinal_list f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- (NIL = (((betwn f) y) z)) |- ((((betwn f) y) z) = NIL)
T c==> c= cNIL cbetwn f0 f1 f2 c= cbetwn f0 f1 f2 cNIL
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- (F = (~ T))
T c= cF c~ cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c/\ c= cprev_el f1 f2 f3 c==> c~ cfinal_list f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- |- ((T \/ t) = T)
T c= c\/ cT f0 cT
- |- ((!A. (P \/ (Q A))) = (P \/ (!A. (Q A))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 f5 cMEM f5 f2
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- ((\w. (((next_el f) x) = w)) w) |- (((\w. (((next_el f) x) = w)) w) /\ (?w. (((next_el f) x) = w)))
T c==> * / c= cnext_el f0 f1 b0 f2 c/\ * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0
- (((CONS x) NIL) = NIL) |- (NIL = ((CONS x) NIL))
T c==> c= cCONS f0 cNIL cNIL c= cNIL cCONS f0 cNIL
- (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((\w'. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w'))))) ==> ((MEM w') r))) = (\w'. ((w = w') ==> ((MEM w') r))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> cmarked_list f0 f4 f5 f2 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f5 f2 c/\ c= cfind_face f0 f2 f1 c= cnext_el f1 f2 b0 cMEM b0 f5 / c==> c= f3 b0 cMEM b0 f5
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cztrans f0 f1 b0 b1 cNUMERAL c_0 b0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cztrans f0 f1 b0 b1 cNUMERAL c_0 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- (((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))) = T)
T c= c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0 cT
- |- (((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))) = (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c= c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))))
T c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- (((next_el f) x) = w) |- ((((next_el f) x) = w) /\ (?w. (((next_el f) x) = w)))
T c==> c= cnext_el f0 f1 f2 c/\ c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0
- |- (T = ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0))))
T c= cT c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
- |- ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s)
T * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 c/\ c= cfind_face f0 f2 f6 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = ((next_el f) x)) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 clist_of_darts f0 c==> c= cf_list f0 f4 cnext_el f7 f4 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- ((~ (!A. (A \/ (~ A)))) ==> F) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((~ T) = F)
T c= c~ cT cF
- |- (!w. (((\w. (((next_el f) x) = w)) w) ==> (?w. (((next_el f) x) = w))))
T c==> * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) /\ (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f6 cf_list f0 f6
- |- ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x)
T * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((MEM w) r) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> cmarked_list f0 f4 f5 f2 c= c==> cMEM f3 f5 c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f5 f6 f7 cCONS f7 cNIL cbetwn cfind_face f0 f7 f7 f6 f7 cf_list f0 f7 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f5 f2 c/\ c= cfind_face f0 f2 f1 c= cnext_el f1 f2 f3 cMEM f3 f5 c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f5 f6 f7 cCONS f7 cNIL cbetwn cfind_face f0 f7 f7 f6 f7 cf_list f0 f7
- |- ((F \/ t) = t)
T c= c\/ cF f0 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> c~ cfinal_list f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- (uniq ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) |- ((uniq ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) = T)
T c==> cuniq cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cuniq cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f1 f0 f2 cCONS f2 cNIL cNIL cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- (((next_el f) x) = w) |- ((\w. (((next_el f) x) = w)) w)
T c==> c= cnext_el f0 f1 f2 * / c= cnext_el f0 f1 b0 f2
- ((((betwn f) y) z) = NIL) |- (NIL = (((betwn f) y) z))
T c==> c= cbetwn f0 f1 f2 cNIL c= cNIL cbetwn f0 f1 f2
- |- ((!A. (P A)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cfind_face f0 f2 f6 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- ((~ (s = NIL)) = (?x. ((MEM x) s)))
T c= c~ c= f0 cNIL c? / cMEM b0 f0
- |- ((APPEND = cat) /\ (ALL = all))
T c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (FILTER = filter)
T c= part cFILTER part cfilter
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\f2. (f f2)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) ==> ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)) = ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L))
T c= c==> ! c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1 * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
- (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) ==> (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cnext_el f3 f7 f0 c==> c= cprev_el f3 f0 f7 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f8 f3 f5 c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 f0 f1 cf_list f2 f1
- |- (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))
T c= cMEM f0 cflatten f1 c? / c/\ cMEM b0 f1 cMEM f0 b0
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 b0 cMEM b0 f2
- (good_list L), (good_list_nodes L), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((\f'. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f') /\ (((next_el f') x) = w))))) ==> ((MEM w) r)))) = (\f'. (!w. (((f = f') /\ (((next_el f') x) = w)) ==> ((MEM w) r)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_face f0 f1 f2 c==> cmarked_list f0 f3 f4 f1 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f3 f4 f1 c/\ c= cfind_face f0 f1 b0 c= cnext_el b0 f1 b1 cMEM b1 f4 / ! c==> c/\ c= f2 b0 c= cnext_el b0 f1 b1 cMEM b1 f4
- ((((indexf w) y) f) < (((indexf w) z) f)) |- (((((indexf w) y) f) < (((indexf w) z) f)) = T)
T c==> c< cindexf f0 f1 f2 cindexf f0 f3 f2 c= c< cindexf f0 f1 f2 cindexf f0 f3 f2 cT
- |- ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)
T * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), (((f_list L) x) = ((next_el f) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((MEM y) r) /\ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f3 f4 f5 c==> c= cnext_el f2 f6 f7 c==> c= cprev_el f2 f7 f6 c==> c= cf_list f1 f4 cnext_el f3 f4 c==> c= cl'y f1 f2 f4 f8 c==> c= cl'z f1 f0 f2 f4 f7 c==> c= cfind_face f1 f4 f3 c==> cMEM f4 clist_of_darts f1 c==> cMEM f8 f2 c==> cMEM f7 f2 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f4 c/\ cMEM f8 f2 c= cnext_el cAPPEND cAPPEND cCONS f7 cNIL cAPPEND cbetwn f2 f7 f8 cCONS f8 cNIL cbetwn cfind_face f1 f8 f8 f7 f8 cf_list f1 f8
- |- (((!x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) ==> ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x)) = ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x))
T c= c==> ! ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0 * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3
- |- (((~ (!A. (A \/ (~ A)))) ==> F) = (!A. (A \/ (~ A))))
T c= c==> c~ ! c\/ b0 c~ b0 cF ! c\/ b0 c~ b0
- (~ (z = y)), (~ ((final_list L) r)), (uniq f), (uniq (list_of_darts L)), (uniq ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((betwn f) y) z) = NIL), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) y) = ((f_list L) y))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq f4 c==> cuniq clist_of_darts f2 c==> cuniq cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cl'y f2 f3 f5 f1 c==> c= cfind_face f2 f1 f4 c==> c= cbetwn f4 f1 f0 cNIL c==> cMEM f1 f4 c==> cMEM f0 f4 c==> cmarked_list f2 f6 f3 f5 c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL f1 cf_list f2 f1
- ((~ (!A. (A \/ (~ A)))) ==> F) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= cfind_face f0 b1 b2 c= cnext_el b2 b1 b3 cMEM b3 b0
- |- (~ (~ T))
T c~ c~ cT
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))))) N)
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cfind_face f0 b2 b3 c= cnext_el b3 b2 b4 cMEM b4 b1 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cfind_face f0 f2 f6 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3
- |- (((!x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) ==> ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)) = ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x))
T c= c==> ! ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0 * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (((!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))))) ==> ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))))) N)) = ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))))) N))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= c==> ! ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cfind_face f0 b2 b3 c= cnext_el b3 b2 b4 cMEM b4 b1 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cfind_face f0 b2 b3 c= cnext_el b3 b2 b4 cMEM b4 b1 f1 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cfind_face f0 b2 b3 c= cnext_el b3 b2 b4 cMEM b4 b1 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) y) = ((f_list L) y))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- |- ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)
T * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- (~ (z = y)), (~ ((final_list L) r)), (uniq f), (uniq (list_of_darts L)), (uniq ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((betwn f) y) z) = NIL), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((uniq ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) /\ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) y) = ((f_list L) y)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq f4 c==> cuniq clist_of_darts f2 c==> cuniq cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cl'y f2 f3 f5 f1 c==> c= cfind_face f2 f1 f4 c==> c= cbetwn f4 f1 f0 cNIL c==> cMEM f1 f4 c==> cMEM f0 f4 c==> cmarked_list f2 f6 f3 f5 c/\ cuniq cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL f1 cf_list f2 f1
