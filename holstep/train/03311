N Hypermap.existence_contour
C |- (!H. (!p. (!n. ((((is_path H) p) n) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m)))))))))
T c==> cis_path f0 f1 f2 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 f2 cis_contour f0 b0 b1
D TRUTH
A |- T
T cT
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Fan.POWER_1
A |- (!f. (((POWER f) (NUMERAL (BIT1 _0))) = f))
T c= * * part cPOWER f0 cNUMERAL cBIT1 c_0 f0
D Hypermap.hypermap_lemma
A |- (!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
D Hypermap.go_one_step
A |- (!y. (!H. (!x. ((((go_one_step H) x) y) = ((y = ((edge_map H) x)) \/ ((y = ((node_map H) x)) \/ (y = ((face_map H) x))))))))
T c= cgo_one_step f0 f1 f2 c\/ c= f2 cedge_map f0 f1 c\/ c= f2 cnode_map f0 f1 c= f2 cface_map f0 f1
D Hypermap.is_path
A |- (((((is_path H) p) (NUMERAL _0)) = T) /\ ((((is_path H) p) (SUC n)) = ((((is_path H) p) n) /\ (((go_one_step H) (p n)) (p (SUC n))))))
T c/\ c= cis_path f0 f1 cNUMERAL c_0 cT c= cis_path f0 f1 cSUC f2 c/\ cis_path f0 f1 f2 cgo_one_step f0 * f1 f2 * f1 cSUC f2
D Hypermap.COM_POWER
A |- (!n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))))
T c= * * part cPOWER f0 cSUC f1 * * part co f0 * * part cPOWER f0 f1
D Hypermap.inverse_power_function
A |- (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y)))))))))
T c==> cpermutes f0 f1 c= c= f2 cPOWER f0 f3 f4 c= f4 cPOWER * part cinverse f0 f3 f2
D Hypermap.node_map_inverse_representation
A |- (!H. (!x. (!y. ((y = ((node_map H) x)) = (x = ((inverse (node_map H)) y))))))
T c= c= f0 cnode_map f1 f2 c= f2 cinverse * part cnode_map f1 f0
D Hypermap.inverse_element_lemma
A |- (!s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (?j. ((inverse p) = ((POWER p) j))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 c? / c= * part cinverse f1 * * part cPOWER f1 b0
D Hypermap.inverse2_hypermap_maps
A |- (!H. (((edge_map H) = ((inverse (face_map H)) o (inverse (node_map H)))) /\ (((node_map H) = ((inverse (edge_map H)) o (inverse (face_map H)))) /\ ((face_map H) = ((inverse (node_map H)) o (inverse (edge_map H)))))))
T c/\ c= * part cedge_map f0 * * part co * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 c/\ c= * part cnode_map f0 * * part co * part cinverse * part cedge_map f0 * part cinverse * part cface_map f0 c= * part cface_map f0 * * part co * part cinverse * part cnode_map f0 * part cinverse * part cedge_map f0
D Hypermap.is_contour
A |- (((((is_contour H) p) (NUMERAL _0)) = T) /\ ((((is_contour H) p) (SUC n)) = ((((is_contour H) p) n) /\ (((one_step_contour H) (p n)) (p (SUC n))))))
T c/\ c= cis_contour f0 f1 cNUMERAL c_0 cT c= cis_contour f0 f1 cSUC f2 c/\ cis_contour f0 f1 f2 cone_step_contour f0 * f1 f2 * f1 cSUC f2
D Hypermap.concatenate_contours
A |- (!H. (!p. (!q. (!n. (!m. (((((is_contour H) p) n) /\ ((((is_contour H) q) m) /\ ((p n) = (q (NUMERAL _0))))) ==> (?g. (((g (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((g (n + m)) = (q m)) /\ ((((is_contour H) g) (n + m)) /\ ((!i. ((i <= n) ==> ((g i) = (p i)))) /\ (!i. ((i <= m) ==> ((g (n + i)) = (q i)))))))))))))))
T c==> c/\ cis_contour f0 f1 f2 c/\ cis_contour f0 f3 f4 c= * f1 f2 * f3 cNUMERAL c_0 c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 c+ f2 f4 * f3 f4 c/\ cis_contour f0 b0 c+ f2 f4 c/\ ! c==> c<= b1 f2 c= * b0 b1 * f1 b1 ! c==> c<= b1 f4 c= * b0 c+ f2 b1 * f3 b1
D Hypermap.node_contour
A |- (!H. (!x. (!i. ((((node_contour H) x) i) = (((POWER (inverse (node_map H))) i) x)))))
T c= cnode_contour f0 f1 f2 cPOWER * part cinverse * part cnode_map f0 f2 f1
D Hypermap.face_contour
A |- (!H. (!x. (!i. ((((face_contour H) x) i) = (((POWER (face_map H)) i) x)))))
T c= cface_contour f0 f1 f2 cPOWER * part cface_map f0 f2 f1
D Hypermap.lemma_node_contour
A |- (!H. (!x. (!k. (((is_contour H) ((node_contour H) x)) k))))
T cis_contour f0 * * part cnode_contour f0 f1 f2
D Hypermap.lemma_face_contour
A |- (!H. (!x. (!k. (((is_contour H) ((face_contour H) x)) k))))
T cis_contour f0 * * part cface_contour f0 f1 f2
- (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m)))), (((go_one_step H) (p n)) (p (SUC n))) |- ((?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m)))) /\ (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c? / c/\ c= * f0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * f0 b0 * f1 f2 cis_contour f3 f0 b0 c==> cgo_one_step f3 * f1 f2 * f1 cSUC f2 c/\ c? / c/\ c= * f0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * f0 b0 * f1 f2 cis_contour f3 f0 b0 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 cSUC f2 cis_contour f3 b0 b1
+ ((p (SUC n)) = ((node_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), (((is_contour H) q) m) |- ((?j. ((inverse (node_map H)) = ((POWER (node_map H)) j))) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c= * f0 cSUC f1 cnode_map f2 * f0 f1 c==> c= * f3 f4 * f0 f1 c==> c= * f3 cNUMERAL c_0 * f0 cNUMERAL c_0 c==> cis_contour f2 f3 f4 c==> c? / c= * part cinverse * part cnode_map f2 * * part cPOWER * part cnode_map f2 b0 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 cSUC f1 cis_contour f2 b0 b1
+ |- (((!x. (!k. (((is_contour H) ((node_contour H) x)) k))) ==> ((\x. (!k. (((is_contour H) ((node_contour H) x)) k))) (q m))) = ((\x. (!k. (((is_contour H) ((node_contour H) x)) k))) (q m)))
T c= c==> ! ! cis_contour f0 * * part cnode_contour f0 b0 b1 * / ! cis_contour f0 * * part cnode_contour f0 b0 b1 * f1 f2 * / ! cis_contour f0 * * part cnode_contour f0 b0 b1 * f1 f2
+ |- (((is_contour H) ((node_contour H) (q m))) (NUMERAL (BIT1 _0)))
T cis_contour f0 * * part cnode_contour f0 * f1 f2 cNUMERAL cBIT1 c_0
+ (((is_path H) p) n) |- (((?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m))))) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))) = (((((is_path H) p) n) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m)))))) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))))
T c==> cis_path f0 f1 f2 c= c==> c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 f2 cis_contour f0 b0 b1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 cSUC f2 cis_contour f0 b0 b1 c==> c==> cis_path f0 f1 f2 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 f2 cis_contour f0 b0 b1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 cSUC f2 cis_contour f0 b0 b1
+ |- (((!x. ((I x) = x)) ==> ((\x. ((I x) = x)) x)) = ((\x. ((I x) = x)) x))
T c= c==> ! c= cI b0 b0 * / c= cI b0 b0 f0 * / c= cI b0 b0 f0
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) |- (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y)))))))
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 ! ! ! c==> cpermutes f0 f1 c= c= b2 cPOWER f0 b0 b1 c= b1 cPOWER * part cinverse f0 b0 b2
+ ((p (SUC n)) = ((node_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), (((is_contour H) q) m) |- (((!x. (((\j. ((inverse (node_map H)) = ((POWER (node_map H)) j))) x) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))) ==> ((?j. ((inverse (node_map H)) = ((POWER (node_map H)) j))) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))) = ((?j. ((inverse (node_map H)) = ((POWER (node_map H)) j))) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))))
T c==> c= * f0 cSUC f1 cnode_map f2 * f0 f1 c==> c= * f3 f4 * f0 f1 c==> c= * f3 cNUMERAL c_0 * f0 cNUMERAL c_0 c==> cis_contour f2 f3 f4 c= c==> ! c==> * / c= * part cinverse * part cnode_map f2 * * part cPOWER * part cnode_map f2 b1 b0 c? / c? / c/\ c= * b1 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b1 b2 * f0 cSUC f1 cis_contour f2 b1 b2 c==> c? / c= * part cinverse * part cnode_map f2 * * part cPOWER * part cnode_map f2 b0 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 cSUC f1 cis_contour f2 b0 b1 c==> c? / c= * part cinverse * part cnode_map f2 * * part cPOWER * part cnode_map f2 b0 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 cSUC f1 cis_contour f2 b0 b1
+ |- (!i. ((((face_contour H) (g (SUC m))) i) = (((POWER (face_map H)) i) (g (SUC m)))))
T c= cface_contour f0 * f1 cSUC f2 f3 cPOWER * part cface_map f0 f3 * f1 cSUC f2
+ ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), (((p (SUC n)) = ((node_map H) (p n))) \/ ((p (SUC n)) = ((face_map H) (p n)))), (((is_contour H) q) m) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c= * f0 f1 * f2 f3 c==> c= * f0 cNUMERAL c_0 * f2 cNUMERAL c_0 c==> c\/ c= * f2 cSUC f3 cnode_map f4 * f2 f3 c= * f2 cSUC f3 cface_map f4 * f2 f3 c==> cis_contour f4 f0 f1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f2 cNUMERAL c_0 c/\ c= * b0 b1 * f2 cSUC f3 cis_contour f4 b0 b1
+ |- (((q m) = (((node_contour H) (q m)) (NUMERAL _0))) = ((((is_contour H) ((node_contour H) (q m))) j) /\ ((q m) = (((node_contour H) (q m)) (NUMERAL _0)))))
T c= c= * f0 f1 cnode_contour f2 * f0 f1 cNUMERAL c_0 c/\ cis_contour f2 * * part cnode_contour f2 * f0 f1 f3 c= * f0 f1 cnode_contour f2 * f0 f1 cNUMERAL c_0
+ ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- ((permutes (node_map H)) (dart H))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI cpermutes * part cnode_map f0 * part cdart f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ ((p (SUC n)) = ((node_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), ((inverse (node_map H)) = ((POWER (node_map H)) j)), (((w (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((w (m + j)) = (((POWER (inverse (node_map H))) j) (q m))) /\ ((((is_contour H) w) (m + j)) /\ ((!i. ((i <= m) ==> ((w i) = (q i)))) /\ (!i. ((i <= j) ==> ((w (m + i)) = (((POWER (inverse (node_map H))) i) (q m))))))))) |- ((((w (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((w (m + j)) = (((POWER (inverse (node_map H))) j) (q m))) /\ ((((is_contour H) w) (m + j)) /\ ((!i. ((i <= m) ==> ((w i) = (q i)))) /\ (!i. ((i <= j) ==> ((w (m + i)) = (((POWER (inverse (node_map H))) i) (q m))))))))) /\ (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c= * f0 cSUC f1 cnode_map f2 * f0 f1 c==> c= * f3 f4 * f0 f1 c==> c= * f3 cNUMERAL c_0 * f0 cNUMERAL c_0 c==> c= * part cinverse * part cnode_map f2 * * part cPOWER * part cnode_map f2 f5 c==> c/\ c= * f6 cNUMERAL c_0 * f3 cNUMERAL c_0 c/\ c= * f6 c+ f4 f5 cPOWER * part cinverse * part cnode_map f2 f5 * f3 f4 c/\ cis_contour f2 f6 c+ f4 f5 c/\ ! c==> c<= b0 f4 c= * f6 b0 * f3 b0 ! c==> c<= b0 f5 c= * f6 c+ f4 b0 cPOWER * part cinverse * part cnode_map f2 b0 * f3 f4 c/\ c/\ c= * f6 cNUMERAL c_0 * f3 cNUMERAL c_0 c/\ c= * f6 c+ f4 f5 cPOWER * part cinverse * part cnode_map f2 f5 * f3 f4 c/\ cis_contour f2 f6 c+ f4 f5 c/\ ! c==> c<= b0 f4 c= * f6 b0 * f3 b0 ! c==> c<= b0 f5 c= * f6 c+ f4 b0 cPOWER * part cinverse * part cnode_map f2 b0 * f3 f4 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 cSUC f1 cis_contour f2 b0 b1
+ ((g (SUC m)) = (((face_contour H) (q m)) (NUMERAL (BIT1 _0)))), ((g (NUMERAL _0)) = (q (NUMERAL _0))), ((p (SUC n)) = ((face_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), (((is_contour H) g) (SUC m)) |- ((\q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))) g)
T c==> c= * f0 cSUC f1 cface_contour f2 * f3 f1 cNUMERAL cBIT1 c_0 c==> c= * f0 cNUMERAL c_0 * f3 cNUMERAL c_0 c==> c= * f4 cSUC f5 cface_map f2 * f4 f5 c==> c= * f3 f1 * f4 f5 c==> c= * f3 cNUMERAL c_0 * f4 cNUMERAL c_0 c==> cis_contour f2 f0 cSUC f1 * / c? / c/\ c= * b0 cNUMERAL c_0 * f4 cNUMERAL c_0 c/\ c= * b0 b1 * f4 cSUC f5 cis_contour f2 b0 b1 f0
+ (((go_one_step H) (p n)) (p (SUC n))), ((\q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m))))) q) |- (((\q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m))))) q) /\ (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> cgo_one_step f0 * f1 f2 * f1 cSUC f2 c==> * / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 f2 cis_contour f0 b0 b1 f3 c/\ * / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 f2 cis_contour f0 b0 b1 f3 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 cSUC f2 cis_contour f0 b0 b1
+ ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- (?j. ((inverse (face_map H)) = ((POWER (face_map H)) j)))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c? / c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 b0
+ |- (((!k. (((is_contour H) ((node_contour H) (q m))) k)) ==> ((\k. (((is_contour H) ((node_contour H) (q m))) k)) (NUMERAL (BIT1 _0)))) = ((\k. (((is_contour H) ((node_contour H) (q m))) k)) (NUMERAL (BIT1 _0))))
T c= c==> ! cis_contour f0 * * part cnode_contour f0 * f1 f2 b0 * / cis_contour f0 * * part cnode_contour f0 * f1 f2 b0 cNUMERAL cBIT1 c_0 * / cis_contour f0 * * part cnode_contour f0 * f1 f2 b0 cNUMERAL cBIT1 c_0
+ |- ((\x. (!y. ((x = (((POWER (inverse (node_map H))) n) y)) = (y = (((POWER (node_map H)) n) x))))) x)
T * / ! c= c= b0 cPOWER * part cinverse * part cnode_map f0 f1 b1 c= b1 cPOWER * part cnode_map f0 f1 b0 f2
+ ((q (NUMERAL _0)) = (p (NUMERAL _0))), (((q m) = (p n)) /\ (((is_contour H) q) m)), (((go_one_step H) (p n)) (p (SUC n))) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c= * f0 cNUMERAL c_0 * f1 cNUMERAL c_0 c==> c/\ c= * f0 f2 * f1 f3 cis_contour f4 f0 f2 c==> cgo_one_step f4 * f1 f3 * f1 cSUC f3 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 cSUC f3 cis_contour f4 b0 b1
+ ((((face_contour H) (g (SUC m))) (NUMERAL _0)) = (g (SUC m))), ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((node_contour H) (q m)) i)))))) |- ((((((is_contour H) g) (SUC m)) /\ ((((is_contour H) ((face_contour H) (g (SUC m)))) j) /\ ((g (SUC m)) = (((face_contour H) (g (SUC m))) (NUMERAL _0))))) ==> (?g'. (((g' (NUMERAL _0)) = (g (NUMERAL _0))) /\ (((g' ((SUC m) + j)) = (((face_contour H) (g (SUC m))) j)) /\ ((((is_contour H) g') ((SUC m) + j)) /\ ((!i. ((i <= (SUC m)) ==> ((g' i) = (g i)))) /\ (!i. ((i <= j) ==> ((g' ((SUC m) + i)) = (((face_contour H) (g (SUC m))) i)))))))))) = (?g'. (((g' (NUMERAL _0)) = (g (NUMERAL _0))) /\ (((g' ((SUC m) + j)) = (((face_contour H) (g (SUC m))) j)) /\ ((((is_contour H) g') ((SUC m) + j)) /\ ((!i. ((i <= (SUC m)) ==> ((g' i) = (g i)))) /\ (!i. ((i <= j) ==> ((g' ((SUC m) + i)) = (((face_contour H) (g (SUC m))) i))))))))))
T c==> c= cface_contour f0 * f1 cSUC f2 cNUMERAL c_0 * f1 cSUC f2 c==> c/\ cis_contour f0 f1 cSUC f2 c/\ ! c==> c<= b0 f2 c= * f1 b0 * f3 b0 ! c==> c<= b0 cNUMERAL cBIT1 c_0 c= * f1 c+ f2 b0 cnode_contour f0 * f3 f2 b0 c= c==> c/\ cis_contour f0 f1 cSUC f2 c/\ cis_contour f0 * * part cface_contour f0 * f1 cSUC f2 f4 c= * f1 cSUC f2 cface_contour f0 * f1 cSUC f2 cNUMERAL c_0 c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 c+ cSUC f2 f4 cface_contour f0 * f1 cSUC f2 f4 c/\ cis_contour f0 b0 c+ cSUC f2 f4 c/\ ! c==> c<= b1 cSUC f2 c= * b0 b1 * f1 b1 ! c==> c<= b1 f4 c= * b0 c+ cSUC f2 b1 cface_contour f0 * f1 cSUC f2 b1 c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 c+ cSUC f2 f4 cface_contour f0 * f1 cSUC f2 f4 c/\ cis_contour f0 b0 c+ cSUC f2 f4 c/\ ! c==> c<= b1 cSUC f2 c= * b0 b1 * f1 b1 ! c==> c<= b1 f4 c= * b0 c+ cSUC f2 b1 cface_contour f0 * f1 cSUC f2 b1
+ ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), (((go_one_step H) (p n)) (p (SUC n))), (((is_contour H) q) m) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c= * f0 f1 * f2 f3 c==> c= * f0 cNUMERAL c_0 * f2 cNUMERAL c_0 c==> cgo_one_step f4 * f2 f3 * f2 cSUC f3 c==> cis_contour f4 f0 f1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f2 cNUMERAL c_0 c/\ c= * b0 b1 * f2 cSUC f3 cis_contour f4 b0 b1
+ ((p (SUC n)) = ((edge_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))) |- ((?g. (((g (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((g (m + (NUMERAL (BIT1 _0)))) = (((node_contour H) (q m)) (NUMERAL (BIT1 _0)))) /\ ((((is_contour H) g) (m + (NUMERAL (BIT1 _0)))) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((node_contour H) (q m)) i))))))))) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c= * f0 cSUC f1 cedge_map f2 * f0 f1 c==> c= * f3 f4 * f0 f1 c==> c= * f3 cNUMERAL c_0 * f0 cNUMERAL c_0 c==> c? / c/\ c= * b0 cNUMERAL c_0 * f3 cNUMERAL c_0 c/\ c= * b0 c+ f4 cNUMERAL cBIT1 c_0 cnode_contour f2 * f3 f4 cNUMERAL cBIT1 c_0 c/\ cis_contour f2 b0 c+ f4 cNUMERAL cBIT1 c_0 c/\ ! c==> c<= b1 f4 c= * b0 b1 * f3 b1 ! c==> c<= b1 cNUMERAL cBIT1 c_0 c= * b0 c+ f4 b1 cnode_contour f2 * f3 f4 b1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 cSUC f1 cis_contour f2 b0 b1
+ |- ((((w (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((w (m + j)) = (p (SUC n))) /\ (((is_contour H) w) (m + j)))) = ((\m. (((w (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((w m) = (p (SUC n))) /\ (((is_contour H) w) m)))) (m + j)))
T c= c/\ c= * f0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * f0 c+ f2 f3 * f1 cSUC f4 cis_contour f5 f0 c+ f2 f3 * / c/\ c= * f0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * f0 b0 * f1 cSUC f4 cis_contour f5 f0 b0 c+ f2 f3
+ |- (((!x. (!i. ((((face_contour H) x) i) = (((POWER (face_map H)) i) x)))) ==> ((\x. (!i. ((((face_contour H) x) i) = (((POWER (face_map H)) i) x)))) x)) = ((\x. (!i. ((((face_contour H) x) i) = (((POWER (face_map H)) i) x)))) x))
T c= c==> ! ! c= cface_contour f0 b0 b1 cPOWER * part cface_map f0 b1 b0 * / ! c= cface_contour f0 b0 b1 cPOWER * part cface_map f0 b1 b0 f1 * / ! c= cface_contour f0 b0 b1 cPOWER * part cface_map f0 b1 b0 f1
+ |- ((\f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))) f)
T * / c= * * part cPOWER b0 cSUC f0 * * part co b0 * * part cPOWER b0 f0 f1
+ ((q (NUMERAL _0)) = (p (NUMERAL _0))), (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m))), (((go_one_step H) (p n)) (p (SUC n))) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c= * f0 cNUMERAL c_0 * f1 cNUMERAL c_0 c==> c/\ c= * f0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * f0 f2 * f1 f3 cis_contour f4 f0 f2 c==> cgo_one_step f4 * f1 f3 * f1 cSUC f3 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 cSUC f3 cis_contour f4 b0 b1
- |- (((!f. (I = ((POWER f) (NUMERAL _0)))) ==> ((\f. (I = ((POWER f) (NUMERAL _0)))) f)) = ((\f. (I = ((POWER f) (NUMERAL _0)))) f))
T c= c==> ! c= part cI * * part cPOWER b0 cNUMERAL c_0 * / c= part cI * * part cPOWER b0 cNUMERAL c_0 f0 * / c= part cI * * part cPOWER b0 cNUMERAL c_0 f0
+ |- (((((((is_path H) p) (NUMERAL _0)) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (NUMERAL _0))) /\ (((is_contour H) q) m)))))) /\ (!n. (((((is_path H) p) n) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m)))))) ==> ((((is_path H) p) (SUC n)) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))))) ==> (!n. ((((is_path H) p) n) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m)))))))) = (!n. ((((is_path H) p) n) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m))))))))
T c= c==> c/\ c==> cis_path f0 f1 cNUMERAL c_0 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 cNUMERAL c_0 cis_contour f0 b0 b1 ! c==> c==> cis_path f0 f1 b0 c? / c? / c/\ c= * b1 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b1 b2 * f1 b0 cis_contour f0 b1 b2 c==> cis_path f0 f1 cSUC b0 c? / c? / c/\ c= * b1 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b1 b2 * f1 cSUC b0 cis_contour f0 b1 b2 ! c==> cis_path f0 f1 b0 c? / c? / c/\ c= * b1 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b1 b2 * f1 b0 cis_contour f0 b1 b2 ! c==> cis_path f0 f1 b0 c? / c? / c/\ c= * b1 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b1 b2 * f1 b0 cis_contour f0 b1 b2
+ |- (!n. (!x. (!y. ((y = (((POWER (node_map H)) n) x)) = (x = (((POWER (inverse (node_map H))) n) y))))))
T c= c= f0 cPOWER * part cnode_map f1 f2 f3 c= f3 cPOWER * part cinverse * part cnode_map f1 f2 f0
+ (((go_one_step H) (p n)) (p (SUC n))) |- ((((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m))) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> cgo_one_step f0 * f1 f2 * f1 cSUC f2 c==> c/\ c= * f3 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * f3 f4 * f1 f2 cis_contour f0 f3 f4 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 cSUC f2 cis_contour f0 b0 b1
+ ((inverse (node_map H)) = ((POWER (node_map H)) j)) |- ((p n) = ((node_map H) (((POWER (node_map H)) j) (p n))))
T c==> c= * part cinverse * part cnode_map f0 * * part cPOWER * part cnode_map f0 f1 c= * f2 f3 cnode_map f0 cPOWER * part cnode_map f0 f1 * f2 f3
+ ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- ((permutes (face_map H)) (dart H))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI cpermutes * part cface_map f0 * part cdart f0
+ ((p (SUC n)) = ((node_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), ((w (NUMERAL _0)) = (q (NUMERAL _0))), ((w (m + j)) = (((POWER (inverse (node_map H))) j) (q m))), ((inverse (node_map H)) = ((POWER (node_map H)) j)), (((is_contour H) w) (m + j)) |- (?m. (((w (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((w m) = (p (SUC n))) /\ (((is_contour H) w) m))))
T c==> c= * f0 cSUC f1 cnode_map f2 * f0 f1 c==> c= * f3 f4 * f0 f1 c==> c= * f3 cNUMERAL c_0 * f0 cNUMERAL c_0 c==> c= * f5 cNUMERAL c_0 * f3 cNUMERAL c_0 c==> c= * f5 c+ f4 f6 cPOWER * part cinverse * part cnode_map f2 f6 * f3 f4 c==> c= * part cinverse * part cnode_map f2 * * part cPOWER * part cnode_map f2 f6 c==> cis_contour f2 f5 c+ f4 f6 c? / c/\ c= * f5 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * f5 b0 * f0 cSUC f1 cis_contour f2 f5 b0
+ |- ((((((node_contour H) (q m)) (NUMERAL _0)) = (((POWER (inverse (node_map H))) (NUMERAL _0)) (q m))) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))) = (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c= c==> c= cnode_contour f0 * f1 f2 cNUMERAL c_0 cPOWER * part cinverse * part cnode_map f0 cNUMERAL c_0 * f1 f2 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f3 cNUMERAL c_0 c/\ c= * b0 b1 * f3 cSUC f4 cis_contour f0 b0 b1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f3 cNUMERAL c_0 c/\ c= * b0 b1 * f3 cSUC f4 cis_contour f0 b0 b1
+ ((g (SUC m)) = (((face_contour H) (q m)) (NUMERAL (BIT1 _0)))), ((g (NUMERAL _0)) = (q (NUMERAL _0))), ((p (SUC n)) = ((face_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), (((g (SUC m)) = (((face_contour H) (q m)) (NUMERAL (BIT1 _0)))) /\ ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((face_contour H) (q m)) i))))))) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c= * f0 cSUC f1 cface_contour f2 * f3 f1 cNUMERAL cBIT1 c_0 c==> c= * f0 cNUMERAL c_0 * f3 cNUMERAL c_0 c==> c= * f4 cSUC f5 cface_map f2 * f4 f5 c==> c= * f3 f1 * f4 f5 c==> c= * f3 cNUMERAL c_0 * f4 cNUMERAL c_0 c==> c/\ c= * f0 cSUC f1 cface_contour f2 * f3 f1 cNUMERAL cBIT1 c_0 c/\ cis_contour f2 f0 cSUC f1 c/\ ! c==> c<= b0 f1 c= * f0 b0 * f3 b0 ! c==> c<= b0 cNUMERAL cBIT1 c_0 c= * f0 c+ f1 b0 cface_contour f2 * f3 f1 b0 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f4 cNUMERAL c_0 c/\ c= * b0 b1 * f4 cSUC f5 cis_contour f2 b0 b1
+ |- (((is_contour H) ((node_contour H) (q m))) j)
T cis_contour f0 * * part cnode_contour f0 * f1 f2 f3
+ |- ((((node_contour H) (q m)) (NUMERAL _0)) = (((POWER (inverse (node_map H))) (NUMERAL _0)) (q m)))
T c= cnode_contour f0 * f1 f2 cNUMERAL c_0 cPOWER * part cinverse * part cnode_map f0 cNUMERAL c_0 * f1 f2
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))), ((permutes p) s) |- (((permutes p) s) /\ (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y)))))))
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 c==> cpermutes f0 f1 c/\ cpermutes f0 f1 ! ! ! c= c= b2 cPOWER f0 b0 b1 c= b1 cPOWER * part cinverse f0 b0 b2
+ ((g (SUC m)) = ((inverse (node_map H)) (q m))), ((g (NUMERAL _0)) = (q (NUMERAL _0))), ((p (SUC n)) = ((edge_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), ((inverse (face_map H)) = ((POWER (face_map H)) j)), ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((node_contour H) (q m)) i)))))) |- (((((face_contour H) (g (SUC m))) (NUMERAL _0)) = (((POWER (face_map H)) (NUMERAL _0)) (g (SUC m)))) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c= * f0 cSUC f1 cinverse * part cnode_map f2 * f3 f1 c==> c= * f0 cNUMERAL c_0 * f3 cNUMERAL c_0 c==> c= * f4 cSUC f5 cedge_map f2 * f4 f5 c==> c= * f3 f1 * f4 f5 c==> c= * f3 cNUMERAL c_0 * f4 cNUMERAL c_0 c==> c= * part cinverse * part cface_map f2 * * part cPOWER * part cface_map f2 f6 c==> c/\ cis_contour f2 f0 cSUC f1 c/\ ! c==> c<= b0 f1 c= * f0 b0 * f3 b0 ! c==> c<= b0 cNUMERAL cBIT1 c_0 c= * f0 c+ f1 b0 cnode_contour f2 * f3 f1 b0 c==> c= cface_contour f2 * f0 cSUC f1 cNUMERAL c_0 cPOWER * part cface_map f2 cNUMERAL c_0 * f0 cSUC f1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f4 cNUMERAL c_0 c/\ c= * b0 b1 * f4 cSUC f5 cis_contour f2 b0 b1
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))), ((permutes p) s) |- (((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))) = T)
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 c==> cpermutes f0 f1 c= c= c= f2 cPOWER f0 f3 f4 c= f4 cPOWER * part cinverse f0 f3 f2 cT
+ |- (((!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) ==> (!s. (!p. (((permutes p) s) ==> (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y)))))))))) = (!s. (!p. (((permutes p) s) ==> (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))))
T c= c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 ! ! c==> cpermutes b1 b0 ! ! ! c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 ! ! c==> cpermutes b1 b0 ! ! ! c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4
+ ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), (((p (SUC n)) = ((edge_map H) (p n))) \/ (((p (SUC n)) = ((node_map H) (p n))) \/ ((p (SUC n)) = ((face_map H) (p n))))), (((is_contour H) q) m) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c= * f0 f1 * f2 f3 c==> c= * f0 cNUMERAL c_0 * f2 cNUMERAL c_0 c==> c\/ c= * f2 cSUC f3 cedge_map f4 * f2 f3 c\/ c= * f2 cSUC f3 cnode_map f4 * f2 f3 c= * f2 cSUC f3 cface_map f4 * f2 f3 c==> cis_contour f4 f0 f1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f2 cNUMERAL c_0 c/\ c= * b0 b1 * f2 cSUC f3 cis_contour f4 b0 b1
+ ((g (SUC m)) = (((face_contour H) (q m)) (NUMERAL (BIT1 _0)))), ((g (NUMERAL _0)) = (q (NUMERAL _0))), ((p (SUC n)) = ((face_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), (((is_contour H) g) (SUC m)) |- (?m. (((g (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((g m) = (p (SUC n))) /\ (((is_contour H) g) m))))
T c==> c= * f0 cSUC f1 cface_contour f2 * f3 f1 cNUMERAL cBIT1 c_0 c==> c= * f0 cNUMERAL c_0 * f3 cNUMERAL c_0 c==> c= * f4 cSUC f5 cface_map f2 * f4 f5 c==> c= * f3 f1 * f4 f5 c==> c= * f3 cNUMERAL c_0 * f4 cNUMERAL c_0 c==> cis_contour f2 f0 cSUC f1 c? / c/\ c= * f0 cNUMERAL c_0 * f4 cNUMERAL c_0 c/\ c= * f0 b0 * f4 cSUC f5 cis_contour f2 f0 b0
+ |- ((\k. (((is_contour H) ((node_contour H) (q m))) k)) (NUMERAL (BIT1 _0)))
T * / cis_contour f0 * * part cnode_contour f0 * f1 f2 b0 cNUMERAL cBIT1 c_0
- (!i. ((i <= m) ==> ((g i) = (q i)))) |- ((i <= m) ==> ((g i) = (q i)))
T c==> ! c==> c<= b0 f0 c= * f1 b0 * f2 b0 c==> c<= f3 f0 c= * f1 f3 * f2 f3
+ ((p (SUC n)) = ((face_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))) |- (((\g. (((g (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((g (SUC m)) = (((face_contour H) (q m)) (NUMERAL (BIT1 _0)))) /\ ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((face_contour H) (q m)) i))))))))) g) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c= * f0 cSUC f1 cface_map f2 * f0 f1 c==> c= * f3 f4 * f0 f1 c==> c= * f3 cNUMERAL c_0 * f0 cNUMERAL c_0 c==> * / c/\ c= * b0 cNUMERAL c_0 * f3 cNUMERAL c_0 c/\ c= * b0 cSUC f4 cface_contour f2 * f3 f4 cNUMERAL cBIT1 c_0 c/\ cis_contour f2 b0 cSUC f4 c/\ ! c==> c<= b1 f4 c= * b0 b1 * f3 b1 ! c==> c<= b1 cNUMERAL cBIT1 c_0 c= * b0 c+ f4 b1 cface_contour f2 * f3 f4 b1 f5 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 cSUC f1 cis_contour f2 b0 b1
+ ((\q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m))))) q) |- (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m))))
T c==> * / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 f1 cis_contour f2 b0 b1 f3 c? / c/\ c= * f3 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * f3 b0 * f0 f1 cis_contour f2 f3 b0
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) |- ((!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) /\ (!s. (!p. (((permutes p) s) ==> (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))))
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 c/\ ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 ! ! c==> cpermutes b1 b0 ! ! ! c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4
+ ((p (SUC n)) = ((node_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), ((inverse (node_map H)) = ((POWER (node_map H)) j)), (((is_contour H) q) m) |- (((((node_contour H) (q m)) (NUMERAL _0)) = (q m)) ==> (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c= * f0 cSUC f1 cnode_map f2 * f0 f1 c==> c= * f3 f4 * f0 f1 c==> c= * f3 cNUMERAL c_0 * f0 cNUMERAL c_0 c==> c= * part cinverse * part cnode_map f2 * * part cPOWER * part cnode_map f2 f5 c==> cis_contour f2 f3 f4 c==> c= cnode_contour f2 * f3 f4 cNUMERAL c_0 * f3 f4 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 cSUC f1 cis_contour f2 b0 b1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m))))), (((go_one_step H) (p n)) (p (SUC n))) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c? / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 f1 cis_contour f2 b0 b1 c==> cgo_one_step f2 * f0 f1 * f0 cSUC f1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 cSUC f1 cis_contour f2 b0 b1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((node_contour H) (q m)) i)))))) |- ((((is_contour H) g) (SUC m)) = T)
T c==> c/\ cis_contour f0 f1 cSUC f2 c/\ ! c==> c<= b0 f2 c= * f1 b0 * f3 b0 ! c==> c<= b0 cNUMERAL cBIT1 c_0 c= * f1 c+ f2 b0 cnode_contour f0 * f3 f2 b0 c= cis_contour f0 f1 cSUC f2 cT
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!i. t) = t)
T c= ! f0 f0
- (!i. ((i <= (SUC m)) ==> ((w i) = (g i)))) |- ((\i. ((i <= (SUC m)) ==> ((w i) = (g i)))) i)
T c==> ! c==> c<= b0 cSUC f0 c= * f1 b0 * f2 b0 * / c==> c<= b0 cSUC f0 c= * f1 b0 * f2 b0 f3
- (?g'. (((g' (NUMERAL _0)) = (g (NUMERAL _0))) /\ (((g' ((SUC m) + j)) = (((POWER (face_map H)) j) (g (SUC m)))) /\ ((((is_contour H) g') ((SUC m) + j)) /\ ((!i. ((i <= (SUC m)) ==> ((g' i) = (g i)))) /\ (!i. ((i <= j) ==> ((g' ((SUC m) + i)) = (((POWER (face_map H)) i) (g (SUC m))))))))))), ((g (SUC m)) = ((inverse (node_map H)) (q m))), ((g (NUMERAL _0)) = (q (NUMERAL _0))), ((p (SUC n)) = ((edge_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), ((inverse (face_map H)) = ((POWER (face_map H)) j)) |- ((?g'. (((g' (NUMERAL _0)) = (g (NUMERAL _0))) /\ (((g' ((SUC m) + j)) = (((POWER (face_map H)) j) (g (SUC m)))) /\ ((((is_contour H) g') ((SUC m) + j)) /\ ((!i. ((i <= (SUC m)) ==> ((g' i) = (g i)))) /\ (!i. ((i <= j) ==> ((g' ((SUC m) + i)) = (((POWER (face_map H)) i) (g (SUC m))))))))))) /\ (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 c+ cSUC f1 f2 cPOWER * part cface_map f3 f2 * f0 cSUC f1 c/\ cis_contour f3 b0 c+ cSUC f1 f2 c/\ ! c==> c<= b1 cSUC f1 c= * b0 b1 * f0 b1 ! c==> c<= b1 f2 c= * b0 c+ cSUC f1 b1 cPOWER * part cface_map f3 b1 * f0 cSUC f1 c==> c= * f0 cSUC f1 cinverse * part cnode_map f3 * f4 f1 c==> c= * f0 cNUMERAL c_0 * f4 cNUMERAL c_0 c==> c= * f5 cSUC f6 cedge_map f3 * f5 f6 c==> c= * f4 f1 * f5 f6 c==> c= * f4 cNUMERAL c_0 * f5 cNUMERAL c_0 c==> c= * part cinverse * part cface_map f3 * * part cPOWER * part cface_map f3 f2 c/\ c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 c+ cSUC f1 f2 cPOWER * part cface_map f3 f2 * f0 cSUC f1 c/\ cis_contour f3 b0 c+ cSUC f1 f2 c/\ ! c==> c<= b1 cSUC f1 c= * b0 b1 * f0 b1 ! c==> c<= b1 f2 c= * b0 c+ cSUC f1 b1 cPOWER * part cface_map f3 b1 * f0 cSUC f1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f5 cNUMERAL c_0 c/\ c= * b0 b1 * f5 cSUC f6 cis_contour f3 b0 b1
- |- ((?g'. t) = t)
T c= c? / f0 f0
- (!i. ((i <= j) ==> ((w ((SUC m) + i)) = (((POWER (face_map H)) i) (g (SUC m)))))) |- ((\i. ((i <= j) ==> ((w ((SUC m) + i)) = (((POWER (face_map H)) i) (g (SUC m)))))) i)
T c==> ! c==> c<= b0 f0 c= * f1 c+ cSUC f2 b0 cPOWER * part cface_map f3 b0 * f4 cSUC f2 * / c==> c<= b0 f0 c= * f1 c+ cSUC f2 b0 cPOWER * part cface_map f3 b0 * f4 cSUC f2 f5
- (?g. (((g (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((g (SUC m)) = (((node_contour H) (q m)) (NUMERAL (BIT1 _0)))) /\ ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((node_contour H) (q m)) i))))))))), ((p (SUC n)) = ((edge_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 cSUC f1 cnode_contour f2 * f0 f1 cNUMERAL cBIT1 c_0 c/\ cis_contour f2 b0 cSUC f1 c/\ ! c==> c<= b1 f1 c= * b0 b1 * f0 b1 ! c==> c<= b1 cNUMERAL cBIT1 c_0 c= * b0 c+ f1 b1 cnode_contour f2 * f0 f1 b1 c==> c= * f3 cSUC f4 cedge_map f2 * f3 f4 c==> c= * f0 f1 * f3 f4 c==> c= * f0 cNUMERAL c_0 * f3 cNUMERAL c_0 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f3 cNUMERAL c_0 c/\ c= * b0 b1 * f3 cSUC f4 cis_contour f2 b0 b1
- (!i. ((i <= m) ==> ((g i) = (q i)))) |- ((\i. ((i <= m) ==> ((g i) = (q i)))) i)
T c==> ! c==> c<= b0 f0 c= * f1 b0 * f2 b0 * / c==> c<= b0 f0 c= * f1 b0 * f2 b0 f3
- |- ((((inverse (edge_map H)) o (inverse (face_map H))) = (node_map H)) /\ (((inverse (node_map H)) o (inverse (edge_map H))) = (face_map H)))
T c/\ c= * * part co * part cinverse * part cedge_map f0 * part cinverse * part cface_map f0 * part cnode_map f0 c= * * part co * part cinverse * part cnode_map f0 * part cinverse * part cedge_map f0 * part cface_map f0
- (?g. (((g (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((g (SUC m)) = (((face_contour H) (q m)) (NUMERAL (BIT1 _0)))) /\ ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((face_contour H) (q m)) i))))))))), ((p (SUC n)) = ((face_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 cSUC f1 cface_contour f2 * f0 f1 cNUMERAL cBIT1 c_0 c/\ cis_contour f2 b0 cSUC f1 c/\ ! c==> c<= b1 f1 c= * b0 b1 * f0 b1 ! c==> c<= b1 cNUMERAL cBIT1 c_0 c= * b0 c+ f1 b1 cface_contour f2 * f0 f1 b1 c==> c= * f3 cSUC f4 cface_map f2 * f3 f4 c==> c= * f0 f1 * f3 f4 c==> c= * f0 cNUMERAL c_0 * f3 cNUMERAL c_0 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f3 cNUMERAL c_0 c/\ c= * b0 b1 * f3 cSUC f4 cis_contour f2 b0 b1
- (?g. (((g (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((g (m + j)) = (((POWER (inverse (node_map H))) j) (q m))) /\ ((((is_contour H) g) (m + j)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= j) ==> ((g (m + i)) = (((POWER (inverse (node_map H))) i) (q m)))))))))), ((p (SUC n)) = ((node_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), ((inverse (node_map H)) = ((POWER (node_map H)) j)) |- ((?g. (((g (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((g (m + j)) = (((POWER (inverse (node_map H))) j) (q m))) /\ ((((is_contour H) g) (m + j)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= j) ==> ((g (m + i)) = (((POWER (inverse (node_map H))) i) (q m)))))))))) /\ (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 c+ f1 f2 cPOWER * part cinverse * part cnode_map f3 f2 * f0 f1 c/\ cis_contour f3 b0 c+ f1 f2 c/\ ! c==> c<= b1 f1 c= * b0 b1 * f0 b1 ! c==> c<= b1 f2 c= * b0 c+ f1 b1 cPOWER * part cinverse * part cnode_map f3 b1 * f0 f1 c==> c= * f4 cSUC f5 cnode_map f3 * f4 f5 c==> c= * f0 f1 * f4 f5 c==> c= * f0 cNUMERAL c_0 * f4 cNUMERAL c_0 c==> c= * part cinverse * part cnode_map f3 * * part cPOWER * part cnode_map f3 f2 c/\ c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 c+ f1 f2 cPOWER * part cinverse * part cnode_map f3 f2 * f0 f1 c/\ cis_contour f3 b0 c+ f1 f2 c/\ ! c==> c<= b1 f1 c= * b0 b1 * f0 b1 ! c==> c<= b1 f2 c= * b0 c+ f1 b1 cPOWER * part cinverse * part cnode_map f3 b1 * f0 f1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f4 cNUMERAL c_0 c/\ c= * b0 b1 * f4 cSUC f5 cis_contour f3 b0 b1
- |- (((inverse (edge_map H)) o (inverse (face_map H))) = (node_map H))
T c= * * part co * part cinverse * part cedge_map f0 * part cinverse * part cface_map f0 * part cnode_map f0
- (((is_contour H) q) m) |- ((((is_contour H) q) m) = T)
T c==> cis_contour f0 f1 f2 c= cis_contour f0 f1 f2 cT
- (!i. ((i <= j) ==> ((w (m + i)) = (((POWER (inverse (node_map H))) i) (q m))))) |- ((i <= j) ==> ((w (m + i)) = (((POWER (inverse (node_map H))) i) (q m))))
T c==> ! c==> c<= b0 f0 c= * f1 c+ f2 b0 cPOWER * part cinverse * part cnode_map f3 b0 * f4 f2 c==> c<= f5 f0 c= * f1 c+ f2 f5 cPOWER * part cinverse * part cnode_map f3 f5 * f4 f2
- (?g. (((g (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((g (SUC m)) = (((face_contour H) (q m)) (NUMERAL (BIT1 _0)))) /\ ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((face_contour H) (q m)) i))))))))), ((p (SUC n)) = ((face_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))) |- ((?g. (((g (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((g (SUC m)) = (((face_contour H) (q m)) (NUMERAL (BIT1 _0)))) /\ ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((face_contour H) (q m)) i))))))))) /\ (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 cSUC f1 cface_contour f2 * f0 f1 cNUMERAL cBIT1 c_0 c/\ cis_contour f2 b0 cSUC f1 c/\ ! c==> c<= b1 f1 c= * b0 b1 * f0 b1 ! c==> c<= b1 cNUMERAL cBIT1 c_0 c= * b0 c+ f1 b1 cface_contour f2 * f0 f1 b1 c==> c= * f3 cSUC f4 cface_map f2 * f3 f4 c==> c= * f0 f1 * f3 f4 c==> c= * f0 cNUMERAL c_0 * f3 cNUMERAL c_0 c/\ c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 cSUC f1 cface_contour f2 * f0 f1 cNUMERAL cBIT1 c_0 c/\ cis_contour f2 b0 cSUC f1 c/\ ! c==> c<= b1 f1 c= * b0 b1 * f0 b1 ! c==> c<= b1 cNUMERAL cBIT1 c_0 c= * b0 c+ f1 b1 cface_contour f2 * f0 f1 b1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f3 cNUMERAL c_0 c/\ c= * b0 b1 * f3 cSUC f4 cis_contour f2 b0 b1
- (?g. (((g (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((g (SUC m)) = (((node_contour H) (q m)) (NUMERAL (BIT1 _0)))) /\ ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((node_contour H) (q m)) i))))))))), ((p (SUC n)) = ((edge_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))) |- ((?g. (((g (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((g (SUC m)) = (((node_contour H) (q m)) (NUMERAL (BIT1 _0)))) /\ ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((node_contour H) (q m)) i))))))))) /\ (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 cSUC f1 cnode_contour f2 * f0 f1 cNUMERAL cBIT1 c_0 c/\ cis_contour f2 b0 cSUC f1 c/\ ! c==> c<= b1 f1 c= * b0 b1 * f0 b1 ! c==> c<= b1 cNUMERAL cBIT1 c_0 c= * b0 c+ f1 b1 cnode_contour f2 * f0 f1 b1 c==> c= * f3 cSUC f4 cedge_map f2 * f3 f4 c==> c= * f0 f1 * f3 f4 c==> c= * f0 cNUMERAL c_0 * f3 cNUMERAL c_0 c/\ c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 cSUC f1 cnode_contour f2 * f0 f1 cNUMERAL cBIT1 c_0 c/\ cis_contour f2 b0 cSUC f1 c/\ ! c==> c<= b1 f1 c= * b0 b1 * f0 b1 ! c==> c<= b1 cNUMERAL cBIT1 c_0 c= * b0 c+ f1 b1 cnode_contour f2 * f0 f1 b1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f3 cNUMERAL c_0 c/\ c= * b0 b1 * f3 cSUC f4 cis_contour f2 b0 b1
- (?g. (((g (NUMERAL _0)) = (q (NUMERAL _0))) /\ (((g (m + j)) = (((POWER (inverse (node_map H))) j) (q m))) /\ ((((is_contour H) g) (m + j)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= j) ==> ((g (m + i)) = (((POWER (inverse (node_map H))) i) (q m)))))))))), ((p (SUC n)) = ((node_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), ((inverse (node_map H)) = ((POWER (node_map H)) j)) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 c+ f1 f2 cPOWER * part cinverse * part cnode_map f3 f2 * f0 f1 c/\ cis_contour f3 b0 c+ f1 f2 c/\ ! c==> c<= b1 f1 c= * b0 b1 * f0 b1 ! c==> c<= b1 f2 c= * b0 c+ f1 b1 cPOWER * part cinverse * part cnode_map f3 b1 * f0 f1 c==> c= * f4 cSUC f5 cnode_map f3 * f4 f5 c==> c= * f0 f1 * f4 f5 c==> c= * f0 cNUMERAL c_0 * f4 cNUMERAL c_0 c==> c= * part cinverse * part cnode_map f3 * * part cPOWER * part cnode_map f3 f2 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f4 cNUMERAL c_0 c/\ c= * b0 b1 * f4 cSUC f5 cis_contour f3 b0 b1
- (!i. ((i <= j) ==> ((w (m + i)) = (((POWER (inverse (node_map H))) i) (q m))))) |- (((i <= j) ==> ((w (m + i)) = (((POWER (inverse (node_map H))) i) (q m)))) = T)
T c==> ! c==> c<= b0 f0 c= * f1 c+ f2 b0 cPOWER * part cinverse * part cnode_map f3 b0 * f4 f2 c= c==> c<= f5 f0 c= * f1 c+ f2 f5 cPOWER * part cinverse * part cnode_map f3 f5 * f4 f2 cT
- (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((face_contour H) (q m)) i)))) |- ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((face_contour H) (q m)) i)))
T c==> ! c==> c<= b0 cNUMERAL cBIT1 c_0 c= * f0 c+ f1 b0 cface_contour f2 * f3 f1 b0 c==> c<= f4 cNUMERAL cBIT1 c_0 c= * f0 c+ f1 f4 cface_contour f2 * f3 f1 f4
- (?j. ((inverse (node_map H)) = ((POWER (node_map H)) j))), ((p (SUC n)) = ((node_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), (((is_contour H) q) m) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c? / c= * part cinverse * part cnode_map f0 * * part cPOWER * part cnode_map f0 b0 c==> c= * f1 cSUC f2 cnode_map f0 * f1 f2 c==> c= * f3 f4 * f1 f2 c==> c= * f3 cNUMERAL c_0 * f1 cNUMERAL c_0 c==> cis_contour f0 f3 f4 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 cSUC f2 cis_contour f0 b0 b1
- |- (((inverse (node_map H)) o (inverse (edge_map H))) = (face_map H))
T c= * * part co * part cinverse * part cnode_map f0 * part cinverse * part cedge_map f0 * part cface_map f0
- (!i. ((i <= j) ==> ((w ((SUC m) + i)) = (((POWER (face_map H)) i) (g (SUC m)))))) |- ((i <= j) ==> ((w ((SUC m) + i)) = (((POWER (face_map H)) i) (g (SUC m)))))
T c==> ! c==> c<= b0 f0 c= * f1 c+ cSUC f2 b0 cPOWER * part cface_map f3 b0 * f4 cSUC f2 c==> c<= f5 f0 c= * f1 c+ cSUC f2 f5 cPOWER * part cface_map f3 f5 * f4 cSUC f2
- (?j. ((inverse (node_map H)) = ((POWER (node_map H)) j))), ((p (SUC n)) = ((node_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), (((is_contour H) q) m) |- ((?j. ((inverse (node_map H)) = ((POWER (node_map H)) j))) /\ (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c? / c= * part cinverse * part cnode_map f0 * * part cPOWER * part cnode_map f0 b0 c==> c= * f1 cSUC f2 cnode_map f0 * f1 f2 c==> c= * f3 f4 * f1 f2 c==> c= * f3 cNUMERAL c_0 * f1 cNUMERAL c_0 c==> cis_contour f0 f3 f4 c/\ c? / c= * part cinverse * part cnode_map f0 * * part cPOWER * part cnode_map f0 b0 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 cSUC f2 cis_contour f0 b0 b1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!i. ((i <= m) ==> ((g i) = (q i)))) |- (((i <= m) ==> ((g i) = (q i))) = T)
T c==> ! c==> c<= b0 f0 c= * f1 b0 * f2 b0 c= c==> c<= f3 f0 c= * f1 f3 * f2 f3 cT
- |- ((\f. (I = ((POWER f) (NUMERAL _0)))) f)
T * / c= part cI * * part cPOWER b0 cNUMERAL c_0 f0
- |- (I = ((POWER f) (NUMERAL _0)))
T c= part cI * * part cPOWER f0 cNUMERAL c_0
- (?j. ((inverse (face_map H)) = ((POWER (face_map H)) j))), ((g (SUC m)) = ((inverse (node_map H)) (q m))), ((g (NUMERAL _0)) = (q (NUMERAL _0))), ((p (SUC n)) = ((edge_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((node_contour H) (q m)) i)))))) |- ((?j. ((inverse (face_map H)) = ((POWER (face_map H)) j))) /\ (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c? / c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 b0 c==> c= * f1 cSUC f2 cinverse * part cnode_map f0 * f3 f2 c==> c= * f1 cNUMERAL c_0 * f3 cNUMERAL c_0 c==> c= * f4 cSUC f5 cedge_map f0 * f4 f5 c==> c= * f3 f2 * f4 f5 c==> c= * f3 cNUMERAL c_0 * f4 cNUMERAL c_0 c==> c/\ cis_contour f0 f1 cSUC f2 c/\ ! c==> c<= b0 f2 c= * f1 b0 * f3 b0 ! c==> c<= b0 cNUMERAL cBIT1 c_0 c= * f1 c+ f2 b0 cnode_contour f0 * f3 f2 b0 c/\ c? / c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 b0 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f4 cNUMERAL c_0 c/\ c= * b0 b1 * f4 cSUC f5 cis_contour f0 b0 b1
- (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m)))), (((go_one_step H) (p n)) (p (SUC n))) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c? / c/\ c= * f0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * f0 b0 * f1 f2 cis_contour f3 f0 b0 c==> cgo_one_step f3 * f1 f2 * f1 cSUC f2 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 b1 * f1 cSUC f2 cis_contour f3 b0 b1
- (!i. ((i <= j) ==> ((w (m + i)) = (((POWER (inverse (node_map H))) i) (q m))))) |- ((\i. ((i <= j) ==> ((w (m + i)) = (((POWER (inverse (node_map H))) i) (q m))))) i)
T c==> ! c==> c<= b0 f0 c= * f1 c+ f2 b0 cPOWER * part cinverse * part cnode_map f3 b0 * f4 f2 * / c==> c<= b0 f0 c= * f1 c+ f2 b0 cPOWER * part cinverse * part cnode_map f3 b0 * f4 f2 f5
- (?g'. (((g' (NUMERAL _0)) = (g (NUMERAL _0))) /\ (((g' ((SUC m) + j)) = (((POWER (face_map H)) j) (g (SUC m)))) /\ ((((is_contour H) g') ((SUC m) + j)) /\ ((!i. ((i <= (SUC m)) ==> ((g' i) = (g i)))) /\ (!i. ((i <= j) ==> ((g' ((SUC m) + i)) = (((POWER (face_map H)) i) (g (SUC m))))))))))), ((g (SUC m)) = ((inverse (node_map H)) (q m))), ((g (NUMERAL _0)) = (q (NUMERAL _0))), ((p (SUC n)) = ((edge_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), ((inverse (face_map H)) = ((POWER (face_map H)) j)) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 c+ cSUC f1 f2 cPOWER * part cface_map f3 f2 * f0 cSUC f1 c/\ cis_contour f3 b0 c+ cSUC f1 f2 c/\ ! c==> c<= b1 cSUC f1 c= * b0 b1 * f0 b1 ! c==> c<= b1 f2 c= * b0 c+ cSUC f1 b1 cPOWER * part cface_map f3 b1 * f0 cSUC f1 c==> c= * f0 cSUC f1 cinverse * part cnode_map f3 * f4 f1 c==> c= * f0 cNUMERAL c_0 * f4 cNUMERAL c_0 c==> c= * f5 cSUC f6 cedge_map f3 * f5 f6 c==> c= * f4 f1 * f5 f6 c==> c= * f4 cNUMERAL c_0 * f5 cNUMERAL c_0 c==> c= * part cinverse * part cface_map f3 * * part cPOWER * part cface_map f3 f2 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f5 cNUMERAL c_0 c/\ c= * b0 b1 * f5 cSUC f6 cis_contour f3 b0 b1
- (!i. ((i <= j) ==> ((w ((SUC m) + i)) = (((POWER (face_map H)) i) (g (SUC m)))))) |- (((i <= j) ==> ((w ((SUC m) + i)) = (((POWER (face_map H)) i) (g (SUC m))))) = T)
T c==> ! c==> c<= b0 f0 c= * f1 c+ cSUC f2 b0 cPOWER * part cface_map f3 b0 * f4 cSUC f2 c= c==> c<= f5 f0 c= * f1 c+ cSUC f2 f5 cPOWER * part cface_map f3 f5 * f4 cSUC f2 cT
- |- ((((is_contour H) p) (SUC n)) = ((((is_contour H) p) n) /\ (((one_step_contour H) (p n)) (p (SUC n)))))
T c= cis_contour f0 f1 cSUC f2 c/\ cis_contour f0 f1 f2 cone_step_contour f0 * f1 f2 * f1 cSUC f2
- (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((face_contour H) (q m)) i)))) |- ((\i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((face_contour H) (q m)) i)))) i)
T c==> ! c==> c<= b0 cNUMERAL cBIT1 c_0 c= * f0 c+ f1 b0 cface_contour f2 * f3 f1 b0 * / c==> c<= b0 cNUMERAL cBIT1 c_0 c= * f0 c+ f1 b0 cface_contour f2 * f3 f1 b0 f4
- |- (T = ((((inverse (face_map H)) o (inverse (node_map H))) (p n)) = ((edge_map H) (p n))))
T c= cT c= co * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0 * f1 f2 cedge_map f0 * f1 f2
- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m))))), (((go_one_step H) (p n)) (p (SUC n))) |- ((?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p n)) /\ (((is_contour H) q) m))))) /\ (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m))))))
T c==> c? / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 f1 cis_contour f2 b0 b1 c==> cgo_one_step f2 * f0 f1 * f0 cSUC f1 c/\ c? / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 f1 cis_contour f2 b0 b1 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= * b0 b1 * f0 cSUC f1 cis_contour f2 b0 b1
- (?j. ((inverse (face_map H)) = ((POWER (face_map H)) j))), ((g (SUC m)) = ((inverse (node_map H)) (q m))), ((g (NUMERAL _0)) = (q (NUMERAL _0))), ((p (SUC n)) = ((edge_map H) (p n))), ((q m) = (p n)), ((q (NUMERAL _0)) = (p (NUMERAL _0))), ((((is_contour H) g) (SUC m)) /\ ((!i. ((i <= m) ==> ((g i) = (q i)))) /\ (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((node_contour H) (q m)) i)))))) |- (?q. (?m. (((q (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((q m) = (p (SUC n))) /\ (((is_contour H) q) m)))))
T c==> c? / c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 b0 c==> c= * f1 cSUC f2 cinverse * part cnode_map f0 * f3 f2 c==> c= * f1 cNUMERAL c_0 * f3 cNUMERAL c_0 c==> c= * f4 cSUC f5 cedge_map f0 * f4 f5 c==> c= * f3 f2 * f4 f5 c==> c= * f3 cNUMERAL c_0 * f4 cNUMERAL c_0 c==> c/\ cis_contour f0 f1 cSUC f2 c/\ ! c==> c<= b0 f2 c= * f1 b0 * f3 b0 ! c==> c<= b0 cNUMERAL cBIT1 c_0 c= * f1 c+ f2 b0 cnode_contour f0 * f3 f2 b0 c? / c? / c/\ c= * b0 cNUMERAL c_0 * f4 cNUMERAL c_0 c/\ c= * b0 b1 * f4 cSUC f5 cis_contour f0 b0 b1
- (!i. ((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((face_contour H) (q m)) i)))) |- (((i <= (NUMERAL (BIT1 _0))) ==> ((g (m + i)) = (((face_contour H) (q m)) i))) = T)
T c==> ! c==> c<= b0 cNUMERAL cBIT1 c_0 c= * f0 c+ f1 b0 cface_contour f2 * f3 f1 b0 c= c==> c<= f4 cNUMERAL cBIT1 c_0 c= * f0 c+ f1 f4 cface_contour f2 * f3 f1 f4 cT
- (!i. ((i <= (SUC m)) ==> ((w i) = (g i)))) |- (((i <= (SUC m)) ==> ((w i) = (g i))) = T)
T c==> ! c==> c<= b0 cSUC f0 c= * f1 b0 * f2 b0 c= c==> c<= f3 cSUC f0 c= * f1 f3 * f2 f3 cT
- (!i. ((i <= (SUC m)) ==> ((w i) = (g i)))) |- ((i <= (SUC m)) ==> ((w i) = (g i)))
T c==> ! c==> c<= b0 cSUC f0 c= * f1 b0 * f2 b0 c==> c<= f3 cSUC f0 c= * f1 f3 * f2 f3
