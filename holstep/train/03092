N Marchal_cells_2_new.BARV_IMP_HL_1_POS_LT
C |- (!V. (!ul. (((saturated V) /\ ((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D BIT0
A |- (!n. ((BIT0 n) = (n + n)))
T c= cBIT0 f0 c+ f0 f0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D MULT_ASSOC
A |- (!m. (!n. (!p. ((m * (n * p)) = ((m * n) * p)))))
T c= c* f0 c* f1 f2 c* c* f0 f1 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D EQ_MULT_LCANCEL
A |- (!m. (!n. (!p. (((m * n) = (m * p)) = ((m = (NUMERAL _0)) \/ (n = p))))))
T c= c= c* f0 f1 c* f0 f2 c\/ c= f0 cNUMERAL c_0 c= f1 f2
D MULT_2
A |- (!n. (((NUMERAL (BIT0 (BIT1 _0))) * n) = (n + n)))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 f0 c+ f0 f0
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D LE_ADD
A |- (!m. (!n. (m <= (m + n))))
T c<= f0 c+ f0 f1
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_EQ
A |- ((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) /\ (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))))
T c/\ ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
D HD
A |- ((HD ((CONS h) t)) = h)
T c= cHD cCONS f0 f1 f0
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_LE_MUL
A |- (!x. (!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_LT_LE
A |- (!x. (!y. (((real_lt x) y) = (((real_le x) y) /\ (~ (x = y))))))
T c= creal_lt f0 f1 c/\ creal_le f0 f1 c~ c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_ENTIRE
A |- (!x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0)))))))
T c= c= creal_mul f0 f1 creal_of_num cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= f1 creal_of_num cNUMERAL c_0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_MUL_AC
A |- ((((real_mul m) n) = ((real_mul n) m)) /\ ((((real_mul ((real_mul m) n)) p) = ((real_mul m) ((real_mul n) p))) /\ (((real_mul m) ((real_mul n) p)) = ((real_mul n) ((real_mul m) p)))))
T c/\ c= creal_mul f0 f1 creal_mul f1 f0 c/\ c= creal_mul creal_mul f0 f1 f2 creal_mul f0 creal_mul f1 f2 c= creal_mul f0 creal_mul f1 f2 creal_mul f1 creal_mul f0 f2
D Real_ext.REAL_PROP_POS_MUL2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 f1
D REAL_NOT_LE
A |- (!x. (!y. ((~ ((real_le x) y)) = ((real_lt y) x))))
T c= c~ creal_le f0 f1 creal_lt f1 f0
D REAL_LT_01
A |- ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))
T creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_INV_INV
A |- (!x. ((real_inv (real_inv x)) = x))
T c= creal_inv creal_inv f0 f0
D REAL_INV_NEG
A |- (!x. ((real_inv (real_neg x)) = (real_neg (real_inv x))))
T c= creal_inv creal_neg f0 creal_neg creal_inv f0
D REAL_DIV_1
A |- (!x. (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_INV_MUL
A |- (!x. (!y. ((real_inv ((real_mul x) y)) = ((real_mul (real_inv x)) (real_inv y)))))
T c= creal_inv creal_mul f0 f1 creal_mul creal_inv f0 creal_inv f1
D REAL_INV_DIV
A |- (!x. (!y. ((real_inv ((real_div x) y)) = ((real_div y) x))))
T c= creal_inv creal_div f0 f1 creal_div f1 f0
D DECIMAL
A |- (!x. (!y. (((DECIMAL x) y) = ((real_div (real_of_num x)) (real_of_num y)))))
T c= cDECIMAL f0 f1 creal_div creal_of_num f0 creal_of_num f1
D RAT_LEMMA2
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> (((real_add ((real_div x1) y1)) ((real_div x2) y2)) = ((real_mul ((real_add ((real_mul x1) y2)) ((real_mul x2) y1))) ((real_mul (real_inv y1)) (real_inv y2)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_add creal_div f2 f0 creal_div f3 f1 creal_mul creal_add creal_mul f2 f1 creal_mul f3 f0 creal_mul creal_inv f0 creal_inv f1
D RAT_LEMMA4
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> (((real_le ((real_div x1) y1)) ((real_div x2) y2)) = ((real_le ((real_mul x1) y2)) ((real_mul x2) y1))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_le creal_div f2 f0 creal_div f3 f1 creal_le creal_mul f2 f1 creal_mul f3 f0
D RAT_LEMMA5
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> ((((real_div x1) y1) = ((real_div x2) y2)) = (((real_mul x1) y2) = ((real_mul x2) y1))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= c= creal_div f2 f0 creal_div f3 f1 c= creal_mul f2 f1 creal_mul f3 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D set_of_list
A |- (((set_of_list NIL) = EMPTY) /\ ((set_of_list ((CONS h) t)) = (h INSERT (set_of_list t))))
T c/\ c= * part cset_of_list cNIL part cEMPTY c= * part cset_of_list cCONS f0 f1 * * part cINSERT f0 * part cset_of_list f1
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D DIST_POS_LE
A |- (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y)))))
T creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1
D DIST_EQ_0
A |- (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D midpoint
A |- (!a. (!b. ((midpoint (a , b)) = ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add a) b)))))
T c= cmidpoint c, f0 f1 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 f1
D Hypermap.CARD_SINGLETON
A |- (!x. ((CARD (x INSERT EMPTY)) = (NUMERAL (BIT1 _0))))
T c= cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0
D Packing3.TRUNCATE_SIMPLEX_BARV
A |- (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl)))))))
T c==> c/\ cbarV f0 f1 f2 c<= f3 f1 cbarV f0 f3 ctruncate_simplex f3 f2
D Rogers.CIRCUMCENTER_2
A |- (!a. (!b. ((circumcenter (a INSERT (b INSERT EMPTY))) = (midpoint (a , b)))))
T c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cmidpoint c, f0 f1
D Rogers.BARV_IMP_LENGTH_EQ_CARD
A |- (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cpacking f0 cbarV f0 f1 f2 c/\ c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list f2 c+ f1 cNUMERAL cBIT1 c_0
D Rogers.HL_EQ_DIST0
A |- (!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))))))
T c==> c/\ cpacking f0 cbarV f0 f1 f2 c= chl f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
D Marchal_cells.TRUNCATE_SIMPLEX_EXPLICIT_1
A |- (!a. (!b. (!c. (!d. ((((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) NIL))) = ((CONS a) ((CONS b) NIL))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) NIL)))) = ((CONS a) ((CONS b) NIL))) /\ (((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) ((CONS d) NIL))))) = ((CONS a) ((CONS b) NIL)))))))))
T c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL cCONS f0 cCONS f1 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS f0 cCONS f1 cNIL c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f0 cCONS f1 cNIL
D Marchal_cells.BARV_3_EXPLICIT
A |- (!V. (!vl. ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) vl) ==> (?u0. (?u1. (?u2. (?u3. (vl = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))))))
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c? / c? / c? / c? / c= f1 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL
+ |- ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = ((truncate_simplex (NUMERAL (BIT1 _0))) ul)) = ((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))
T c= c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 ctruncate_simplex cNUMERAL cBIT1 c_0 f0 * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- |- ((?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) ==> (?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)))
T c==> c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1) |- ((packing V) = (packing V))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c= cpacking f5 cpacking f5
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))), ((packing V) /\ (((barV V) k) ul)) |- ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) /\ ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c==> c/\ cpacking f0 cbarV f0 f1 f2 c/\ ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c= chl f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
+ |- ((!i. ((P i) ==> (Q i))) ==> ((!i. (P i)) ==> (!i. (Q i))))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
+ |- (((!b. ((circumcenter (a INSERT (b INSERT EMPTY))) = (midpoint (a , b)))) ==> ((\b. ((circumcenter (a INSERT (b INSERT EMPTY))) = (midpoint (a , b)))) b)) = ((\b. ((circumcenter (a INSERT (b INSERT EMPTY))) = (midpoint (a , b)))) b))
T c= c==> ! c= ccircumcenter * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cmidpoint c, f0 b0 * / c= ccircumcenter * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cmidpoint c, f0 b0 f1 * / c= ccircumcenter * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cmidpoint c, f0 b0 f1
+ (vl = ((CONS u0) ((CONS u1) NIL))) |- ((~ ((circumcenter (set_of_list ((CONS u0) ((CONS u1) NIL)))) = (HD ((CONS u0) ((CONS u1) NIL))))) = (~ ((circumcenter (set_of_list vl)) = (HD vl))))
T c==> c= f0 cCONS f1 cCONS f2 cNIL c= c~ c= ccircumcenter * part cset_of_list cCONS f1 cCONS f2 cNIL cHD cCONS f1 cCONS f2 cNIL c~ c= ccircumcenter * part cset_of_list f0 cHD f0
+ (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1) |- ((u0 = u1) /\ ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))))))))
T c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= f2 f3 c/\ c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- ((!V. (!u1. (!u0. (!ul. (!u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> csaturated b0 c==> cpacking b0 c==> cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b3 c==> c= b3 cCONS b2 cCONS b1 cCONS b5 cCONS b4 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 b3 f0 c==> c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> creal_le creal_of_num cNUMERAL c_0 chl f0 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b2 b1 b2 c==> c= b2 b1 c==> cbarV b0 cNUMERAL cBIT1 c_0 f0 c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b6 cbarV b6 b6 b6 c/\ c= cLENGTH b6 c+ b6 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b6 c+ b6 cNUMERAL cBIT1 c_0 cT
- (u0 = u1) |- (((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((CARD (set_of_list _3511131)) = (_3511132 + (NUMERAL (BIT1 _0)))))) = ((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((CARD (set_of_list _3511131)) = (_3511132 + (NUMERAL (BIT1 _0)))))))
T c==> c= f0 f1 c= c\/ c~ cpacking f2 c\/ c~ cbarV f2 f3 f4 c= cCARD * part cset_of_list f4 c+ f3 cNUMERAL cBIT1 c_0 c\/ c~ cpacking f2 c\/ c~ cbarV f2 f3 f4 c= cCARD * part cset_of_list f4 c+ f3 cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- (((!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl)))))) ==> ((\r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl)))))) r)) = ((\r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl)))))) r))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 c= c==> ! ! ! c==> c/\ cbarV f0 b1 b2 c<= b0 b1 cbarV f0 b0 ctruncate_simplex b0 b2 * / ! ! c==> c/\ cbarV f0 b1 b2 c<= b0 b1 cbarV f0 b0 ctruncate_simplex b0 b2 f1 * / ! ! c==> c/\ cbarV f0 b1 b2 c<= b0 b1 cbarV f0 b0 ctruncate_simplex b0 b2 f1
- |- ((~ (_3511231 = _3511232)) \/ ((CARD _3511231) = (CARD _3511232)))
T c\/ c~ c= f0 f1 c= cCARD f0 cCARD f1
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c? / c? / c? / c= f1 cCONS f2 cCONS b0 cCONS b1 cCONS b2 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
- |- ((~ (_3511241 = _3511243)) \/ ((~ (_3511242 = _3511244)) \/ (((vector_add _3511241) _3511242) = ((vector_add _3511243) _3511244))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) = ((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) vl))
T c= c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 f1
+ |- ((~ ((CARD (u1 INSERT EMPTY)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) = (~ ((CARD (u1 INSERT (u1 INSERT EMPTY))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))))
T c= c~ c= cCARD * * part cINSERT f0 part cEMPTY c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ c= cCARD * * part cINSERT f0 * * part cINSERT f0 part cEMPTY c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (~ ((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (u0 $ i)) (u1 $ i))) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i)))) |- ((~ ((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (u0 $ i)) (u1 $ i))) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i)))) /\ F)
T c==> c~ c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f0 f1 c$ f2 f1 c/\ c~ c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f0 f1 c$ f2 f1 cF
+ |- (((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0)))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- (((!x. ((CARD (x INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) ==> ((\x. ((CARD (x INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) x)) = ((\x. ((CARD (x INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) x))
T c= c==> ! c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 * / c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 f0 * / c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 f0
+ |- ((real_neg ((real_sub (hl vl)) (real_of_num (NUMERAL _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl)))
T c= creal_neg creal_sub chl f0 creal_of_num cNUMERAL c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f0
+ (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F)))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) |- (!V. (!ul. (!k. ((((~ (packing V)) \/ (~ (((barV V) k) ul))) \/ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) /\ (((~ (packing V)) \/ (~ (((barV V) k) ul))) \/ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 ! ! ! c/\ c\/ c\/ c~ cpacking b0 c~ cbarV b0 b2 b1 c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking b0 c~ cbarV b0 b2 b1 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0)))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 cF
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))), (?k. ((((barV V) k) zl) /\ (r <= k))) |- ((?k. ((((barV V) k) zl) /\ (r <= k))) /\ (((barV V) r) ((truncate_simplex r) zl)))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 c==> c? / c/\ cbarV f0 b0 f1 c<= f2 b0 c/\ c? / c/\ cbarV f0 b0 f1 c<= f2 b0 cbarV f0 f2 ctruncate_simplex f2 f1
- (_3511258 = _3511260) |- ((_3511257 = _3511259) ==> (((truncate_simplex _3511257) _3511258) = ((truncate_simplex _3511259) _3511260)))
T c==> c= f0 f1 c==> c= f2 f3 c= ctruncate_simplex f2 f0 ctruncate_simplex f3 f1
+ ((\u0. (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))) u0) |- (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))
T c==> * / c? / c? / c? / c= f0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL f1 c? / c? / c? / c= f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (_3511269 = _3511270)) \/ ((BIT1 _3511269) = (BIT1 _3511270)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) |- ((((~ (packing _3511130)) \/ (~ (((barV _3511130) _3511132) _3511131))) \/ ((LENGTH _3511131) = (_3511132 + (NUMERAL (BIT1 _0))))) /\ (((~ (packing _3511130)) \/ (~ (((barV _3511130) _3511132) _3511131))) \/ ((CARD (set_of_list _3511131)) = (_3511132 + (NUMERAL (BIT1 _0))))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c/\ c\/ c\/ c~ cpacking f0 c~ cbarV f0 f1 f2 c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking f0 c~ cbarV f0 f1 f2 c= cCARD * part cset_of_list f2 c+ f1 cNUMERAL cBIT1 c_0
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0)))) |- ((((((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) |- (((~ (packing _3511130)) \/ (~ (((barV _3511130) _3511132) _3511131))) \/ ((CARD (set_of_list _3511131)) = (_3511132 + (NUMERAL (BIT1 _0)))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking f0 c~ cbarV f0 f1 f2 c= cCARD * part cset_of_list f2 c+ f1 cNUMERAL cBIT1 c_0
- |- ((_3511263 = _3511265) ==> ((~ (_3511264 = _3511266)) \/ ((_3511263 , _3511264) = (_3511265 , _3511266))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((\u0. (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))) u0) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))) = T)
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c==> * / c? / c? / c? / c= f1 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL f2 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1 cT
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- ((saturated V) = (saturated V))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c= csaturated f2 csaturated f2
+ |- (((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ (?u0. (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))
T c==> c? / c? / c? / c? / c= f0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL c==> cpacking f1 c==> csaturated f1 c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f0 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- (u0 = u1) |- ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) = (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))))
T c==> c= f0 f1 c= c~ creal_lt creal_of_num cNUMERAL c_0 chl f2 c~ creal_lt creal_of_num cNUMERAL c_0 chl f2
+ (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (vl = ((CONS u0) ((CONS u1) NIL))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), ((real_le (real_of_num (NUMERAL _0))) (hl vl)), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (~ ((circumcenter (set_of_list vl)) = (HD vl)))
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> cpacking f1 c==> csaturated f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= f0 cCONS f3 cCONS f4 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> creal_le creal_of_num cNUMERAL c_0 chl f0 c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c~ c= ccircumcenter * part cset_of_list f0 cHD f0
+ (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((hl vl) = (real_of_num (NUMERAL _0)))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c= chl f6 creal_of_num cNUMERAL c_0
+ (~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))), (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), (u0 = u1), (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0), ((real_le (real_of_num (NUMERAL _0))) (hl vl)), (((barV V) (NUMERAL (BIT1 _0))) vl), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F)
T c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> cpacking f1 c==> csaturated f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> c= f3 f4 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f3 f4 f3 c==> creal_le creal_of_num cNUMERAL c_0 chl f0 c==> cbarV f1 cNUMERAL cBIT1 c_0 f0 c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- (_3511257 = _3511259), (_3511258 = _3511260) |- ((_3511257 = _3511259) /\ (((truncate_simplex _3511257) _3511258) = ((truncate_simplex _3511259) _3511260)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= ctruncate_simplex f0 f2 ctruncate_simplex f1 f3
- (u0 = u1) |- (((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((LENGTH _3511131) = (_3511132 + (NUMERAL (BIT1 _0)))))) = ((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((LENGTH _3511131) = (_3511132 + (NUMERAL (BIT1 _0)))))))
T c==> c= f0 f1 c= c\/ c~ cpacking f2 c\/ c~ cbarV f2 f3 f4 c= cLENGTH f4 c+ f3 cNUMERAL cBIT1 c_0 c\/ c~ cpacking f2 c\/ c~ cbarV f2 f3 f4 c= cLENGTH f4 c+ f3 cNUMERAL cBIT1 c_0
+ |- (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) vl) ==> (?u0. (?u1. (?u2. (?u3. (vl = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))))) = T)
T c= c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c? / c? / c? / c? / c= f1 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL cT
+ (u0 = u1) |- (~ ((CARD (set_of_list ((CONS u0) ((CONS u1) NIL)))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0)))))
T c==> c= f0 f1 c~ c= cCARD * part cset_of_list cCONS f0 cCONS f1 cNIL c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (!k. (((\k. ((((barV V) k) zl) /\ (r <= k))) k) ==> ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl)))))
T c==> * / c/\ cbarV f0 b0 f1 c<= f2 b0 f3 c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 cbarV f0 f2 ctruncate_simplex f2 f1
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (hl vl))) (real_of_num (NUMERAL _0)))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0
+ ((((barV V) k) zl) /\ (r <= k)) |- (((((barV V) k) zl) /\ (r <= k)) /\ ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl))))
T c==> c/\ cbarV f0 f1 f2 c<= f3 f1 c/\ c/\ cbarV f0 f1 f2 c<= f3 f1 c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 cbarV f0 f3 ctruncate_simplex f3 f2
+ (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), (((barV V) (NUMERAL (BIT1 _0))) vl) |- ((((barV V) (NUMERAL (BIT1 _0))) vl) /\ ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))))))
T c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c/\ cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1) |- ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u1) u1)) = u1) = (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u1) u1)) = u1))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c= c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f2 f2 c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f2 f2
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- ((\k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))) k)
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 * / ! c==> c/\ cbarV f0 b0 b1 c<= f1 b0 cbarV f0 f1 ctruncate_simplex f1 b1 f2
+ |- (((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 cF
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((\u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) u3) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))) = T)
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c==> * / c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS b0 cNIL f5 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1 cT
+ |- (((!x. (((\k. ((((barV V) k) zl) /\ (r <= k))) x) ==> ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl))))) ==> ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl))))) = ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl)))))
T c= c==> ! c==> * / c/\ cbarV f0 b1 f1 c<= f2 b1 b0 c==> ! ! ! ! c==> c/\ cbarV b1 b3 b4 c<= b2 b3 cbarV b1 b2 ctruncate_simplex b2 b4 cbarV f0 f2 ctruncate_simplex f2 f1 c==> c? / c/\ cbarV f0 b0 f1 c<= f2 b0 c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 cbarV f0 f2 ctruncate_simplex f2 f1 c==> c? / c/\ cbarV f0 b0 f1 c<= f2 b0 c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 cbarV f0 f2 ctruncate_simplex f2 f1
- (_3511219 = _3511222) |- ((_3511221 = _3511224) ==> ((~ (_3511220 = _3511223)) \/ ((((barV _3511222) _3511223) _3511224) \/ (~ (((barV _3511219) _3511220) _3511221)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) = (~ ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c= c~ creal_lt creal_of_num cNUMERAL c_0 chl f1 c~ creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- |- ((_3511231 = _3511232) ==> ((CARD _3511231) = (CARD _3511232)))
T c==> c= f0 f1 c= cCARD f0 cCARD f1
- |- ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
- |- (((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F))
T c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ ((\k. ((((barV V) k) zl) /\ (r <= k))) k) |- (((\k. ((((barV V) k) zl) /\ (r <= k))) k) /\ ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl))))
T c==> * / c/\ cbarV f0 b0 f1 c<= f2 b0 f3 c/\ * / c/\ cbarV f0 b0 f1 c<= f2 b0 f3 c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 cbarV f0 f2 ctruncate_simplex f2 f1
- (_3511227 = _3511228) |- ((((saturated _3511227) = (saturated _3511228)) ==> ((saturated _3511228) \/ (~ (saturated _3511227)))) = ((saturated _3511228) \/ (~ (saturated _3511227))))
T c==> c= f0 f1 c= c==> c= csaturated f0 csaturated f1 c\/ csaturated f1 c~ csaturated f0 c\/ csaturated f1 c~ csaturated f0
+ ((saturated V) /\ ((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) |- (((saturated V) /\ ((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) /\ ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> c/\ csaturated f0 c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c/\ csaturated f0 c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
- (u0 = u1) |- ((saturated V) = (saturated V))
T c==> c= f0 f1 c= csaturated f2 csaturated f2
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 ! c==> c/\ cbarV f0 f1 b0 c<= f2 f1 cbarV f0 f2 ctruncate_simplex f2 b0
+ |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) vl) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))) = T)
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c==> * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 b0 f6 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1 cT
+ |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (_3511253 = _3511254)) \/ ((set_of_list _3511253) = (set_of_list _3511254)))
T c\/ c~ c= f0 f1 c= * part cset_of_list f0 * part cset_of_list f1
- |- ((_3511229 = _3511230) ==> ((LENGTH _3511229) = (LENGTH _3511230)))
T c==> c= f0 f1 c= cLENGTH f0 cLENGTH f1
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul), ((\u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) u3) |- (((\u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) u3) /\ ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> * / c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS b0 cNIL f5 c/\ * / c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS b0 cNIL f5 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) |- (((!k. ((((~ (packing _3511130)) \/ (~ (((barV _3511130) k) _3511131))) \/ ((LENGTH _3511131) = (k + (NUMERAL (BIT1 _0))))) /\ (((~ (packing _3511130)) \/ (~ (((barV _3511130) k) _3511131))) \/ ((CARD (set_of_list _3511131)) = (k + (NUMERAL (BIT1 _0))))))) ==> ((\k. ((((~ (packing _3511130)) \/ (~ (((barV _3511130) k) _3511131))) \/ ((LENGTH _3511131) = (k + (NUMERAL (BIT1 _0))))) /\ (((~ (packing _3511130)) \/ (~ (((barV _3511130) k) _3511131))) \/ ((CARD (set_of_list _3511131)) = (k + (NUMERAL (BIT1 _0))))))) _3511132)) = ((\k. ((((~ (packing _3511130)) \/ (~ (((barV _3511130) k) _3511131))) \/ ((LENGTH _3511131) = (k + (NUMERAL (BIT1 _0))))) /\ (((~ (packing _3511130)) \/ (~ (((barV _3511130) k) _3511131))) \/ ((CARD (set_of_list _3511131)) = (k + (NUMERAL (BIT1 _0))))))) _3511132))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c= c==> ! c/\ c\/ c\/ c~ cpacking f0 c~ cbarV f0 b0 f1 c= cLENGTH f1 c+ b0 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking f0 c~ cbarV f0 b0 f1 c= cCARD * part cset_of_list f1 c+ b0 cNUMERAL cBIT1 c_0 * / c/\ c\/ c\/ c~ cpacking f0 c~ cbarV f0 b0 f1 c= cLENGTH f1 c+ b0 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking f0 c~ cbarV f0 b0 f1 c= cCARD * part cset_of_list f1 c+ b0 cNUMERAL cBIT1 c_0 f2 * / c/\ c\/ c\/ c~ cpacking f0 c~ cbarV f0 b0 f1 c= cLENGTH f1 c+ b0 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking f0 c~ cbarV f0 b0 f1 c= cCARD * part cset_of_list f1 c+ b0 cNUMERAL cBIT1 c_0 f2
+ |- (((!ul. (!u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F)))))))))))))))) ==> ((\ul. (!u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F)))))))))))))))) ul)) = ((\ul. (!u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F)))))))))))))))) ul))
T c= c==> ! ! ! c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c= b0 cCONS f1 cCONS f2 cCONS b2 cCONS b1 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 b0 f3 c==> c= chl f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3 c==> creal_le creal_of_num cNUMERAL c_0 chl f3 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f3 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2 f1 c==> c= f1 f2 c==> cbarV f0 cNUMERAL cBIT1 c_0 f3 c==> c~ c= cCARD * part cset_of_list f3 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b3 cbarV b3 b4 b4 c/\ c= cLENGTH b4 c+ b4 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b4 c+ b4 cNUMERAL cBIT1 c_0 cF * / ! ! c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c= b0 cCONS f1 cCONS f2 cCONS b2 cCONS b1 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 b0 f3 c==> c= chl f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3 c==> creal_le creal_of_num cNUMERAL c_0 chl f3 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f3 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2 f1 c==> c= f1 f2 c==> cbarV f0 cNUMERAL cBIT1 c_0 f3 c==> c~ c= cCARD * part cset_of_list f3 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b3 cbarV b3 b4 b4 c/\ c= cLENGTH b4 c+ b4 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b4 c+ b4 cNUMERAL cBIT1 c_0 cF f4 * / ! ! c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c= b0 cCONS f1 cCONS f2 cCONS b2 cCONS b1 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 b0 f3 c==> c= chl f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3 c==> creal_le creal_of_num cNUMERAL c_0 chl f3 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f3 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2 f1 c==> c= f1 f2 c==> cbarV f0 cNUMERAL cBIT1 c_0 f3 c==> c~ c= cCARD * part cset_of_list f3 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b3 cbarV b3 b4 b4 c/\ c= cLENGTH b4 c+ b4 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b4 c+ b4 cNUMERAL cBIT1 c_0 cF f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!V. (!vl. ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) vl) ==> (?u0. (?u1. (?u2. (?u3. (vl = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))))))) ==> ((\V. (!vl. ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) vl) ==> (?u0. (?u1. (?u2. (?u3. (vl = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))))))) V)) = ((\V. (!vl. ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) vl) ==> (?u0. (?u1. (?u2. (?u3. (vl = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))))))) V))
T c= c==> ! ! c==> cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c? / c? / c? / c? / c= b1 cCONS b2 cCONS b3 cCONS b4 cCONS b5 cNIL * / ! c==> cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c? / c? / c? / c? / c= b1 cCONS b2 cCONS b3 cCONS b4 cCONS b5 cNIL f0 * / ! c==> cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c? / c? / c? / c? / c= b1 cCONS b2 cCONS b3 cCONS b4 cCONS b5 cNIL f0
+ (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1) |- (((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0)))) ==> F)
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f5 c==> c= f1 f2 c==> c= cCARD * part cset_of_list f5 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cF
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- (((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))))))))))))))))) = T)
T c= c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cT
+ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) = T)
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 cT
+ |- ((\b. ((midpoint (a , b)) = ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add a) b)))) b)
T * / c= cmidpoint c, f0 b0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 b0 f1
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (!V. (!r. (!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl))))))) = (!V. (!r. (!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))))))
T c= c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 ! ! ! c==> c? / c/\ cbarV b0 b3 b2 c<= b1 b3 cbarV b0 b1 ctruncate_simplex b1 b2 ! ! ! c==> c? / c/\ cbarV b0 b3 b2 c<= b1 b3 cbarV b0 b1 ctruncate_simplex b1 b2
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1) |- ((saturated V) = (saturated V))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c= csaturated f5 csaturated f5
- (u0 = u1) |- ((packing V) = (packing V))
T c==> c= f0 f1 c= cpacking f2 cpacking f2
- (~ (packing V)), (packing V) |- ((~ (packing V)) /\ (packing V))
T c==> c~ cpacking f0 c==> cpacking f0 c/\ c~ cpacking f0 cpacking f0
+ |- (((!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))) ==> ((\zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))) zl)) = ((\zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))) zl))
T c= c==> ! c==> c? / c/\ cbarV f0 b1 b0 c<= f1 b1 cbarV f0 f1 ctruncate_simplex f1 b0 * / c==> c? / c/\ cbarV f0 b1 b0 c<= f1 b1 cbarV f0 f1 ctruncate_simplex f1 b0 f2 * / c==> c? / c/\ cbarV f0 b1 b0 c<= f1 b1 cbarV f0 f1 ctruncate_simplex f1 b0 f2
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
+ (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))))))))
T c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0)))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_3511215 = _3511217), (_3511216 = _3511218) |- ((_3511216 = _3511218) /\ (((real_le _3511217) _3511218) \/ (~ ((real_le _3511215) _3511216))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))), (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), (u0 = u1), (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0), ((real_le (real_of_num (NUMERAL _0))) (hl vl)), (((barV V) (NUMERAL (BIT1 _0))) vl), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- F
T c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> cpacking f1 c==> csaturated f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> c= f3 f4 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f3 f4 f3 c==> creal_le creal_of_num cNUMERAL c_0 chl f0 c==> cbarV f1 cNUMERAL cBIT1 c_0 f0 c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f2 cF
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- ((!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))) = T)
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 c= ! c==> c? / c/\ cbarV f0 b1 b0 c<= f1 b1 cbarV f0 f1 ctruncate_simplex f1 b0 cT
+ |- (((!a. (!b. ((circumcenter (a INSERT (b INSERT EMPTY))) = (midpoint (a , b))))) ==> ((\a. (!b. ((circumcenter (a INSERT (b INSERT EMPTY))) = (midpoint (a , b))))) a)) = ((\a. (!b. ((circumcenter (a INSERT (b INSERT EMPTY))) = (midpoint (a , b))))) a))
T c= c==> ! ! c= ccircumcenter * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cmidpoint c, b0 b1 * / ! c= ccircumcenter * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cmidpoint c, b0 b1 f0 * / ! c= ccircumcenter * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cmidpoint c, b0 b1 f0
- (_3511263 = _3511265), (_3511264 = _3511266) |- ((_3511264 = _3511266) /\ ((_3511263 , _3511264) = (_3511265 , _3511266)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) $ i) = (u0 $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((u0 $ i) = (u1 $ i)))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2 f0 c$ f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ f2 f0
- |- ((~ (_3511251 = _3511252)) \/ ((hl _3511251) = (hl _3511252)))
T c\/ c~ c= f0 f1 c= chl f0 chl f1
- (_3511241 = _3511243) |- ((_3511242 = _3511244) ==> (((vector_add _3511241) _3511242) = ((vector_add _3511243) _3511244)))
T c==> c= f0 f1 c==> c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
- |- ((((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) = ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F))
T c= c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF
+ (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((real_lt (real_of_num (NUMERAL _0))) (hl vl))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 creal_lt creal_of_num cNUMERAL c_0 chl f6
+ |- ((\zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))) zl)
T * / c==> c? / c/\ cbarV f0 b1 b0 c<= f1 b1 cbarV f0 f1 ctruncate_simplex f1 b0 f2
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))), ((((barV V) k) zl) /\ (r <= k)) |- (((barV V) r) ((truncate_simplex r) zl))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 c==> c/\ cbarV f0 f1 f2 c<= f3 f1 cbarV f0 f3 ctruncate_simplex f3 f2
+ ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0)))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0
- ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F), (((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) |- ((((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) /\ ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F))
T c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c/\ c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) $ i) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) $ i) = (u0 $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((u0 $ i) = (u1 $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) $ i) = (u0 $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((u0 $ i) = (u1 $ i)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2 f0 c$ f1 f0 c= c$ f1 f0 c$ f2 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2 f0 c$ f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ f2 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2 f0 c$ f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ f2 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\V. (!u1. (!u0. (!ul. (!u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))))))))))) V)
T * / ! ! ! ! ! c==> csaturated b0 c==> cpacking b0 c==> cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b3 c==> c= b3 cCONS b2 cCONS b1 cCONS b5 cCONS b4 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 b3 f0 c==> c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> creal_le creal_of_num cNUMERAL c_0 chl f0 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b2 b1 b2 c==> c= b2 b1 c==> cbarV b0 cNUMERAL cBIT1 c_0 f0 c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b6 cbarV b6 b6 b6 c/\ c= cLENGTH b6 c+ b6 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b6 c+ b6 cNUMERAL cBIT1 c_0 cF f1
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (?k. ((((barV V) k) ul) /\ ((NUMERAL (BIT1 _0)) <= k)))
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c? / c/\ cbarV f0 b0 f1 c<= cNUMERAL cBIT1 c_0 b0
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
+ |- ((?k. ((packing V) /\ (((barV V) k) vl))) = ((\V. (?k. ((packing V) /\ (((barV V) k) vl)))) V))
T c= c? / c/\ cpacking f0 cbarV f0 b0 f1 * / c? / c/\ cpacking b0 cbarV b0 b1 f1 f0
- (u0 = u1) |- (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) = ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))))
T c==> c= f0 f1 c= c= chl f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2 c= chl f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((!x. (((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) x) ==> (?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)))) ==> ((?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) ==> (?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)))) = ((?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) ==> (?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl))))
T c= c==> ! c==> * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b1 b0 c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b1 c==> c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 c==> c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0
- (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))), (~ F), (~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))), (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), (((barV V) (NUMERAL (BIT1 _0))) vl) |- ((~ F) /\ F)
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c==> c~ cF c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> cpacking f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= f3 f4 c==> cbarV f1 cNUMERAL cBIT1 c_0 f0 c/\ c~ cF cF
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) |- ((\k. ((((~ (packing _3511130)) \/ (~ (((barV _3511130) k) _3511131))) \/ ((LENGTH _3511131) = (k + (NUMERAL (BIT1 _0))))) /\ (((~ (packing _3511130)) \/ (~ (((barV _3511130) k) _3511131))) \/ ((CARD (set_of_list _3511131)) = (k + (NUMERAL (BIT1 _0))))))) _3511132)
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 * / c/\ c\/ c\/ c~ cpacking f0 c~ cbarV f0 b0 f1 c= cLENGTH f1 c+ b0 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking f0 c~ cbarV f0 b0 f1 c= cCARD * part cset_of_list f1 c+ b0 cNUMERAL cBIT1 c_0 f2
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0
+ |- ((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) ((truncate_simplex (NUMERAL (BIT1 _0))) ul))
T * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- (_3511229 = _3511230) |- ((_3511229 = _3511230) /\ ((LENGTH _3511229) = (LENGTH _3511230)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cLENGTH f0 cLENGTH f1
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) |- (((!ul. (!k. ((((~ (packing _3511130)) \/ (~ (((barV _3511130) k) ul))) \/ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) /\ (((~ (packing _3511130)) \/ (~ (((barV _3511130) k) ul))) \/ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))) ==> ((\ul. (!k. ((((~ (packing _3511130)) \/ (~ (((barV _3511130) k) ul))) \/ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) /\ (((~ (packing _3511130)) \/ (~ (((barV _3511130) k) ul))) \/ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))) _3511131)) = ((\ul. (!k. ((((~ (packing _3511130)) \/ (~ (((barV _3511130) k) ul))) \/ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) /\ (((~ (packing _3511130)) \/ (~ (((barV _3511130) k) ul))) \/ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))) _3511131))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c= c==> ! ! c/\ c\/ c\/ c~ cpacking f0 c~ cbarV f0 b1 b0 c= cLENGTH b0 c+ b1 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking f0 c~ cbarV f0 b1 b0 c= cCARD * part cset_of_list b0 c+ b1 cNUMERAL cBIT1 c_0 * / ! c/\ c\/ c\/ c~ cpacking f0 c~ cbarV f0 b1 b0 c= cLENGTH b0 c+ b1 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking f0 c~ cbarV f0 b1 b0 c= cCARD * part cset_of_list b0 c+ b1 cNUMERAL cBIT1 c_0 f1 * / ! c/\ c\/ c\/ c~ cpacking f0 c~ cbarV f0 b1 b0 c= cLENGTH b0 c+ b1 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking f0 c~ cbarV f0 b1 b0 c= cCARD * part cset_of_list b0 c+ b1 cNUMERAL cBIT1 c_0 f1
+ (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), (u0 = u1), (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0), ((real_le (real_of_num (NUMERAL _0))) (hl vl)), (((barV V) (NUMERAL (BIT1 _0))) vl), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- F
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> cpacking f1 c==> csaturated f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> c= f3 f4 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f3 f4 f3 c==> creal_le creal_of_num cNUMERAL c_0 chl f0 c==> cbarV f1 cNUMERAL cBIT1 c_0 f0 c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f2 cF
+ ((\V. (?k. ((packing V) /\ (((barV V) k) ul)))) V) |- (((?k. ((packing V) /\ (((barV V) k) ul))) ==> ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) = ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))))
T c==> * / c? / c/\ cpacking b0 cbarV b0 b1 f0 f1 c= c==> c? / c/\ cpacking f1 cbarV f1 b0 f0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0
- |- ((~ (_3511249 = _3511250)) \/ ((real_of_num _3511249) = (real_of_num _3511250)))
T c\/ c~ c= f0 f1 c= creal_of_num f0 creal_of_num f1
+ |- ((\V. (!r. (!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))))) V)
T * / ! ! c==> c? / c/\ cbarV b0 b3 b2 c<= b1 b3 cbarV b0 b1 ctruncate_simplex b1 b2 f0
+ (!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) |- ((\k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))))) k)
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 * / ! c==> c/\ cpacking f0 cbarV f0 b0 b1 c= chl b1 cdistance c, ccircumcenter * part cset_of_list b1 cHD b1 f1
- |- ((_3511237 = _3511238) ==> ((BIT0 _3511237) = (BIT0 _3511238)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- (((!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))) ==> ((\k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))) k)) = ((\k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))) k))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 c= c==> ! ! c==> c/\ cbarV f0 b0 b1 c<= f1 b0 cbarV f0 f1 ctruncate_simplex f1 b1 * / ! c==> c/\ cbarV f0 b0 b1 c<= f1 b0 cbarV f0 f1 ctruncate_simplex f1 b1 f2 * / ! c==> c/\ cbarV f0 b0 b1 c<= f1 b0 cbarV f0 f1 ctruncate_simplex f1 b1 f2
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))), (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), (((barV V) (NUMERAL (BIT1 _0))) vl) |- ((((CARD (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0)))) ==> F) = F)
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c= c==> c= cCARD * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f3 cCONS f3 cCONS f4 cCONS f5 cNIL c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cF cF
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((lambdai. ((real_add (u0 $ i)) (u1 $ i))) $ i))) $ i) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) $ i) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ clambda / creal_add c$ f1 b1 c$ f2 b1 b0 f0 c$ f1 f0 c= c$ f1 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2 f0 c$ f1 f0 c= c$ f1 f0 c$ f2 f0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- (packing V)
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 cpacking f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (((!d. ((((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) NIL))) = ((CONS a) ((CONS b) NIL))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) NIL)))) = ((CONS a) ((CONS b) NIL))) /\ (((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) ((CONS d) NIL))))) = ((CONS a) ((CONS b) NIL)))))) ==> ((\d. ((((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) NIL))) = ((CONS a) ((CONS b) NIL))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) NIL)))) = ((CONS a) ((CONS b) NIL))) /\ (((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) ((CONS d) NIL))))) = ((CONS a) ((CONS b) NIL)))))) d)) = ((\d. ((((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) NIL))) = ((CONS a) ((CONS b) NIL))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) NIL)))) = ((CONS a) ((CONS b) NIL))) /\ (((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) ((CONS d) NIL))))) = ((CONS a) ((CONS b) NIL)))))) d))
T c= c==> ! c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL cCONS f0 cCONS f1 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS f0 cCONS f1 cNIL c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cCONS b0 cNIL cCONS f0 cCONS f1 cNIL * / c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL cCONS f0 cCONS f1 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS f0 cCONS f1 cNIL c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cCONS b0 cNIL cCONS f0 cCONS f1 cNIL f3 * / c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL cCONS f0 cCONS f1 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS f0 cCONS f1 cNIL c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cCONS b0 cNIL cCONS f0 cCONS f1 cNIL f3
+ |- (((!vl. ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) ==> ((\vl. ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) vl)) = ((\vl. ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) vl))
T c= c==> ! c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl b0 cF * / c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl b0 cF f0 * / c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl b0 cF f0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl)))) (real_of_num (NUMERAL _0))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0
- |- ((_3511225 = _3511226) ==> ((packing _3511226) \/ (~ (packing _3511225))))
T c==> c= f0 f1 c\/ cpacking f1 c~ cpacking f0
+ |- ((!vl. (!V. (!u1. (!u0. (!ul. (!u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))))))))))))))))))))))) = (!vl. (!V. (!u1. (!u0. (!ul. (!u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F)))))))))))))))))))))
T c= ! ! ! ! ! ! ! c==> csaturated b1 c==> cpacking b1 c==> cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 b4 c==> c= b4 cCONS b3 cCONS b2 cCONS b6 cCONS b5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 b4 b0 c==> c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0 c==> creal_le creal_of_num cNUMERAL c_0 chl b0 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl b0 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b3 b2 b3 c==> c= b3 b2 c==> cbarV b1 cNUMERAL cBIT1 c_0 b0 c==> c~ c= cCARD * part cset_of_list b0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b7 cbarV b7 b7 b7 c/\ c= cLENGTH b7 c+ b7 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b7 c+ b7 cNUMERAL cBIT1 c_0 ! ! ! ! ! ! ! c==> csaturated b1 c==> cpacking b1 c==> cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 b4 c==> c= b4 cCONS b3 cCONS b2 cCONS b6 cCONS b5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 b4 b0 c==> c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0 c==> creal_le creal_of_num cNUMERAL c_0 chl b0 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl b0 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b3 b2 b3 c==> c= b3 b2 c==> cbarV b1 cNUMERAL cBIT1 c_0 b0 c==> c~ c= cCARD * part cset_of_list b0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b7 cbarV b7 b7 b7 c/\ c= cLENGTH b7 c+ b7 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b7 c+ b7 cNUMERAL cBIT1 c_0 cF
- |- ((_3511233 = _3511235) ==> ((~ (_3511234 = _3511236)) \/ ((_3511233 + _3511234) = (_3511235 + _3511236))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c+ f0 f2 c+ f1 f3
- (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) |- (((real_lt (real_of_num (NUMERAL _0))) (hl vl)) = F)
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c= creal_lt creal_of_num cNUMERAL c_0 chl f0 cF
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0)))) |- (((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (!V. (!r. (!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))))))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 ! ! ! c==> c? / c/\ cbarV b0 b3 b2 c<= b1 b3 cbarV b0 b1 ctruncate_simplex b1 b2
- ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1) |- ((~ ((CARD (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ul))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) = (~ ((CARD (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c= c~ c= cCARD * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ c= cCARD * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((\u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) u1) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> * / c? / c? / c= f1 cCONS f2 cCONS b0 cCONS b1 cCONS b2 cNIL f3 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
- ((real_lt (real_of_num (NUMERAL _0))) (hl vl)) |- (((real_lt (real_of_num (NUMERAL _0))) (hl vl)) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 chl f0 c= creal_lt creal_of_num cNUMERAL c_0 chl f0 cT
- ((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) vl) |- (((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) vl) /\ (?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)))
T c==> * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 f1 c/\ * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 f1 c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0
+ ((packing V) /\ (((barV V) k) ul)) |- (((packing V) /\ (((barV V) k) ul)) /\ ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))))
T c==> c/\ cpacking f0 cbarV f0 f1 f2 c/\ c/\ cpacking f0 cbarV f0 f1 f2 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c= chl f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
+ (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))))))))))))
T c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
+ |- ((((~ ((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (u0 $ i)) (u1 $ i))) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i)))) ==> F) ==> ((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (u0 $ i)) (u1 $ i))) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i)))) = ((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (u0 $ i)) (u1 $ i))) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i))))
T c= c==> c==> c~ c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f0 f1 c$ f2 f1 cF c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f0 f1 c$ f2 f1 c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f0 f1 c$ f2 f1
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- ((\u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))))))) u3)
T * / ! c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS b1 cCONS b0 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f4 c==> c= chl f4 cdistance c, ccircumcenter * part cset_of_list f4 cHD f4 c==> creal_le creal_of_num cNUMERAL c_0 chl f4 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f4 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f4 c==> c~ c= cCARD * part cset_of_list f4 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b2 cbarV b2 b4 b3 c/\ c= cLENGTH b3 c+ b4 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b3 c+ b4 cNUMERAL cBIT1 c_0 cF f5
+ (~ ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((hl vl) = (real_of_num (NUMERAL _0)))))))))))) |- ((~ ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((hl vl) = (real_of_num (NUMERAL _0)))))))))))) /\ F)
T c==> c~ c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c= chl f6 creal_of_num cNUMERAL c_0 c/\ c~ c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c= chl f6 creal_of_num cNUMERAL c_0 cF
+ |- (((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> F) = ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0)))))
T c= c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cF c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) ==> (((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)))
T c==> c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF
- (_3511219 = _3511222), (_3511220 = _3511223), (_3511221 = _3511224) |- ((((((barV _3511219) _3511220) _3511221) = (((barV _3511222) _3511223) _3511224)) ==> ((((barV _3511222) _3511223) _3511224) \/ (~ (((barV _3511219) _3511220) _3511221)))) = ((((barV _3511222) _3511223) _3511224) \/ (~ (((barV _3511219) _3511220) _3511221))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= cbarV f0 f2 f4 cbarV f1 f3 f5 c\/ cbarV f1 f3 f5 c~ cbarV f0 f2 f4 c\/ cbarV f1 f3 f5 c~ cbarV f0 f2 f4
- (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) /\ ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> c? / c? / c? / c= f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL c==> cpacking f2 c==> csaturated f2 c==> cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 f0 c/\ c? / c? / c? / c= f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0
+ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((\k. ((((barV V) k) ul) /\ ((NUMERAL (BIT1 _0)) <= k))) (NUMERAL (BIT1 (BIT1 _0))))
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 * / c/\ cbarV f0 b0 f1 c<= cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT1 c_0
- (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))), (~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))), (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), (((barV V) (NUMERAL (BIT1 _0))) vl) |- ((~ F) ==> F)
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> cpacking f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= f3 f4 c==> cbarV f1 cNUMERAL cBIT1 c_0 f0 c==> c~ cF cF
+ (((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 cF
+ (~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))), (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), (((barV V) (NUMERAL (BIT1 _0))) vl) |- (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))))
T c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> cpacking f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= f3 f4 c==> cbarV f1 cNUMERAL cBIT1 c_0 f0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
- |- ((_3511267 = _3511268) ==> ((distance _3511267) = (distance _3511268)))
T c==> c= f0 f1 c= cdistance f0 cdistance f1
- (u0 = u1) |- ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) = (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u1) u1)) = u1))
T c==> c= f0 f1 c= c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 f1 f0 c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f1 f1
+ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0)))), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1) |- F
T c==> c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f0 c==> c= f2 f3 cF
- |- ((~ (_3511215 = _3511217)) \/ ((~ (_3511216 = _3511218)) \/ (((real_le _3511217) _3511218) \/ (~ ((real_le _3511215) _3511216)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
+ ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (hl vl))) (real_of_num (NUMERAL _0)))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 chl f6 creal_of_num cNUMERAL c_0
- (_3511246 = _3511248) |- ((_3511245 = _3511247) ==> (((% _3511245) _3511246) = ((% _3511247) _3511248)))
T c==> c= f0 f1 c==> c= f2 f3 c= c% f2 f0 c% f3 f1
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (!u1. (((\u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) u1) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 ! c==> * / c? / c? / c= f1 cCONS f2 cCONS b1 cCONS b1 cCONS b2 cNIL b0 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
- |- ((_3511261 = _3511262) ==> ((HD _3511261) = (HD _3511262)))
T c==> c= f0 f1 c= cHD f0 cHD f1
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), ((real_le (real_of_num (NUMERAL _0))) (hl vl)) |- ((real_le (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f5 c==> c= f1 f2 c==> creal_le creal_of_num cNUMERAL c_0 chl f5 creal_le creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL
- (u0 = u1) |- ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) = (~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))))
T c==> c= f0 f1 c= c~ c= cCARD * part cset_of_list f2 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ c= cCARD * part cset_of_list f2 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (saturated V), ((saturated V) /\ ((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) |- ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))
T c==> csaturated f0 c==> c/\ csaturated f0 c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ |- ((((\k. ((packing V) /\ (((barV V) k) ul))) k) ==> ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) = T)
T c= c==> * / c/\ cpacking f0 cbarV f0 b0 f1 f2 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c= chl f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((hl vl) = (real_of_num (NUMERAL _0)))))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c= chl f6 creal_of_num cNUMERAL c_0
+ (u0 = u1) |- ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) = (ul = ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))
T c==> c= f0 f1 c= c= f2 cCONS f0 cCONS f1 cCONS f3 cCONS f4 cNIL c= f2 cCONS f1 cCONS f1 cCONS f3 cCONS f4 cNIL
+ |- ((real_neg ((real_sub (u0 $ i)) (u1 $ i))) = ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i)))
T c= creal_neg creal_sub c$ f0 f1 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) |- ((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((CARD (set_of_list _3511131)) = (_3511132 + (NUMERAL (BIT1 _0))))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c\/ c~ cpacking f0 c\/ c~ cbarV f0 f1 f2 c= cCARD * part cset_of_list f2 c+ f1 cNUMERAL cBIT1 c_0
- |- ((~ (_3511263 = _3511265)) \/ ((~ (_3511264 = _3511266)) \/ ((_3511263 , _3511264) = (_3511265 , _3511266))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- (((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) |- ((((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) /\ (((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)))
T c==> c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c/\ c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF
- (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))
T c==> c? / c? / c? / c= f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL c==> cpacking f2 c==> csaturated f2 c==> cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 f0 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0
+ (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) |- (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) /\ (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))))))))))))
T c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c/\ c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
+ ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0)))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0
+ (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) |- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = ((CONS u0) ((CONS u1) NIL)))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 cCONS f1 cCONS f2 cNIL
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (!u2. (((\u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) u2) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 ! c==> * / c? / c= f1 cCONS f2 cCONS f3 cCONS b1 cCONS b1 cNIL b0 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ |- ((((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) NIL)))) = ((CONS a) ((CONS b) NIL))) /\ (((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) ((CONS d) NIL))))) = ((CONS a) ((CONS b) NIL))))
T c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS f0 cCONS f1 cNIL c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f0 cCONS f1 cNIL
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((?u0. (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c? / c? / c? / c? / c= f1 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ |- (((!a. (!b. ((midpoint (a , b)) = ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add a) b))))) ==> ((\a. (!b. ((midpoint (a , b)) = ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add a) b))))) a)) = ((\a. (!b. ((midpoint (a , b)) = ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add a) b))))) a))
T c= c==> ! ! c= cmidpoint c, b0 b1 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b0 b1 * / ! c= cmidpoint c, b0 b1 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b0 b1 f0 * / ! c= cmidpoint c, b0 b1 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b0 b1 f0
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF
- |- ((~ (_3511273 = _3511275)) \/ ((~ (_3511274 = _3511276)) \/ (((CONS _3511273) _3511274) = ((CONS _3511275) _3511276))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
+ (packing V), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((\k. ((packing V) /\ (((barV V) k) vl))) (NUMERAL (BIT1 _0)))
T c==> cpacking f0 c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f2 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 * / c/\ cpacking f0 cbarV f0 b0 f2 cNUMERAL cBIT1 c_0
+ (!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) |- ((?V. (?k. ((packing V) /\ (((barV V) k) ul)))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c==> c? / c? / c/\ cpacking b0 cbarV b0 b1 f0 c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1) |- (((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((CARD (set_of_list _3511131)) = (_3511132 + (NUMERAL (BIT1 _0)))))) = ((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((CARD (set_of_list _3511131)) = (_3511132 + (NUMERAL (BIT1 _0)))))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c= c\/ c~ cpacking f5 c\/ c~ cbarV f5 f6 f7 c= cCARD * part cset_of_list f7 c+ f6 cNUMERAL cBIT1 c_0 c\/ c~ cpacking f5 c\/ c~ cbarV f5 f6 f7 c= cCARD * part cset_of_list f7 c+ f6 cNUMERAL cBIT1 c_0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0)))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0
+ |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) vl) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 b0 f6 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ (~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1) |- (((CARD (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0)))) ==> F)
T c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f0 c==> c= f2 f3 c==> c= cCARD * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f3 cCONS f3 cCONS f4 cCONS f5 cNIL c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cF
- (_3511215 = _3511217) |- ((_3511215 = _3511217) /\ ((~ (_3511216 = _3511218)) \/ (((real_le _3511217) _3511218) \/ (~ ((real_le _3511215) _3511216)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
- |- ((_3511219 = _3511222) ==> ((~ (_3511221 = _3511224)) \/ ((~ (_3511220 = _3511223)) \/ ((((barV _3511222) _3511223) _3511224) \/ (~ (((barV _3511219) _3511220) _3511221))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((barV V) (NUMERAL (BIT1 _0))) vl)
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c==> cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 f0 cbarV f2 cNUMERAL cBIT1 c_0 f1
+ ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0)))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0
- (_3511215 = _3511217) |- ((_3511216 = _3511218) ==> (((real_le _3511217) _3511218) \/ (~ ((real_le _3511215) _3511216))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
+ (packing V), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((packing V) /\ (((barV V) (NUMERAL (BIT1 _0))) vl))
T c==> cpacking f0 c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f2 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 c_0 f2
+ |- ((\vl. ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) vl)
T * / c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl b0 cF f0
+ (packing V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))))))))))))))
T c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
+ |- ((\y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y))) y)
T * / c= c= cdistance c, f0 b0 creal_of_num cNUMERAL c_0 c= f0 b0 f1
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((\u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) u2) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> * / c? / c= f1 cCONS f2 cCONS f3 cCONS b0 cCONS b1 cNIL f4 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
- (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))), (~ ((CARD (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))), (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), (((barV V) (NUMERAL (BIT1 _0))) vl) |- ((~ ((CARD (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) /\ ((CARD (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0)))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c==> c~ c= cCARD * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f0 cCONS f1 cCONS f2 cNIL c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> cpacking f3 c==> c= f4 cCONS f5 cCONS f0 cCONS f1 cCONS f2 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f4 f6 c==> c= f5 f0 c==> cbarV f3 cNUMERAL cBIT1 c_0 f6 c/\ c~ c= cCARD * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f0 cCONS f1 cCONS f2 cNIL c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f0 cCONS f1 cCONS f2 cNIL c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), ((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) |- ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
- (_3511245 = _3511247), (_3511246 = _3511248) |- ((_3511245 = _3511247) /\ (((% _3511245) _3511246) = ((% _3511247) _3511248)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= c% f0 f2 c% f1 f3
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) = ((\t. (t \/ (~ t))) ((real_lt (real_of_num (NUMERAL _0))) (hl vl))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 creal_lt creal_of_num cNUMERAL c_0 chl f0 * / c\/ b0 c~ b0 creal_lt creal_of_num cNUMERAL c_0 chl f0
+ |- ((!x. ((x IN (u1 INSERT (u1 INSERT EMPTY))) = (x IN (u1 INSERT EMPTY)))) = ((u1 INSERT (u1 INSERT EMPTY)) = (u1 INSERT EMPTY)))
T c= ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f0 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY c= * * part cINSERT f0 * * part cINSERT f0 part cEMPTY * * part cINSERT f0 part cEMPTY
- ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) |- (((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) /\ ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F))
T c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c/\ c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF
+ (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) \/ ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0)))))))))))) |- F
T c==> c\/ c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 cF
+ (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) |- ((((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) = ((CONS u0) ((CONS u1) NIL))) = (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = ((CONS u0) ((CONS u1) NIL))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c= c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL cCONS f1 cCONS f2 cNIL c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 cCONS f1 cCONS f2 cNIL
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((?k. ((((barV V) k) ul) /\ ((NUMERAL (BIT1 _0)) <= k))) ==> (((barV V) (NUMERAL (BIT1 _0))) ((truncate_simplex (NUMERAL (BIT1 _0))) ul))) = (((barV V) (NUMERAL (BIT1 _0))) ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c==> c? / c/\ cbarV f0 b0 f1 c<= cNUMERAL cBIT1 c_0 b0 cbarV f0 cNUMERAL cBIT1 c_0 ctruncate_simplex cNUMERAL cBIT1 c_0 f1 cbarV f0 cNUMERAL cBIT1 c_0 ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) $ i) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2 f0 c$ f1 f0 c= c$ f1 f0 c$ f2 f0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0
+ (!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) |- ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) /\ (!ul. ((?V. (?k. ((packing V) /\ (((barV V) k) ul)))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c/\ ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 ! c==> c? / c? / c/\ cpacking b1 cbarV b1 b2 b0 c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) $ i) = (u0 $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((u0 $ i) = (u1 $ i)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 f1 b0 c$ f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
+ ((\u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) u1) |- (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))
T c==> * / c? / c? / c= f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL f2 c? / c? / c= f0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL
+ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((barV V) (NUMERAL (BIT1 _0))) ((truncate_simplex (NUMERAL (BIT1 _0))) ul))
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 cbarV f0 cNUMERAL cBIT1 c_0 ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 ! ! ! c==> c/\ cbarV f0 b1 b2 c<= b0 b1 cbarV f0 b0 ctruncate_simplex b0 b2
+ |- ((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (u0 $ i)) (u1 $ i))) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i)))
T c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f0 f1 c$ f2 f1
+ (!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) |- (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 ! c==> c/\ cpacking f0 cbarV f0 f1 b0 c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c? / c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS b0 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- (((real_le (real_of_num (NUMERAL _0))) (hl vl)) = ((real_le (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c= creal_le creal_of_num cNUMERAL c_0 chl f1 creal_le creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- |- ((_3511241 = _3511243) ==> ((~ (_3511242 = _3511244)) \/ (((vector_add _3511241) _3511242) = ((vector_add _3511243) _3511244))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
+ |- (T = (((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((CARD (set_of_list _3511131)) = (_3511132 + (NUMERAL (BIT1 _0)))))) = (((CARD (set_of_list _3511131)) = (_3511132 + (NUMERAL (BIT1 _0)))) \/ ((~ (packing _3511130)) \/ (~ (((barV _3511130) _3511132) _3511131))))))
T c= cT c= c\/ c~ cpacking f0 c\/ c~ cbarV f0 f1 f2 c= cCARD * part cset_of_list f2 c+ f1 cNUMERAL cBIT1 c_0 c\/ c= cCARD * part cset_of_list f2 c+ f1 cNUMERAL cBIT1 c_0 c\/ c~ cpacking f0 c~ cbarV f0 f1 f2
+ (saturated V) |- ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((hl vl) = (real_of_num (NUMERAL _0))))))))))
T c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c= chl f6 creal_of_num cNUMERAL c_0
- (_3511233 = _3511235), (_3511234 = _3511236) |- ((_3511234 = _3511236) /\ ((_3511233 + _3511234) = (_3511235 + _3511236)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c+ f0 f2 c+ f1 f3
- (_3511233 = _3511235) |- ((_3511233 = _3511235) /\ ((~ (_3511234 = _3511236)) \/ ((_3511233 + _3511234) = (_3511235 + _3511236))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c+ f0 f2 c+ f1 f3
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ ((\u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) u1) |- (((?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))) = ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> * / c? / c? / c= f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL f2 c= c==> c? / c? / c= f0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- |- ((!k. ((P k) \/ Q)) = ((!k. (P k)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- (((!x. (((\k. ((packing V) /\ (((barV V) k) ul))) x) ==> ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))))) ==> ((?k. ((packing V) /\ (((barV V) k) ul))) ==> ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))))) = ((?k. ((packing V) /\ (((barV V) k) ul))) ==> ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))
T c= c==> ! c==> * / c/\ cpacking f0 cbarV f0 b1 f1 b0 c==> ! ! ! c==> c/\ cpacking b1 cbarV b1 b2 b3 c= chl b3 cdistance c, ccircumcenter * part cset_of_list b3 cHD b3 c= chl f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 c==> c? / c/\ cpacking f0 cbarV f0 b0 f1 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c= chl f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 c==> c? / c/\ cpacking f0 cbarV f0 b0 f1 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c= chl f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1
+ |- ((\ul. (!u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F)))))))))))))))) ul)
T * / ! ! c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c= b0 cCONS f1 cCONS f2 cCONS b2 cCONS b1 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 b0 f3 c==> c= chl f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3 c==> creal_le creal_of_num cNUMERAL c_0 chl f3 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f3 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f2 f1 c==> c= f1 f2 c==> cbarV f0 cNUMERAL cBIT1 c_0 f3 c==> c~ c= cCARD * part cset_of_list f3 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b3 cbarV b3 b4 b4 c/\ c= cLENGTH b4 c+ b4 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b4 c+ b4 cNUMERAL cBIT1 c_0 cF f4
- (~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) |- ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) /\ F)
T c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 c/\ c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF
+ |- ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))
T c==> c? / c/\ cbarV f0 b0 f1 c<= f2 b0 cbarV f0 f2 ctruncate_simplex f2 f1
+ ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) |- ((real_le (real_of_num (NUMERAL _0))) (hl vl))
T c==> c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 creal_le creal_of_num cNUMERAL c_0 chl f0
- (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1) |- (~ ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f0 c==> c= f2 f3 c~ creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f3 cCONS f3 cCONS f4 cCONS f5 cNIL
+ |- ((\x. ((CARD (x INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) x)
T * / c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 f0
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) |- ((\ul. (!k. ((((~ (packing _3511130)) \/ (~ (((barV _3511130) k) ul))) \/ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) /\ (((~ (packing _3511130)) \/ (~ (((barV _3511130) k) ul))) \/ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))) _3511131)
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 * / ! c/\ c\/ c\/ c~ cpacking f0 c~ cbarV f0 b1 b0 c= cLENGTH b0 c+ b1 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking f0 c~ cbarV f0 b1 b0 c= cCARD * part cset_of_list b0 c+ b1 cNUMERAL cBIT1 c_0 f1
+ ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) |- ((real_lt (real_of_num (NUMERAL _0))) (hl vl))
T c==> c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 creal_lt creal_of_num cNUMERAL c_0 chl f0 creal_lt creal_of_num cNUMERAL c_0 chl f0
+ (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) |- ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) /\ ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))))))))
T c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c/\ c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
+ |- (((!b. ((midpoint (a , b)) = ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add a) b)))) ==> ((\b. ((midpoint (a , b)) = ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add a) b)))) b)) = ((\b. ((midpoint (a , b)) = ((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add a) b)))) b))
T c= c==> ! c= cmidpoint c, f0 b0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 b0 * / c= cmidpoint c, f0 b0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 b0 f1 * / c= cmidpoint c, f0 b0 c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 b0 f1
+ |- (((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) = (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl))))
T c= c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- (!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl))))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 ! c==> c? / c/\ cbarV f0 b1 b0 c<= f1 b1 cbarV f0 f1 ctruncate_simplex f1 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (u0 $ i)) (u1 $ i))) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i))) = ((((lambdai. ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((lambdai. ((real_add (u0 $ i)) (u1 $ i))) $ i))) $ i) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add c$ f1 f0 c$ f2 f0 c$ f1 f0 c= c$ f1 f0 c$ f2 f0 c==> c= c$ clambda / creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ clambda / creal_add c$ f1 b1 c$ f2 b1 b0 f0 c$ f1 f0 c= c$ f1 f0 c$ f2 f0
+ (packing V), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (?k. ((packing V) /\ (((barV V) k) vl)))
T c==> cpacking f0 c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f2 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c? / c/\ cpacking f0 cbarV f0 b0 f2
+ (?k. ((((barV V) k) zl) /\ (r <= k))) |- ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl)))
T c==> c? / c/\ cbarV f0 b0 f1 c<= f2 b0 c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 cbarV f0 f2 ctruncate_simplex f2 f1
- |- (T = (((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) = ((CONS u0) ((CONS u1) NIL))))
T c= cT c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cCONS f3 cNIL cCONS f0 cCONS f1 cNIL
+ F |- ((real_lt (real_of_num (NUMERAL _0))) (hl vl))
T c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0
- |- (((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))))) ==> ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))))))
T c==> c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))))) ==> ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F)))))))))))))) = ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))))))
T c= c==> c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF
+ ((\V. (?k. ((packing V) /\ (((barV V) k) ul)))) V) |- (?k. ((packing V) /\ (((barV V) k) ul)))
T c==> * / c? / c/\ cpacking b0 cbarV b0 b1 f0 f1 c? / c/\ cpacking f1 cbarV f1 b0 f0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((\u0. (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))) u0) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> * / c? / c? / c? / c= f1 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL f2 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), (u0 = u1), (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0), ((real_le (real_of_num (NUMERAL _0))) (hl vl)), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F)))
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> cpacking f1 c==> csaturated f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> c= f3 f4 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f3 f4 f3 c==> creal_le creal_of_num cNUMERAL c_0 chl f0 c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> cbarV f1 cNUMERAL cBIT1 c_0 f0 c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF
+ ((real_lt (real_of_num (NUMERAL _0))) (hl vl)) |- (((real_lt (real_of_num (NUMERAL _0))) (hl vl)) /\ ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))
T c==> creal_lt creal_of_num cNUMERAL c_0 chl f0 c/\ creal_lt creal_of_num cNUMERAL c_0 chl f0 creal_lt creal_of_num cNUMERAL c_0 chl f0
+ (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), (u0 = u1), (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0), ((real_le (real_of_num (NUMERAL _0))) (hl vl)), (((barV V) (NUMERAL (BIT1 _0))) vl), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> cpacking f1 c==> csaturated f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> c= f3 f4 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f3 f4 f3 c==> creal_le creal_of_num cNUMERAL c_0 chl f0 c==> cbarV f1 cNUMERAL cBIT1 c_0 f0 c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF
+ |- ((~ (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0)) = (~ ((circumcenter (set_of_list ((CONS u0) ((CONS u1) NIL)))) = (HD ((CONS u0) ((CONS u1) NIL))))))
T c= c~ c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 f1 f0 c~ c= ccircumcenter * part cset_of_list cCONS f0 cCONS f1 cNIL cHD cCONS f0 cCONS f1 cNIL
+ (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1) |- ((((barV V) (NUMERAL (BIT1 _0))) ((truncate_simplex (NUMERAL (BIT1 _0))) ul)) = (((barV V) (NUMERAL (BIT1 _0))) ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c= cbarV f5 cNUMERAL cBIT1 c_0 ctruncate_simplex cNUMERAL cBIT1 c_0 f0 cbarV f5 cNUMERAL cBIT1 c_0 ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL
+ (!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) |- ((\ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) ul)
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 * / c==> c/\ cpacking f0 cbarV f0 f1 b0 c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0 f2
+ |- (((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((\x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) x)) = ((\x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) x))
T c= c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 * / ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 f0 * / ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 f0
+ (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), ((real_le (real_of_num (NUMERAL _0))) (hl vl)), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (~ ((distance ((circumcenter (set_of_list vl)) , (HD vl))) = (real_of_num (NUMERAL _0))))
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> cpacking f1 c==> csaturated f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> creal_le creal_of_num cNUMERAL c_0 chl f0 c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c~ c= cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 creal_of_num cNUMERAL c_0
+ |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) |- (((!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) ==> ((\ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) ul)) = ((\ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) ul))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c= c==> ! c==> c/\ cpacking f0 cbarV f0 f1 b0 c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0 * / c==> c/\ cpacking f0 cbarV f0 f1 b0 c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0 f2 * / c==> c/\ cpacking f0 cbarV f0 f1 b0 c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0 f2
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), (((barV V) (NUMERAL (BIT1 _0))) vl) |- ((packing V) /\ (((barV V) (NUMERAL (BIT1 _0))) ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))
T c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 c_0 ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f3 cCONS f3 cCONS f4 cCONS f5 cNIL
+ ((\u0. (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))) u0) |- (((?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))) = ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> * / c? / c? / c? / c= f0 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL f1 c= c==> c? / c? / c? / c= f0 cCONS f1 cCONS b0 cCONS b1 cCONS b2 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- (_3511274 = _3511276), (_3511273 = _3511275) |- ((_3511274 = _3511276) /\ (((CONS _3511273) _3511274) = ((CONS _3511275) _3511276)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cCONS f2 f0 cCONS f3 f1
+ (saturated V), ((packing V) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)) |- ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))
T c==> csaturated f0 c==> c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ (!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) |- ((\V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) V)
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 * / ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 f0
+ |- (T = (~ ((NUMERAL (BIT1 _0)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))))
T c= cT c~ c= cNUMERAL cBIT1 c_0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((~ (_3511227 = _3511228)) \/ ((saturated _3511228) \/ (~ (saturated _3511227))))
T c\/ c~ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))), (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), (((barV V) (NUMERAL (BIT1 _0))) vl) |- ((CARD (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c= cCARD * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f3 cCONS f3 cCONS f4 cCONS f5 cNIL c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) $ i) = (u0 $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((u0 $ i) = (u1 $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) $ i) = (u0 $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((u0 $ i) = (u1 $ i))))))
T c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 f1 b0 c$ f0 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 f1 b0 c$ f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
+ ((\k. ((packing V) /\ (((barV V) k) ul))) k) |- ((packing V) /\ (((barV V) k) ul))
T c==> * / c/\ cpacking f0 cbarV f0 b0 f1 f2 c/\ cpacking f0 cbarV f0 f2 f1
- (_3511219 = _3511222), (_3511221 = _3511224) |- ((_3511220 = _3511223) ==> ((((barV _3511222) _3511223) _3511224) \/ (~ (((barV _3511219) _3511220) _3511221))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl)))))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 ! ! c==> c/\ cbarV f0 b0 b1 c<= f1 b0 cbarV f0 f1 ctruncate_simplex f1 b1
- |- ((_3511258 = _3511260) ==> ((~ (_3511257 = _3511259)) \/ (((truncate_simplex _3511257) _3511258) = ((truncate_simplex _3511259) _3511260))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= ctruncate_simplex f2 f0 ctruncate_simplex f3 f1
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul), ((\u0. (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))) u0) |- (((\u0. (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))) u0) /\ ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> * / c? / c? / c? / c= f1 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL f2 c/\ * / c? / c? / c? / c= f1 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL f2 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ |- (((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 cF
+ |- ((\c. (!d. ((((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) NIL))) = ((CONS a) ((CONS b) NIL))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) NIL)))) = ((CONS a) ((CONS b) NIL))) /\ (((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) ((CONS d) NIL))))) = ((CONS a) ((CONS b) NIL))))))) c)
T * / ! c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL cCONS f0 cCONS f1 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS b0 cNIL cCONS f0 cCONS f1 cNIL c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS b0 cCONS b1 cNIL cCONS f0 cCONS f1 cNIL f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (_3511255 = _3511256)) \/ ((circumcenter _3511255) = (circumcenter _3511256)))
T c\/ c~ c= f0 f1 c= ccircumcenter f0 ccircumcenter f1
+ |- (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) ==> F)
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 cF
- (_3511271 = _3511272) |- ((_3511271 = _3511272) /\ ((NUMERAL _3511271) = (NUMERAL _3511272)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- ((~ (_3511258 = _3511260)) \/ ((~ (_3511257 = _3511259)) \/ (((truncate_simplex _3511257) _3511258) = ((truncate_simplex _3511259) _3511260))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= ctruncate_simplex f2 f0 ctruncate_simplex f3 f1
+ (packing V), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((?V. (?k. ((packing V) /\ (((barV V) k) vl)))) ==> ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl))))) = ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))))
T c==> cpacking f0 c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f2 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c==> c? / c? / c/\ cpacking b0 cbarV b0 b1 f2 c= chl f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2 c= chl f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- (((!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl)))) ==> ((\zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl)))) zl)) = ((\zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl)))) zl))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 c= c==> ! c==> c/\ cbarV f0 f1 b0 c<= f2 f1 cbarV f0 f2 ctruncate_simplex f2 b0 * / c==> c/\ cbarV f0 f1 b0 c<= f2 f1 cbarV f0 f2 ctruncate_simplex f2 b0 f3 * / c==> c/\ cbarV f0 f1 b0 c<= f2 f1 cbarV f0 f2 ctruncate_simplex f2 b0 f3
+ (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((hl vl) = (real_of_num (NUMERAL _0))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c= chl f6 creal_of_num cNUMERAL c_0
+ |- ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> (!ul. ((?V. (?k. ((packing V) /\ (((barV V) k) ul)))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 ! c==> c? / c? / c/\ cpacking b1 cbarV b1 b2 b0 c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0
+ |- ((\vl. (!V. (!u1. (!u0. (!ul. (!u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F)))))))))))))))))))) vl)
T * / ! ! ! ! ! ! c==> csaturated b1 c==> cpacking b1 c==> cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 b4 c==> c= b4 cCONS b3 cCONS b2 cCONS b6 cCONS b5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 b4 b0 c==> c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0 c==> creal_le creal_of_num cNUMERAL c_0 chl b0 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl b0 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b3 b2 b3 c==> c= b3 b2 c==> cbarV b1 cNUMERAL cBIT1 c_0 b0 c==> c~ c= cCARD * part cset_of_list b0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b7 cbarV b7 b7 b7 c/\ c= cLENGTH b7 c+ b7 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b7 c+ b7 cNUMERAL cBIT1 c_0 cF f0
+ (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), ((real_le (real_of_num (NUMERAL _0))) (hl vl)), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((real_lt (real_of_num (NUMERAL _0))) (hl vl))
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> cpacking f1 c==> csaturated f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> creal_le creal_of_num cNUMERAL c_0 chl f0 c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f2 creal_lt creal_of_num cNUMERAL c_0 chl f0
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((!x. (((\u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) x) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))) ==> ((?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))) = ((?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c==> ! c==> * / c? / c= f1 cCONS f2 cCONS f3 cCONS b1 cCONS b2 cNIL b0 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1 c==> c? / c? / c= f1 cCONS f2 cCONS f3 cCONS b0 cCONS b1 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1 c==> c? / c? / c= f1 cCONS f2 cCONS f3 cCONS b0 cCONS b1 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (_3511219 = _3511222)) \/ ((~ (_3511221 = _3511224)) \/ ((~ (_3511220 = _3511223)) \/ ((((barV _3511222) _3511223) _3511224) \/ (~ (((barV _3511219) _3511220) _3511221))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
- (_3511211 = _3511213), (_3511212 = _3511214) |- ((_3511212 = _3511214) /\ (((real_lt _3511213) _3511214) \/ (~ ((real_lt _3511211) _3511212))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ creal_lt f1 f3 c~ creal_lt f0 f2
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (_3511269 = _3511270) |- ((_3511269 = _3511270) /\ ((BIT1 _3511269) = (BIT1 _3511270)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (_3511219 = _3511222), (_3511221 = _3511224) |- ((_3511221 = _3511224) /\ ((~ (_3511220 = _3511223)) \/ ((((barV _3511222) _3511223) _3511224) \/ (~ (((barV _3511219) _3511220) _3511221)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
+ (((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0)))) ==> F), (((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 cF
- ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((real_le (real_of_num (NUMERAL _0))) (hl vl)) |- (((real_le (real_of_num (NUMERAL _0))) (hl vl)) /\ ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))))))))))
T c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c/\ creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
+ (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), ((real_le (real_of_num (NUMERAL _0))) (hl vl)), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (~ ((circumcenter (set_of_list vl)) = (HD vl)))
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> cpacking f1 c==> csaturated f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> creal_le creal_of_num cNUMERAL c_0 chl f0 c==> cbarV f1 cNUMERAL cBIT1 cBIT1 c_0 f2 c~ c= ccircumcenter * part cset_of_list f0 cHD f0
+ ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0
+ (packing V) |- ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))))))))))))))
T c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
- |- ((~ (_3511271 = _3511272)) \/ ((NUMERAL _3511271) = (NUMERAL _3511272)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (_3511227 = _3511228) |- ((_3511227 = _3511228) /\ ((saturated _3511228) \/ (~ (saturated _3511227))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
+ |- (((real_le (real_of_num (NUMERAL _0))) (distance (x , y))) = T)
T c= creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1 cT
+ |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((hl vl) = (real_of_num (NUMERAL _0))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c= chl f6 creal_of_num cNUMERAL c_0
+ |- ((((\V. (?k. ((packing V) /\ (((barV V) k) ul)))) V) ==> ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) = T)
T c= c==> * / c? / c/\ cpacking b0 cbarV b0 b1 f0 f1 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 cT
- ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- (((!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y)))) ==> ((\y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y)))) y)) = ((\y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y)))) y))
T c= c==> ! creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 b0 * / creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 b0 f1 * / creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 b0 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- (_3511211 = _3511213) |- ((_3511211 = _3511213) /\ ((~ (_3511212 = _3511214)) \/ (((real_lt _3511213) _3511214) \/ (~ ((real_lt _3511211) _3511212)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_lt f1 f3 c~ creal_lt f0 f2
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), ((real_le (real_of_num (NUMERAL _0))) (hl vl)), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 creal_lt creal_of_num cNUMERAL c_0 chl f6
- ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))))) |- (((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))))) /\ ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))))))
T c==> c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF c/\ c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF
+ (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (((barV V) (NUMERAL (BIT1 _0))) vl) |- (((barV V) (NUMERAL (BIT1 _0))) ((truncate_simplex (NUMERAL (BIT1 _0))) ul))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c==> cbarV f2 cNUMERAL cBIT1 c_0 f1 cbarV f2 cNUMERAL cBIT1 c_0 ctruncate_simplex cNUMERAL cBIT1 c_0 f0
+ |- (((!x. (((\V. (?k. ((packing V) /\ (((barV V) k) ul)))) x) ==> ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))))) ==> ((?V. (?k. ((packing V) /\ (((barV V) k) ul)))) ==> ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))))) = ((?V. (?k. ((packing V) /\ (((barV V) k) ul)))) ==> ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))
T c= c==> ! c==> * / c? / c/\ cpacking b1 cbarV b1 b2 f0 b0 c==> ! ! ! c==> c/\ cpacking b1 cbarV b1 b2 b3 c= chl b3 cdistance c, ccircumcenter * part cset_of_list b3 cHD b3 c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> c? / c? / c/\ cpacking b0 cbarV b0 b1 f0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> c? / c? / c/\ cpacking b0 cbarV b0 b1 f0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c= chl f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0
+ |- (T = (!vl. ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)))
T c= cT ! c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl b0 cF
+ (~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))), (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), (((barV V) (NUMERAL (BIT1 _0))) vl) |- ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) /\ (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))))))
T c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> cpacking f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c==> c= f3 f4 c==> cbarV f1 cNUMERAL cBIT1 c_0 f0 c/\ c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c==> cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 f0 cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) = (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c= cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 f0 cbarV f5 cNUMERAL cBIT1 cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL
- (_3511273 = _3511275) |- ((_3511274 = _3511276) ==> (((CONS _3511273) _3511274) = ((CONS _3511275) _3511276)))
T c==> c= f0 f1 c==> c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((lambdai. ((real_add (u0 $ i)) (u1 $ i))) $ i))) $ i) = (u0 $ i)) ==> ((u0 $ i) = (u1 $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ clambda / creal_add c$ f1 b1 c$ f2 b1 b0 f0 c$ f1 f0 c= c$ f1 f0 c$ f2 f0
+ |- (((packing V) /\ (((barV V) (NUMERAL (BIT1 _0))) vl)) = ((\k. ((packing V) /\ (((barV V) k) vl))) (NUMERAL (BIT1 _0))))
T c= c/\ cpacking f0 cbarV f0 cNUMERAL cBIT1 c_0 f1 * / c/\ cpacking f0 cbarV f0 b0 f1 cNUMERAL cBIT1 c_0
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ |- ((!u1. (!u0. (!ul. (!u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))))))))))))))))))))) = T)
T c= ! ! ! ! ! c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b2 c==> c= b2 cCONS b1 cCONS b0 cCONS b4 cCONS b3 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 b2 f1 c==> c= chl f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 c==> creal_le creal_of_num cNUMERAL c_0 chl f1 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f1 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b1 b0 b1 c==> c= b1 b0 c==> cbarV f0 cNUMERAL cBIT1 c_0 f1 c==> c~ c= cCARD * part cset_of_list f1 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b5 cbarV b5 b6 b6 c/\ c= cLENGTH b6 c+ b6 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b6 c+ b6 cNUMERAL cBIT1 c_0 cT
- (_3511225 = _3511226) |- ((_3511225 = _3511226) /\ ((packing _3511226) \/ (~ (packing _3511225))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
+ (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), ((real_le (real_of_num (NUMERAL _0))) (hl vl)), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 cF
- |- ((_3511271 = _3511272) ==> ((NUMERAL _3511271) = (NUMERAL _3511272)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 cF
+ |- (((!u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))))))) ==> ((\u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))))))) u3)) = ((\u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F))))))))))))))) u3))
T c= c==> ! ! c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS b1 cCONS b0 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f4 c==> c= chl f4 cdistance c, ccircumcenter * part cset_of_list f4 cHD f4 c==> creal_le creal_of_num cNUMERAL c_0 chl f4 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f4 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f4 c==> c~ c= cCARD * part cset_of_list f4 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b2 cbarV b2 b4 b3 c/\ c= cLENGTH b3 c+ b4 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b3 c+ b4 cNUMERAL cBIT1 c_0 cF * / ! c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS b1 cCONS b0 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f4 c==> c= chl f4 cdistance c, ccircumcenter * part cset_of_list f4 cHD f4 c==> creal_le creal_of_num cNUMERAL c_0 chl f4 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f4 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f4 c==> c~ c= cCARD * part cset_of_list f4 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b2 cbarV b2 b4 b3 c/\ c= cLENGTH b3 c+ b4 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b3 c+ b4 cNUMERAL cBIT1 c_0 cF f5 * / ! c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= f1 cCONS f2 cCONS f3 cCONS b1 cCONS b0 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f4 c==> c= chl f4 cdistance c, ccircumcenter * part cset_of_list f4 cHD f4 c==> creal_le creal_of_num cNUMERAL c_0 chl f4 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f4 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f4 c==> c~ c= cCARD * part cset_of_list f4 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b2 cbarV b2 b4 b3 c/\ c= cLENGTH b3 c+ b4 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b3 c+ b4 cNUMERAL cBIT1 c_0 cF f5
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) |- (((packing _3511130) /\ (((barV _3511130) _3511132) _3511131)) ==> ((CARD (set_of_list _3511131)) = (_3511132 + (NUMERAL (BIT1 _0)))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c==> c/\ cpacking f0 cbarV f0 f1 f2 c= cCARD * part cset_of_list f2 c+ f1 cNUMERAL cBIT1 c_0
- |- ((~ (_3511267 = _3511268)) \/ ((distance _3511267) = (distance _3511268)))
T c\/ c~ c= f0 f1 c= cdistance f0 cdistance f1
+ |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\u1. (!u0. (!ul. (!u3. (!u2. ((saturated V) ==> ((packing V) ==> ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) ==> ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) ==> ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) ==> F)))))))))))))))))) u1)
T * / ! ! ! ! c==> csaturated f0 c==> cpacking f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b2 c==> c= b2 cCONS b1 cCONS b0 cCONS b4 cCONS b3 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 b2 f1 c==> c= chl f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 c==> creal_le creal_of_num cNUMERAL c_0 chl f1 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f1 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add b1 b0 b1 c==> c= b1 b0 c==> cbarV f0 cNUMERAL cBIT1 c_0 f1 c==> c~ c= cCARD * part cset_of_list f1 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> ! ! ! c==> c/\ cpacking b5 cbarV b5 b6 b6 c/\ c= cLENGTH b6 c+ b6 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b6 c+ b6 cNUMERAL cBIT1 c_0 cF f2
+ (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) |- ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) ==> (((real_le (real_of_num (NUMERAL _0))) (hl vl)) ==> ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))))))))))))))
T c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= chl f6 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 c==> creal_le creal_of_num cNUMERAL c_0 chl f6 c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f6 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f3 f2 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list f6 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
- (_3511233 = _3511235) |- ((_3511234 = _3511236) ==> ((_3511233 + _3511234) = (_3511235 + _3511236)))
T c==> c= f0 f1 c==> c= f2 f3 c= c+ f0 f2 c+ f1 f3
- (_3511241 = _3511243), (_3511242 = _3511244) |- ((_3511242 = _3511244) /\ (((vector_add _3511241) _3511242) = ((vector_add _3511243) _3511244)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- ((_3511246 = _3511248) ==> ((~ (_3511245 = _3511247)) \/ (((% _3511245) _3511246) = ((% _3511247) _3511248))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
+ ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (((real_lt (real_of_num (NUMERAL _0))) (hl vl)) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) |- ((real_lt (real_of_num (NUMERAL _0))) (hl vl))
T c==> c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> c==> creal_lt creal_of_num cNUMERAL c_0 chl f0 creal_lt creal_of_num cNUMERAL c_0 chl f0 creal_lt creal_of_num cNUMERAL c_0 chl f0
+ |- (((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u0 $ i))) (u1 $ i))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ (packing V), (saturated V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul), ((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) vl) |- (((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) vl) /\ ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 b0 f6 c/\ * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 b0 f6 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
+ (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))) /\ ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) ==> ((u0 = u1) ==> ((((barV V) (NUMERAL (BIT1 _0))) vl) ==> ((~ ((CARD (set_of_list vl)) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> (~ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))))))))))
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> cpacking f1 c==> c= f2 cCONS f3 cCONS f4 cCONS f5 cCONS f6 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f0 c/\ c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f3 f4 f3 c==> c= f3 f4 c==> cbarV f1 cNUMERAL cBIT1 c_0 f0 c==> c~ c= cCARD * part cset_of_list f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0
- |- ((~ (_3511239 = _3511240)) \/ ((real_inv _3511239) = (real_inv _3511240)))
T c\/ c~ c= f0 f1 c= creal_inv f0 creal_inv f1
- |- (((real_gt (hl vl)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0)))))
T c= creal_gt chl f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt chl f0 creal_of_num cNUMERAL c_0
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((!x. (((\u0. (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))) x) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))) ==> ((?u0. (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))) = ((?u0. (?u1. (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))) ==> ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))))
T c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c==> ! c==> * / c? / c? / c? / c= f1 cCONS b1 cCONS b2 cCONS b3 cCONS b4 cNIL b0 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1 c==> c? / c? / c? / c? / c= f1 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1 c==> c? / c? / c? / c? / c= f1 cCONS b0 cCONS b1 cCONS b2 cCONS b3 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1) |- (((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((LENGTH _3511131) = (_3511132 + (NUMERAL (BIT1 _0)))))) = ((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((LENGTH _3511131) = (_3511132 + (NUMERAL (BIT1 _0)))))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c= c\/ c~ cpacking f5 c\/ c~ cbarV f5 f6 f7 c= cLENGTH f7 c+ f6 cNUMERAL cBIT1 c_0 c\/ c~ cpacking f5 c\/ c~ cbarV f5 f6 f7 c= cLENGTH f7 c+ f6 cNUMERAL cBIT1 c_0
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))), (u0 = u1) |- ((hl ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = (distance ((circumcenter (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) , (HD ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f5 c==> c= chl f5 cdistance c, ccircumcenter * part cset_of_list f5 cHD f5 c==> c= f1 f2 c= chl ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL cHD ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL
- (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) |- ((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((LENGTH _3511131) = (_3511132 + (NUMERAL (BIT1 _0))))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c\/ c~ cpacking f0 c\/ c~ cbarV f0 f1 f2 c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), (((barV V) (NUMERAL (BIT1 _0))) vl) |- ((~ (((barV V) (NUMERAL (BIT1 _0))) ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) ==> (((barV V) (NUMERAL (BIT1 _0))) ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f5 c==> c= f1 f2 c==> cbarV f6 cNUMERAL cBIT1 c_0 f5 c==> c~ cbarV f6 cNUMERAL cBIT1 c_0 ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL cbarV f6 cNUMERAL cBIT1 c_0 ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL
- (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) |- ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) /\ (u0 = u1))
T c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 f1 f0 c/\ c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 f1 f0 c= f0 f1
- (_3511261 = _3511262) |- ((_3511261 = _3511262) /\ ((HD _3511261) = (HD _3511262)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cHD f0 cHD f1
- (u0 = u1) |- (F = F)
T c==> c= f0 f1 c= cF cF
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1) |- ((~ ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))) = (~ ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c= c~ creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0 c~ creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL
- (_3511231 = _3511232) |- ((_3511231 = _3511232) /\ ((CARD _3511231) = (CARD _3511232)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cCARD f0 cCARD f1
- |- ((_3511253 = _3511254) ==> ((set_of_list _3511253) = (set_of_list _3511254)))
T c==> c= f0 f1 c= * part cset_of_list f0 * part cset_of_list f1
- (_3511219 = _3511222), (_3511220 = _3511223), (_3511221 = _3511224) |- ((_3511220 = _3511223) /\ ((((barV _3511222) _3511223) _3511224) \/ (~ (((barV _3511219) _3511220) _3511221))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ cbarV f1 f3 f5 c~ cbarV f0 f2 f4
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6
- (_3511255 = _3511256) |- ((_3511255 = _3511256) /\ ((circumcenter _3511255) = (circumcenter _3511256)))
T c==> c= f0 f1 c/\ c= f0 f1 c= ccircumcenter f0 ccircumcenter f1
- |- ((_3511269 = _3511270) ==> ((BIT1 _3511269) = (BIT1 _3511270)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (hl vl)) (real_of_num (NUMERAL _0))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge chl f6 creal_of_num cNUMERAL c_0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- ((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) vl)
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 f1
- (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))), (packing V), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), (((barV V) (NUMERAL (BIT1 _0))) vl) |- ((~ ((CARD (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) ==> ((CARD (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0)))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c==> cpacking f0 c==> c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c==> c= f2 f3 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c==> c~ c= cCARD * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f3 cCONS f3 cCONS f4 cCONS f5 cNIL c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f3 cCONS f3 cCONS f4 cCONS f5 cNIL c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ (?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0
- (u0 = u1) |- ((((barV V) (NUMERAL (BIT1 _0))) vl) = (((barV V) (NUMERAL (BIT1 _0))) vl))
T c==> c= f0 f1 c= cbarV f2 cNUMERAL cBIT1 c_0 f3 cbarV f2 cNUMERAL cBIT1 c_0 f3
- |- ((!k'. (((~ (packing V)) \/ (~ (((barV V) k) ul))) \/ (((LENGTH ul) = (k' + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k' + (NUMERAL (BIT1 _0))))))) = (((~ (packing V)) \/ (~ (((barV V) k) ul))) \/ (!k. (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))
T c= ! c\/ c\/ c~ cpacking f0 c~ cbarV f0 f1 f2 c/\ c= cLENGTH f2 c+ b0 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list f2 c+ b0 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking f0 c~ cbarV f0 f1 f2 ! c/\ c= cLENGTH f2 c+ b0 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list f2 c+ b0 cNUMERAL cBIT1 c_0
- ((real_lt (real_of_num (NUMERAL _0))) (hl vl)) |- (T = ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))
T c==> creal_lt creal_of_num cNUMERAL c_0 chl f0 c= cT creal_lt creal_of_num cNUMERAL c_0 chl f0
- (u0 = u1) |- (((real_le (real_of_num (NUMERAL _0))) (hl vl)) = ((real_le (real_of_num (NUMERAL _0))) (hl vl)))
T c==> c= f0 f1 c= creal_le creal_of_num cNUMERAL c_0 chl f2 creal_le creal_of_num cNUMERAL c_0 chl f2
- (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) /\ ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> c? / c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS b0 cNIL c==> cpacking f4 c==> csaturated f4 c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 f0 c/\ c? / c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS b0 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- |- (F = (~ T))
T c= cF c~ cT
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- (((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((CARD (set_of_list _3511131)) = (_3511132 + (NUMERAL (BIT1 _0)))))) = ((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((CARD (set_of_list _3511131)) = (_3511132 + (NUMERAL (BIT1 _0)))))))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c= c\/ c~ cpacking f2 c\/ c~ cbarV f2 f3 f4 c= cCARD * part cset_of_list f4 c+ f3 cNUMERAL cBIT1 c_0 c\/ c~ cpacking f2 c\/ c~ cbarV f2 f3 f4 c= cCARD * part cset_of_list f4 c+ f3 cNUMERAL cBIT1 c_0
- |- ((!k. (P \/ (Q k))) = (P \/ (!k. (Q k))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (saturated V) |- ((saturated V) = T)
T c==> csaturated f0 c= csaturated f0 cT
- (_3511215 = _3511217), (_3511216 = _3511218) |- (((((real_le _3511215) _3511216) = ((real_le _3511217) _3511218)) ==> (((real_le _3511217) _3511218) \/ (~ ((real_le _3511215) _3511216)))) = (((real_le _3511217) _3511218) \/ (~ ((real_le _3511215) _3511216))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= creal_le f0 f2 creal_le f1 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2 c\/ creal_le f1 f3 c~ creal_le f0 f2
- |- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f0 creal_of_num cNUMERAL c_0
- |- (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (hl vl)) (real_of_num (NUMERAL _0)))))
T c= creal_ge chl f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge chl f0 creal_of_num cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- |- ((((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) vl) ==> (?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl))) = T)
T c= c==> * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 f1 c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 cT
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl)))) (real_of_num (NUMERAL _0)))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0
- |- ((_3511249 = _3511250) ==> ((real_of_num _3511249) = (real_of_num _3511250)))
T c==> c= f0 f1 c= creal_of_num f0 creal_of_num f1
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) = (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c= cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 f0 cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 f0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl)))) (real_of_num (NUMERAL _0)))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0
- (_3511273 = _3511275) |- ((_3511273 = _3511275) /\ ((~ (_3511274 = _3511276)) \/ (((CONS _3511273) _3511274) = ((CONS _3511275) _3511276))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- ((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) vl) |- (((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) ==> (?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl))) = (?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)))
T c==> * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 f1 c= c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0
- (_3511263 = _3511265) |- ((_3511263 = _3511265) /\ ((~ (_3511264 = _3511266)) \/ ((_3511263 , _3511264) = (_3511265 , _3511266))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- ((packing V) = (packing V))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c= cpacking f2 cpacking f2
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) ((CONS c) NIL)))) = ((CONS a) ((CONS b) NIL)))
T c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS f2 cNIL cCONS f0 cCONS f1 cNIL
- (u0 = u1), (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u0) u1)) = u0) |- (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u1) u1)) = u1)
T c==> c= f0 f1 c==> c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f0 f1 f0 c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f1 f1 f1
- (_3511251 = _3511252) |- ((_3511251 = _3511252) /\ ((hl _3511251) = (hl _3511252)))
T c==> c= f0 f1 c/\ c= f0 f1 c= chl f0 chl f1
- |- ((~ T) = F)
T c= c~ cT cF
- (~ ((real_lt (real_of_num (NUMERAL _0))) (hl vl))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- (~ ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> c~ creal_lt creal_of_num cNUMERAL c_0 chl f0 c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f0 c~ creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f1
- (_3511246 = _3511248) |- ((_3511246 = _3511248) /\ ((~ (_3511245 = _3511247)) \/ (((% _3511245) _3511246) = ((% _3511247) _3511248))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((real_le (real_of_num (NUMERAL _0))) (hl vl)) |- ((real_le (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c==> creal_le creal_of_num cNUMERAL c_0 chl f1 creal_le creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- (((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((LENGTH _3511131) = (_3511132 + (NUMERAL (BIT1 _0)))))) = ((~ (packing _3511130)) \/ ((~ (((barV _3511130) _3511132) _3511131)) \/ ((LENGTH _3511131) = (_3511132 + (NUMERAL (BIT1 _0)))))))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c= c\/ c~ cpacking f2 c\/ c~ cbarV f2 f3 f4 c= cLENGTH f4 c+ f3 cNUMERAL cBIT1 c_0 c\/ c~ cpacking f2 c\/ c~ cbarV f2 f3 f4 c= cLENGTH f4 c+ f3 cNUMERAL cBIT1 c_0
- (_3511267 = _3511268) |- ((_3511267 = _3511268) /\ ((distance _3511267) = (distance _3511268)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdistance f0 cdistance f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl)))) (real_of_num (NUMERAL _0))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), ((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) |- ((hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)) = (distance ((circumcenter (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ul))) , (HD ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c==> c= chl f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 c= chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0 cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 f0 cHD ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- |- (((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS a) ((CONS b) NIL))) = ((CONS a) ((CONS b) NIL)))
T c= ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL cCONS f0 cCONS f1 cNIL
- (_3511253 = _3511254) |- ((_3511253 = _3511254) /\ ((set_of_list _3511253) = (set_of_list _3511254)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cset_of_list f0 * part cset_of_list f1
- ((((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (u0 $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (u1 $ i)))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u0 $ i))) ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (u1 $ i)))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f0 f1 creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL
- ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F), (((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) |- (((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) /\ ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F))
T c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c/\ c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF
- |- ((~ (_3511211 = _3511213)) \/ ((~ (_3511212 = _3511214)) \/ (((real_lt _3511213) _3511214) \/ (~ ((real_lt _3511211) _3511212)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_lt f1 f3 c~ creal_lt f0 f2
- |- ((~ (_3511233 = _3511235)) \/ ((~ (_3511234 = _3511236)) \/ ((_3511233 + _3511234) = (_3511235 + _3511236))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c+ f0 f2 c+ f1 f3
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- (((hl vl) = (distance ((circumcenter (set_of_list vl)) , (HD vl)))) = ((hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)) = (distance ((circumcenter (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ul))) , (HD ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c= c= chl f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 c= chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0 cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 f0 cHD ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- ((((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u1) u1)) = u1) = (((% (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((vector_add u1) u1)) = u1))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c= c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f2 f2 c= c% creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add f2 f2 f2
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- ((ul = ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) = (ul = ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c= c= f0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL c= f0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!k. (P k)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- ((real_ge (hl vl)) (real_of_num (NUMERAL _0)))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 creal_ge chl f6 creal_of_num cNUMERAL c_0
- (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))
T c==> c? / c? / c= f0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL c==> cpacking f3 c==> csaturated f3 c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 f0 c/\ c? / c? / c= f0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- |- ((_3511255 = _3511256) ==> ((circumcenter _3511255) = (circumcenter _3511256)))
T c==> c= f0 f1 c= ccircumcenter f0 ccircumcenter f1
- (_3511239 = _3511240) |- ((_3511239 = _3511240) /\ ((real_inv _3511239) = (real_inv _3511240)))
T c==> c= f0 f1 c/\ c= f0 f1 c= creal_inv f0 creal_inv f1
- (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))
T c==> c? / c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS b0 cNIL c==> cpacking f4 c==> csaturated f4 c==> cbarV f4 cNUMERAL cBIT1 cBIT1 c_0 f0 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- (_3511237 = _3511238) |- ((_3511237 = _3511238) /\ ((BIT0 _3511237) = (BIT0 _3511238)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (_3511219 = _3511222), (_3511220 = _3511223), (_3511221 = _3511224) |- ((((barV _3511222) _3511223) _3511224) \/ (~ (((barV _3511219) _3511220) _3511221)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ cbarV f1 f3 f5 c~ cbarV f0 f2 f4
- |- ((~ (_3511246 = _3511248)) \/ ((~ (_3511245 = _3511247)) \/ (((% _3511245) _3511246) = ((% _3511247) _3511248))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
- |- ((_3511239 = _3511240) ==> ((real_inv _3511239) = (real_inv _3511240)))
T c==> c= f0 f1 c= creal_inv f0 creal_inv f1
- (_3511249 = _3511250) |- ((_3511249 = _3511250) /\ ((real_of_num _3511249) = (real_of_num _3511250)))
T c==> c= f0 f1 c/\ c= f0 f1 c= creal_of_num f0 creal_of_num f1
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1) |- (((real_le (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul))) = ((real_le (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c= creal_le creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0 creal_le creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_3511211 = _3511213) |- ((_3511212 = _3511214) ==> (((real_lt _3511213) _3511214) \/ (~ ((real_lt _3511211) _3511212))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ creal_lt f1 f3 c~ creal_lt f0 f2
- |- ((~ (_3511261 = _3511262)) \/ ((HD _3511261) = (HD _3511262)))
T c\/ c~ c= f0 f1 c= cHD f0 cHD f1
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1) |- (((hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)) = (distance ((circumcenter (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ul))) , (HD ((truncate_simplex (NUMERAL (BIT1 _0))) ul))))) = ((hl ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))) = (distance ((circumcenter (set_of_list ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) , (HD ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))))))
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c= c= chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0 cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 f0 cHD ctruncate_simplex cNUMERAL cBIT1 c_0 f0 c= chl ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL cHD ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f2 cCONS f2 cCONS f3 cCONS f4 cNIL
- ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) |- ((((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F))
T c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF
- |- ((~ (_3511237 = _3511238)) \/ ((BIT0 _3511237) = (BIT0 _3511238)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((~ (_3511225 = _3511226)) \/ ((packing _3511226) \/ (~ (packing _3511225))))
T c\/ c~ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- |- ((_3511251 = _3511252) ==> ((hl _3511251) = (hl _3511252)))
T c==> c= f0 f1 c= chl f0 chl f1
- (u0 = u1) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) = (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))
T c==> c= f0 f1 c= cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 f3 cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 f3
- (?u2. (?u3. (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((real_lt (real_of_num (NUMERAL _0))) (hl ((truncate_simplex (NUMERAL (BIT1 _0))) ul)))
T c==> c? / c? / c= f0 cCONS f1 cCONS f2 cCONS b0 cCONS b1 cNIL c==> cpacking f3 c==> csaturated f3 c==> cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 f0 creal_lt creal_of_num cNUMERAL c_0 chl ctruncate_simplex cNUMERAL cBIT1 c_0 f0
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((_3511273 = _3511275) ==> ((~ (_3511274 = _3511276)) \/ (((CONS _3511273) _3511274) = ((CONS _3511275) _3511276))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- ((_3511215 = _3511217) ==> ((~ (_3511216 = _3511218)) \/ (((real_le _3511217) _3511218) \/ (~ ((real_le _3511215) _3511216)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
- |- ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0))))
T c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- ((real_le (real_of_num (NUMERAL _0))) (hl vl)) |- (((real_le (real_of_num (NUMERAL _0))) (hl vl)) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 chl f0 c= creal_le creal_of_num cNUMERAL c_0 chl f0 cT
- (_3511211 = _3511213), (_3511212 = _3511214) |- (((((real_lt _3511211) _3511212) = ((real_lt _3511213) _3511214)) ==> (((real_lt _3511213) _3511214) \/ (~ ((real_lt _3511211) _3511212)))) = (((real_lt _3511213) _3511214) \/ (~ ((real_lt _3511211) _3511212))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= creal_lt f0 f2 creal_lt f1 f3 c\/ creal_lt f1 f3 c~ creal_lt f0 f2 c\/ creal_lt f1 f3 c~ creal_lt f0 f2
- (_3511241 = _3511243) |- ((_3511241 = _3511243) /\ ((~ (_3511242 = _3511244)) \/ (((vector_add _3511241) _3511242) = ((vector_add _3511243) _3511244))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- (T = ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))))
T c= cT c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)) ==> (((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F))) = (((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F) ==> ((~ (F ==> ((real_lt (real_of_num (NUMERAL _0))) (hl vl)))) ==> F)))
T c= c==> c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF c==> c~ c==> cF creal_lt creal_of_num cNUMERAL c_0 chl f0 cF
- |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f0 creal_of_num cNUMERAL c_0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (hl vl)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (hl vl))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (hl vl))) (real_of_num (NUMERAL _0))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge chl f6 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))))))))))) |- (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_3511219 = _3511222) |- ((_3511219 = _3511222) /\ ((~ (_3511221 = _3511224)) \/ ((~ (_3511220 = _3511223)) \/ ((((barV _3511222) _3511223) _3511224) \/ (~ (((barV _3511219) _3511220) _3511221))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ cbarV f1 f5 f3 c~ cbarV f0 f4 f2
- |- (!vl. (((\vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl)) vl) ==> (?vl. (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl))))
T c==> * / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0 f1 c? / c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 b0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (hl vl))) (real_of_num (NUMERAL _0)))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0
- (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (u0 = u1) |- (F = F)
T c==> c= f0 cCONS f1 cCONS f2 cCONS f3 cCONS f4 cNIL c==> c= f1 f2 c= cF cF
- |- ((_3511211 = _3511213) ==> ((~ (_3511212 = _3511214)) \/ (((real_lt _3511213) _3511214) \/ (~ ((real_lt _3511211) _3511212)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_lt f1 f3 c~ creal_lt f0 f2
- (~ (((barV V) (NUMERAL (BIT1 _0))) ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))), (ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))), (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl), (u0 = u1), (((barV V) (NUMERAL (BIT1 _0))) vl) |- ((~ (((barV V) (NUMERAL (BIT1 _0))) ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))))) /\ (((barV V) (NUMERAL (BIT1 _0))) ((truncate_simplex (NUMERAL (BIT1 _0))) ((CONS u1) ((CONS u1) ((CONS u2) ((CONS u3) NIL)))))))
T c==> c~ cbarV f0 cNUMERAL cBIT1 c_0 ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f1 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c= f4 cCONS f5 cCONS f1 cCONS f2 cCONS f3 cNIL c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f4 f6 c==> c= f5 f1 c==> cbarV f0 cNUMERAL cBIT1 c_0 f6 c/\ c~ cbarV f0 cNUMERAL cBIT1 c_0 ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f1 cCONS f1 cCONS f2 cCONS f3 cNIL cbarV f0 cNUMERAL cBIT1 c_0 ctruncate_simplex cNUMERAL cBIT1 c_0 cCONS f1 cCONS f1 cCONS f2 cCONS f3 cNIL
- (_3511263 = _3511265) |- ((_3511264 = _3511266) ==> ((_3511263 , _3511264) = (_3511265 , _3511266)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))))) |- (((~ (packing _3511130)) \/ (~ (((barV _3511130) _3511132) _3511131))) \/ ((LENGTH _3511131) = (_3511132 + (NUMERAL (BIT1 _0)))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= cLENGTH b1 c+ b2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list b1 c+ b2 cNUMERAL cBIT1 c_0 c\/ c\/ c~ cpacking f0 c~ cbarV f0 f1 f2 c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_3511227 = _3511228) ==> ((saturated _3511228) \/ (~ (saturated _3511227))))
T c==> c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- (?k. ((packing V) /\ (((barV V) k) ul))) |- ((?k. ((packing V) /\ (((barV V) k) ul))) /\ ((!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))))
T c==> c? / c/\ cpacking f0 cbarV f0 b0 f1 c/\ c? / c/\ cpacking f0 cbarV f0 b0 f1 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 c= chl f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (hl vl))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (hl vl))) (real_of_num (NUMERAL _0))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (packing V) |- ((~ (packing V)) ==> (packing V))
T c==> cpacking f0 c==> c~ cpacking f0 cpacking f0
- |- (~ (~ T))
T c~ c~ cT
- (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) |- (F = F)
T c==> c= ctruncate_simplex cNUMERAL cBIT1 c_0 f0 f1 c= cF cF
- (u0 = u1) |- ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) = (((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl))
T c==> c= f0 f1 c= c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f3 c= ctruncate_simplex cNUMERAL cBIT1 c_0 f2 f3
- (_3511225 = _3511226) |- ((((packing _3511225) = (packing _3511226)) ==> ((packing _3511226) \/ (~ (packing _3511225)))) = ((packing _3511226) \/ (~ (packing _3511225))))
T c==> c= f0 f1 c= c==> c= cpacking f0 cpacking f1 c\/ cpacking f1 c~ cpacking f0 c\/ cpacking f1 c~ cpacking f0
- |- ((!k'. (((~ (packing V)) \/ (~ (((barV V) k') ul))) \/ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))) = ((!k. ((~ (packing V)) \/ (~ (((barV V) k) ul)))) \/ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))
T c= ! c\/ c\/ c~ cpacking f0 c~ cbarV f0 b0 f1 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list f1 c+ f2 cNUMERAL cBIT1 c_0 c\/ ! c\/ c~ cpacking f0 c~ cbarV f0 b0 f1 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list f1 c+ f2 cNUMERAL cBIT1 c_0
- ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((ul = ((CONS u0) ((CONS u1) ((CONS u2) ((CONS u3) NIL))))) /\ ((((truncate_simplex (NUMERAL (BIT1 _0))) ul) = vl) /\ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance ((circumcenter (set_of_list vl)) , (HD vl))))) (hl vl)) = (real_of_num (NUMERAL _0))) /\ (((real_ge (hl vl)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (hl vl))) (real_of_num (NUMERAL _0))) /\ ((real_gt (hl vl)) (real_of_num (NUMERAL _0))))))))))) |- (packing V)
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f1 cCONS f2 cCONS f3 cCONS f4 cCONS f5 cNIL c/\ c= ctruncate_simplex cNUMERAL cBIT1 c_0 f1 f6 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, ccircumcenter * part cset_of_list f6 cHD f6 chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge chl f6 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 chl f6 creal_of_num cNUMERAL c_0 creal_gt chl f6 creal_of_num cNUMERAL c_0 cpacking f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((barV V) (NUMERAL (BIT1 _0))) vl) |- ((((barV V) (NUMERAL (BIT1 _0))) vl) = T)
T c==> cbarV f0 cNUMERAL cBIT1 c_0 f1 c= cbarV f0 cNUMERAL cBIT1 c_0 f1 cT
- |- ((~ (_3511229 = _3511230)) \/ ((LENGTH _3511229) = (LENGTH _3511230)))
T c\/ c~ c= f0 f1 c= cLENGTH f0 cLENGTH f1
- (_3511258 = _3511260) |- ((_3511258 = _3511260) /\ ((~ (_3511257 = _3511259)) \/ (((truncate_simplex _3511257) _3511258) = ((truncate_simplex _3511259) _3511260))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= ctruncate_simplex f2 f0 ctruncate_simplex f3 f1
