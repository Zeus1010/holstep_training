N Seq.rotS
C |- (!n. (!s. ((n < (sizel s)) ==> (((rot (SUC n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s))))))
T c==> c< f0 csizel f1 c= crot cSUC f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1
D Ssrnat.add1n
A |- (!n. (((NUMERAL (BIT1 _0)) + n) = (SUC n)))
T c= c+ cNUMERAL cBIT1 c_0 f0 cSUC f0
D Ssrnat.ltE
A |- (!n. (!m. ((n < m) = ((SUC n) <= m))))
T c= c< f0 f1 c<= cSUC f0 f1
D Seq.rot_addn
A |- (!m. (!n. (!s. (((m + n) <= (sizel s)) ==> (((rot (m + n)) s) = ((rot m) ((rot n) s)))))))
T c==> c<= c+ f0 f1 csizel f2 c= crot c+ f0 f1 f2 crot f0 crot f1 f2
+ |- (((SUC n) <= (sizel s)) ==> (((rot (SUC n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s))))
T c==> c<= cSUC f0 csizel f1 c= crot cSUC f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1
- (((NUMERAL (BIT1 _0)) + n) <= (sizel s)) |- (((rot ((NUMERAL (BIT1 _0)) + n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s)))
T c==> c<= c+ cNUMERAL cBIT1 c_0 f0 csizel f1 c= crot c+ cNUMERAL cBIT1 c_0 f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ |- (((((NUMERAL (BIT1 _0)) + n) <= (sizel s)) ==> (((rot ((NUMERAL (BIT1 _0)) + n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s)))) = ((((NUMERAL (BIT1 _0)) + n) <= (sizel s)) ==> (((rot (SUC n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s)))))
T c= c==> c<= c+ cNUMERAL cBIT1 c_0 f0 csizel f1 c= crot c+ cNUMERAL cBIT1 c_0 f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1 c==> c<= c+ cNUMERAL cBIT1 c_0 f0 csizel f1 c= crot cSUC f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1
+ |- ((SUC n) = ((NUMERAL (BIT1 _0)) + n))
T c= cSUC f0 c+ cNUMERAL cBIT1 c_0 f0
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- (((!s. (((m + n) <= (sizel s)) ==> (((rot (m + n)) s) = ((rot m) ((rot n) s))))) ==> ((\s. (((m + n) <= (sizel s)) ==> (((rot (m + n)) s) = ((rot m) ((rot n) s))))) s)) = ((\s. (((m + n) <= (sizel s)) ==> (((rot (m + n)) s) = ((rot m) ((rot n) s))))) s))
T c= c==> ! c==> c<= c+ f0 f1 csizel b0 c= crot c+ f0 f1 b0 crot f0 crot f1 b0 * / c==> c<= c+ f0 f1 csizel b0 c= crot c+ f0 f1 b0 crot f0 crot f1 b0 f2 * / c==> c<= c+ f0 f1 csizel b0 c= crot c+ f0 f1 b0 crot f0 crot f1 b0 f2
+ |- ((((NUMERAL (BIT1 _0)) + n) <= (sizel s)) ==> (((rot (SUC n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s))))
T c==> c<= c+ cNUMERAL cBIT1 c_0 f0 csizel f1 c= crot cSUC f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (((NUMERAL (BIT1 _0)) + n) = (SUC n)) |- ((SUC n) = ((NUMERAL (BIT1 _0)) + n))
T c==> c= c+ cNUMERAL cBIT1 c_0 f0 cSUC f0 c= cSUC f0 c+ cNUMERAL cBIT1 c_0 f0
+ |- (((!n. (!s. (((m + n) <= (sizel s)) ==> (((rot (m + n)) s) = ((rot m) ((rot n) s)))))) ==> ((\n. (!s. (((m + n) <= (sizel s)) ==> (((rot (m + n)) s) = ((rot m) ((rot n) s)))))) n)) = ((\n. (!s. (((m + n) <= (sizel s)) ==> (((rot (m + n)) s) = ((rot m) ((rot n) s)))))) n))
T c= c==> ! ! c==> c<= c+ f0 b0 csizel b1 c= crot c+ f0 b0 b1 crot f0 crot b0 b1 * / ! c==> c<= c+ f0 b0 csizel b1 c= crot c+ f0 b0 b1 crot f0 crot b0 b1 f1 * / ! c==> c<= c+ f0 b0 csizel b1 c= crot c+ f0 b0 b1 crot f0 crot b0 b1 f1
+ |- (((!m. ((n < m) = ((SUC n) <= m))) ==> ((\m. ((n < m) = ((SUC n) <= m))) m)) = ((\m. ((n < m) = ((SUC n) <= m))) m))
T c= c==> ! c= c< f0 b0 c<= cSUC f0 b0 * / c= c< f0 b0 c<= cSUC f0 b0 f1 * / c= c< f0 b0 c<= cSUC f0 b0 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ ((SUC n) = ((NUMERAL (BIT1 _0)) + n)) |- (((NUMERAL (BIT1 _0)) + n) = (SUC n))
T c==> c= cSUC f0 c+ cNUMERAL cBIT1 c_0 f0 c= c+ cNUMERAL cBIT1 c_0 f0 cSUC f0
- |- ((((rot ((NUMERAL (BIT1 _0)) + n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s))) ==> (((rot ((NUMERAL (BIT1 _0)) + n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s))))
T c==> c= crot c+ cNUMERAL cBIT1 c_0 f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1 c= crot c+ cNUMERAL cBIT1 c_0 f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1
+ |- ((\s. (((m + n) <= (sizel s)) ==> (((rot (m + n)) s) = ((rot m) ((rot n) s))))) s)
T * / c==> c<= c+ f0 f1 csizel b0 c= crot c+ f0 f1 b0 crot f0 crot f1 b0 f2
+ |- (((!m. (!n. (!s. (((m + n) <= (sizel s)) ==> (((rot (m + n)) s) = ((rot m) ((rot n) s))))))) ==> ((\m. (!n. (!s. (((m + n) <= (sizel s)) ==> (((rot (m + n)) s) = ((rot m) ((rot n) s))))))) m)) = ((\m. (!n. (!s. (((m + n) <= (sizel s)) ==> (((rot (m + n)) s) = ((rot m) ((rot n) s))))))) m))
T c= c==> ! ! ! c==> c<= c+ b0 b1 csizel b2 c= crot c+ b0 b1 b2 crot b0 crot b1 b2 * / ! ! c==> c<= c+ b0 b1 csizel b2 c= crot c+ b0 b1 b2 crot b0 crot b1 b2 f0 * / ! ! c==> c<= c+ b0 b1 csizel b2 c= crot c+ b0 b1 b2 crot b0 crot b1 b2 f0
+ |- ((\n. (!s. (((m + n) <= (sizel s)) ==> (((rot (m + n)) s) = ((rot m) ((rot n) s)))))) n)
T * / ! c==> c<= c+ f0 b0 csizel b1 c= crot c+ f0 b0 b1 crot f0 crot b0 b1 f1
+ |- ((\n. ((SUC n) = ((NUMERAL (BIT1 _0)) + n))) n)
T * / c= cSUC b0 c+ cNUMERAL cBIT1 c_0 b0 f0
+ |- ((\n. (!m. ((n < m) = ((SUC n) <= m)))) n)
T * / ! c= c< b0 b1 c<= cSUC b0 b1 f0
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- (((NUMERAL (BIT1 _0)) + n) <= (sizel s)) |- (((((rot ((NUMERAL (BIT1 _0)) + n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s))) ==> (((rot ((NUMERAL (BIT1 _0)) + n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s)))) = (((rot ((NUMERAL (BIT1 _0)) + n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s))))
T c==> c<= c+ cNUMERAL cBIT1 c_0 f0 csizel f1 c= c==> c= crot c+ cNUMERAL cBIT1 c_0 f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1 c= crot c+ cNUMERAL cBIT1 c_0 f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1 c= crot c+ cNUMERAL cBIT1 c_0 f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1
- |- (T = ((((rot ((NUMERAL (BIT1 _0)) + n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s))) ==> (((rot ((NUMERAL (BIT1 _0)) + n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s)))))
T c= cT c==> c= crot c+ cNUMERAL cBIT1 c_0 f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1 c= crot c+ cNUMERAL cBIT1 c_0 f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- (((NUMERAL (BIT1 _0)) + n) <= (sizel s)) |- ((((NUMERAL (BIT1 _0)) + n) <= (sizel s)) /\ (((rot ((NUMERAL (BIT1 _0)) + n)) s) = ((rot (NUMERAL (BIT1 _0))) ((rot n) s))))
T c==> c<= c+ cNUMERAL cBIT1 c_0 f0 csizel f1 c/\ c<= c+ cNUMERAL cBIT1 c_0 f0 csizel f1 c= crot c+ cNUMERAL cBIT1 c_0 f0 f1 crot cNUMERAL cBIT1 c_0 crot f0 f1
