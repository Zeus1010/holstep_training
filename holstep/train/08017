N REAL_ACS
C |- (!z. (((real z) /\ ((real_le (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (real (cacs z))))
T c==> c/\ creal f0 creal_le creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 creal ccacs f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_EQ_0
A |- (!x. (((real_neg x) = (real_of_num (NUMERAL _0))) = (x = (real_of_num (NUMERAL _0)))))
T c= c= creal_neg f0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0
D SQRT_POW_2
A |- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> (((real_pow (sqrt x)) (NUMERAL (BIT0 (BIT1 _0)))) = x)))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= creal_pow csqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0
D DOT_SQUARE_NORM
A |- (!x. (((dot x) x) = ((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0))))))
T c= cdot f0 f0 creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0
D NORM_EQ_SQUARE
A |- (!x. (((vector_norm x) = a) = (((real_le (real_of_num (NUMERAL _0))) a) /\ (((dot x) x) = ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c= cvector_norm f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c= cdot f0 f0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0
D Trigonometry2.POW2_1
A |- (((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))
T c= creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
D COMPLEX_SQNORM
A |- (((real_pow (vector_norm z)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow (Re z)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (Im z)) (NUMERAL (BIT0 (BIT1 _0))))))
T c= creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow cRe f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cIm f0 cNUMERAL cBIT0 cBIT1 c_0
D COMPLEX_MUL_LNEG
A |- (!x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))))
T c= ccomplex_mul cvector_neg f0 f1 cvector_neg ccomplex_mul f0 f1
D CX_SUB
A |- (!x. (!y. ((Cx ((real_sub x) y)) = ((vector_sub (Cx x)) (Cx y)))))
T c= cCx creal_sub f0 f1 cvector_sub cCx f0 cCx f1
D CX_POW
A |- (!x. (!n. ((Cx ((real_pow x) n)) = ((complex_pow (Cx x)) n))))
T c= cCx creal_pow f0 f1 ccomplex_pow cCx f0 f1
D RE_CX
A |- (!x. ((Re (Cx x)) = x))
T c= cRe cCx f0 f0
D RE_ADD
A |- (!x. (!y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y)))))
T c= cRe cvector_add f0 f1 creal_add cRe f0 cRe f1
D IM_CX
A |- (!x. ((Im (Cx x)) = (real_of_num (NUMERAL _0))))
T c= cIm cCx f0 creal_of_num cNUMERAL c_0
D IM_NEG
A |- (!x. ((Im (vector_neg x)) = (real_neg (Im x))))
T c= cIm cvector_neg f0 creal_neg cIm f0
D IM_ADD
A |- (!x. (!y. ((Im ((vector_add x) y)) = ((real_add (Im x)) (Im y)))))
T c= cIm cvector_add f0 f1 creal_add cIm f0 cIm f1
D RE_MUL_II
A |- (!z. (((Re ((complex_mul z) ii)) = (real_neg (Im z))) /\ ((Re ((complex_mul ii) z)) = (real_neg (Im z)))))
T c/\ c= cRe ccomplex_mul f0 cii creal_neg cIm f0 c= cRe ccomplex_mul cii f0 creal_neg cIm f0
D IM_MUL_II
A |- (!z. (((Im ((complex_mul z) ii)) = (Re z)) /\ ((Im ((complex_mul ii) z)) = (Re z))))
T c/\ c= cIm ccomplex_mul f0 cii cRe f0 c= cIm ccomplex_mul cii f0 cRe f0
D CSQRT_CX
A |- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((csqrt (Cx x)) = (Cx (sqrt x)))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= ccsqrt cCx f0 cCx csqrt f0
D real
A |- (!z. ((real z) = ((Im z) = (real_of_num (NUMERAL _0)))))
T c= creal f0 c= cIm f0 creal_of_num cNUMERAL c_0
D REAL
A |- (!z. ((real z) = ((Cx (Re z)) = z)))
T c= creal f0 c= cCx cRe f0 f0
D NORM_CEXP_IMAGINARY
A |- (!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0)))))
T c==> c= cvector_norm ccexp f0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe f0 creal_of_num cNUMERAL c_0
D CEXP_CLOG
A |- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((cexp (clog z)) = z)))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccexp cclog f0 f0
D ABS_SQUARE_LE_1
A |- (!x. (((real_le ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0
D cacs
A |- (!z. ((cacs z) = ((complex_mul (vector_neg ii)) (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c= ccacs f0 ccomplex_mul cvector_neg cii cclog cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0
D CACS_BODY_LEMMA
A |- (!z. (~ (((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0))))))
T c~ c= cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (~ (((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0)))))
T c~ c= cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
- |- (((((BIT1 _0) EXP _0) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))))) = ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))))
T c= c==> c= cEXP cBIT1 c_0 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
- (!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))) |- ((\z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))) z)
T c==> ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 * / c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 f0
- ((real_le (real_of_num (NUMERAL _0))) x) |- (((real_le (real_of_num (NUMERAL _0))) x) /\ ((csqrt (Cx x)) = (Cx (sqrt x))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c= ccsqrt cCx f0 cCx csqrt f0
+ |- (((!y. (((vector_sub (Cx x)) (Cx y)) = (Cx ((real_sub x) y)))) ==> ((\y. (((vector_sub (Cx x)) (Cx y)) = (Cx ((real_sub x) y)))) y)) = ((\y. (((vector_sub (Cx x)) (Cx y)) = (Cx ((real_sub x) y)))) y))
T c= c==> ! c= cvector_sub cCx f0 cCx b0 cCx creal_sub f0 b0 * / c= cvector_sub cCx f0 cCx b0 cCx creal_sub f0 b0 f1 * / c= cvector_sub cCx f0 cCx b0 cCx creal_sub f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))) = (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))
T c= c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
- ((real_le (real_of_num (NUMERAL _0))) x) |- (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_pow (sqrt x)) (NUMERAL (BIT0 (BIT1 _0)))) = x))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c= creal_pow csqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- ((cexp (clog ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))) = ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= ccexp cclog cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!x. (((real_le (real_abs (Re (Cx x)))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (real (cacs (Cx x))))) ==> ((\x. (((real_le (real_abs (Re (Cx x)))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (real (cacs (Cx x))))) (Re z))) = ((\x. (((real_le (real_abs (Re (Cx x)))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (real (cacs (Cx x))))) (Re z)))
T c= c==> ! c==> creal_le creal_abs cRe cCx b0 creal_of_num cNUMERAL cBIT1 c_0 creal ccacs cCx b0 * / c==> creal_le creal_abs cRe cCx b0 creal_of_num cNUMERAL cBIT1 c_0 creal ccacs cCx b0 cRe f0 * / c==> creal_le creal_abs cRe cCx b0 creal_of_num cNUMERAL cBIT1 c_0 creal ccacs cCx b0 cRe f0
+ |- ((\x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y))))) x)
T * / ! c= ccomplex_mul cvector_neg b0 b1 cvector_neg ccomplex_mul b0 b1 f0
+ ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) |- ((csqrt (Cx ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (sqrt ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 c= ccsqrt cCx creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx csqrt creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((Re ((complex_mul z) ii)) = (real_neg (Im z)))
T c= cRe ccomplex_mul f0 cii creal_neg cIm f0
- |- (((BIT1 _0) * (BIT1 _0)) = (BIT1 _0))
T c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\z. ((real z) = ((Cx (Re z)) = z))) z)
T * / c= creal b0 c= cCx cRe b0 b0 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0)))) = ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0))))
T c= c==> c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0
+ |- (((complex_pow (Cx x)) n) = (Cx ((real_pow x) n)))
T c= ccomplex_pow cCx f0 f1 cCx creal_pow f0 f1
- |- ((!x. t) = t)
T c= ! f0 f0
- |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\y. (((vector_sub (Cx x)) (Cx y)) = (Cx ((real_sub x) y)))) y)
T * / c= cvector_sub cCx f0 cCx b0 cCx creal_sub f0 b0 f1
+ |- ((\y. ((Im ((vector_add x) y)) = ((real_add (Im x)) (Im y)))) y)
T * / c= cIm cvector_add f0 b0 creal_add cIm f0 cIm b0 f1
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((\y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))) y)
T * / c= ccomplex_mul cvector_neg f0 b0 cvector_neg ccomplex_mul f0 b0 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (T = (~ (((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0))))))
T c= cT c~ c= cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((~ (((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0))))) ==> ((((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0)))) = F)) = ((((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0)))) = F))
T c= c==> c~ c= cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= c= cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 cF c= c= cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 cF
- |- (((Cx (real_of_num (NUMERAL _0))) = ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))) = F)
T c= c= cCx creal_of_num cNUMERAL c_0 cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((Im ((complex_mul ii) z)) = (Re z))
T c= cIm ccomplex_mul cii f0 cRe f0
+ |- (((!x. (((real_le ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((\x. (((real_le ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((real_le ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))))) x))
T c= c==> ! c= creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_abs b0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_abs b0 creal_of_num cNUMERAL cBIT1 c_0 f0 * / c= creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_abs b0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((Cx (Re z)) = z) |- (((Cx (Re z)) = z) /\ (((real_le (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (real (cacs z))))
T c==> c= cCx cRe f0 f0 c/\ c= cCx cRe f0 f0 c==> creal_le creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 creal ccacs f0
- |- (((!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))) ==> (!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0)))))) = (!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))))
T c= c==> ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0
+ |- (!x. (((real_le (real_abs (Re (Cx x)))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_neg (Re (clog ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0))))))))))) = (real_of_num (NUMERAL _0)))))
T c==> creal_le creal_abs cRe cCx f0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_neg cRe cclog cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((real z) ==> (((real_le (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (real (cacs z))))
T c==> creal f0 c==> creal_le creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 creal ccacs f0
+ |- (((!x. (((vector_norm x) = a) = (((real_le (real_of_num (NUMERAL _0))) a) /\ (((dot x) x) = ((real_pow a) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((\x. (((vector_norm x) = a) = (((real_le (real_of_num (NUMERAL _0))) a) /\ (((dot x) x) = ((real_pow a) (NUMERAL (BIT0 (BIT1 _0)))))))) x)) = ((\x. (((vector_norm x) = a) = (((real_le (real_of_num (NUMERAL _0))) a) /\ (((dot x) x) = ((real_pow a) (NUMERAL (BIT0 (BIT1 _0)))))))) x))
T c= c==> ! c= c= cvector_norm b0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c= cdot b0 b0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 * / c= c= cvector_norm b0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c= cdot b0 b0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f1 * / c= c= cvector_norm b0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c= cdot b0 b0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f1
+ ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) |- ((((real_le (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_pow (sqrt ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))))) = (((real_pow (sqrt ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow csqrt creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow csqrt creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0)))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0
+ ((Cx (Re z)) = z) |- (z = (Cx (Re z)))
T c==> c= cCx cRe f0 f0 c= f0 cCx cRe f0
+ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re (clog ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))) = (real_of_num (NUMERAL _0)))) = (((real_le (real_abs (Re (Cx x)))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_neg (Re (clog ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0))))))))))) = (real_of_num (NUMERAL _0)))))
T c= c==> creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe cclog cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> creal_le creal_abs cRe cCx f0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_neg cRe cclog cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\z. (((Re ((complex_mul z) ii)) = (real_neg (Im z))) /\ ((Re ((complex_mul ii) z)) = (real_neg (Im z))))) z)
T * / c/\ c= cRe ccomplex_mul b0 cii creal_neg cIm b0 c= cRe ccomplex_mul cii b0 creal_neg cIm b0 f0
+ |- ((\x. ((Re (Cx x)) = x)) x)
T * / c= cRe cCx b0 b0 f0
- |- (((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0))) = (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0)))
T c= c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0
+ |- (((!z. (~ (((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0)))))) ==> ((\z. (~ (((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0)))))) z)) = ((\z. (~ (((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0)))))) z))
T c= c==> ! c~ c= cvector_add b0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 * / c~ c= cvector_add b0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 f0 * / c~ c= cvector_add b0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 f0
+ (((vector_sub (Cx x)) (Cx y)) = (Cx ((real_sub x) y))) |- ((Cx ((real_sub x) y)) = ((vector_sub (Cx x)) (Cx y)))
T c==> c= cvector_sub cCx f0 cCx f1 cCx creal_sub f0 f1 c= cCx creal_sub f0 f1 cvector_sub cCx f0 cCx f1
- ((Cx (real_of_num (NUMERAL _0))) = ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))) |- (((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c= cCx creal_of_num cNUMERAL c_0 cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 c= cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> (((real_pow (sqrt x)) (NUMERAL (BIT0 (BIT1 _0)))) = x))) ==> ((\x. (((real_le (real_of_num (NUMERAL _0))) x) ==> (((real_pow (sqrt x)) (NUMERAL (BIT0 (BIT1 _0)))) = x))) x)) = ((\x. (((real_le (real_of_num (NUMERAL _0))) x) ==> (((real_pow (sqrt x)) (NUMERAL (BIT0 (BIT1 _0)))) = x))) x))
T c= c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= creal_pow csqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 * / c==> creal_le creal_of_num cNUMERAL c_0 b0 c= creal_pow csqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 f0 * / c==> creal_le creal_of_num cNUMERAL c_0 b0 c= creal_pow csqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 f0
+ ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) |- (T = ((real_le (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 c= cT creal_le creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\x. (((dot x) x) = ((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0)))))) x)
T * / c= cdot b0 b0 creal_pow cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 f0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!n. (((complex_pow (Cx x)) n) = (Cx ((real_pow x) n)))) ==> ((\n. (((complex_pow (Cx x)) n) = (Cx ((real_pow x) n)))) n)) = ((\n. (((complex_pow (Cx x)) n) = (Cx ((real_pow x) n)))) n))
T c= c==> ! c= ccomplex_pow cCx f0 b0 cCx creal_pow f0 b0 * / c= ccomplex_pow cCx f0 b0 cCx creal_pow f0 b0 f1 * / c= ccomplex_pow cCx f0 b0 cCx creal_pow f0 b0 f1
- |- ((Im ((complex_mul z) ii)) = (Re z))
T c= cIm ccomplex_mul f0 cii cRe f0
+ |- (((real z) ==> (((real_le (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (real (cacs z)))) = (((real z) /\ ((real_le (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (real (cacs z))))
T c= c==> creal f0 c==> creal_le creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 creal ccacs f0 c==> c/\ creal f0 creal_le creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 creal ccacs f0
+ ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((dot ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0))))))))) ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0))))))))) = ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= cdot cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((cexp (clog z)) = z))) ==> ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((cexp (clog z)) = z))) z)) = ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((cexp (clog z)) = z))) z))
T c= c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccexp cclog b0 b0 * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccexp cclog b0 b0 f0 * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccexp cclog b0 b0 f0
+ |- (((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re (clog ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))) = (real_of_num (NUMERAL _0))))
T c==> creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe cclog cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((Cx ((real_pow x) n)) = ((complex_pow (Cx x)) n)) |- (((complex_pow (Cx x)) n) = (Cx ((real_pow x) n)))
T c==> c= cCx creal_pow f0 f1 ccomplex_pow cCx f0 f1 c= ccomplex_pow cCx f0 f1 cCx creal_pow f0 f1
+ |- ((\x. (!y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y))))) x)
T * / ! c= cRe cvector_add b0 b1 creal_add cRe b0 cRe b1 f0
+ ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c==> creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 cT
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_pow ((real_add x) (real_neg (Im (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (real_of_num (NUMERAL _0))) (Re (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0)))))) = (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_pow (Re ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (Im ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_pow creal_add f0 creal_neg cIm ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add creal_of_num cNUMERAL c_0 cRe ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_pow cRe cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cIm cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\x. (!y. ((Im ((vector_add x) y)) = ((real_add (Im x)) (Im y))))) x)
T * / ! c= cIm cvector_add b0 b1 creal_add cIm b0 cIm b1 f0
+ |- ((\x. (((vector_norm x) = a) = (((real_le (real_of_num (NUMERAL _0))) a) /\ (((dot x) x) = ((real_pow a) (NUMERAL (BIT0 (BIT1 _0)))))))) x)
T * / c= c= cvector_norm b0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c= cdot b0 b0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 f1
+ ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) |- ((real_le (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!x. ((Im (Cx x)) = (real_of_num (NUMERAL _0)))) ==> ((\x. ((Im (Cx x)) = (real_of_num (NUMERAL _0)))) x)) = ((\x. ((Im (Cx x)) = (real_of_num (NUMERAL _0)))) x))
T c= c==> ! c= cIm cCx b0 creal_of_num cNUMERAL c_0 * / c= cIm cCx b0 creal_of_num cNUMERAL c_0 f0 * / c= cIm cCx b0 creal_of_num cNUMERAL c_0 f0
- (!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))), ((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))) /\ ((Re z) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 c==> c= cvector_norm ccexp f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 c= cRe f0 creal_of_num cNUMERAL c_0
- (!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))), ((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((Re z) = (real_of_num (NUMERAL _0)))
T c==> ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 c==> c= cvector_norm ccexp f0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe f0 creal_of_num cNUMERAL c_0
+ |- (((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((csqrt (Cx x)) = (Cx (sqrt x))))) ==> ((\x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((csqrt (Cx x)) = (Cx (sqrt x))))) x)) = ((\x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((csqrt (Cx x)) = (Cx (sqrt x))))) x))
T c= c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c= ccsqrt cCx b0 cCx csqrt b0 * / c==> creal_le creal_of_num cNUMERAL c_0 b0 c= ccsqrt cCx b0 cCx csqrt b0 f0 * / c==> creal_le creal_of_num cNUMERAL c_0 b0 c= ccsqrt cCx b0 cCx csqrt b0 f0
+ |- ((((Cx (Re z)) = z) ==> (((real_le (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (real (cacs z)))) = ((real z) ==> (((real_le (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (real (cacs z)))))
T c= c==> c= cCx cRe f0 f0 c==> creal_le creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 creal ccacs f0 c==> creal f0 c==> creal_le creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 creal ccacs f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((Re ((complex_mul ii) z)) = (real_neg (Im z)))
T c= cRe ccomplex_mul cii f0 creal_neg cIm f0
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_pow (Re ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (Im ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0)))))) = (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((dot ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0))))))))) ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0))))))))) = ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_pow cRe cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cIm cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= cdot cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_pow ((real_add x) (real_of_num (NUMERAL _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))))) |- (((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))
T c==> c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_pow creal_add f0 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c\/ creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!z. ((real z) = ((Cx (Re z)) = z))) ==> ((\z. ((real z) = ((Cx (Re z)) = z))) z)) = ((\z. ((real z) = ((Cx (Re z)) = z))) z))
T c= c==> ! c= creal b0 c= cCx cRe b0 b0 * / c= creal b0 c= cCx cRe b0 b0 f0 * / c= creal b0 c= cCx cRe b0 b0 f0
+ ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) ==> F), (((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) |- ((((vector_norm (cexp (clog ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0))))))))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re (clog ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))) = (real_of_num (NUMERAL _0)))) = ((Re (clog ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))) = (real_of_num (NUMERAL _0))))
T c==> creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c= cvector_norm ccexp cclog cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe cclog cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cRe cclog cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0))
T c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!y. ((Im ((vector_add x) y)) = ((real_add (Im x)) (Im y)))) ==> ((\y. ((Im ((vector_add x) y)) = ((real_add (Im x)) (Im y)))) y)) = ((\y. ((Im ((vector_add x) y)) = ((real_add (Im x)) (Im y)))) y))
T c= c==> ! c= cIm cvector_add f0 b0 creal_add cIm f0 cIm b0 * / c= cIm cvector_add f0 b0 creal_add cIm f0 cIm b0 f1 * / c= cIm cvector_add f0 b0 creal_add cIm f0 cIm b0 f1
+ ((Cx (Re z)) = z) |- ((((real_le (real_abs (Re z))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (real (cacs z))) = (((real_le (real_abs (Re (Cx (Re z))))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (real (cacs (Cx (Re z))))))
T c==> c= cCx cRe f0 f0 c= c==> creal_le creal_abs cRe f0 creal_of_num cNUMERAL cBIT1 c_0 creal ccacs f0 c==> creal_le creal_abs cRe cCx cRe f0 creal_of_num cNUMERAL cBIT1 c_0 creal ccacs cCx cRe f0
- |- (((~ ((Cx (real_of_num (NUMERAL _0))) = ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> (((Cx (real_of_num (NUMERAL _0))) = ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))) = F)) = (((Cx (real_of_num (NUMERAL _0))) = ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))) = F))
T c= c==> c~ c= cCx creal_of_num cNUMERAL c_0 cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= cCx creal_of_num cNUMERAL c_0 cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cF c= c= cCx creal_of_num cNUMERAL c_0 cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cF
- (!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))) |- ((!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))) /\ (!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))))
T c==> ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 c/\ ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0
+ |- (((!x. (!n. (((complex_pow (Cx x)) n) = (Cx ((real_pow x) n))))) ==> ((\x. (!n. (((complex_pow (Cx x)) n) = (Cx ((real_pow x) n))))) x)) = ((\x. (!n. (((complex_pow (Cx x)) n) = (Cx ((real_pow x) n))))) x))
T c= c==> ! ! c= ccomplex_pow cCx b0 b1 cCx creal_pow b0 b1 * / ! c= ccomplex_pow cCx b0 b1 cCx creal_pow b0 b1 f0 * / ! c= ccomplex_pow cCx b0 b1 cCx creal_pow b0 b1 f0
- ((csqrt (Cx x)) = (Cx (sqrt x))) |- ((Cx (sqrt x)) = (csqrt (Cx x)))
T c==> c= ccsqrt cCx f0 cCx csqrt f0 c= cCx csqrt f0 ccsqrt cCx f0
+ |- (((!z. ((real z) = ((Im z) = (real_of_num (NUMERAL _0))))) ==> ((\z. ((real z) = ((Im z) = (real_of_num (NUMERAL _0))))) z)) = ((\z. ((real z) = ((Im z) = (real_of_num (NUMERAL _0))))) z))
T c= c==> ! c= creal b0 c= cIm b0 creal_of_num cNUMERAL c_0 * / c= creal b0 c= cIm b0 creal_of_num cNUMERAL c_0 f0 * / c= creal b0 c= cIm b0 creal_of_num cNUMERAL c_0 f0
- |- (((NUMERAL m) EXP (NUMERAL n)) = (m EXP n))
T c= cEXP cNUMERAL f0 cNUMERAL f1 cEXP f0 f1
+ ((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((Re (clog ((vector_add (Cx x)) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))) = (real_of_num (NUMERAL _0))))
T c==> creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe cclog cvector_add cCx f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (((real_neg x) = (real_of_num (NUMERAL _0))) = (x = (real_of_num (NUMERAL _0))))) ==> ((\x. (((real_neg x) = (real_of_num (NUMERAL _0))) = (x = (real_of_num (NUMERAL _0))))) x)) = ((\x. (((real_neg x) = (real_of_num (NUMERAL _0))) = (x = (real_of_num (NUMERAL _0))))) x))
T c= c==> ! c= c= creal_neg b0 creal_of_num cNUMERAL c_0 c= b0 creal_of_num cNUMERAL c_0 * / c= c= creal_neg b0 creal_of_num cNUMERAL c_0 c= b0 creal_of_num cNUMERAL c_0 f0 * / c= c= creal_neg b0 creal_of_num cNUMERAL c_0 c= b0 creal_of_num cNUMERAL c_0 f0
+ |- ((((~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_pow ((real_add x) (real_of_num (NUMERAL _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))))) ==> F) ==> (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_pow ((real_add x) (real_of_num (NUMERAL _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))))) = (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_pow ((real_add x) (real_of_num (NUMERAL _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c==> c==> c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_pow creal_add f0 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_pow creal_add f0 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_pow creal_add f0 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))
T c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ |- (((!y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y)))) ==> ((\y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y)))) y)) = ((\y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y)))) y))
T c= c==> ! c= cRe cvector_add f0 b0 creal_add cRe f0 cRe b0 * / c= cRe cvector_add f0 b0 creal_add cRe f0 cRe b0 f1 * / c= cRe cvector_add f0 b0 creal_add cRe f0 cRe b0 f1
+ |- (((!x. (!y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y))))) ==> ((\x. (!y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y))))) x)) = ((\x. (!y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y))))) x))
T c= c==> ! ! c= cRe cvector_add b0 b1 creal_add cRe b0 cRe b1 * / ! c= cRe cvector_add b0 b1 creal_add cRe b0 cRe b1 f0 * / ! c= cRe cvector_add b0 b1 creal_add cRe b0 cRe b1 f0
+ |- ((((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0)))) = F)
T c= c= cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 cF
+ ((real_le (real_abs x)) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_pow ((real_add x) (real_neg (Im (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_add (real_of_num (NUMERAL _0))) (Re (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow (Cx x)) (NUMERAL (BIT0 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> creal_le creal_abs f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_pow creal_add f0 creal_neg cIm ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_add creal_of_num cNUMERAL c_0 cRe ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cCx f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_pow ((real_add x) (real_of_num (NUMERAL _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))))) |- ((~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_pow ((real_add x) (real_of_num (NUMERAL _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_pow (real_of_num (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))))) /\ F)
T c==> c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_pow creal_add f0 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_pow creal_add f0 creal_of_num cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((!x. ((Re (Cx x)) = x)) ==> ((\x. ((Re (Cx x)) = x)) x)) = ((\x. ((Re (Cx x)) = x)) x))
T c= c==> ! c= cRe cCx b0 b0 * / c= cRe cCx b0 b0 f0 * / c= cRe cCx b0 b0 f0
+ |- (((!z. (((Re ((complex_mul z) ii)) = (real_neg (Im z))) /\ ((Re ((complex_mul ii) z)) = (real_neg (Im z))))) ==> ((\z. (((Re ((complex_mul z) ii)) = (real_neg (Im z))) /\ ((Re ((complex_mul ii) z)) = (real_neg (Im z))))) z)) = ((\z. (((Re ((complex_mul z) ii)) = (real_neg (Im z))) /\ ((Re ((complex_mul ii) z)) = (real_neg (Im z))))) z))
T c= c==> ! c/\ c= cRe ccomplex_mul b0 cii creal_neg cIm b0 c= cRe ccomplex_mul cii b0 creal_neg cIm b0 * / c/\ c= cRe ccomplex_mul b0 cii creal_neg cIm b0 c= cRe ccomplex_mul cii b0 creal_neg cIm b0 f0 * / c/\ c= cRe ccomplex_mul b0 cii creal_neg cIm b0 c= cRe ccomplex_mul cii b0 creal_neg cIm b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))) = ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))))
T c= c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0)))) |- ((Cx (real_of_num (NUMERAL _0))) = ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c= cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cCx creal_of_num cNUMERAL c_0 cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0
- (!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))), ((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) |- (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((Re z) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 c==> c= cvector_norm ccexp f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_norm ccexp f0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))) |- ((((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0)))) = T)
T c==> ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 c= c==> c= cvector_norm ccexp f0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe f0 creal_of_num cNUMERAL c_0 cT
- ((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))) ==> ((Re z) = (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm ccexp f0 creal_of_num cNUMERAL cBIT1 c_0 c==> ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 c= cRe f0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_pow (real_of_num x)) n) = (real_of_num (x EXP n)))
T c= creal_pow creal_of_num f0 f1 creal_of_num cEXP f0 f1
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((cexp (clog z)) = z))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccexp cclog f0 f0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (~ ((Cx (real_of_num (NUMERAL _0))) = ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c~ c= cCx creal_of_num cNUMERAL c_0 cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0
- ((Cx (sqrt x)) = (csqrt (Cx x))) |- ((csqrt (Cx x)) = (Cx (sqrt x)))
T c==> c= cCx csqrt f0 ccsqrt cCx f0 c= ccsqrt cCx f0 cCx csqrt f0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))) ==> (!z. (((vector_norm (cexp z)) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((Re z) = (real_of_num (NUMERAL _0))))))
T c==> ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0 ! c==> c= cvector_norm ccexp b0 creal_of_num cNUMERAL cBIT1 c_0 c= cRe b0 creal_of_num cNUMERAL c_0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
