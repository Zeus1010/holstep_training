N Yxionxl2.AFF_LT_VEC0_SYM_0
C |- (((aff_lt ((vec (NUMERAL _0)) INSERT EMPTY)) ((IMAGE (\x. (vector_neg x))) e)) = ((IMAGE (\x. (vector_neg x))) ((aff_lt ((vec (NUMERAL _0)) INSERT EMPTY)) e)))
T c= * * part caff_lt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cIMAGE / cvector_neg b0 f0 * * part cIMAGE / cvector_neg b0 * * part caff_lt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY f0
D Yxionxl2.VEC0_SYM_0
A |- (((IMAGE (\x. (vector_neg x))) ((vec (NUMERAL _0)) INSERT EMPTY)) = ((vec (NUMERAL _0)) INSERT EMPTY))
T c= * * part cIMAGE / cvector_neg b0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvec cNUMERAL c_0 part cEMPTY
D Yxionxl2.AFF_LT_COMMUTATIVE_SYM_0
A |- (((aff_lt ((IMAGE (\x. (vector_neg x))) e1)) ((IMAGE (\x. (vector_neg x))) e)) = ((IMAGE (\x. (vector_neg x))) ((aff_lt e1) e)))
T c= * * part caff_lt * * part cIMAGE / cvector_neg b0 f0 * * part cIMAGE / cvector_neg b0 f1 * * part cIMAGE / cvector_neg b0 * * part caff_lt f0 f1
+ (((vec (NUMERAL _0)) INSERT EMPTY) = ((IMAGE (\x. (vector_neg x))) ((vec (NUMERAL _0)) INSERT EMPTY))) |- (((IMAGE (\x. (vector_neg x))) ((vec (NUMERAL _0)) INSERT EMPTY)) = ((vec (NUMERAL _0)) INSERT EMPTY))
T c==> c= * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cIMAGE / cvector_neg b0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY c= * * part cIMAGE / cvector_neg b0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cINSERT cvec cNUMERAL c_0 part cEMPTY
+ |- (((vec (NUMERAL _0)) INSERT EMPTY) = ((IMAGE (\x. (vector_neg x))) ((vec (NUMERAL _0)) INSERT EMPTY)))
T c= * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cIMAGE / cvector_neg b0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (T = (((aff_lt ((IMAGE (\x. (vector_neg x))) ((vec (NUMERAL _0)) INSERT EMPTY))) ((IMAGE (\x. (vector_neg x))) e)) = ((IMAGE (\x. (vector_neg x))) ((aff_lt ((vec (NUMERAL _0)) INSERT EMPTY)) e))))
T c= cT c= * * part caff_lt * * part cIMAGE / cvector_neg b0 * * part cINSERT cvec cNUMERAL c_0 part cEMPTY * * part cIMAGE / cvector_neg b0 f0 * * part cIMAGE / cvector_neg b0 * * part caff_lt * * part cINSERT cvec cNUMERAL c_0 part cEMPTY f0
