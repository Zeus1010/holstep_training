N Fnjlbxs.lmfun_continuous
C |- ((real_continuous_on lmfun) UNIV)
T creal_continuous_on part clmfun part cUNIV
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_CONTINUOUS_ON_CONST
A |- (!s. (!c. ((real_continuous_on (\x. c)) s)))
T creal_continuous_on / f0 f1
D REAL_CONTINUOUS_ON_ID
A |- (!s. ((real_continuous_on (\x. x)) s))
T creal_continuous_on / b0 f0
D REAL_CONTINUOUS_ON_RMUL
A |- (!f. (!c. (!s. (((real_continuous_on f) s) ==> ((real_continuous_on (\x. ((real_mul (f x)) c))) s)))))
T c==> creal_continuous_on f0 f1 creal_continuous_on / creal_mul * f0 b0 f2 f1
D REAL_CONTINUOUS_ON_SUB
A |- (!f. (!g. (!s. ((((real_continuous_on f) s) /\ ((real_continuous_on g) s)) ==> ((real_continuous_on (\x. ((real_sub (f x)) (g x)))) s)))))
T c==> c/\ creal_continuous_on f0 f1 creal_continuous_on f2 f1 creal_continuous_on / creal_sub * f0 b0 * f2 b0 f1
D Sphere.lmfun
A |- (!h. ((lmfun h) = (((COND ((real_le h) h0)) ((real_div ((real_sub h0) h)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= clmfun f0 cCOND creal_le f0 ch0 creal_div creal_sub ch0 f0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
D Seq.eq_ext
A |- (!f. (!g. ((!x. ((f x) = (g x))) = (f = g))))
T c= ! c= * f0 b0 * f1 b0 c= f0 f1
D Fnjlbxs.piecewise_real_continuous_univ
A |- (!t. (!f1. (!f2. (!f. ((((real_continuous_on f1) UNIV) /\ (((real_continuous_on f2) UNIV) /\ (((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x))))))) ==> ((real_continuous_on f) UNIV))))))
T c==> c/\ creal_continuous_on f0 part cUNIV c/\ creal_continuous_on f1 part cUNIV c/\ c= * f0 f2 * f1 f2 c= f3 / cCOND creal_le b0 f2 * f0 b0 * f1 b0 creal_continuous_on f3 part cUNIV
+ ((f = g) = (!x. ((f x) = (g x)))) |- ((!x. ((f x) = (g x))) = (f = g))
T c==> c= c= f0 f1 ! c= * f0 b0 * f1 b0 c= ! c= * f0 b0 * f1 b0 c= f0 f1
+ (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))), ((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV), ((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) |- ((((((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) ==> (T ==> ((real_continuous_on lmfun) UNIV))) ==> (((((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ T) ==> ((real_continuous_on lmfun) UNIV))) = (((((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ T) ==> ((real_continuous_on lmfun) UNIV)))
T c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c==> creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c= c==> c==> c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> cT creal_continuous_on part clmfun part cUNIV c==> c/\ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cT creal_continuous_on part clmfun part cUNIV c==> c/\ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cT creal_continuous_on part clmfun part cUNIV
+ |- ((((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) /\ (((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV) /\ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))))) /\ ((((real_continuous_on lmfun) UNIV) = T) ==> ((real_continuous_on lmfun) UNIV)))
T c/\ c/\ creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c/\ creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_continuous_on part clmfun part cUNIV cT creal_continuous_on part clmfun part cUNIV
+ |- (((!f. (!g. (!s. ((((real_continuous_on f) s) /\ ((real_continuous_on g) s)) ==> ((real_continuous_on (\x. ((real_sub (f x)) (g x)))) s))))) ==> ((\f. (!g. (!s. ((((real_continuous_on f) s) /\ ((real_continuous_on g) s)) ==> ((real_continuous_on (\x. ((real_sub (f x)) (g x)))) s))))) f)) = ((\f. (!g. (!s. ((((real_continuous_on f) s) /\ ((real_continuous_on g) s)) ==> ((real_continuous_on (\x. ((real_sub (f x)) (g x)))) s))))) f))
T c= c==> ! ! ! c==> c/\ creal_continuous_on b0 b2 creal_continuous_on b1 b2 creal_continuous_on / creal_sub * b0 b3 * b1 b3 b2 * / ! ! c==> c/\ creal_continuous_on b0 b2 creal_continuous_on b1 b2 creal_continuous_on / creal_sub * b0 b3 * b1 b3 b2 f0 * / ! ! c==> c/\ creal_continuous_on b0 b2 creal_continuous_on b1 b2 creal_continuous_on / creal_sub * b0 b3 * b1 b3 b2 f0
- |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ |- ((A /\ T) = A)
T c= c/\ f0 cT f0
+ (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) ==> ((((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV) /\ ((((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ T)) ==> ((real_continuous_on lmfun) UNIV)))
T c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c==> c/\ creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c/\ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cT creal_continuous_on part clmfun part cUNIV
+ |- ((\f1. (!f2. (!f. ((((real_continuous_on f1) UNIV) /\ (((real_continuous_on f2) UNIV) /\ (((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x))))))) ==> ((real_continuous_on f) UNIV))))) f1)
T * / ! ! c==> c/\ creal_continuous_on b0 part cUNIV c/\ creal_continuous_on b1 part cUNIV c/\ c= * b0 f0 * b1 f0 c= b2 / cCOND creal_le b3 f0 * b0 b3 * b1 b3 creal_continuous_on b2 part cUNIV f1
- (~ (~ (~ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c~ c~ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x)))), ((f1 t) = (f2 t)), ((real_continuous_on f1) UNIV), ((real_continuous_on f2) UNIV) |- ((real_continuous_on f) UNIV)
T c==> c= f0 / cCOND creal_le b0 f1 * f2 b0 * f3 b0 c==> c= * f2 f1 * f3 f1 c==> creal_continuous_on f2 part cUNIV c==> creal_continuous_on f3 part cUNIV creal_continuous_on f0 part cUNIV
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- (T = (T /\ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))))
T c= cT c/\ cT c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((((real_continuous_on f1) UNIV) /\ (((real_continuous_on f2) UNIV) /\ (((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x))))))) ==> ((real_continuous_on f) UNIV)) ==> (((real_continuous_on f1) UNIV) ==> ((((real_continuous_on f2) UNIV) /\ (((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x)))))) ==> ((real_continuous_on f) UNIV)))) = (((real_continuous_on f1) UNIV) ==> ((((real_continuous_on f2) UNIV) /\ (((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x)))))) ==> ((real_continuous_on f) UNIV))))
T c= c==> c==> c/\ creal_continuous_on f0 part cUNIV c/\ creal_continuous_on f1 part cUNIV c/\ c= * f0 f2 * f1 f2 c= f3 / cCOND creal_le b0 f2 * f0 b0 * f1 b0 creal_continuous_on f3 part cUNIV c==> creal_continuous_on f0 part cUNIV c==> c/\ creal_continuous_on f1 part cUNIV c/\ c= * f0 f2 * f1 f2 c= f3 / cCOND creal_le b0 f2 * f0 b0 * f1 b0 creal_continuous_on f3 part cUNIV c==> creal_continuous_on f0 part cUNIV c==> c/\ creal_continuous_on f1 part cUNIV c/\ c= * f0 f2 * f1 f2 c= f3 / cCOND creal_le b0 f2 * f0 b0 * f1 b0 creal_continuous_on f3 part cUNIV
+ (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))), (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))), ((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV), ((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) |- ((real_continuous_on lmfun) UNIV)
T c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c==> creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV creal_continuous_on part clmfun part cUNIV
+ (((real_continuous_on lmfun) UNIV) = T) |- (T = ((real_continuous_on lmfun) UNIV))
T c==> c= creal_continuous_on part clmfun part cUNIV cT c= cT creal_continuous_on part clmfun part cUNIV
+ (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) /\ (((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV) /\ ((((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ T))) ==> ((real_continuous_on lmfun) UNIV))
T c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c/\ creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c/\ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cT creal_continuous_on part clmfun part cUNIV
+ (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))), ((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) |- (((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV) ==> (((((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ T) ==> ((real_continuous_on lmfun) UNIV)))
T c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c==> creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c==> c/\ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cT creal_continuous_on part clmfun part cUNIV
+ |- ((\f2. (!f. ((((real_continuous_on f1) UNIV) /\ (((real_continuous_on f2) UNIV) /\ (((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x))))))) ==> ((real_continuous_on f) UNIV)))) f2)
T * / ! c==> c/\ creal_continuous_on f0 part cUNIV c/\ creal_continuous_on b0 part cUNIV c/\ c= * f0 f1 * b0 f1 c= b1 / cCOND creal_le b2 f1 * f0 b2 * b0 b2 creal_continuous_on b1 part cUNIV f2
+ T, (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))), (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))), ((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV), ((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) |- (T /\ ((real_continuous_on lmfun) UNIV))
T c==> cT c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c==> creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c/\ cT creal_continuous_on part clmfun part cUNIV
+ |- (((((real_continuous_on (\x. ((real_sub h0) x))) UNIV) /\ ((((real_continuous_on (\x. ((real_mul ((real_sub h0) x)) (real_inv ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))))) UNIV) = T) ==> ((real_continuous_on (\x. ((real_mul ((real_sub h0) x)) (real_inv ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))))) UNIV))) ==> ((((real_continuous_on (\x. ((real_sub h0) x))) UNIV) ==> (((real_continuous_on (\x. ((real_mul ((real_sub h0) x)) (real_inv ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))))) UNIV) = T)) ==> ((real_continuous_on (\x. ((real_mul ((real_sub h0) x)) (real_inv ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))))) UNIV))) = ((((real_continuous_on (\x. ((real_sub h0) x))) UNIV) ==> (((real_continuous_on (\x. ((real_mul ((real_sub h0) x)) (real_inv ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))))) UNIV) = T)) ==> ((real_continuous_on (\x. ((real_mul ((real_sub h0) x)) (real_inv ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))))) UNIV)))
T c= c==> c/\ creal_continuous_on / creal_sub ch0 b0 part cUNIV c==> c= creal_continuous_on / creal_mul creal_sub ch0 b0 creal_inv creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV cT creal_continuous_on / creal_mul creal_sub ch0 b0 creal_inv creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c==> c==> creal_continuous_on / creal_sub ch0 b0 part cUNIV c= creal_continuous_on / creal_mul creal_sub ch0 b0 creal_inv creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV cT creal_continuous_on / creal_mul creal_sub ch0 b0 creal_inv creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c==> c==> creal_continuous_on / creal_sub ch0 b0 part cUNIV c= creal_continuous_on / creal_mul creal_sub ch0 b0 creal_inv creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV cT creal_continuous_on / creal_mul creal_sub ch0 b0 creal_inv creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV
- |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- ((((real_continuous_on lmfun) UNIV) = T) ==> ((real_continuous_on lmfun) UNIV))
T c==> c= creal_continuous_on part clmfun part cUNIV cT creal_continuous_on part clmfun part cUNIV
+ |- (((T /\ A) = A) /\ ((A /\ T) = A))
T c/\ c= c/\ cT f0 f0 c= c/\ f0 cT f0
+ |- ((\t. (!f1. (!f2. (!f. ((((real_continuous_on f1) UNIV) /\ (((real_continuous_on f2) UNIV) /\ (((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x))))))) ==> ((real_continuous_on f) UNIV)))))) t)
T * / ! ! ! c==> c/\ creal_continuous_on b1 part cUNIV c/\ creal_continuous_on b2 part cUNIV c/\ c= * b1 b0 * b2 b0 c= b3 / cCOND creal_le b4 b0 * b1 b4 * b2 b4 creal_continuous_on b3 part cUNIV f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((real_continuous_on f1) UNIV), ((real_continuous_on f2) UNIV) |- (((f1 t) = (f2 t)) ==> ((f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x)))) ==> ((real_continuous_on f) UNIV)))
T c==> creal_continuous_on f0 part cUNIV c==> creal_continuous_on f1 part cUNIV c==> c= * f0 f2 * f1 f2 c==> c= f3 / cCOND creal_le b0 f2 * f0 b0 * f1 b0 creal_continuous_on f3 part cUNIV
+ |- (((!f. (!c. (!s. (((real_continuous_on f) s) ==> ((real_continuous_on (\x. ((real_mul (f x)) c))) s))))) ==> ((\f. (!c. (!s. (((real_continuous_on f) s) ==> ((real_continuous_on (\x. ((real_mul (f x)) c))) s))))) f)) = ((\f. (!c. (!s. (((real_continuous_on f) s) ==> ((real_continuous_on (\x. ((real_mul (f x)) c))) s))))) f))
T c= c==> ! ! ! c==> creal_continuous_on b0 b2 creal_continuous_on / creal_mul * b0 b3 b1 b2 * / ! ! c==> creal_continuous_on b0 b2 creal_continuous_on / creal_mul * b0 b3 b1 b2 f0 * / ! ! c==> creal_continuous_on b0 b2 creal_continuous_on / creal_mul * b0 b3 b1 b2 f0
+ |- ((\c. ((real_continuous_on (\x. c)) s)) c)
T * / creal_continuous_on / b0 f0 f1
+ |- ((((real_continuous_on (\x. h0)) UNIV) /\ T) = (((real_continuous_on (\x. h0)) UNIV) /\ ((real_continuous_on (\x. x)) UNIV)))
T c= c/\ creal_continuous_on / ch0 part cUNIV cT c/\ creal_continuous_on / ch0 part cUNIV creal_continuous_on / b0 part cUNIV
+ |- (((!c. ((real_continuous_on (\x. c)) s)) ==> ((\c. ((real_continuous_on (\x. c)) s)) c)) = ((\c. ((real_continuous_on (\x. c)) s)) c))
T c= c==> ! creal_continuous_on / b0 f0 * / creal_continuous_on / b0 f0 f1 * / creal_continuous_on / b0 f0 f1
+ |- (((!g. (!s. ((((real_continuous_on f) s) /\ ((real_continuous_on g) s)) ==> ((real_continuous_on (\x. ((real_sub (f x)) (g x)))) s)))) ==> ((\g. (!s. ((((real_continuous_on f) s) /\ ((real_continuous_on g) s)) ==> ((real_continuous_on (\x. ((real_sub (f x)) (g x)))) s)))) g)) = ((\g. (!s. ((((real_continuous_on f) s) /\ ((real_continuous_on g) s)) ==> ((real_continuous_on (\x. ((real_sub (f x)) (g x)))) s)))) g))
T c= c==> ! ! c==> c/\ creal_continuous_on f0 b1 creal_continuous_on b0 b1 creal_continuous_on / creal_sub * f0 b2 * b0 b2 b1 * / ! c==> c/\ creal_continuous_on f0 b1 creal_continuous_on b0 b1 creal_continuous_on / creal_sub * f0 b2 * b0 b2 b1 f1 * / ! c==> c/\ creal_continuous_on f0 b1 creal_continuous_on b0 b1 creal_continuous_on / creal_sub * f0 b2 * b0 b2 b1 f1
+ (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))), (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))), ((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV), ((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) |- (T ==> ((real_continuous_on lmfun) UNIV))
T c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c==> creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c==> cT creal_continuous_on part clmfun part cUNIV
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((T /\ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))) = T)
T c= c/\ cT c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cT
+ (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))), (((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) /\ (((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV) /\ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))))) |- ((((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) /\ (((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV) /\ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))))) /\ (((real_continuous_on lmfun) UNIV) = T))
T c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c/\ creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c/\ creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_continuous_on part clmfun part cUNIV cT
- |- ((~ (~ (~ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))))) ==> F)
T c==> c~ c~ c~ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((real_continuous_on (\x. ((real_sub h0) x))) UNIV) /\ ((((real_continuous_on (\x. ((real_mul ((real_sub h0) x)) (real_inv ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))))) UNIV) = T) ==> ((real_continuous_on (\x. ((real_mul ((real_sub h0) x)) (real_inv ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))))) UNIV)))
T c/\ creal_continuous_on / creal_sub ch0 b0 part cUNIV c==> c= creal_continuous_on / creal_mul creal_sub ch0 b0 creal_inv creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV cT creal_continuous_on / creal_mul creal_sub ch0 b0 creal_inv creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV
+ |- ((!x. t) = t)
T c= ! f0 f0
+ |- ((real_continuous_on (\x. ((real_mul ((real_sub h0) x)) (real_inv ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))))) UNIV)
T creal_continuous_on / creal_mul creal_sub ch0 b0 creal_inv creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV
- |- (~ (~ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))))
T c~ c~ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\y. (((real_div x) y) = ((real_mul x) (real_inv y)))) y)
T * / c= creal_div f0 b0 creal_mul f0 creal_inv b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (T = (!x. ((((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = ((\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) x))))
T c= cT ! c= cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / cCOND creal_le b1 ch0 creal_div creal_sub ch0 b1 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0
+ |- ((!x. ((lmfun x) = ((\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) x))) = (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))))
T c= ! c= clmfun b0 * / cCOND creal_le b1 ch0 creal_div creal_sub ch0 b1 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!s. ((real_continuous_on (\x. x)) s)) ==> ((\s. ((real_continuous_on (\x. x)) s)) s)) = ((\s. ((real_continuous_on (\x. x)) s)) s))
T c= c==> ! creal_continuous_on / b1 b0 * / creal_continuous_on / b1 b0 f0 * / creal_continuous_on / b1 b0 f0
+ |- (((!f1. (!f2. (!f. ((((real_continuous_on f1) UNIV) /\ (((real_continuous_on f2) UNIV) /\ (((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x))))))) ==> ((real_continuous_on f) UNIV))))) ==> ((\f1. (!f2. (!f. ((((real_continuous_on f1) UNIV) /\ (((real_continuous_on f2) UNIV) /\ (((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x))))))) ==> ((real_continuous_on f) UNIV))))) f1)) = ((\f1. (!f2. (!f. ((((real_continuous_on f1) UNIV) /\ (((real_continuous_on f2) UNIV) /\ (((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x))))))) ==> ((real_continuous_on f) UNIV))))) f1))
T c= c==> ! ! ! c==> c/\ creal_continuous_on b0 part cUNIV c/\ creal_continuous_on b1 part cUNIV c/\ c= * b0 f0 * b1 f0 c= b2 / cCOND creal_le b3 f0 * b0 b3 * b1 b3 creal_continuous_on b2 part cUNIV * / ! ! c==> c/\ creal_continuous_on b0 part cUNIV c/\ creal_continuous_on b1 part cUNIV c/\ c= * b0 f0 * b1 f0 c= b2 / cCOND creal_le b3 f0 * b0 b3 * b1 b3 creal_continuous_on b2 part cUNIV f1 * / ! ! c==> c/\ creal_continuous_on b0 part cUNIV c/\ creal_continuous_on b1 part cUNIV c/\ c= * b0 f0 * b1 f0 c= b2 / cCOND creal_le b3 f0 * b0 b3 * b1 b3 creal_continuous_on b2 part cUNIV f1
- |- (((!y. (((real_div x) y) = ((real_mul x) (real_inv y)))) ==> ((\y. (((real_div x) y) = ((real_mul x) (real_inv y)))) y)) = ((\y. (((real_div x) y) = ((real_mul x) (real_inv y)))) y))
T c= c==> ! c= creal_div f0 b0 creal_mul f0 creal_inv b0 * / c= creal_div f0 b0 creal_mul f0 creal_inv b0 f1 * / c= creal_div f0 b0 creal_mul f0 creal_inv b0 f1
- (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x)))), ((f1 t) = (f2 t)), ((real_continuous_on f1) UNIV), ((real_continuous_on f2) UNIV) |- ((f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x)))) /\ ((real_continuous_on f) UNIV))
T c==> c= f0 / cCOND creal_le b0 f1 * f2 b0 * f3 b0 c==> c= * f2 f1 * f3 f1 c==> creal_continuous_on f2 part cUNIV c==> creal_continuous_on f3 part cUNIV c/\ c= f0 / cCOND creal_le b0 f1 * f2 b0 * f3 b0 creal_continuous_on f0 part cUNIV
- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))), (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))), ((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV), ((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) |- ((((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (T ==> ((real_continuous_on lmfun) UNIV)))
T c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c==> creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c/\ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> cT creal_continuous_on part clmfun part cUNIV
- |- (((!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y))))) ==> ((\x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y))))) x)) = ((\x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y))))) x))
T c= c==> ! ! c= creal_div b0 b1 creal_mul b0 creal_inv b1 * / ! c= creal_div b0 b1 creal_mul b0 creal_inv b1 f0 * / ! c= creal_div b0 b1 creal_mul b0 creal_inv b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV), ((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) |- ((((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) ==> ((lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) ==> ((real_continuous_on lmfun) UNIV)))
T c==> creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c==> creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c==> c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_continuous_on part clmfun part cUNIV
+ |- (((!s. ((((real_continuous_on f) s) /\ ((real_continuous_on g) s)) ==> ((real_continuous_on (\x. ((real_sub (f x)) (g x)))) s))) ==> ((\s. ((((real_continuous_on f) s) /\ ((real_continuous_on g) s)) ==> ((real_continuous_on (\x. ((real_sub (f x)) (g x)))) s))) s)) = ((\s. ((((real_continuous_on f) s) /\ ((real_continuous_on g) s)) ==> ((real_continuous_on (\x. ((real_sub (f x)) (g x)))) s))) s))
T c= c==> ! c==> c/\ creal_continuous_on f0 b0 creal_continuous_on f1 b0 creal_continuous_on / creal_sub * f0 b1 * f1 b1 b0 * / c==> c/\ creal_continuous_on f0 b0 creal_continuous_on f1 b0 creal_continuous_on / creal_sub * f0 b1 * f1 b1 b0 f2 * / c==> c/\ creal_continuous_on f0 b0 creal_continuous_on f1 b0 creal_continuous_on / creal_sub * f0 b1 * f1 b1 b0 f2
+ |- ((((real_continuous_on f) s) /\ ((real_continuous_on g) s)) ==> (((real_continuous_on (\x. ((real_sub (f x)) (g x)))) s) = T))
T c==> c/\ creal_continuous_on f0 f1 creal_continuous_on f2 f1 c= creal_continuous_on / creal_sub * f0 b0 * f2 b0 f1 cT
+ |- (((((real_continuous_on (\x. ((real_sub h0) x))) UNIV) = T) ==> ((real_continuous_on (\x. ((real_sub h0) x))) UNIV)) = ((((real_continuous_on (\x. h0)) UNIV) /\ ((real_continuous_on (\x. x)) UNIV)) /\ ((((real_continuous_on (\x. ((real_sub h0) x))) UNIV) = T) ==> ((real_continuous_on (\x. ((real_sub h0) x))) UNIV))))
T c= c==> c= creal_continuous_on / creal_sub ch0 b0 part cUNIV cT creal_continuous_on / creal_sub ch0 b0 part cUNIV c/\ c/\ creal_continuous_on / ch0 part cUNIV creal_continuous_on / b0 part cUNIV c==> c= creal_continuous_on / creal_sub ch0 b0 part cUNIV cT creal_continuous_on / creal_sub ch0 b0 part cUNIV
- |- ((T ==> A) = A)
T c= c==> cT f0 f0
+ |- ((real_continuous_on (\x. ((real_sub h0) x))) UNIV)
T creal_continuous_on / creal_sub ch0 b0 part cUNIV
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((A /\ B) ==> C) ==> (A ==> (B ==> C)))
T c==> c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
- |- ((\x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y))))) x)
T * / ! c= creal_div b0 b1 creal_mul b0 creal_inv b1 f0
+ |- (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((((real_continuous_on (\x. h0)) UNIV) /\ ((real_continuous_on (\x. x)) UNIV)) ==> (((real_continuous_on (\x. ((real_sub h0) x))) UNIV) = T)) ==> ((real_continuous_on (\x. ((real_sub h0) x))) UNIV)) = ((real_continuous_on (\x. ((real_sub h0) x))) UNIV))
T c= c==> c==> c/\ creal_continuous_on / ch0 part cUNIV creal_continuous_on / b0 part cUNIV c= creal_continuous_on / creal_sub ch0 b0 part cUNIV cT creal_continuous_on / creal_sub ch0 b0 part cUNIV creal_continuous_on / creal_sub ch0 b0 part cUNIV
+ ((real_continuous_on f1) UNIV), ((real_continuous_on f2) UNIV) |- ((((((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x))))) ==> ((real_continuous_on f) UNIV)) ==> (((f1 t) = (f2 t)) ==> ((f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x)))) ==> ((real_continuous_on f) UNIV)))) = (((f1 t) = (f2 t)) ==> ((f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x)))) ==> ((real_continuous_on f) UNIV))))
T c==> creal_continuous_on f0 part cUNIV c==> creal_continuous_on f1 part cUNIV c= c==> c==> c/\ c= * f0 f2 * f1 f2 c= f3 / cCOND creal_le b0 f2 * f0 b0 * f1 b0 creal_continuous_on f3 part cUNIV c==> c= * f0 f2 * f1 f2 c==> c= f3 / cCOND creal_le b0 f2 * f0 b0 * f1 b0 creal_continuous_on f3 part cUNIV c==> c= * f0 f2 * f1 f2 c==> c= f3 / cCOND creal_le b0 f2 * f0 b0 * f1 b0 creal_continuous_on f3 part cUNIV
+ |- (((!g. ((f = g) = (!x. ((f x) = (g x))))) ==> ((\g. ((f = g) = (!x. ((f x) = (g x))))) g)) = ((\g. ((f = g) = (!x. ((f x) = (g x))))) g))
T c= c==> ! c= c= f0 b0 ! c= * f0 b1 * b0 b1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) /\ (((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV) /\ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))))
T c/\ creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c/\ creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((((real_continuous_on (\x. h0)) UNIV) /\ ((real_continuous_on (\x. x)) UNIV)) /\ ((((real_continuous_on (\x. ((real_sub h0) x))) UNIV) = T) ==> ((real_continuous_on (\x. ((real_sub h0) x))) UNIV))) ==> (((((real_continuous_on (\x. h0)) UNIV) /\ ((real_continuous_on (\x. x)) UNIV)) ==> (((real_continuous_on (\x. ((real_sub h0) x))) UNIV) = T)) ==> ((real_continuous_on (\x. ((real_sub h0) x))) UNIV))) = (((((real_continuous_on (\x. h0)) UNIV) /\ ((real_continuous_on (\x. x)) UNIV)) ==> (((real_continuous_on (\x. ((real_sub h0) x))) UNIV) = T)) ==> ((real_continuous_on (\x. ((real_sub h0) x))) UNIV)))
T c= c==> c/\ c/\ creal_continuous_on / ch0 part cUNIV creal_continuous_on / b0 part cUNIV c==> c= creal_continuous_on / creal_sub ch0 b0 part cUNIV cT creal_continuous_on / creal_sub ch0 b0 part cUNIV c==> c==> c/\ creal_continuous_on / ch0 part cUNIV creal_continuous_on / b0 part cUNIV c= creal_continuous_on / creal_sub ch0 b0 part cUNIV cT creal_continuous_on / creal_sub ch0 b0 part cUNIV c==> c==> c/\ creal_continuous_on / ch0 part cUNIV creal_continuous_on / b0 part cUNIV c= creal_continuous_on / creal_sub ch0 b0 part cUNIV cT creal_continuous_on / creal_sub ch0 b0 part cUNIV
+ |- ((\c. (!s. (((real_continuous_on f) s) ==> ((real_continuous_on (\x. ((real_mul (f x)) c))) s)))) c)
T * / ! c==> creal_continuous_on f0 b1 creal_continuous_on / creal_mul * f0 b2 b0 b1 f1
- (~ (~ (~ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))))) |- ((~ (~ (~ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))))) /\ F)
T c==> c~ c~ c~ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c~ c~ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ ((real_continuous_on f2) UNIV) |- (((real_continuous_on f2) UNIV) /\ (((real_continuous_on f1) UNIV) ==> (((f1 t) = (f2 t)) ==> ((f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x)))) ==> ((real_continuous_on f) UNIV)))))
T c==> creal_continuous_on f0 part cUNIV c/\ creal_continuous_on f0 part cUNIV c==> creal_continuous_on f1 part cUNIV c==> c= * f1 f2 * f0 f2 c==> c= f3 / cCOND creal_le b0 f2 * f1 b0 * f0 b0 creal_continuous_on f3 part cUNIV
+ (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) ==> ((((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV) /\ ((((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ T)) ==> ((real_continuous_on lmfun) UNIV))) ==> ((((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) /\ (((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV) /\ ((((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ T))) ==> ((real_continuous_on lmfun) UNIV))) = ((((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) /\ (((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV) /\ ((((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ T))) ==> ((real_continuous_on lmfun) UNIV)))
T c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c==> creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c==> c/\ creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c/\ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cT creal_continuous_on part clmfun part cUNIV c==> c/\ creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c/\ creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c/\ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cT creal_continuous_on part clmfun part cUNIV c==> c/\ creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c/\ creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c/\ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cT creal_continuous_on part clmfun part cUNIV
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!x. ((((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = ((\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) x))) = (!x. ((lmfun x) = ((\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) x))))
T c= ! c= cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / cCOND creal_le b1 ch0 creal_div creal_sub ch0 b1 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 ! c= clmfun b0 * / cCOND creal_le b1 ch0 creal_div creal_sub ch0 b1 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) = (T /\ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))))
T c= c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cT c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((real_continuous_on f1) UNIV) |- ((((((real_continuous_on f2) UNIV) /\ (((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x)))))) ==> ((real_continuous_on f) UNIV)) ==> (((real_continuous_on f2) UNIV) ==> ((((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x))))) ==> ((real_continuous_on f) UNIV)))) = (((real_continuous_on f2) UNIV) ==> ((((f1 t) = (f2 t)) /\ (f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x))))) ==> ((real_continuous_on f) UNIV))))
T c==> creal_continuous_on f0 part cUNIV c= c==> c==> c/\ creal_continuous_on f1 part cUNIV c/\ c= * f0 f2 * f1 f2 c= f3 / cCOND creal_le b0 f2 * f0 b0 * f1 b0 creal_continuous_on f3 part cUNIV c==> creal_continuous_on f1 part cUNIV c==> c/\ c= * f0 f2 * f1 f2 c= f3 / cCOND creal_le b0 f2 * f0 b0 * f1 b0 creal_continuous_on f3 part cUNIV c==> creal_continuous_on f1 part cUNIV c==> c/\ c= * f0 f2 * f1 f2 c= f3 / cCOND creal_le b0 f2 * f0 b0 * f1 b0 creal_continuous_on f3 part cUNIV
+ (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((((real_continuous_on (\x. ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))))) UNIV) /\ (((real_continuous_on (\x. (real_of_num (NUMERAL _0)))) UNIV) /\ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))))) ==> (((real_continuous_on lmfun) UNIV) = T))
T c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ creal_continuous_on / creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 part cUNIV c/\ creal_continuous_on / creal_of_num cNUMERAL c_0 part cUNIV c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_continuous_on part clmfun part cUNIV cT
+ (((real_continuous_on lmfun) UNIV) = T) |- ((((real_continuous_on lmfun) UNIV) = T) /\ ((real_continuous_on lmfun) UNIV))
T c==> c= creal_continuous_on part clmfun part cUNIV cT c/\ c= creal_continuous_on part clmfun part cUNIV cT creal_continuous_on part clmfun part cUNIV
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((lmfun = (\x. (((COND ((real_le x) h0)) ((real_div ((real_sub h0) x)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) /\ ((real_continuous_on lmfun) UNIV))
T c==> c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= part clmfun / cCOND creal_le b0 ch0 creal_div creal_sub ch0 b0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_continuous_on part clmfun part cUNIV
- |- ((real_neg ((real_sub ((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((real_gt x) y) = ((real_lt y) x))
T c= creal_gt f0 f1 creal_lt f1 f0
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- ((x = y) = ((real_of_int x) = (real_of_int y)))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (~ (~ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))))) ==> F) ==> (~ (~ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))))) = (~ (~ (((real_div ((real_sub h0) h0)) ((real_sub h0) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))))))
T c= c==> c==> c~ c~ c~ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c~ c~ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c~ c= creal_div creal_sub ch0 ch0 creal_sub ch0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((f1 t) = (f2 t)), ((real_continuous_on f1) UNIV), ((real_continuous_on f2) UNIV) |- (((f1 t) = (f2 t)) /\ ((f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x)))) ==> ((real_continuous_on f) UNIV)))
T c==> c= * f0 f1 * f2 f1 c==> creal_continuous_on f0 part cUNIV c==> creal_continuous_on f2 part cUNIV c/\ c= * f0 f1 * f2 f1 c==> c= f3 / cCOND creal_le b0 f1 * f0 b0 * f2 b0 creal_continuous_on f3 part cUNIV
- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((f1 t) = (f2 t)), ((real_continuous_on f1) UNIV), ((real_continuous_on f2) UNIV) |- ((f = (\x. (((COND ((real_le x) t)) (f1 x)) (f2 x)))) ==> ((real_continuous_on f) UNIV))
T c==> c= * f0 f1 * f2 f1 c==> creal_continuous_on f0 part cUNIV c==> creal_continuous_on f2 part cUNIV c==> c= f3 / cCOND creal_le b0 f1 * f0 b0 * f2 b0 creal_continuous_on f3 part cUNIV
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
