N Aq56.AQ6
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cMEM crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D TRUTH
A |- T
T cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hexagons.disj1
A |- (A ==> (A \/ B))
T c==> f0 c\/ f0 f1
D Nkezbfc_local.lemma
A |- (!A. (A \/ (~ A)))
T c\/ f0 c~ f0
D Seq.mem_seq1
A |- (!x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y))))
T c= cMEM f0 cCONS f1 cNIL c= f0 f1
D Seq.mem_cat
A |- (!x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))))
T c= cMEM f0 ccat f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
D Seq2.APPEND_cat
A |- (APPEND = cat)
T c= part cAPPEND part ccat
D Seq2.next_prev_id
A |- (!x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x))))
T c==> cuniq f0 c= cnext_el f0 cprev_el f0 f1 f1
D List_hypermap.uniq_find_face
A |- (!d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d)))))
T c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.transform_list
A |- (!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))))
T c= ctransform_list f0 f1 c, f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f3 c, f2 f3 c, b5 cSND b4 cAPPEND creplace f3 cCONS cSND b4 cNIL f2 cCONS cFST b4 cNIL csplit_normal_list f0 f3 b3 b0 b2 cfind_face f0 b0 cprev_el f3 b1 cl'z f0 f2 f3 f1 cl'y f0 f3 f1
D Tame_defs2.ntrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.rtrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= crtrans f0 f1 f2 f3 f4 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.MEM2_replace
A |- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))))
T c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Pplhulj.marked_list_of_dart
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))))
T c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0
D Hojodcm.ytrans_mem_rtrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2
D Hojodcm.mem_ztrans_rtrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
D Hojodcm.z_not_eq_ytrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cytrans f0 f1 f2 f3 cNUMERAL c_0
D Hojodcm.PPLHULJ_v0
A |- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cindexf f5 cztrans f0 f1 f2 f3 cNUMERAL c_0 f4
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 c/\ c= cl'z f0 f6 f1 f4 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- ((~ (A ==> (A \/ B))) ==> F), (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) /\ ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
+ |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ |- ((((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))) = ((good_list L) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c= c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 c==> cgood_list f0 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3
- |- (((!s1. (!s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2)))))) ==> ((\s1. (!s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2)))))) s1)) = ((\s1. (!s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2)))))) s1))
T c= c==> ! ! c= cuniq ccat b0 b1 c/\ cuniq b0 c/\ c~ chas / cMEM b2 b0 b1 cuniq b1 * / ! c= cuniq ccat b0 b1 c/\ cuniq b0 c/\ c~ chas / cMEM b2 b0 b1 cuniq b1 f0 * / ! c= cuniq ccat b0 b1 c/\ cuniq b0 c/\ c~ chas / cMEM b2 b0 b1 cuniq b1 f0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f2 c~ cfinal_list f0 f1 c~ c= cztrans f0 f4 f1 f2 cNUMERAL c_0 cytrans f0 f4 f1 f2 cNUMERAL c_0 cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL
+ |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ztrans L) N) r) x) (NUMERAL _0))) = ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) (((((ztrans L) N) r) x) (NUMERAL _0))))
T c= c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f0 f3 f2 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f4 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f1 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f1 f3 f2 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f3 c==> c= cnext_el f3 f5 f4 c==> c==> c~ cfinal_list f0 f3 cMEM f4 f3 c==> c==> c~ cfinal_list f0 f3 cMEM f6 f3 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f0 f3 f2 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f4 c==> c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f1 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f1 f3 f2 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (!w. (((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 ! c==> * / c= cnext_el cfind_face f0 f2 f2 b1 b0 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
+ (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f4 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f4 f1 f2 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2
- |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- |- (((!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) ==> ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)) = ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x))
T c= c==> ! ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- (((!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) ==> ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N)) = ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1
- |- ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)
T * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
+ |- (((!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) ==> ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)) = ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L))
T c= c==> ! ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c\/ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cNIL f1 c= cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 c\/ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cNIL f1 c= cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
- |- ((!A. (A ==> (A \/ T))) = ((T ==> (T \/ T)) /\ (F ==> (F \/ T))))
T c= ! c==> b0 c\/ b0 cT c/\ c==> cT c\/ cT cT c==> cF c\/ cF cT
- |- ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y)))
T c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cztrans f0 f6 f2 f1 cNUMERAL c_0 f3 c==> cMEM f2 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f2 f1 c==> cMEM f1 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cFST cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1
- (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ |- ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)
T * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) |- ((((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) = ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c==> * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 c= c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 cMEM crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cMEM crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 cT
- |- ((((find_face L) x) = f) = ((\f. (((find_face L) x) = f)) f))
T c= c= cfind_face f0 f1 f2 * / c= cfind_face f0 f1 b0 f2
+ |- (((!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) ==> ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)) = ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2))
T c= c==> ! c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((\w. (((next_el ((find_face L) x)) x) = w)) w) /\ (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c/\ * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f0 f3 f2 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f4 c==> c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f1 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f1 f3 f2 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2
- |- (((!x'. (((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) x') ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))) ==> ((?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))) = ((?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z))))
T c= c==> ! c==> * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b1 b0 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b1 c==> c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c==> c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
+ |- (((!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) ==> ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)) = ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x))
T c= c==> ! c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
- ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) |- (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) = T)
T c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c= c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 cT
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (((MEM y) (list_of_darts L)) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> cMEM f3 clist_of_darts f0 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
+ (good_list L), (good_list_nodes L), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3
+ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) |- (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) /\ ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 c/\ c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cMEM crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
+ |- ((\d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d))))) x)
T * / ! c==> cuniq clist_of_darts b1 cuniq cfind_face b1 b0 f0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 cMEM crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0
+ |- (((!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f6 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((?f. (((find_face L) x) = f)) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cl'y f0 f1 f2 f4 c==> c= cl'z f0 f5 f1 f2 f6 c==> cMEM f1 f5 c==> cmarked_list f0 f5 f1 f2 c==> c? / c= cfind_face f0 f2 b0 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f7 cNIL f5 c= cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f7 cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 f7
- |- ((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) = ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1))
T c= c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f0 f3 f2 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f4 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f1 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cmarked_list f0 f1 f3 f2 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f3 c==> c= cnext_el f3 f5 f4 c==> c==> c~ cfinal_list f0 f3 cMEM f4 f3 c==> c==> c~ cfinal_list f0 f3 cMEM f6 f3 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((\f. (((find_face L) x) = f)) f) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = T)
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cl'y f0 f1 f2 f4 c==> c= cl'z f0 f5 f1 f2 f6 c==> cMEM f1 f5 c==> cmarked_list f0 f5 f1 f2 c= c==> * / c= cfind_face f0 f2 b0 f7 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 cNIL f5 c= cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 cT
- |- ((\x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) x)
T * / ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
+ (good_list L), (good_list_nodes L), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 cMEM crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((MEM z) r)), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> c==> c~ cfinal_list f1 f2 cMEM f5 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c==> c==> c~ cfinal_list f1 f2 cMEM f6 f2 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
- |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))
T c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
- |- ((((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z))) = T)
T c= c==> * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 cT
- (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) |- ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1)
T c==> c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c==> c==> c~ cfinal_list f1 f2 cMEM f5 f2 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3
+ (good_list L), (good_list_nodes L), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3
- |- (((!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) ==> ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)) = ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1))
T c= c==> ! ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) |- (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)
T c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((final_list L) r) \/ (~ ((final_list L) r))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> c\/ cfinal_list f0 f1 c~ cfinal_list f0 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
+ (((find_face L) y) = f) |- ((((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) f) y) z1)) = (FST (((((split_normal_list L) r) f) y) z1)))) = (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c= cfind_face f0 f1 f2 c= c\/ cMEM cSND csplit_normal_list f0 f3 f2 f1 f4 creplace f3 cCONS cSND csplit_normal_list f0 f3 f2 f1 f4 cNIL f5 c= cSND csplit_normal_list f0 f3 f2 f1 f4 cFST csplit_normal_list f0 f3 f2 f1 f4 c\/ cMEM cSND csplit_normal_list f0 f3 cfind_face f0 f1 f1 f4 creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f1 f1 f4 cNIL f5 c= cSND csplit_normal_list f0 f3 cfind_face f0 f1 f1 f4 cFST csplit_normal_list f0 f3 cfind_face f0 f1 f1 f4
+ |- (((((final_list L) r) \/ (~ ((final_list L) r))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))) = ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))))
T c= c==> c\/ cfinal_list f0 f1 c~ cfinal_list f0 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c==> c==> c~ cfinal_list f1 f2 cMEM f5 f2 c==> c==> c~ cfinal_list f1 f2 cMEM f6 f2 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cFST cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
- |- (((!ss1. (!ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2))))) ==> ((\ss1. (!ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2))))) ss1)) = ((\ss1. (!ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2))))) ss1))
T c= c==> ! ! c= cflatten ccat b0 b1 ccat cflatten b0 cflatten b1 * / ! c= cflatten ccat b0 b1 ccat cflatten b0 cflatten b1 f0 * / ! c= cflatten ccat b0 b1 ccat cflatten b0 cflatten b1 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f6 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c==> c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2
+ ((~ ((final_list L) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))), (((final_list L) r) \/ (~ ((final_list L) r))), ((MEM r) N) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))
T c==> c==> c~ cfinal_list f0 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 c==> c\/ cfinal_list f0 f1 c~ cfinal_list f0 f1 c==> cMEM f1 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = T)
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c= c==> * / c= cnext_el cfind_face f0 f2 f2 b0 f6 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f7 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f7 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f7 cT
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
- |- (T = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= cT c==> c~ ! c\/ b0 c~ b0 cF
- |- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ |- (((!x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) ==> ((\x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) (((((ztrans L) N) r) x) (NUMERAL _0)))) = ((\x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) (((((ztrans L) N) r) x) (NUMERAL _0))))
T c= c==> ! ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 * / ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0 * / ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- (((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) /\ ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cztrans f0 f6 f2 f1 cNUMERAL c_0 f3 c==> c/\ cuniq cflatten f6 c/\ call / c~ c= b0 cNIL f6 c/\ call * part cf_last f0 f6 c/\ call * part cloop_list f0 f6 ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f6 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f6 f2 f1 c/\ c/\ cuniq cflatten f6 c/\ call / c~ c= b0 cNIL f6 c/\ call * part cf_last f0 f6 c/\ call * part cloop_list f0 f6 ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 cMEM cSND cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cFST cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 cT
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((~ (z = y)) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cl'y f2 f3 f4 f1 c==> c= cl'z f2 f5 f3 f4 f0 c==> cMEM f3 f5 c==> cmarked_list f2 f5 f3 f4 c/\ c~ c= f0 f1 c\/ cMEM cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f6 creplace f3 cCONS cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f6 cNIL f5 c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f6 cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f6
- |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f6 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2
- |- (((!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) ==> ((\i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) i)) = ((\i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) i))
T c= c==> ! c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 * / c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 f4 * / c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 f4
- |- (((!s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2))))) ==> ((\s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2))))) s2)) = ((\s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2))))) s2))
T c= c==> ! c= cuniq ccat f0 b0 c/\ cuniq f0 c/\ c~ chas / cMEM b1 f0 b0 cuniq b0 * / c= cuniq ccat f0 b0 c/\ cuniq f0 c/\ c~ chas / cMEM b1 f0 b0 cuniq b0 f1 * / c= cuniq ccat f0 b0 c/\ cuniq f0 c/\ c~ chas / cMEM b1 f0 b0 cuniq b0 f1
- ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) |- (((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1))) = (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))
T c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c= c==> c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3
+ (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f6 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f6 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c==> cuniq cfind_face f0 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2
+ |- (((!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) ==> ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)) = ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1))
T c= c==> ! ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- (((find_face L) x) = f) |- ((((find_face L) x) = f) /\ (?f. (((find_face L) x) = f)))
T c==> c= cfind_face f0 f1 f2 c/\ c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))) N)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 clist_of_darts f0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f1 f3 f2 f6 c==> c= cztrans f1 f0 f3 f2 cNUMERAL c_0 f4 c==> cMEM f2 clist_of_darts f1 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f3 f2 cMEM cSND cCOND cfinal_list f1 f3 c, f0 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL f0 cCONS cFST csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cFST cCOND cfinal_list f1 f3 c, f0 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL f0 cCONS cFST csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2
+ |- (((!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) ==> ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N)) = ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N))
T c= c==> ! ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((!x'. (((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) x') ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) ==> ((?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) = ((?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f4 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f1 f2 c= c==> ! c==> * / c= cprev_el f1 cztrans f0 f4 f1 f2 cNUMERAL c_0 b1 b0 cMEM crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> c? / c= cprev_el f1 cztrans f0 f4 f1 f2 cNUMERAL c_0 b0 cMEM crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> c? / c= cprev_el f1 cztrans f0 f4 f1 f2 cNUMERAL c_0 b0 cMEM crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0
- |- (((!x'. (((\y. ((((l'y L) r) x) = y)) x') ==> (?y. ((((l'y L) r) x) = y)))) ==> ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y)))) = ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y))))
T c= c==> ! c==> * / c= cl'y f0 f1 f2 b1 b0 c? / c= cl'y f0 f1 f2 b1 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) |- ((((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z))) = (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))
T c==> * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 c= c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
- |- ((!A'. (A' \/ (~ A))) = ((!A. A) \/ (~ A)))
T c= ! c\/ b0 c~ f0 c\/ ! b0 c~ f0
- (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)) |- ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))
T c==> c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cztrans f0 f1 f2 f3 f4 c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
+ (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) /\ (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cztrans f0 f6 f2 f1 cNUMERAL c_0 f3 c==> cMEM f2 f6 c==> cmarked_list f0 f6 f2 f1 c/\ cuniq cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f2 c==> c= cnext_el f2 f4 f3 c==> c==> c~ cfinal_list f0 f2 cMEM f3 f2 c==> c==> c~ cfinal_list f0 f2 cMEM f5 f2 cMEM cSND cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cFST cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- (((!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ==> ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)) = ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1))
T c= c==> ! ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- (((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cztrans f0 f6 f2 f1 cNUMERAL c_0 f3 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f6 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f6 f2 f1 c==> c/\ cuniq cflatten f6 c/\ call / c~ c= b0 cNIL f6 c/\ call * part cf_last f0 f6 c/\ call * part cloop_list f0 f6 ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 cMEM cSND cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cFST cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((((final_list L) r) \/ (~ ((final_list L) r))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))) = ((((final_list L) r) \/ (~ ((final_list L) r))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))))
T c= c==> c\/ cfinal_list f0 f1 c~ cfinal_list f0 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 c==> c\/ cfinal_list f0 f1 c~ cfinal_list f0 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
+ (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f6 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1
+ (good_list L), (good_list_nodes L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f3 f2 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> c==> cfinal_list f0 f3 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f3 cs_flag_list f0 f1 f3 f2 c==> c= cl'y f0 f3 f2 f4 c==> c= cprev_el f3 f5 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f4 f4 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f4 f4 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f4 f4 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f4 f4 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f4 f4 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f4 f4 cprev_el f3 cl'z f0 f1 f3 f2
+ (good_list L), (good_list_nodes L), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((((marked_list L) N) r) x) |- ((((~ ((final_list L) r)) ==> ((MEM z) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c==> cmarked_list f0 f1 f2 f3 c= c==> c==> c~ cfinal_list f0 f2 cMEM f4 f2 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3
+ |- (((!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r))
T c= c==> ! ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
+ (good_list L), (good_list_nodes L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> c==> cfinal_list f0 f3 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f3 cs_flag_list f0 f1 f3 f2 c==> c= cl'y f0 f3 f2 f4 c==> c= cprev_el f3 f5 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f2 cl'y f0 f3 f2 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f2 cl'y f0 f3 f2 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f2 cl'y f0 f3 f2 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f2 cl'y f0 f3 f2 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f2 cl'y f0 f3 f2 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f2 cl'y f0 f3 f2 cprev_el f3 cl'z f0 f1 f3 f2
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- ((((MEM y) (list_of_darts L)) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c= c==> cMEM f3 clist_of_darts f0 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f2 c~ cfinal_list f0 f1 cMEM cytrans f0 f4 f1 f2 cNUMERAL c_0 clist_of_darts f0 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (?y. ((((l'y L) r) x) = y))
T c? / c= cl'y f0 f1 f2 b0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c==> c==> cfinal_list f0 f2 cflag_list f0 f3 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f3 f2 f1 c==> c= cl'y f0 f2 f1 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f3 f2 f1 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f2 c, f3 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cNIL f3 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cFST cCOND cfinal_list f0 f2 c, f3 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cNIL f3 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- |- ((!d. t) = t)
T c= ! f0 f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1
- |- ((!A. (A ==> (A \/ F))) = ((T ==> (T \/ F)) /\ (F ==> (F \/ F))))
T c= ! c==> b0 c\/ b0 cF c/\ c==> cT c\/ cT cF c==> cF c\/ cF cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f3 f1 f2 cFST cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f3 f1 f2
+ (good_list L), (good_list_nodes L), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3
+ |- ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f) |- (((next_el f) x) = w)
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c==> c= cfind_face f0 f1 f3 c= cnext_el f3 f1 f2
+ |- (((!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) ==> ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)) = ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
- |- (((!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) ==> ((\N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) N)) = ((\N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) N))
T c= c==> ! ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 * / ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 f1 * / ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 f1
+ |- (((!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f0 f3 f2 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f4 c==> c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f1 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f1 c==> cmarked_list f0 f1 f3 f2 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2
+ ((((l'y L) r) x) = y) |- ((((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))) = (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> c= cl'y f0 f1 f2 f3 c= c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f6 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f0 f3 f2 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f4 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f1 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f1 c==> cmarked_list f0 f1 f3 f2 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f3 c==> c= cnext_el f3 f5 f4 c==> c==> c~ cfinal_list f0 f3 cMEM f4 f3 c==> c==> c~ cfinal_list f0 f3 cMEM f6 f3 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> c~ cfinal_list f0 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cT
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 clist_of_darts f0 cT
+ |- ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)
T * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
- (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (((MEM z) r) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> cMEM f5 f1 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) /\ ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cztrans f0 f6 f2 f1 cNUMERAL c_0 f3 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f6 f2 f1 c==> c==> cfinal_list f0 f2 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f1 f2 c==> cMEM f2 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f2 f1 c/\ cuniq cfind_face f0 f1 cMEM cSND cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cFST cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cl'y f0 f1 f2 f4 c==> c= cl'z f0 f5 f1 f2 f6 c==> cMEM f1 f5 c==> cmarked_list f0 f5 f1 f2 c==> c= cfind_face f0 f2 f7 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 cNIL f5 c= cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8
+ (uniq (flatten N)), ((MEM r) N) |- (((uniq r) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))) = ((((uniq (flatten N)) /\ ((MEM r) N)) ==> (uniq r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> cuniq cflatten f0 c==> cMEM f1 f0 c= c==> cuniq f1 cMEM cSND cCOND cfinal_list f2 f1 c, f0 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f2 f1 cfind_face f2 f3 f3 cprev_el f1 cl'z f2 f0 f1 f4 cNIL f0 cCONS cFST csplit_normal_list f2 f1 cfind_face f2 f3 f3 cprev_el f1 cl'z f2 f0 f1 f4 cNIL cSND csplit_normal_list f2 f1 cfind_face f2 f3 f3 cprev_el f1 cl'z f2 f0 f1 f4 cFST cCOND cfinal_list f2 f1 c, f0 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f2 f1 cfind_face f2 f3 f3 cprev_el f1 cl'z f2 f0 f1 f4 cNIL f0 cCONS cFST csplit_normal_list f2 f1 cfind_face f2 f3 f3 cprev_el f1 cl'z f2 f0 f1 f4 cNIL cSND csplit_normal_list f2 f1 cfind_face f2 f3 f3 cprev_el f1 cl'z f2 f0 f1 f4 c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1 cMEM cSND cCOND cfinal_list f2 f1 c, f0 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f2 f1 cfind_face f2 f3 f3 cprev_el f1 cl'z f2 f0 f1 f4 cNIL f0 cCONS cFST csplit_normal_list f2 f1 cfind_face f2 f3 f3 cprev_el f1 cl'z f2 f0 f1 f4 cNIL cSND csplit_normal_list f2 f1 cfind_face f2 f3 f3 cprev_el f1 cl'z f2 f0 f1 f4 cFST cCOND cfinal_list f2 f1 c, f0 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f2 f1 cfind_face f2 f3 f3 cprev_el f1 cl'z f2 f0 f1 f4 cNIL f0 cCONS cFST csplit_normal_list f2 f1 cfind_face f2 f3 f3 cprev_el f1 cl'z f2 f0 f1 f4 cNIL cSND csplit_normal_list f2 f1 cfind_face f2 f3 f3 cprev_el f1 cl'z f2 f0 f1 f4
+ (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f3 f1 f2 cFST cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f3 f1 f2
- |- ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f)))
T c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ ((MEM r) N), ((final_list L) r) |- (T = ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))))
T c==> cMEM f0 f1 c==> cfinal_list f2 f0 c= cT cMEM cSND cCOND cfinal_list f2 f0 c, f1 f0 c, ccat creplace f0 cCONS cSND csplit_normal_list f2 f0 cfind_face f2 f3 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f2 f0 cfind_face f2 f3 f3 f4 cNIL cSND csplit_normal_list f2 f0 cfind_face f2 f3 f3 f4 cFST cCOND cfinal_list f2 f0 c, f1 f0 c, ccat creplace f0 cCONS cSND csplit_normal_list f2 f0 cfind_face f2 f3 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f2 f0 cfind_face f2 f3 f3 f4 cNIL cSND csplit_normal_list f2 f0 cfind_face f2 f3 f3 f4
+ |- ((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))))
T c= c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- A |- ((A ==> (A \/ B)) ==> (A \/ B))
T c==> f0 c==> c==> f0 c\/ f0 f1 c\/ f0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((uniq r) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f1 f3 f2 f6 c==> c= cztrans f1 f0 f3 f2 cNUMERAL c_0 f4 c==> cMEM f2 clist_of_darts f1 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f3 f2 c==> cuniq f3 cMEM cSND cCOND cfinal_list f1 f3 c, f0 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL f0 cCONS cFST csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cFST cCOND cfinal_list f1 f3 c, f0 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL f0 cCONS cFST csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM y) (list_of_darts L)), ((MEM r) N), ((((marked_list L) N) r) x) |- (((MEM y) (list_of_darts L)) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c/\ cMEM f3 clist_of_darts f0 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) x)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 f0
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
+ |- ((\f. (((find_face L) x) = f)) ((find_face L) x))
T * / c= cfind_face f0 f1 b0 cfind_face f0 f1
- |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1
- |- ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)
T * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- |- ((\i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) i)
T * / c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f0 f3 f2 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f4 c==> c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f1 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cmarked_list f0 f1 f3 f2 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c/\ c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
+ |- ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r)
T * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((((marked_list L) N) r) x) |- (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cl'y f0 f1 f2 f4 c==> c= cl'z f0 f5 f1 f2 f6 c==> c= cfind_face f0 f2 f7 c==> cMEM f1 f5 c==> cmarked_list f0 f5 f1 f2 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 cNIL f5 c= cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8
+ |- ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)
T * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
+ |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((((uniq (flatten N)) /\ ((MEM r) N)) ==> (uniq r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f1 f3 f2 f6 c==> c= cztrans f1 f0 f3 f2 cNUMERAL c_0 f4 c==> cMEM f2 clist_of_darts f1 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f3 f2 c==> c==> c/\ cuniq cflatten f0 cMEM f3 f0 cuniq f3 cMEM cSND cCOND cfinal_list f1 f3 c, f0 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL f0 cCONS cFST csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cFST cCOND cfinal_list f1 f3 c, f0 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL f0 cCONS cFST csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cztrans f0 f6 f2 f1 cNUMERAL c_0 f3 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f6 f2 f1 c==> c==> cfinal_list f0 f2 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f1 f2 c==> cMEM f2 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f2 f1 c==> cMEM f1 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cFST cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cytrans f0 f1 f2 b0 cNUMERAL c_0
- |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
+ (good_list L), (good_list_nodes L), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c==> c==> cfinal_list f0 f2 cflag_list f0 f3 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f3 f2 f1 c==> c= cl'y f0 f2 f1 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f3 f2 f1 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f2 c, f3 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cNIL f3 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cFST cCOND cfinal_list f0 f2 c, f3 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cNIL f3 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 c/\ ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 cMEM f2 creplace f0 f3 f1
+ |- (((!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) ==> ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L)) = ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L))
T c= c==> ! c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f4 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
+ (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) /\ (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c/\ c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cFST cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2
+ ((final_list L) r) |- (((final_list L) r) = T)
T c==> cfinal_list f0 f1 c= cfinal_list f0 f1 cT
+ (good_list L), (good_list_nodes L), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3
+ (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ c= cprev_el f1 f2 f3 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
+ (good_list L), (good_list_nodes L), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c==> c==> cfinal_list f0 f2 cflag_list f0 f3 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f3 f2 f1 c==> c= cl'y f0 f2 f1 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f3 f2 f1 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f2 c, f3 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cNIL f3 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cFST cCOND cfinal_list f0 f2 c, f3 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cNIL f3 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cl'y f0 f1 f2 f4 c==> c= cl'z f0 f5 f1 f2 f6 c==> c= cfind_face f0 f2 f7 c==> cMEM f1 f5 c==> cmarked_list f0 f5 f1 f2 c/\ c= cfind_face f0 f2 f7 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 cNIL f5 c= cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L))
T c= c==> ! ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0
+ |- ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))) x)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= b1 cfind_face f0 b0 c= b2 cnext_el b1 b0 c/\ cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 c/\ cMEM cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 c< cindexf b2 cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 cindexf b2 cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 f3
- |- ((((\f. (((find_face L) x) = f)) f) ==> (?f. (((find_face L) x) = f))) = T)
T c= c==> * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((MEM z) r)), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> c==> c~ cfinal_list f1 f2 cMEM f5 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c==> c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f0 f2 f3 c~ cfinal_list f1 f2 cMEM cytrans f1 f0 f2 f3 cNUMERAL c_0 f2 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cMEM f1 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c/\ c= cnext_el f2 f1 cf_list f0 f1 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c/\ c==> cfinal_list f0 f2 cflag_list f0 f3 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f3 f2 f1 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f2 f1 cMEM crtrans f0 f3 f2 f1 cNUMERAL cBIT1 c_0 cntrans f0 f3 f2 f1 cNUMERAL cBIT1 c_0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL
- |- ((!A. (A \/ (~ A))) = ((T \/ (~ T)) /\ (F \/ (~ F))))
T c= ! c\/ b0 c~ b0 c/\ c\/ cT c~ cT c\/ cF c~ cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))) = (\x. (((((marked_list L) N) r) x) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 cMEM cztrans f0 f2 f1 b0 cNUMERAL c_0 f1 / c==> cmarked_list f0 f2 f1 b0 cMEM cztrans f0 f2 f1 b0 cNUMERAL c_0 f1
- |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) ==> (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)))
T c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))) = (\x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2 / c==> c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2
- |- ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r)
T * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z) r), ((MEM r) N), ((((marked_list L) N) r) x) |- (((MEM z) r) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f5 f1 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c/\ cMEM f5 f1 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- ((~ (A ==> (A \/ B))) ==> F) |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) ==> ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- ((MEM y) (list_of_darts L)) |- (((MEM y) (list_of_darts L)) = T)
T c==> cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cT
+ |- ((\L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x)))) L)
T * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))) x))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 clist_of_darts f0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 clist_of_darts f0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 clist_of_darts f0 f3
+ (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f4 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- (!z. (((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z))))
T c==> * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
+ |- (((?w. (((next_el ((find_face L) x)) x) = w)) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c= c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c\/ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 cNIL f5 c= cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 cFST csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 c\/ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 cNIL f5 c= cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 cFST csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4
+ |- ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)
T * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 cT
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f6 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
+ (good_list L), (good_list_nodes L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((~ (z = y)) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> c~ c= f5 f3 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
+ |- (((!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) ==> ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y)) = ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0
+ |- ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) (((((ztrans L) N) r) x) (NUMERAL _0)))
T * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0
+ (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((uniq r) ==> (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0)))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f4 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c==> c==> cuniq f2 c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3
+ (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cFST cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f6 c==> cmarked_list f0 f6 f1 f4 c/\ call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- |- (((((l'y L) r) x) = y) = ((\y. ((((l'y L) r) x) = y)) y))
T c= c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) /\ ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c/\ c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
+ (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) /\ ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f6 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c/\ c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f6 f1 f2 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f6 f1 f2
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))) = (\x. (((((marked_list L) N) r) x) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 c~ c= cztrans f0 f2 f1 b0 cNUMERAL c_0 cytrans f0 f2 f1 b0 cNUMERAL c_0 / c==> cmarked_list f0 f2 f1 b0 c~ c= cztrans f0 f2 f1 b0 cNUMERAL c_0 cytrans f0 f2 f1 b0 cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((!x'. (((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) x') ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) ==> ((?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) = ((?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c= c==> ! c==> * / c= cztrans f0 f3 f1 f2 cNUMERAL c_0 b1 b0 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 c==> c? / c= cztrans f0 f3 f1 f2 cNUMERAL c_0 b0 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 c==> c? / c= cztrans f0 f3 f1 f2 cNUMERAL c_0 b0 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ |- (((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) = ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c= cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f3 cl'y f0 f1 f3 cprev_el f1 cl'z f0 f2 f1 f3 cMEM crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0
- |- ((\r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) r)
T * / ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 f2
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((next_el ((find_face L) x)) x) = w) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cl'y f0 f1 f2 f4 c==> c= cl'z f0 f5 f1 f2 f6 c==> cMEM f1 f5 c==> cmarked_list f0 f5 f1 f2 c/\ c= cnext_el cfind_face f0 f2 f2 f3 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f7 cNIL f5 c= cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f7 cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 f7
- |- ((?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))
T c==> c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x), ((\f. (((find_face L) x) = f)) f) |- (((\f. (((find_face L) x) = f)) f) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cl'y f0 f1 f2 f4 c==> c= cl'z f0 f5 f1 f2 f6 c==> cMEM f1 f5 c==> cmarked_list f0 f5 f1 f2 c==> * / c= cfind_face f0 f2 b0 f7 c/\ * / c= cfind_face f0 f2 b0 f7 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 cNIL f5 c= cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8 cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 f8
+ |- ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)
T * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2
- |- (((!x'. (((\w. (((next_el ((find_face L) x)) x) = w)) x') ==> (?w. (((next_el ((find_face L) x)) x) = w)))) ==> ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w)))) = ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w))))
T c= c==> ! c==> * / c= cnext_el cfind_face f0 f1 f1 b1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b1 c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0 c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- ((((((ztrans L) N) r) x) (NUMERAL _0)) = z) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) /\ (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))
T c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
- |- (!y. (((\y. ((((l'y L) r) x) = y)) y) ==> (?y. ((((l'y L) r) x) = y))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
+ |- (((((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))) = ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c= c==> c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3
- (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))) = (\x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 b0 cNUMERAL c_0 f2 / c==> c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 b0 cNUMERAL c_0 f2
+ (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 cMEM crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s)) |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c==> c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0 c= call f1 f0 ! c==> cMEM b0 f0 * f1 b0
- |- (((!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) ==> ((\x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) x)) = ((\x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) x))
T c= c==> ! ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 * / ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 f3 * / ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 f3
- |- ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)
T * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
- |- ((\B. (!A. ((~ (A ==> (A \/ B))) ==> F))) B)
T * / ! c==> c~ c==> b1 c\/ b1 b0 cF f0
- |- ((((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1))) = T)
T c= c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 cT
- (~ (z = y)) |- (((~ (y = z)) ==> ((y = z) = F)) = ((y = z) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 c/\ c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- |- ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x)
T * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0
+ (good_list L), (good_list_nodes L), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f4 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f1 f2 cMEM crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0
- (~ (!A. (A \/ (~ A)))) |- F
T c==> c~ ! c\/ b0 c~ b0 cF
- (~ (z = y)) |- ((z = y) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- |- ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))
T c= csplit_normal_list f0 f1 f2 f3 f4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b5 b6 cAPPEND b7 b4 cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 f3 cCONS f3 cNIL cAPPEND cCONS b0 cNIL cAPPEND cbetwn f1 b0 f4 cCONS f4 cNIL cflatten cmap b3 b4 cbetwn f2 f3 b1 / cmap / cPOWER * part cn_list f0 b4 b3 cupt cNUMERAL cBIT1 c_0 * b2 cFST b3 / csizel cfilter / c= b3 b2 cflatten f0 cnext_el f1 f4 cnext_el f1 f3
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f6 f1 f4 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
+ |- ((\i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))) i)
T * / c= crtrans f0 f1 f2 f3 b0 cSND cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
- ((((l'y L) r) x) = y) |- ((\y. ((((l'y L) r) x) = y)) y)
T c==> c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ |- ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)
T * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
- |- ((?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) ==> (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))
T c==> c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c/\ ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 cMEM crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))) = ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f6 f1 f4 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
+ |- (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1))
T c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((\x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) x)) = ((\x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) x))
T c= c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 f0 * / ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 f0
- |- ((!A. ((P A) \/ Q)) = ((!A. (P A)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((!x'. (((\y. ((((l'y L) r) x) = y)) x') ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) ==> ((?y. ((((l'y L) r) x) = y)) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) = ((?y. ((((l'y L) r) x) = y)) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c= c==> ! c==> * / c= cl'y f0 f1 f2 b1 b0 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 c==> c? / c= cl'y f0 f1 f2 b0 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 c==> c? / c= cl'y f0 f1 f2 b0 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
+ (uniq (list_of_darts L)), (((find_face L) x) = f), ((MEM y) f), ((MEM r) N) |- ((((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> cuniq clist_of_darts f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f2 c==> cMEM f4 f5 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f3 cfind_face f0 f1 c= cfind_face f0 f3 cfind_face f0 f1 c\/ cMEM cSND csplit_normal_list f0 f4 cfind_face f0 f3 f3 f6 creplace f4 cCONS cSND csplit_normal_list f0 f4 cfind_face f0 f3 f3 f6 cNIL f5 c= cSND csplit_normal_list f0 f4 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f4 cfind_face f0 f3 f3 f6
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (!f. (((\f. (((find_face L) x) = f)) f) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cl'y f0 f1 f2 f4 c==> c= cl'z f0 f5 f1 f2 f6 c==> cMEM f1 f5 c==> cmarked_list f0 f5 f1 f2 ! c==> * / c= cfind_face f0 f2 b1 b0 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f7 cNIL f5 c= cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f7 cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 f7
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))) = (\x. (((((marked_list L) N) r) x) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 f1 / c==> cmarked_list f0 f2 f1 b0 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 f1
+ (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f6 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f6 f1 f2 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f6 f1 f2
- ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((((next_el ((find_face L) x)) x) = w) ==> (?w. (((next_el ((find_face L) x)) x) = w))) = (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c= c==> c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
+ |- (((final_list L) r) \/ (~ ((final_list L) r)))
T c\/ cfinal_list f0 f1 c~ cfinal_list f0 f1
- A, (A ==> (A \/ B)) |- (A /\ (A \/ B))
T c==> f0 c==> c==> f0 c\/ f0 f1 c/\ f0 c\/ f0 f1
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cztrans f0 f6 f2 f1 cNUMERAL c_0 f3 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f6 f2 f1 c==> c==> cfinal_list f0 f2 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f1 f2 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f2 f1 cMEM cSND cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cFST cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1
+ |- ((\N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cytrans f0 b0 b1 b2 b3 cl'y f0 crtrans f0 b0 b1 b2 b3 b2 f1
- (uniq ((find_face L) x)), (((find_face L) x) = f) |- ((uniq f) = T)
T c==> cuniq cfind_face f0 f1 c==> c= cfind_face f0 f1 f2 c= cuniq f2 cT
- |- (((((l'y L) r) x) = y) ==> (?y. ((((l'y L) r) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((final_list L) r) \/ (~ ((final_list L) r))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> c\/ cfinal_list f0 f1 c~ cfinal_list f0 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- |- ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)
T * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ |- (((((l'y L) r) x) = (((l'y L) r) x)) = ((\y. ((((l'y L) r) x) = y)) (((l'y L) r) x)))
T c= c= cl'y f0 f1 f2 cl'y f0 f1 f2 * / c= cl'y f0 f1 f2 b0 cl'y f0 f1 f2
+ |- (((!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) ==> ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)) = ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x))
T c= c==> ! ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
- |- (((!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) ==> ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r)) = ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r))
T c= c==> ! ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1 * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) /\ ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f6 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c/\ c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f6 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
+ ((MEM r) N) |- (((((MEM r) N) /\ ((MEM (SND (((((split_normal_list L) r) f) y) z1))) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL))) ==> ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N))) = ((MEM (SND (((((split_normal_list L) r) f) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)))
T c==> cMEM f0 f1 c= c==> c/\ cMEM f0 f1 cMEM cSND csplit_normal_list f2 f0 f3 f4 f5 cCONS cSND csplit_normal_list f2 f0 f3 f4 f5 cNIL cMEM cSND csplit_normal_list f2 f0 f3 f4 f5 creplace f0 cCONS cSND csplit_normal_list f2 f0 f3 f4 f5 cNIL f1 cMEM cSND csplit_normal_list f2 f0 f3 f4 f5 creplace f0 cCONS cSND csplit_normal_list f2 f0 f3 f4 f5 cNIL f1
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((((next_el r) z1) = z) /\ ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c/\ c= cnext_el f2 f4 f5 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cMEM f1 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c/\ c= cnext_el f2 f1 cf_list f0 f1 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c/\ c==> cfinal_list f0 f2 cflag_list f0 f3 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f3 f2 f1 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f2 f1 cMEM crtrans f0 f3 f2 f1 cNUMERAL cBIT1 c_0 cntrans f0 f3 f2 f1 cNUMERAL cBIT1 c_0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((MEM z) r)), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((~ ((final_list L) r)) ==> ((MEM z) r)) /\ ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> c==> c~ cfinal_list f1 f2 cMEM f5 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c/\ c==> c~ cfinal_list f1 f2 cMEM f5 f2 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (!z. (((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 ! c==> * / c= cztrans f0 f3 f1 f2 cNUMERAL c_0 b1 b0 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x), ((\y. ((((l'y L) r) x) = y)) y) |- (((\y. ((((l'y L) r) x) = y)) y) /\ ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> * / c= cl'y f0 f1 f2 b0 f4 c/\ * / c= cl'y f0 f1 f2 b0 f4 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f1 f3 f2 f6 c==> c= cztrans f1 f0 f3 f2 cNUMERAL c_0 f4 c==> cMEM f2 clist_of_darts f1 c==> cMEM f3 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f3 f2 c==> cuniq f3 c==> c= cnext_el f3 f5 f4 c==> c==> c~ cfinal_list f1 f3 cMEM f4 f3 c==> c==> c~ cfinal_list f1 f3 cMEM f6 f3 cMEM cSND cCOND cfinal_list f1 f3 c, f0 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL f0 cCONS cFST csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cFST cCOND cfinal_list f1 f3 c, f0 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL f0 cCONS cFST csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2 cNIL cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f0 f3 f2
+ |- ((((next_el ((find_face L) x)) x) = ((next_el ((find_face L) x)) x)) = ((\w. (((next_el ((find_face L) x)) x) = w)) ((next_el ((find_face L) x)) x)))
T c= c= cnext_el cfind_face f0 f1 f1 cnext_el cfind_face f0 f1 f1 * / c= cnext_el cfind_face f0 f1 f1 b0 cnext_el cfind_face f0 f1 f1
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))) = (\x. (((((marked_list L) N) r) x) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 clist_of_darts f0 / c==> cmarked_list f0 f2 f1 b0 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 clist_of_darts f0
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))) x)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 clist_of_darts f0 f3
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> c? / c= cnext_el cfind_face f0 f2 f2 b0 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
+ (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) /\ ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f6 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c/\ c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cztrans f0 f6 f2 f1 cNUMERAL c_0 f3 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f6 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f6 f2 f1 c==> cnormal_list f0 f6 cMEM cSND cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cFST cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))) r)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cztrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
- |- ((\L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) L)
T * / ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 f0
+ (good_list L), (good_list_nodes L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 c/\ cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3
- A, (A ==> (A \/ B)) |- ((A ==> (A \/ B)) /\ (A \/ B))
T c==> f0 c==> c==> f0 c\/ f0 f1 c/\ c==> f0 c\/ f0 f1 c\/ f0 f1
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- |- (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))
T c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cztrans f0 f1 f2 f3 f4
+ |- (((!y. (((MEM x) ((CONS y) NIL)) = (x = y))) ==> ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)) = ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y))
T c= c==> ! c= cMEM f0 cCONS b0 cNIL c= f0 b0 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
- ((\f. (((find_face L) x) = f)) f) |- (((((find_face L) x) = f) ==> (?f. (((find_face L) x) = f))) = (?f. (((find_face L) x) = f)))
T c==> * / c= cfind_face f0 f1 b0 f2 c= c==> c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 cMEM crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0
+ (uniq (list_of_darts L)), (((find_face L) x) = f), ((MEM y) f), ((MEM r) N) |- (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))
T c==> cuniq clist_of_darts f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f2 c==> cMEM f4 f5 c\/ cMEM cSND csplit_normal_list f0 f4 cfind_face f0 f3 f3 f6 creplace f4 cCONS cSND csplit_normal_list f0 f4 cfind_face f0 f3 f3 f6 cNIL f5 c= cSND csplit_normal_list f0 f4 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f4 cfind_face f0 f3 f3 f6
- |- (((!A. ((~ (A ==> (A \/ B))) ==> F)) ==> ((\A. ((~ (A ==> (A \/ B))) ==> F)) A)) = ((\A. ((~ (A ==> (A \/ B))) ==> F)) A))
T c= c==> ! c==> c~ c==> b0 c\/ b0 f0 cF * / c==> c~ c==> b0 c\/ b0 f0 cF f1 * / c==> c~ c==> b0 c\/ b0 f0 cF f1
- |- (((!s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) ==> ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s)) = ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s))
T c= c==> ! c= c~ c= b0 cNIL c? / cMEM b1 b0 * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0 * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0
- |- (((!a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) ==> ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a)) = ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a))
T c= c==> ! ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0
+ (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f4 f1 f2 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 cprev_el f1 cl'z f0 f4 f1 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
+ (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
+ ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((((next_el ((find_face L) x)) x) = w) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c= c==> c= cnext_el cfind_face f0 f1 f1 f2 c\/ cMEM cSND csplit_normal_list f0 f3 cfind_face f0 f4 f4 f5 creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f4 f4 f5 cNIL f6 c= cSND csplit_normal_list f0 f3 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f3 cfind_face f0 f4 f4 f5 c\/ cMEM cSND csplit_normal_list f0 f3 cfind_face f0 f4 f4 f5 creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f4 f4 f5 cNIL f6 c= cSND csplit_normal_list f0 f3 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f3 cfind_face f0 f4 f4 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f1 f2 f5 f6 c==> c= cztrans f1 f0 f2 f5 cNUMERAL c_0 f3 c==> cMEM f2 f0 c==> cmarked_list f1 f0 f2 f5 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f2 c==> c= cnext_el f2 f4 f3 c==> c==> c~ cfinal_list f1 f2 cMEM f3 f2 c==> c==> c~ cfinal_list f1 f2 cMEM f6 f2 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f5 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f5 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f5 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f5 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f5 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f5
+ |- (((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c= c==> ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ c= cnext_el f1 f2 cf_list f0 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c/\ c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
- (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) |- ((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) /\ (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))
T c==> c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 c/\ c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
+ |- (((!s. ((uniq s) ==> (((next_el s) ((prev_el s) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))))) ==> ((\s. ((uniq s) ==> (((next_el s) ((prev_el s) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))))) r)) = ((\s. ((uniq s) ==> (((next_el s) ((prev_el s) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))))) r))
T c= c==> ! c==> cuniq b0 c= cnext_el b0 cprev_el b0 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 * / c==> cuniq b0 c= cnext_el b0 cprev_el b0 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 * / c==> cuniq b0 c= cnext_el b0 cprev_el b0 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f0 f3 f2 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f4 c==> c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f1 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cmarked_list f0 f1 f3 f2 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) ==> ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f)) = ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1
+ |- ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)
T * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f6 f1 f2 cNUMERAL c_0 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f6 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f2 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f2
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f0 f3 f2 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f4 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f1 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cmarked_list f0 f1 f3 f2 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f3 c==> c= cnext_el f3 f5 f4 c==> c==> c~ cfinal_list f0 f3 cMEM f4 f3 c==> c==> c~ cfinal_list f0 f3 cMEM f6 f3 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2
+ (good_list L), (good_list_nodes L), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f2 f1 c/\ cMEM f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c==> c==> cfinal_list f0 f2 cflag_list f0 f3 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f3 f2 f1 c==> c= cl'y f0 f2 f1 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f3 f2 f1 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f2 c, f3 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cNIL f3 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cFST cCOND cfinal_list f0 f2 c, f3 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cNIL f3 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f1 cl'y f0 f2 f1 cprev_el f2 cl'z f0 f3 f2 f1
+ |- ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((\x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cytrans f0 f1 f2 b0 b1 cl'y f0 crtrans f0 f1 f2 b0 b1 b0 f3
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- |- (((A ==> (A \/ B)) ==> (A ==> (A \/ B))) = (A ==> (A \/ B)))
T c= c==> c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1
+ |- ((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) = T)
T c= ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 b0 b1 cMEM crtrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 cntrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f3 f4 f5 c==> c= cl'y f0 f3 f2 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f4 c==> c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f1 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f1 c==> cmarked_list f0 f1 f3 f2 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 f6 f6 cprev_el f3 cl'z f0 f1 f3 f2
+ |- ((\w. (((next_el ((find_face L) x)) x) = w)) ((next_el ((find_face L) x)) x))
T * / c= cnext_el cfind_face f0 f1 f1 b0 cnext_el cfind_face f0 f1 f1
+ ((MEM r) N) |- (T = (((MEM r) N) /\ ((MEM (SND (((((split_normal_list L) r) f) y) z1))) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL))))
T c==> cMEM f0 f1 c= cT c/\ cMEM f0 f1 cMEM cSND csplit_normal_list f2 f0 f3 f4 f5 cCONS cSND csplit_normal_list f2 f0 f3 f4 f5 cNIL
+ |- (((((((l'z L) N) r) x) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))) = (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c= c==> c= cl'z f0 f1 f2 f3 f4 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c~ c= cztrans f0 b0 b1 b2 cNUMERAL c_0 cytrans f0 b0 b1 b2 cNUMERAL c_0
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 clist_of_darts f0
- (y = z) |- (z = y)
T c==> c= f0 f1 c= f1 f0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (!z1. (((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f4 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f1 f2 ! c==> * / c= cprev_el f1 cztrans f0 f4 f1 f2 cNUMERAL c_0 b1 b0 cMEM crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0
- (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) z1) = z) ==> (((~ ((final_list L) r)) ==> ((MEM z) r)) ==> (((~ ((final_list L) r)) ==> ((MEM y) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f4 c==> cMEM f4 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 f3 f2 c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c==> c==> c~ cfinal_list f0 f1 cMEM f5 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((MEM y) r)), ((~ ((final_list L) r)) ==> ((MEM z) r)), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> c==> c~ cfinal_list f1 f2 cMEM f6 f2 c==> c==> c~ cfinal_list f1 f2 cMEM f5 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f2 c~ cfinal_list f0 f1 cMEM cytrans f0 f4 f1 f2 cNUMERAL c_0 clist_of_darts f0 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- |- (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
+ |- (?f. (((find_face L) x) = f))
T c? / c= cfind_face f0 f1 b0
- (~ (!A. (A \/ (~ A)))) |- ((~ (!A. (A \/ (~ A)))) /\ F)
T c==> c~ ! c\/ b0 c~ b0 c/\ c~ ! c\/ b0 c~ b0 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((((next_el r) z1) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f4 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c==> c= cnext_el f2 f5 f4 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x), ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((\w. (((next_el ((find_face L) x)) x) = w)) w) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> * / c= cnext_el cfind_face f0 f2 f2 b0 f6 c/\ * / c= cnext_el cfind_face f0 f2 f2 b0 f6 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f7 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f7 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f7
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((final_list L) r) \/ (~ ((final_list L) r))), ((MEM r) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c\/ cfinal_list f0 f1 c~ cfinal_list f0 f1 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))) x))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f3 f2 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> c==> cfinal_list f0 f3 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f3 cs_flag_list f0 f1 f3 f2 c==> c= cl'y f0 f3 f2 f4 c==> c= cprev_el f3 f5 f6 c==> c= cztrans f0 f1 f3 f2 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f2 cl'y f0 f3 f2 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f2 cl'y f0 f3 f2 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f2 cl'y f0 f3 f2 cprev_el f3 cl'z f0 f1 f3 f2 cFST cCOND cfinal_list f0 f3 c, f1 f3 c, cAPPEND creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f2 cl'y f0 f3 f2 cprev_el f3 cl'z f0 f1 f3 f2 cNIL f1 cCONS cFST csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f2 cl'y f0 f3 f2 cprev_el f3 cl'z f0 f1 f3 f2 cNIL cSND csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f2 cl'y f0 f3 f2 cprev_el f3 cl'z f0 f1 f3 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))) N))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c~ c= cztrans f0 b0 b1 b2 cNUMERAL c_0 cytrans f0 b0 b1 b2 cNUMERAL c_0 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c~ c= cztrans f0 b0 b1 b2 cNUMERAL c_0 cytrans f0 b0 b1 b2 cNUMERAL c_0 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c~ c= cztrans f0 b0 b1 b2 cNUMERAL c_0 cytrans f0 b0 b1 b2 cNUMERAL c_0 f1
+ (good_list L), (good_list_nodes L), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) /\ (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cztrans f0 f6 f2 f1 cNUMERAL c_0 f3 c==> cMEM f2 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f2 f1 c/\ cuniq cfind_face f0 f1 c==> cMEM f1 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cFST cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1
- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) L)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 f0
- |- (((!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ==> ((\ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ram2)) = ((\ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ram2))
T c= c==> ! c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 * / c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 f4 * / c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 f4
+ (good_list L), ((good_list_nodes L) /\ ((((marked_list L) N) r) x)) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cgood_list f0 c==> c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cMEM crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
+ |- ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N)
T * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1
- |- (!f. (((\f. (((find_face L) x) = f)) f) ==> (?f. (((find_face L) x) = f))))
T c==> * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0
+ |- (((POWER f) (SUC n)) = (((POWER f) n) o f))
T c= * * part cPOWER f0 cSUC f1 * * part co * * part cPOWER f0 f1 f0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c= cnext_el f1 f2 cf_list f0 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c/\ c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 cMEM crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
+ |- (((!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) ==> ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r)) = ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r))
T c= c==> ! ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2 * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2
+ |- (((!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x)))) ==> ((\L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x)))) L)) = ((\L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x)))) L))
T c= c==> ! c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2 * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2
+ |- (((!n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) ==> ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)) = ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n))
T c= c==> ! c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c/\ ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
+ |- (((!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) ==> ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)) = ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N))
T c= c==> ! ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1 * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
- |- (((!ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2)))) ==> ((\ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2)))) ss2)) = ((\ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2)))) ss2))
T c= c==> ! c= cflatten ccat f0 b0 ccat cflatten f0 cflatten b0 * / c= cflatten ccat f0 b0 ccat cflatten f0 cflatten b0 f1 * / c= cflatten ccat f0 b0 ccat cflatten f0 cflatten b0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cztrans f0 f6 f2 f1 cNUMERAL c_0 f3 c==> c/\ cuniq cflatten f6 c/\ call / c~ c= b0 cNIL f6 c/\ call * part cf_last f0 f6 c/\ call * part cloop_list f0 f6 ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f6 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f6 f2 f1 cMEM cSND cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cFST cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1
+ |- (((!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))) ==> ((\f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))) f)) = ((\f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))) f))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= b0 cfind_face f0 f3 c= b1 cnext_el b0 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 b0 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c< cindexf b1 cytrans f0 f1 f2 f3 cNUMERAL c_0 b0 cindexf b1 cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= b0 cfind_face f0 f3 c= b1 cnext_el b0 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 b0 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c< cindexf b1 cytrans f0 f1 f2 f3 cNUMERAL c_0 b0 cindexf b1 cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= b0 cfind_face f0 f3 c= b1 cnext_el b0 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 b0 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 c< cindexf b1 cytrans f0 f1 f2 f3 cNUMERAL c_0 b0 cindexf b1 cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4
- |- (((!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) ==> ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2)) = ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2))
T c= c==> ! c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- |- (((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) ==> (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F))) = (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)))
T c= c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- ((((((ztrans L) N) r) x) (NUMERAL _0)) = z) |- ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z)
T c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))) x)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cytrans f0 f1 f2 b0 cNUMERAL c_0 f3
+ (good_list L), (good_list_nodes L), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3
+ (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f4 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f4 f1 f2 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f4 f1 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2
- (((final_list L) r) ==> ((flag_list L) N)) |- ((((final_list L) r) ==> ((flag_list L) N)) = T)
T c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c= c==> cfinal_list f0 f1 cflag_list f0 f2 cT
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f6 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cFST cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2
+ |- ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i)
T * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4
- |- ((\f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) f)
T * / ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 f2
+ (uniq (list_of_darts L)), (((find_face L) x) = f), ((MEM y) f) |- (((((find_face L) y) = f) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = ((((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))
T c==> cuniq clist_of_darts f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f3 f2 c= c==> c= cfind_face f0 f3 f2 c\/ cMEM cSND csplit_normal_list f0 f4 cfind_face f0 f3 f3 f5 creplace f4 cCONS cSND csplit_normal_list f0 f4 cfind_face f0 f3 f3 f5 cNIL f6 c= cSND csplit_normal_list f0 f4 cfind_face f0 f3 f3 f5 cFST csplit_normal_list f0 f4 cfind_face f0 f3 f3 f5 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f3 cfind_face f0 f1 c= cfind_face f0 f3 cfind_face f0 f1 c\/ cMEM cSND csplit_normal_list f0 f4 cfind_face f0 f3 f3 f5 creplace f4 cCONS cSND csplit_normal_list f0 f4 cfind_face f0 f3 f3 f5 cNIL f6 c= cSND csplit_normal_list f0 f4 cfind_face f0 f3 f3 f5 cFST csplit_normal_list f0 f4 cfind_face f0 f3 f3 f5
+ |- ((uniq r) ==> (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))))
T c==> cuniq f0 c= cnext_el f0 cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 cztrans f1 f2 f0 f3 cNUMERAL c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((MEM r) N), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f1 f6 c==> cmarked_list f0 f6 f1 f4 c==> c= cztrans f0 f6 f1 f4 cNUMERAL c_0 f2 cMEM cSND cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cFST cCOND cfinal_list f0 f1 c, f6 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL f6 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 cprev_el f1 cl'z f0 f6 f1 f4
+ |- ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)
T * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- ((((MEM y) r) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c= c==> cMEM f3 f1 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f2 c~ cfinal_list f0 f1 cMEM cytrans f0 f4 f1 f2 cNUMERAL c_0 f1 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f5
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))) = ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3
+ |- ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x)
T * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
- |- (((!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) ==> ((\f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) f)) = ((\f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) f))
T c= c==> ! ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 * / ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 f2 * / ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 f2
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((next_el ((find_face L) x)) x) = w) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> c= cnext_el cfind_face f0 f2 f2 f6 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f7 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f7 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f7 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f7
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) (FST (((COND ((final_list L) r)) (N , r)) (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c/\ c~ cfinal_list f0 f1 cMEM cSND cCOND cfinal_list f0 f1 c, f4 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST cCOND cfinal_list f0 f1 c, f4 f1 c, ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
+ (good_list L), (good_list_nodes L), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) /\ (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c/\ c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f3 f1 f2 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cFST cCOND cfinal_list f0 f1 c, f3 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL f3 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f2 cl'y f0 f1 f2 cprev_el f1 cl'z f0 f3 f1 f2
+ |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) = (((((marked_list L) N) r) x) ==> ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))
T c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 cMEM crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f1 f2 f3 cMEM crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L))
T c= c==> ! ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0 * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)))) = ((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL))))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cNIL cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cNIL f4 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cNIL
+ |- (((!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) ==> ((\N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) N)) = ((\N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) N))
T c= c==> ! ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 * / ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 f1 * / ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 f1
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x), ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) |- (((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) /\ ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c==> * / c= cztrans f0 f3 f1 f2 cNUMERAL c_0 b0 f6 c/\ * / c= cztrans f0 f3 f1 f2 cNUMERAL c_0 b0 f6 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
- |- ((\ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2)))) ss2)
T * / c= cflatten ccat f0 b0 ccat cflatten f0 cflatten b0 f1
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c\/ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cNIL f1 c= cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 c\/ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cNIL f1 c= cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5
- |- (((!x'. (((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) x') ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))) ==> ((?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))) = ((?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1))))
T c= c==> ! c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b1 b0 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b1 c==> c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 c==> c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
+ |- ((((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))))) = ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c= c==> c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1 cMEM cSND cCOND cfinal_list f0 f2 c, f3 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cNIL f3 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cFST cCOND cfinal_list f0 f2 c, f3 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cNIL f3 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cMEM cSND cCOND cfinal_list f0 f2 c, f3 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cNIL f3 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cFST cCOND cfinal_list f0 f2 c, f3 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cNIL f3 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f3 f2 f1
+ |- (((((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2 c\/ cMEM cSND csplit_normal_list f0 f3 cfind_face f0 f1 f1 f4 creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f1 f1 f4 cNIL f5 c= cSND csplit_normal_list f0 f3 cfind_face f0 f1 f1 f4 cFST csplit_normal_list f0 f3 cfind_face f0 f1 f1 f4 c\/ cMEM cSND csplit_normal_list f0 f3 cfind_face f0 f1 f1 f4 creplace f3 cCONS cSND csplit_normal_list f0 f3 cfind_face f0 f1 f1 f4 cNIL f5 c= cSND csplit_normal_list f0 f3 cfind_face f0 f1 f1 f4 cFST csplit_normal_list f0 f3 cfind_face f0 f1 f1 f4
+ |- (((!x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) ==> ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x)) = ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x))
T c= c==> ! ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cztrans f0 f3 f1 f2 cNUMERAL c_0 f4 c==> c= cl'y f0 f1 f2 f5 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cMEM crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- (((!A. (A \/ (~ A))) ==> ((\A. (A \/ (~ A))) ((final_list L) r))) = ((\A. (A \/ (~ A))) ((final_list L) r)))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 cfinal_list f0 f1 * / c\/ b0 c~ b0 cfinal_list f0 f1
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))) r))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 clist_of_darts f0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 clist_of_darts f0 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 clist_of_darts f0 f2
- (~ (A ==> (A \/ B))) |- F
T c==> c~ c==> f0 c\/ f0 f1 cF
- |- ((\ss1. (!ss2. ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2))))) ss1)
T * / ! c= cflatten ccat b0 b1 ccat cflatten b0 cflatten b1 f0
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f2 c~ cfinal_list f0 f1 cMEM cztrans f0 f4 f1 f2 cNUMERAL c_0 f1 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- |- ((\s1. (!s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2)))))) s1)
T * / ! c= cuniq ccat b0 b1 c/\ cuniq b0 c/\ c~ chas / cMEM b2 b0 b1 cuniq b1 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f0 f2 f1 f5 c==> c= cztrans f0 f6 f2 f1 cNUMERAL c_0 f3 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f6 f2 f1 c==> c==> cfinal_list f0 f2 cflag_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f1 f2 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f2 f1 c/\ cMEM f1 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cFST cCOND cfinal_list f0 f2 c, f6 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL f6 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f6 f2 f1
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- |- ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a)
T * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 cT
- |- (T = (!B. (!A. ((~ (A ==> (A \/ B))) ==> F))))
T c= cT ! ! c==> c~ c==> b1 c\/ b1 b0 cF
- (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) /\ (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)))
T c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) = ((~ (A ==> (A \/ B))) ==> F))
T c= c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- |- (((!L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) ==> ((\L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) L)) = ((\L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) L))
T c= c==> ! ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 * / ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 f0 * / ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 f0
- |- (((!B. (!A. ((~ (A ==> (A \/ B))) ==> F))) ==> ((\B. (!A. ((~ (A ==> (A \/ B))) ==> F))) B)) = ((\B. (!A. ((~ (A ==> (A \/ B))) ==> F))) B))
T c= c==> ! ! c==> c~ c==> b1 c\/ b1 b0 cF * / ! c==> c~ c==> b1 c\/ b1 b0 cF f0 * / ! c==> c~ c==> b1 c\/ b1 b0 cF f0
- |- ((((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (?w. (((next_el ((find_face L) x)) x) = w))) = T)
T c= c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0 cT
- (A ==> (A \/ B)) |- ((A ==> (A \/ B)) /\ (A ==> (A \/ B)))
T c==> c==> f0 c\/ f0 f1 c/\ c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1
- |- ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2))))
T c= cuniq ccat f0 f1 c/\ cuniq f0 c/\ c~ chas / cMEM b0 f0 f1 cuniq f1
- ((\y. ((((l'y L) r) x) = y)) y) |- ((((((l'y L) r) x) = y) ==> (?y. ((((l'y L) r) x) = y))) = (?y. ((((l'y L) r) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- ((~ (A ==> (A \/ B))) ==> F) |- (((~ (A ==> (A \/ B))) ==> F) /\ ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((A ==> (A \/ B)) ==> (A ==> (A \/ B)))
T c==> c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1
- |- (F = (~ T))
T c= cF c~ cT
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((MEM x) (((replace f) xs) g))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
- ((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) |- (((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) /\ (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))
T c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c/\ * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
- |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 clist_of_darts f0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 clist_of_darts f0
- |- ((((\y. ((((l'y L) r) x) = y)) y) ==> (?y. ((((l'y L) r) x) = y))) = T)
T c= c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0 cT
- |- ((T \/ t) = T)
T c= c\/ cT f0 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), ((((((ztrans L) N) r) x) (NUMERAL _0)) = z), ((~ ((final_list L) r)) ==> ((MEM y) r)), ((~ ((final_list L) r)) ==> ((MEM z) r)), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((~ ((final_list L) r)) ==> ((MEM y) r)) /\ ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f5 f4 c==> c= cl'y f1 f2 f3 f6 c==> c= cztrans f1 f0 f2 f3 cNUMERAL c_0 f5 c==> c==> c~ cfinal_list f1 f2 cMEM f6 f2 c==> c==> c~ cfinal_list f1 f2 cMEM f5 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c/\ c==> c~ cfinal_list f1 f2 cMEM f6 f2 cMEM cSND cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cFST cCOND cfinal_list f1 f2 c, f0 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL f0 cCONS cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 cprev_el f2 cl'z f1 f0 f2 f3
- |- ((!A. (P \/ (Q A))) = (P \/ (!A. (Q A))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- ((\L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) L)
T * / ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 f0
- |- ((F ==> t) = T)
T c= c==> cF f0 cT
- |- ((((find_face L) x) = f) ==> (?f. (((find_face L) x) = f)))
T c==> c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)
T * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) /\ (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c/\ ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))) r)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 clist_of_darts f0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 clist_of_darts f0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) ==> ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g)) = ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3
- |- (((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))) = (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c= c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- (T = ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0))))
T c= cT c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
- |- (((!L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) ==> ((\L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) L)) = ((\L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) L))
T c= c==> ! ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 * / ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 f0 * / ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 f0
- |- ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s)
T * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0
- |- ((\N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) N)
T * / ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 f1
- (good_list L), (good_list_nodes L), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 cprev_el f2 cl'z f0 f1 f2 f3
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- (((MEM y) r) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> cMEM f3 f1 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- (~ (z = y)) |- (~ (y = z))
T c==> c~ c= f0 f1 c~ c= f1 f0
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 clist_of_darts f0
- ((~ (!A. (A \/ (~ A)))) ==> F) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((~ T) = F)
T c= c~ cT cF
- |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3
- |- (!z1. (((\z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)) z1) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1))))
T c==> * / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0 f4 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
- |- ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2)
T * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c/\ ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- ((~ ((final_list L) r)) ==> ((MEM y) r)) |- (((~ ((final_list L) r)) ==> ((MEM y) r)) = T)
T c==> c==> c~ cfinal_list f0 f1 cMEM f2 f1 c= c==> c~ cfinal_list f0 f1 cMEM f2 f1 cT
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((((MEM f) g) /\ ((MEM x) xs)) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 c/\ c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
- (((MEM f) g) /\ ((MEM x) xs)) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((MEM x) (((replace f) xs) g)))
T c==> c/\ cMEM f0 f1 cMEM f2 f3 c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 cMEM f2 creplace f0 f3 f1
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM y) r), ((MEM r) N), ((((marked_list L) N) r) x) |- (((MEM y) r) /\ (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f3 f1 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c/\ cMEM f3 f1 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- |- (((~ (A ==> (A \/ B))) ==> F) = (A ==> (A \/ B)))
T c= c==> c~ c==> f0 c\/ f0 f1 cF c==> f0 c\/ f0 f1
- |- ((((next_el ((find_face L) x)) x) = w) ==> (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (~ (z = y)) |- ((y = z) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- |- ((F \/ t) = t)
T c= c\/ cF f0 f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- |- (!w. (((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (?w. (((next_el ((find_face L) x)) x) = w))))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) L)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((MEM z) r) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c= c==> cMEM f4 f1 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cNIL f2 c= cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c~ cfinal_list f0 f1 cMEM cztrans f0 f2 f1 f3 cNUMERAL c_0 f1 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cNIL f2 c= cSND csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f5 f5 f6
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
- |- ((!A. (P A)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) |- (((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z) /\ (?z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)))
T c==> * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 c/\ * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4 c? / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0
- |- (((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))))) = (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c= c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- |- ((flatten ((cat ss1) ss2)) = ((cat (flatten ss1)) (flatten ss2)))
T c= cflatten ccat f0 f1 ccat cflatten f0 cflatten f1
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))
T c= cMEM f0 cAPPEND f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
- ((\f. (((find_face L) x) = f)) f) |- (((\f. (((find_face L) x) = f)) f) /\ (?f. (((find_face L) x) = f)))
T c==> * / c= cfind_face f0 f1 b0 f2 c/\ * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- ((~ (s = NIL)) = (?x. ((MEM x) s)))
T c= c~ c= f0 cNIL c? / cMEM b0 f0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1 cT
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 clist_of_darts f0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0
- |- ((((next_el ((find_face L) x)) x) = w) = ((\w. (((next_el ((find_face L) x)) x) = w)) w))
T c= c= cnext_el cfind_face f0 f1 f1 f2 * / c= cnext_el cfind_face f0 f1 f1 b0 f2
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)) |- (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))
T c==> c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cztrans f0 f1 f2 f3 f4
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM r) N), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cMEM f1 f4 c==> cmarked_list f0 f4 f1 f2 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f2 c~ cfinal_list f0 f1 cMEM cytrans f0 f4 f1 f2 cNUMERAL c_0 f1 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6 cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f6
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))) N))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 clist_of_darts f0 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 clist_of_darts f0 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 clist_of_darts f0 f1
- |- (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) = ((\z. ((((((ztrans L) N) r) x) (NUMERAL _0)) = z)) z))
T c= c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 * / c= cztrans f0 f1 f2 f3 cNUMERAL c_0 b0 f4
- (uniq ((find_face L) x)), (((find_face L) x) = f) |- (uniq f)
T c==> cuniq cfind_face f0 f1 c==> c= cfind_face f0 f1 f2 cuniq f2
- (uniq ((find_face L) x)) |- ((uniq ((find_face L) x)) = T)
T c==> cuniq cfind_face f0 f1 c= cuniq cfind_face f0 f1 cT
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c= cprev_el f2 f5 f6 c==> c= cztrans f0 f1 f2 f3 cNUMERAL c_0 f5 cMEM cSND cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cFST cCOND cfinal_list f0 f2 c, f1 f2 c, cAPPEND creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cNIL cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3
- ((~ (A ==> (A \/ B))) ==> F), (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) |- (((~ (A ==> (A \/ B))) ==> F) /\ ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\N'. (f N')) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) ==> ((\r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) r)) = ((\r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) r))
T c= c==> ! ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 * / ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 f2 * / ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 f2
- |- (((!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) ==> ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)) = ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L))
T c= c==> ! c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1 * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
- |- (((!x. (((\f. (((find_face L) x) = f)) x) ==> (?f. (((find_face L) x) = f)))) ==> ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f)))) = ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f))))
T c= c==> ! c==> * / c= cfind_face f0 f1 b1 b0 c? / c= cfind_face f0 f1 b1 c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0 c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
- |- ((\ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ram2)
T * / c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 f4
- |- (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))
T c= cMEM f0 cflatten f1 c? / c/\ cMEM b0 f1 cMEM f0 b0
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- |- ((\s2. ((uniq ((cat s1) s2)) = ((uniq s1) /\ ((~ ((has (\x. ((MEM x) s1))) s2)) /\ (uniq s2))))) s2)
T * / c= cuniq ccat f0 b0 c/\ cuniq f0 c/\ c~ chas / cMEM b1 f0 b0 cuniq b0 f1
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 clist_of_darts f0 c\/ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cNIL f1 c= cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 c\/ cMEM cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cNIL f1 c= cSND csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5 cFST csplit_normal_list f0 f2 cfind_face f0 f4 f4 f5
- |- ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) ==> (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1))))) = (((MEM (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) NIL)) N)) \/ ((SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)) = (FST (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c\/ cMEM cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cNIL f4 c= cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3
- ((((indexf w) y) f) < (((indexf w) z) f)) |- (((((indexf w) y) f) < (((indexf w) z) f)) = T)
T c==> c< cindexf f0 f1 f2 cindexf f0 f3 f2 c= c< cindexf f0 f1 f2 cindexf f0 f3 f2 cT
- (((find_face L) x) = f) |- ((\f. (((find_face L) x) = f)) f)
T c==> c= cfind_face f0 f1 f2 * / c= cfind_face f0 f1 b0 f2
- (((next_el ((find_face L) x)) x) = w) |- ((\w. (((next_el ((find_face L) x)) x) = w)) w)
T c==> c= cnext_el cfind_face f0 f1 f1 f2 * / c= cnext_el cfind_face f0 f1 f1 b0 f2
- |- ((!B. (!A. (A ==> (A \/ B)))) = ((!A. (A ==> (A \/ T))) /\ (!A. (A ==> (A \/ F)))))
T c= ! ! c==> b1 c\/ b1 b0 c/\ ! c==> b0 c\/ b0 cT ! c==> b0 c\/ b0 cF
- |- (((!x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) ==> ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x)) = ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x))
T c= c==> ! ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0 * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0
- |- (((~ (!A. (A \/ (~ A)))) ==> F) = (!A. (A \/ (~ A))))
T c= c==> c~ ! c\/ b0 c~ b0 cF ! c\/ b0 c~ b0
- ((~ (!A. (A \/ (~ A)))) ==> F) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (good_list L), (good_list_nodes L), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((((((ztrans L) N) r) x) (NUMERAL _0)) = z) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> ((MEM (SND (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((COND ((final_list L) r)) (N , r)) (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) , (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c/\ cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cztrans f0 f2 f1 f3 cNUMERAL c_0 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cMEM f3 clist_of_darts f0 cMEM cSND cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cFST cCOND cfinal_list f0 f1 c, f2 f1 c, cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL f2 cCONS cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3
- ((\y. ((((l'y L) r) x) = y)) y) |- (((\y. ((((l'y L) r) x) = y)) y) /\ (?y. ((((l'y L) r) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c/\ * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- |- ((\A. ((~ (A ==> (A \/ B))) ==> F)) A)
T * / c==> c~ c==> b0 c\/ b0 f0 cF f1
- |- (~ (~ T))
T c~ c~ cT
- (~ (A ==> (A \/ B))) |- ((~ (A ==> (A \/ B))) /\ F)
T c==> c~ c==> f0 c\/ f0 f1 c/\ c~ c==> f0 c\/ f0 f1 cF
- ((((l'y L) r) x) = y) |- (((((l'y L) r) x) = y) /\ (?y. ((((l'y L) r) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c/\ c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- (((next_el ((find_face L) x)) x) = w) |- ((((next_el ((find_face L) x)) x) = w) /\ (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c/\ c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- ((((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1) ==> (?z1. (((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0))) = z1)))
T c==> c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 f4 c? / c= cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 b0
